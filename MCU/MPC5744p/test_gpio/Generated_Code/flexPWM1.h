/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : flexPWM1.h
**     Project     : test_gpio
**     Processor   : MPC5744P_257
**     Component   : flexpwm
**     Version     : Component S32_SDK_C55, Driver 01.00, CPU db: 3.00.000
**     Repository  : SDK_S32_PA_15
**     Compiler    : GNU C Compiler
**     Date/Time   : 2022-07-04, 13:50, # CodeGen: 11
**     Contents    :
**         FLEXPWM_DRV_Deinit                    - void FLEXPWM_DRV_Deinit(const uint32_t instance);
**         FLEXPWM_DRV_GetDefaultConfig          - void FLEXPWM_DRV_GetDefaultConfig(flexpwm_module_setup_t *const...
**         FLEXPWM_DRV_SetupPwm                  - void FLEXPWM_DRV_SetupPwm(const uint32_t instance,const flexpwm_module_t...
**         FLEXPWM_DRV_UpdatePwmSignal           - void FLEXPWM_DRV_UpdatePwmSignal(const uint32_t instance,const...
**         FLEXPWM_DRV_UpdatePwmPeriod           - void FLEXPWM_DRV_UpdatePwmPeriod(const uint32_t instance,const...
**         FLEXPWM_DRV_UpdatePulseWidth          - void FLEXPWM_DRV_UpdatePulseWidth(const uint32_t instance,const...
**         FLEXPWM_DRV_UpdateMidCycleReload      - void FLEXPWM_DRV_UpdateMidCycleReload(const uint32_t instance,const...
**         FLEXPWM_DRV_LoadCommands              - void FLEXPWM_DRV_LoadCommands(const uint32_t instance,const uint32_t...
**         FLEXPWM_DRV_GetCounterValue           - uint16_t FLEXPWM_DRV_GetCounterValue(const uint32_t instance,const...
**         FLEXPWM_DRV_GetPeriod                 - uint16_t FLEXPWM_DRV_GetPeriod(const uint32_t instance,const flexpwm_module_t...
**         FLEXPWM_DRV_GetCmpRegValue            - uint16_t FLEXPWM_DRV_GetCmpRegValue(const uint32_t instance,const...
**         FLEXPWM_DRV_SetTriggerCmd             - void FLEXPWM_DRV_SetTriggerCmd(const uint32_t instance,const flexpwm_module_t...
**         FLEXPWM_DRV_SetTriggerVal             - void FLEXPWM_DRV_SetTriggerVal(const uint32_t instance,const flexpwm_module_t...
**         FLEXPWM_DRV_CounterStart              - void FLEXPWM_DRV_CounterStart(const uint32_t instance,const flexpwm_module_t...
**         FLEXPWM_DRV_CounterStop               - void FLEXPWM_DRV_CounterStop(const uint32_t instance,const flexpwm_module_t...
**         FLEXPWM_DRV_ForcePwmOutput            - void FLEXPWM_DRV_ForcePwmOutput(const uint32_t instance,const...
**         FLEXPWM_DRV_EnableModuleInterrupts    - void FLEXPWM_DRV_EnableModuleInterrupts(const uint32_t instance,const...
**         FLEXPWM_DRV_DisableModuleInterrupts   - void FLEXPWM_DRV_DisableModuleInterrupts(const uint32_t instance,const...
**         FLEXPWM_DRV_ConfigureInputCapture     - void FLEXPWM_DRV_ConfigureInputCapture(const uint32_t instance,const...
**         FLEXPWM_DRV_StartInputCapture         - void FLEXPWM_DRV_StartInputCapture(const uint32_t instance,const...
**         FLEXPWM_DRV_StopInputCapture          - void FLEXPWM_DRV_StopInputCapture(const uint32_t instance,const...
**         FLEXPWM_DRV_GetEdgeCounter            - uint32_t FLEXPWM_DRV_GetEdgeCounter(const uint32_t instance,const...
**         FLEXPWM_DRV_SetEdgeCompare            - void FLEXPWM_DRV_SetEdgeCompare(const uint32_t instance,const...
**         FLEXPWM_DRV_EnableEdgeCounting        - void FLEXPWM_DRV_EnableEdgeCounting(const uint32_t instance,const...
**         FLEXPWM_DRV_DisableEdgeCounting       - void FLEXPWM_DRV_DisableEdgeCounting(const uint32_t instance,const...
**         FLEXPWM_DRV_GetCaptureValue           - void FLEXPWM_DRV_GetCaptureValue(const uint32_t instance,const...
**         FLEXPWM_DRV_GetCaptureCycle           - uint16_t FLEXPWM_DRV_GetCaptureCycle(const uint32_t instance,const...
**         FLEXPWM_DRV_SetChannelMode            - void FLEXPWM_DRV_SetChannelMode(const uint32_t instance,const...
**         FLEXPWM_DRV_DebugEnable               - void FLEXPWM_DRV_DebugEnable(const uint32_t instance,const flexpwm_module_t...
**         FLEXPWM_DRV_DebugDisable              - void FLEXPWM_DRV_DebugDisable(const uint32_t instance,const flexpwm_module_t...
**         FLEXPWM_DRV_SetDeadtime               - void FLEXPWM_DRV_SetDeadtime(const uint32_t instance,const flexpwm_module_t...
**         FLEXPWM_DRV_SelectDeadtimeSource      - void FLEXPWM_DRV_SelectDeadtimeSource(const uint32_t instance,const uint16_t...
**         FLEXPWM_DRV_SelectSwCtrlOutput        - void FLEXPWM_DRV_SelectSwCtrlOutput(const uint32_t instance,const uint32_t...
**         FLEXPWM_DRV_MaskOutput                - void FLEXPWM_DRV_MaskOutput(const uint32_t instance,const uint16_t...
**         FLEXPWM_DRV_ForceApplyMask            - void FLEXPWM_DRV_ForceApplyMask(const uint32_t instance,const uint32_t mask);
**         FLEXPWM_DRV_GetInterruptFlag          - uint32_t FLEXPWM_DRV_GetInterruptFlag(const uint32_t instance,const...
**         FLEXPWM_DRV_ClearInterruptFlag        - void FLEXPWM_DRV_ClearInterruptFlag(const uint32_t instance,const...
**         FLEXPWM_DRV_SetupFaultProtection      - void FLEXPWM_DRV_SetupFaultProtection(const uint32_t instance,const...
**         FLEXPWM_DRV_SetFaultFilterPeriod      - void FLEXPWM_DRV_SetFaultFilterPeriod(const uint32_t instance,const uint32_t...
**         FLEXPWM_DRV_SetFaultFilterCounter     - void FLEXPWM_DRV_SetFaultFilterCounter(const uint32_t instance,const uint32_t...
**         FLEXPWM_DRV_EnableFaultGlitchStretch  - void FLEXPWM_DRV_EnableFaultGlitchStretch(const uint32_t instance);
**         FLEXPWM_DRV_DisableFaultGlitchStretch - void FLEXPWM_DRV_DisableFaultGlitchStretch(const uint32_t instance);
**         FLEXPWM_DRV_EnableFaultInterrupt      - void FLEXPWM_DRV_EnableFaultInterrupt(const uint32_t instance,const uint8_t...
**         FLEXPWM_DRV_DisableFaultInterrupt     - void FLEXPWM_DRV_DisableFaultInterrupt(const uint32_t instance,const uint8_t...
**         FLEXPWM_DRV_ClearFaultFlags           - void FLEXPWM_DRV_ClearFaultFlags(const uint32_t instance,const uint8_t...
**         FLEXPWM_DRV_GetFaultFlags             - uint32_t FLEXPWM_DRV_GetFaultFlags(const uint32_t instance,const uint8_t...
**         FLEXPWM_DRV_SimulateFault             - void FLEXPWM_DRV_SimulateFault(const uint32_t instance,const bool faultState);
**
**     Copyright 1997 - 2015 Freescale Semiconductor, Inc. 
**     Copyright 2016-2017 NXP 
**     All Rights Reserved.
**     
**     THIS SOFTWARE IS PROVIDED BY NXP "AS IS" AND ANY EXPRESSED OR
**     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
**     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
**     IN NO EVENT SHALL NXP OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
**     INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
**     SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
**     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
**     STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
**     IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
**     THE POSSIBILITY OF SUCH DAMAGE.
** ###################################################################*/
/*!
** @file flexPWM1.h
** @version 01.00
*/         
/*!
**  @addtogroup flexPWM1_module flexPWM1 module documentation
**  @{
*/         
#ifndef flexPWM1_H
#define flexPWM1_H
/* MODULE flexPWM1. */

/**
 * @page misra_violations MISRA-C:2012 violations
 *
 * @section [global]
 * Violates MISRA 2012 Advisory Rule 2.5, global macro not referenced
 * There are global macros defined to be used by the integrator and another one used as include guard.
 *
 */

/* Include inherited beans */
#include "clockMan1.h"
#include "Cpu.h"
#include "flexpwm_driver.h"

/*! @brief Device instance number */
#define INST_FLEXPWM1 1U

/*! @brief flexpwm_input_capture_config_t declaration */
extern const flexpwm_input_capture_config_t flexPWM1_flexpwm_input_capture_config_t0;

/*! @brief flexpwm_module_setup_t declaration */
extern flexpwm_module_setup_t flexPWM1_flexpwm_module_setup_t0;

/*! @brief flexpwm_module_signal_setup_t declaration */
extern flexpwm_module_signal_setup_t flexPWM1_flexpwm_module_signal_setup_t0;

/*! @brief flexpwm_fault_protection_config_t declaration */
extern const flexpwm_fault_protection_config_t flexPWM1_flexpwm_fault_protection_config_t0;

#endif
/* ifndef flexPWM1_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.1 [05.21]
**     for the NXP C55 series of microcontrollers.
**
** ###################################################################
*/
