/*
** ###################################################################
**     Processor:           MPC5744P_257
**     Reference manual:    MPC5744PRM Rev. 6.1, 10/2017
**     Version:             rev. 1.2, 2019-04-12
**     Build:               b190415
**
**     Abstract:
**         Peripheral Access Layer for MPC5744P
**
**     Copyright (c) 1997 - 2016 Freescale Semiconductor, Inc.
**     Copyright (c) 2016 - 2019 NXP
**     All rights reserved.
**
**     THIS SOFTWARE IS PROVIDED BY NXP "AS IS" AND ANY EXPRESSED OR
**     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
**     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
**     IN NO EVENT SHALL NXP OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
**     INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
**     SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
**     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
**     STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
**     IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
**     THE POSSIBILITY OF SUCH DAMAGE.
**
**     http:                 www.nxp.com
**     mail:                 support@nxp.com
**
**     Revisions:
**     - rev. 1.0 (2017-05-29) - Iulian Talpiga
**         Initial version.
**     - rev. 1.1 (2017-09-20) - Andrei Bolojan
**         Added INTC interrupt sources according to MPC5744PRM Rev. 6, 06/2016
**     - rev. 1.2 (2019-04-12) - Alexandru Banciu
**         Updated RM revision to MPC5744PRM Rev. 6.1, 10/2017
**         Updated ADC, PLLDIG, PMC register masks.
**
** ###################################################################
*/

/*!
 * @file MPC5744P.h
 * @version 1.2
 * @date 2019-04-12
 * @brief Peripheral Access Layer for MPC5744P
 *
 * This file contains register definitions and macros for easy access to their
 * bit fields.
 *
 * This file assumes BIG endian system.
 */

/**
* @page misra_violations MISRA-C:2012 violations
*
* @section [global]
* Violates MISRA 2012 Advisory Rule 2.3, local typedef not referenced
* The SoC header defines typedef for all modules.
*
* @section [global]
* Violates MISRA 2012 Advisory Rule 2.5, local macro not referenced
* The SoC header defines macros for all modules and registers.
*
* @section [global]
* Violates MISRA 2012 Advisory Directive 4.9, Function-like macro
* These are generated macros used for accessing the bit-fields from registers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 5.1, identifier clash
* The supported compilers use more than 31 significant characters for identifiers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 5.2, identifier clash
* The supported compilers use more than 31 significant characters for identifiers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 5.4, identifier clash
* The supported compilers use more than 31 significant characters for identifiers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 5.5, identifier clash
* The supported compilers use more than 31 significant characters for identifiers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 21.1, defined macro '__I' is reserved to the compiler
* This type qualifier is needed to ensure correct I/O access and addressing.
*/

/* ----------------------------------------------------------------------------
   -- MCU activation
   ---------------------------------------------------------------------------- */

/* Prevention from multiple including the same memory map */
#if !defined(MPC5744P_H_)  /* Check if memory map has not been already included */
#define MPC5744P_H_
#define MCU_MPC5744P

/* Check if another memory map has not been also included */
#if (defined(MCU_ACTIVE))
  #error MPC5744P memory map: There is already included another memory map. Only one memory map can be included.
#endif /* (defined(MCU_ACTIVE)) */
#define MCU_ACTIVE

#include <stdint.h>

/** Memory map major version (memory maps with equal major version number are
 * compatible) */
#define MCU_MEM_MAP_VERSION 0x0100u
/** Memory map minor version */
#define MCU_MEM_MAP_VERSION_MINOR 0x0002u

/* ----------------------------------------------------------------------------
   -- Generic macros
   ---------------------------------------------------------------------------- */

/* IO definitions (access restrictions to peripheral registers) */
/**
*   IO Type Qualifiers are used
*   \li to specify the access to peripheral variables.
*   \li for automatic generation of peripheral register debug information.
*/
#ifndef __IO
#ifdef __cplusplus
  #define   __I     volatile             /*!< Defines 'read only' permissions                 */
#else
  #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
#endif
#define     __O     volatile             /*!< Defines 'write only' permissions                */
#define     __IO    volatile             /*!< Defines 'read / write' permissions              */
#endif


/**
* @brief 32 bits memory read macro.
*/
#if !defined(REG_READ32)
  #define REG_READ32(address)               (*(volatile uint32_t*)(address))
#endif

/**
* @brief 32 bits memory write macro.
*/
#if !defined(REG_WRITE32)
  #define REG_WRITE32(address, value)       ((*(volatile uint32_t*)(address))= (uint32_t)(value))
#endif

/**
* @brief 32 bits bits setting macro.
*/
#if !defined(REG_BIT_SET32)
  #define REG_BIT_SET32(address, mask)      ((*(volatile uint32_t*)(address))|= (uint32_t)(mask))
#endif

/**
* @brief 32 bits bits clearing macro.
*/
#if !defined(REG_BIT_CLEAR32)
  #define REG_BIT_CLEAR32(address, mask)    ((*(volatile uint32_t*)(address))&= ((uint32_t)~((uint32_t)(mask))))
#endif

/**
* @brief 32 bit clear bits and set with new value
* @note It is user's responsability to make sure that value has only "mask" bits set - (value&~mask)==0
*/
#if !defined(REG_RMW32)
  #define REG_RMW32(address, mask, value)   (REG_WRITE32((address), ((REG_READ32(address)& ((uint32_t)~((uint32_t)(mask))))| ((uint32_t)(value)))))
#endif


/* ----------------------------------------------------------------------------
   -- Interrupt vector numbers for MPC5744P
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Interrupt_vector_numbers_MPC5744P Interrupt vector numbers for MPC5744P
 * @{
 */

/** Interrupt Number Definitions */
#define NUMBER_OF_INT_VECTORS 733u               /**< Number of interrupts in the Vector table */

/**
 * @brief Defines the Interrupt Numbers definitions
 *
 * This enumeration is used to configure the interrupts.
 *
 * Implements : IRQn_Type_Class
 */
typedef enum
{
  /* Auxiliary constants */
  NotAvail_IRQn                = -128,             /**< Not available device specific interrupt */

  /* Core interrupts */

  /* Device specific interrupts */
  SS0_IRQn                     = 0u,               /**< Software setable flag 0 SSCIR0[CLR0] */
  SS1_IRQn                     = 1u,               /**< Software setable flag 1 SSCIR0[CLR1] */
  SS2_IRQn                     = 2u,               /**< Software setable flag 2 SSCIR0[CLR2] */
  SS3_IRQn                     = 3u,               /**< Software setable flag 3 SSCIR0[CLR3] */
  SS4_IRQn                     = 4u,               /**< Software setable flag 4 SSCIR0[CLR4] */
  SS5_IRQn                     = 5u,               /**< Software setable flag 5 SSCIR0[CLR5] */
  SS6_IRQn                     = 6u,               /**< Software setable flag 6 SSCIR0[CLR6] */
  SS7_IRQn                     = 7u,               /**< Software setable flag 7 SSCIR0[CLR7] */
  SS8_IRQn                     = 8u,               /**< Software setable flag 8 SSCIR0[CLR8] */
  SS9_IRQn                     = 9u,               /**< Software setable flag 9 SSCIR0[CLR9] */
  SS10_IRQn                    = 10u,              /**< Software setable flag 10 SSCIR0[CLR10] */
  SS11_IRQn                    = 11u,              /**< Software setable flag 11 SSCIR0[CLR11] */
  SS12_IRQn                    = 12u,              /**< Software setable flag 12 SSCIR0[CLR12] */
  SS13_IRQn                    = 13u,              /**< Software setable flag 13 SSCIR0[CLR13] */
  SS14_IRQn                    = 14u,              /**< Software setable flag 14 SSCIR0[CLR14] */
  SS15_IRQn                    = 15u,              /**< Software setable flag 15 SSCIR0[CLR15] */
  SWT0_IRQn                    = 32u,              /**< Platform watchdog timer0 SWT_0_IR[TIF] */
  STM0_Ch0_IRQn                = 36u,              /**< STM0 Channel 0 interrupt STM_0_CIR0[CIF] */
  STM0_Ch1_IRQn                = 37u,              /**< STM0 Channel 1 interrupt STM_0_CIR1[CIF] */
  STM0_Ch2_IRQn                = 38u,              /**< STM0 Channel 2 interrupt STM_0_CIR2[CIF] */
  STM0_Ch3_IRQn                = 39u,              /**< STM0 Channel 3 interrupt STM_0_CIR3[CIF] */
  DMA_Error_IRQn               = 52u,              /**< eDMA Combined Error eDMA Channel Error Flags 63-0 */
  DMA0_IRQn                    = 53u,              /**< eDMA Channel 0 DMA_INTL[INT0] */
  DMA1_IRQn                    = 54u,              /**< eDMA Channel 1 DMA_INTL[INT1] */
  DMA2_IRQn                    = 55u,              /**< eDMA Channel 2 DMA_INTL[INT2] */
  DMA3_IRQn                    = 56u,              /**< eDMA Channel 3 DMA_INTL[INT3] */
  DMA4_IRQn                    = 57u,              /**< eDMA Channel 4 DMA_INTL[INT4] */
  DMA5_IRQn                    = 58u,              /**< eDMA Channel 5 DMA_INTL[INT5] */
  DMA6_IRQn                    = 59u,              /**< eDMA Channel 6 DMA_INTL[INT6] */
  DMA7_IRQn                    = 60u,              /**< eDMA Channel 7 DMA_INTL[INT7] */
  DMA8_IRQn                    = 61u,              /**< eDMA Channel 8 DMA_INTL[INT8] */
  DMA9_IRQn                    = 62u,              /**< eDMA Channel 9 DMA_INTL[INT9] */
  DMA10_IRQn                   = 63u,              /**< eDMA Channel 10 DMA_INTL[INT10] */
  DMA11_IRQn                   = 64u,              /**< eDMA Channel 11 DMA_INTL[INT11] */
  DMA12_IRQn                   = 65u,              /**< eDMA Channel 12 DMA_INTL[INT12] */
  DMA13_IRQn                   = 66u,              /**< eDMA Channel 13 DMA_INTL[INT13] */
  DMA14_IRQn                   = 67u,              /**< eDMA Channel 14 DMA_INTL[INT14] */
  DMA15_IRQn                   = 68u,              /**< eDMA Channel 15 DMA_INTL[INT15] */
  DMA16_IRQn                   = 69u,              /**< eDMA Channel 16 DMA_INTL[INT16] */
  DMA17_IRQn                   = 70u,              /**< eDMA Channel 17 DMA_INTL[INT17] */
  DMA18_IRQn                   = 71u,              /**< eDMA Channel 18 DMA_INTL[INT18] */
  DMA19_IRQn                   = 72u,              /**< eDMA Channel 19 DMA_INTL[INT19] */
  DMA20_IRQn                   = 73u,              /**< eDMA Channel 20 DMA_INTL[INT20] */
  DMA21_IRQn                   = 74u,              /**< eDMA Channel 21 DMA_INTL[INT21] */
  DMA22_IRQn                   = 75u,              /**< eDMA Channel 22 DMA_INTL[INT22] */
  DMA23_IRQn                   = 76u,              /**< eDMA Channel 23 DMA_INTL[INT23] */
  DMA24_IRQn                   = 77u,              /**< eDMA Channel 24 DMA_INTL[INT24] */
  DMA25_IRQn                   = 78u,              /**< eDMA Channel 25 DMA_INTL[INT25] */
  DMA26_IRQn                   = 79u,              /**< eDMA Channel 26 DMA_INTL[INT26] */
  DMA27_IRQn                   = 80u,              /**< eDMA Channel 27 DMA_INTL[INT27] */
  DMA28_IRQn                   = 81u,              /**< eDMA Channel 28 DMA_INTL[INT28] */
  DMA29_IRQn                   = 82u,              /**< eDMA Channel 29 DMA_INTL[INT29] */
  DMA30_IRQn                   = 83u,              /**< eDMA Channel 30 DMA_INTL[INT30] */
  DMA31_IRQn                   = 84u,              /**< eDMA Channel 31 DMA_INTL[INT31] */
  FMC_Done_IRQn                = 185u,             /**< Flash controller Prog/Erase/Suspend IRQ_0 MCR[DONE] */
  ENET0_Timer_IRQn             = 216u,             /**< Timer IRQ Ethernet 0 */
  ENET0_Tx_IRQn                = 217u,             /**< TX IRQ Ethernet 0 */
  ENET0_Rx_IRQn                = 218u,             /**< RX IRQ Ethernet 0 ENET */
  ENET0_Err_IRQn               = 219u,             /**< Error/Generic IRQ1 Ethernet 0 */
  PIT_Ch0_IRQn                 = 226u,             /**< Periodic Interrupt Timer (PIT0) PIT_1_TFLG0[TIF] */
  PIT_Ch1_IRQn                 = 227u,             /**< Periodic Interrupt Timer (PIT1) PIT_1_TFLG1[TIF] */
  PIT_Ch2_IRQn                 = 228u,             /**< Periodic Interrupt Timer (PIT2) PIT_1_TFLG2[TIF] */
  PIT_Ch3_IRQn                 = 229u,             /**< Periodic Interrupt Timer (PIT3) PIT_1_TFLG3[TIF] */
  XOSC_IRQn                    = 242u,             /**< XOSC counter expired */
  SIUL_EIRQ_00_07_IRQn         = 243u,             /**< SIUL EIRQ [0-7] - SIUL Combined External Interrupt */
  SIUL_EIRQ_08_15_IRQn         = 244u,             /**< SIUL EIRQ [8-15] - SIUL Combined External Interrupt */
  SIUL_EIRQ_16_23_IRQn         = 245u,             /**< SIUL EIRQ [16-23] - SIUL Combined External Interrupt */
  SIUL_EIRQ_24_31_IRQn         = 246u,             /**< SIUL EIRQ [24-31] - SIUL Combined External Interrupt */
  MC_ME_SAFE_IRQn              = 251u,             /**< MC _ME ME_IS[I_SAFE] */
  MC_ME_MTC_IRQn               = 252u,             /**< MC _ME ME_IS[I_MTC] */
  MC_ME_IMODE_IRQn             = 253u,             /**< MC _ME ME_IS[I_IMODE] */
  MC_ME_ICONF_IRQn             = 254u,             /**< MC _ME ME_IS[I_ICONF] */
  MC_RGM_IRQn                  = 255u,             /**< MC_RGM MC_RGM Functional and destructive reset alternate event interrupt */
  DSPI0_FifoErr_IRQn           = 259u,             /**< DSPI0_0 DSPI_0_SR[TFUF] | DSPI_0_SR[RFOF] | DSPI_0_SR[TFIWF] */
  DSPI0_EndOfQueue_IRQn        = 260u,             /**< DSPI0_1 DSPI_0_SR[EOQF] */
  DSPI0_TxFifo_IRQn            = 261u,             /**< DSPI0_2 DSPI_0_SR[TFFF] */
  DSPI0_TxComplete_IRQn        = 262u,             /**< DSPI0_3 DSPI_0_SR[TCF] */
  DSPI0_RxFifoDrain_IRQn       = 263u,             /**< DSPI0_4 DSPI_0_SR[RFDF] */
  DSPI1_FifoErr_IRQn           = 268u,             /**< DSPI1_0 DSPI_1_SR[TFUF] | DSPI_1_SR[RFOF] | DSPI_1_SR[TFIWF] */
  DSPI1_EndOfQueue_IRQn        = 269u,             /**< DSPI1_1 DSPI_1_SR[EOQF] */
  DSPI1_TxFifo_IRQn            = 270u,             /**< DSPI1_2 DSPI_1_SR[TFFF] */
  DSPI1_TxComplete_IRQn        = 271u,             /**< DSPI1_3 DSPI_1_SR[TCF] */
  DSPI1_RxFifoDrain_IRQn       = 272u,             /**< DSPI1_4 DSPI_1_SR[RFDF] */
  DSPI2_FifoErr_IRQn           = 277u,             /**< DSPI2_0 DSPI_2_SR[TFUF] | DSPI_2_SR[RFOF] | DSPI_2_SR[TFIWF] */
  DSPI2_EndOfQueue_IRQn        = 278u,             /**< DSPI2_1 DSPI_2_SR[EOQF] */
  DSPI2_TxFifo_IRQn            = 279u,             /**< DSPI2_2 DSPI_2_SR[TFFF] */
  DSPI2_TxComplete_IRQn        = 280u,             /**< DSPI2_3 DSPI_2_SR[TCF] */
  DSPI2_RxFifoDrain_IRQn       = 281u,             /**< DSPI2_4 DSPI_2_SR[RFDF] */
  DSPI3_FifoErr_IRQn           = 286u,             /**< DSPI3_0 DSPI_3_SR[TFUF] | DSPI_3_SR[RFOF] | DSPI_3_SR[TFIWF] */
  DSPI3_EndOfQueue_IRQn        = 287u,             /**< DSPI3_1 DSPI_3_SR[EOQF] */
  DSPI3_TxFifo_IRQn            = 288u,             /**< DSPI3_2 DSPI_3_SR[TFFF] */
  DSPI3_TxComplete_IRQn        = 289u,             /**< DSPI3_3 DSPI_3_SR[TCF] */
  DSPI3_RxFifoDrain_IRQn       = 290u,             /**< DSPI3_4 DSPI_3_SR[RFDF] */
  LINFLEXD0_RX_IRQn            = 376u,             /**< LinFlex0_0 LinFlex_0_RXI */
  LINFLEXD0_TX_IRQn            = 377u,             /**< LinFlex0_1 LinFlex_0_TXI */
  LINFLEXD0_ERR_IRQn           = 378u,             /**< LinFlex0_2 LinFlex_0_ERR */
  LINFLEXD1_RX_IRQn            = 380u,             /**< LinFlex1_0 LinFlex_1_RXI */
  LINFLEXD1_TX_IRQn            = 381u,             /**< LinFlex1_1 LinFlex_1_TXI */
  LINFLEXD1_ERR_IRQn           = 382u,             /**< LinFlex1_2 LinFlex_1_ERR */
  FR_LRNEIF_DRNEIF_IRQn        = 453u,             /**< FlexRay_0_0 LRNEIF | DRNEIF */
  FR_LRCEIF_DRCEIF_IRQn        = 454u,             /**< FlexRay_0_1 LRCEIF | DRCEIF */
  FR_FAFAIF_IRQn               = 455u,             /**< FlexRay_0_2 FAFAIF */
  FR_FAFBIF_IRQn               = 456u,             /**< FlexRay_0_3 FAFBIF */
  FR_WUPIF_IRQn                = 457u,             /**< FlexRay_0_4 WUPIF */
  FR_PRIF_IRQn                 = 458u,             /**< FlexRay_0_5 PRIF */
  FR_CHIF_IRQn                 = 459u,             /**< FlexRay_0_6 CHIF */
  FR_TBIF_IRQn                 = 460u,             /**< FlexRay_0_7 TBIF */
  FR_RBIF_IRQn                 = 461u,             /**< FlexRay_0_8 RBIF */
  FR_MIF_IRQn                  = 462u,             /**< FlexRay_0_9 MIF */
  PMU_IRQn                     = 477u,             /**< Power Monitor Unit */
  PMU_Tsens_IRQn               = 478u,             /**< Power management Unit (temp sensor) */
  FCCU_ALARM_IRQn              = 488u,             /**< FCCU Interrupt request (ALARM state) */
  FCCU_MISC_IRQn               = 489u,             /**< FCCU Configuration Time-out (CFG_TO) */
  ADC0_EOC_IRQn                = 496u,             /**< ADC_0_EOC */
  ADC0_ER_IRQn                 = 497u,             /**< ADC_0_ER */
  ADC0_WD_IRQn                 = 498u,             /**< ADC_0_WD */
  ADC1_EOC_IRQn                = 500u,             /**< ADC_1_EOC */
  ADC1_ER_IRQn                 = 501u,             /**< ADC_1_ER */
  ADC1_WD_IRQn                 = 502u,             /**< ADC_1_WD */
  ADC2_EOC_IRQn                = 504u,             /**< ADC_2_EOC */
  ADC2_ER_IRQn                 = 505u,             /**< ADC_2_ER */
  ADC2_WD_IRQn                 = 506u,             /**< ADC_2_WD */
  ADC3_EOC_IRQn                = 508u,             /**< ADC_3_EOC */
  ADC3_ER_IRQn                 = 509u,             /**< ADC_3_ER */
  ADC3_WD_IRQn                 = 510u,             /**< ADC_3_WD */
  CAN0_Error_IRQn              = 520u,             /**< FLEXCAN0_ESR[ERR_INT] | FLEXCAN0_FD_ERROR */
  CAN0_ORed_IRQn               = 521u,             /**< FLEXCAN0_ESR_BOFF | FLEXCAN0_ESR_BOFF_DONE | FLEXCAN0_Transmit_Warning | FLEXCAN0_Receive_Warning */
  CAN0_ORed_00_03_MB_IRQn      = 522u,             /**< FlexCAN0_BUF_00_03 */
  CAN0_ORed_04_07_MB_IRQn      = 523u,             /**< FlexCAN0_BUF_04_07 */
  CAN0_ORed_08_11_MB_IRQn      = 524u,             /**< FlexCAN0_BUF_08_11 */
  CAN0_ORed_12_15_MB_IRQn      = 525u,             /**< FlexCAN0_BUF_12_15 */
  CAN0_ORed_16_31_MB_IRQn      = 526u,             /**< FlexCAN0_BUF_16_31 */
  CAN0_ORed_32_39_MB_IRQn      = 527u,             /**< FlexCAN0_BUF_32_39 */
  CAN0_ORed_40_47_MB_IRQn      = 528u,             /**< FlexCAN0_BUF_40_47 */
  CAN0_ORed_48_55_MB_IRQn      = 529u,             /**< FlexCAN0_BUF_48_55 */
  CAN0_ORed_56_63_MB_IRQn      = 530u,             /**< FlexCAN0_BUF_56_63 */
  CAN1_Error_IRQn              = 533u,             /**< FLEXCAN1_ESR[ERR_INT] | FLEXCAN1_FD_ERROR */
  CAN1_ORed_IRQn               = 534u,             /**< FLEXCAN1_ESR_BOFF | FLEXCAN1_ESR_BOFF_DONE | FLEXCAN1_Transmit_Warning | FLEXCAN1_Receive_Warning */
  CAN1_ORed_00_03_MB_IRQn      = 535u,             /**< FlexCAN1_BUF_00_03 */
  CAN1_ORed_04_07_MB_IRQn      = 536u,             /**< FlexCAN1_BUF_04_07 */
  CAN1_ORed_08_11_MB_IRQn      = 537u,             /**< FlexCAN1_BUF_08_11 */
  CAN1_ORed_12_15_MB_IRQn      = 538u,             /**< FlexCAN1_BUF_12_15 */
  CAN1_ORed_16_31_MB_IRQn      = 539u,             /**< FlexCAN1_BUF_16_31 */
  CAN1_ORed_32_39_MB_IRQn      = 540u,             /**< FlexCAN1_BUF_32_39 */
  CAN1_ORed_40_47_MB_IRQn      = 541u,             /**< FlexCAN1_BUF_40_47 */
  CAN1_ORed_48_55_MB_IRQn      = 542u,             /**< FlexCAN1_BUF_48_55 */
  CAN1_ORed_56_63_MB_IRQn      = 543u,             /**< FlexCAN1_BUF_56_63 */
  CAN2_Error_IRQn              = 546u,             /**< FLEXCAN2_ESR[ERR_INT] | FLEXCAN2_FD_ERROR */
  CAN2_ORed_IRQn               = 547u,             /**< FLEXCAN2_ESR_BOFF | FLEXCAN2_ESR_BOFF_DONE | FLEXCAN2_Transmit_Warning | FLEXCAN2_Receive_Warning */
  CAN2_ORed_00_03_MB_IRQn      = 548u,             /**< FlexCAN2_BUF_00_03 */
  CAN2_ORed_04_07_MB_IRQn      = 549u,             /**< FlexCAN2_BUF_04_07 */
  CAN2_ORed_08_11_MB_IRQn      = 550u,             /**< FlexCAN2_BUF_08_11 */
  CAN2_ORed_12_15_MB_IRQn      = 551u,             /**< FlexCAN2_BUF_12_15 */
  CAN2_ORed_16_31_MB_IRQn      = 552u,             /**< FlexCAN2_BUF_16_31 */
  CAN2_ORed_32_39_MB_IRQn      = 553u,             /**< FlexCAN2_BUF_32_39 */
  CAN2_ORed_40_47_MB_IRQn      = 554u,             /**< FlexCAN2_BUF_40_47 */
  CAN2_ORed_48_55_MB_IRQn      = 555u,             /**< FlexCAN2_BUF_48_55 */
  CAN2_ORed_56_63_MB_IRQn      = 556u,             /**< FlexCAN2_BUF_56_63 */
  SENT0_Fast_0_IRQn            = 570u,             /**< Valid Fast Message Received on Channel 0 */
  SENT0_Slow_0_IRQn            = 571u,             /**< Valid Slow Message Received on Channel 0 */
  SENT0_RxErr_0_IRQn           = 572u,             /**< Receive Error Interrupt Channel 0 */
  SENT0_Fast_1_IRQn            = 573u,             /**< Valid Fast Message Received on Channel 1 */
  SENT0_Slow_1_IRQn            = 574u,             /**< Valid Slow Message Received on Channel 1 */
  SENT0_RxErr_1_IRQn           = 575u,             /**< Receive Error Interrupt Channel 1 */
  SENT1_Fast_0_IRQn            = 582u,             /**< Valid Fast Message Received on Channel 0 */
  SENT1_Slow_0_IRQn            = 583u,             /**< Valid Slow Message Received on Channel 0 */
  SENT1_RxErr_0_IRQn           = 584u,             /**< Receive Error Interrupt Channel 0 */
  SENT1_Fast_1_IRQn            = 585u,             /**< Valid Fast Message Received on Channel 1 */
  SENT1_Slow_1_IRQn            = 586u,             /**< Valid Slow Message Received on Channel 1 */
  SENT1_RxErr_1_IRQn           = 587u,             /**< Receive Error Interrupt Channel 1 */
  SIPI_Read_1_IRQn             = 594u,             /**< Read interrupt channel 1 */
  SIPI_Read_2_IRQn             = 595u,             /**< Read interrupt channel 2 */
  SIPI_Read_3_IRQn             = 596u,             /**< Read interrupt channel 3 */
  SIPI_Read_4_IRQn             = 597u,             /**< Read interrupt channel 4 */
  SIPI_Err1_IRQn               = 602u,             /**< Error 1 */
  SIPI_Err2_IRQn               = 603u,             /**< Error 2 */
  SIPI_Trigger_IRQn            = 604u,             /**< Trigger command */
  LFAST0_TxInt_IRQn            = 605u,             /**< Tx interrupt */
  LFAST0_TxExc_IRQn            = 606u,             /**< Tx exception */
  LFAST0_RxInt_IRQn            = 607u,             /**< Rx interrupt */
  LFAST0_RxExc_IRQn            = 608u,             /**< Rx exception */
  LFAST0_Rx_ICLC_IRQn          = 609u,             /**< Rx ICLC */
  eTimer_0_TC0IR_IRQn          = 611u,             /**< TC0IR */
  eTimer_0_TC1IR_IRQn          = 612u,             /**< TC1IR */
  eTimer_0_TC2IR_IRQn          = 613u,             /**< TC2IR */
  eTimer_0_TC3IR_IRQn          = 614u,             /**< TC3IR */
  eTimer_0_TC4IR_IRQn          = 615u,             /**< TC4IR */
  eTimer_0_TC5IR_IRQn          = 616u,             /**< TC5IR */
  eTimer_0_WTIF_IRQn           = 619u,             /**< WTIF */
  eTimer_0_RCF_IRQn            = 621u,             /**< RCF */
  eTimer_1_TC0IR_IRQn          = 622u,             /**< TC0IR */
  eTimer_1_TC1IR_IRQn          = 623u,             /**< TC1IR */
  eTimer_1_TC2IR_IRQn          = 624u,             /**< TC2IR */
  eTimer_1_TC3IR_IRQn          = 625u,             /**< TC3IR */
  eTimer_1_TC4IR_IRQn          = 626u,             /**< TC4IR */
  eTimer_1_TC5IR_IRQn          = 627u,             /**< TC5IR */
  eTimer_1_RCF_IRQn            = 632u,             /**< RCF */
  eTimer_2_TC0IR_IRQn          = 633u,             /**< TC0IR */
  eTimer_2_TC1IR_IRQn          = 634u,             /**< TC1IR */
  eTimer_2_TC2IR_IRQn          = 635u,             /**< TC2IR */
  eTimer_2_TC3IR_IRQn          = 636u,             /**< TC3IR */
  eTimer_2_TC4IR_IRQn          = 637u,             /**< TC4IR */
  eTimer_2_TC5IR_IRQn          = 638u,             /**< TC5IR */
  eTimer_2_RCF_IRQn            = 643u,             /**< RCF */
  FlexPWM_0_RF0_IRQn           = 655u,             /**< FlexPWM 1 submodule 0 reload interrupt  */
  FlexPWM_0_COF0_IRQn          = 656u,             /**< FlexPWM 1 submodule 0 compare interrupt */
  FlexPWM_0_CAF0_IRQn          = 657u,             /**< FlexPWM 1 submodule 0 capture interrupt */
  FlexPWM_0_RF1_IRQn           = 658u,             /**< FlexPWM 1 submodule 1 reload interrupt  */
  FlexPWM_0_COF1_IRQn          = 659u,             /**< FlexPWM 1 submodule 1 compare interrupt */
  FlexPWM_0_CAF1_IRQn          = 660u,             /**< FlexPWM 1 submodule 1 capture interrupt */
  FlexPWM_0_RF2_IRQn           = 661u,             /**< FlexPWM 1 submodule 2 reload interrupt  */
  FlexPWM_0_COF2_IRQn          = 662u,             /**< FlexPWM 1 submodule 2 compare interrupt */
  FlexPWM_0_CAF2_IRQn          = 663u,             /**< FlexPWM 1 submodule 2 capture interrupt */
  FlexPWM_0_RF3_IRQn           = 664u,             /**< FlexPWM 1 submodule 3 reload interrupt  */
  FlexPWM_0_COF3_IRQn          = 665u,             /**< FlexPWM 1 submodule 3 compare interrupt */
  FlexPWM_0_CAF3_IRQn          = 666u,             /**< FlexPWM 1 submodule 3 capture interrupt */
  FlexPWM_0_FFLAG_IRQn         = 667u,             /**< FlexPWM 1 capture fault input interrupt */
  FlexPWM_0_REF_IRQn           = 668u,             /**< FlexPWM 1 reload error interrupt        */
  FlexPWM_1_RF0_IRQn           = 670u,             /**< FlexPWM 2 submodule 0 reload interrupt  */
  FlexPWM_1_COF0_IRQn          = 671u,             /**< FlexPWM 2 submodule 0 compare interrupt */
  FlexPWM_1_CAF0_IRQn          = 672u,             /**< FlexPWM 2 submodule 0 capture interrupt */
  FlexPWM_1_RF1_IRQn           = 673u,             /**< FlexPWM 2 submodule 1 reload interrupt  */
  FlexPWM_1_COF1_IRQn          = 674u,             /**< FlexPWM 2 submodule 1 compare interrupt */
  FlexPWM_1_CAF1_IRQn          = 675u,             /**< FlexPWM 2 submodule 1 capture interrupt */
  FlexPWM_1_RF2_IRQn           = 676u,             /**< FlexPWM 2 submodule 2 reload interrupt  */
  FlexPWM_1_COF2_IRQn          = 677u,             /**< FlexPWM 2 submodule 2 compare interrupt */
  FlexPWM_1_CAF2_IRQn          = 678u,             /**< FlexPWM 2 submodule 2 capture interrupt */
  FlexPWM_1_RF3_IRQn           = 679u,             /**< FlexPWM 2 submodule 3 reload interrupt  */
  FlexPWM_1_COF3_IRQn          = 680u,             /**< FlexPWM 2 submodule 3 compare interrupt */
  FlexPWM_1_CAF3_IRQn          = 681u,             /**< FlexPWM 2 submodule 3 capture interrupt */
  FlexPWM_1_FFLAG_IRQn         = 682u,             /**< FlexPWM 2 capture fault input interrupt */
  FlexPWM_1_REF_IRQn           = 683u,             /**< FlexPWM 2 reload error interrupt        */
  CTU_0_MRS_IRQn               = 700u,             /**< CTU 0 Master Reload Signal interrupt */
  CTU_0_T0_IRQn                = 701u,             /**< CTU 0 Trigger 0 interrupt */
  CTU_0_T1_IRQn                = 702u,             /**< CTU 0 Trigger 1 interrupt */
  CTU_0_T2_IRQn                = 703u,             /**< CTU 0 Trigger 2 interrupt */
  CTU_0_T3_IRQn                = 704u,             /**< CTU 0 Trigger 3 interrupt */
  CTU_0_T4_IRQn                = 705u,             /**< CTU 0 Trigger 4 interrupt */
  CTU_0_T5_IRQn                = 706u,             /**< CTU 0 Trigger 5 interrupt */
  CTU_0_T6_IRQn                = 707u,             /**< CTU 0 Trigger 6 interrupt */
  CTU_0_T7_IRQn                = 708u,             /**< CTU 0 Trigger 7 interrupt */
  CTU_0_FIFO0_IRQn             = 709u,             /**< CTU 0 FIFO 0 interrupt */
  CTU_0_FIFO1_IRQn             = 710u,             /**< CTU 0 FIFO 1 interrupt */
  CTU_0_FIFO2_IRQn             = 711u,             /**< CTU 0 FIFO 2 interrupt */
  CTU_0_FIFO3_IRQn             = 712u,             /**< CTU 0 FIFO 3 interrupt */
  CTU_0_ADC_IRQn               = 713u,             /**< CTU 0 ADC interrupt */
  CTU_0_ERR_IRQn               = 714u,             /**< CTU 0 Error interrupt */
  CTU_1_MRS_IRQn               = 716u,             /**< CTU 1 Master Reload Signal interrupt */
  CTU_1_T0_IRQn                = 717u,             /**< CTU 1 Trigger 0 interrupt */
  CTU_1_T1_IRQn                = 718u,             /**< CTU 1 Trigger 1 interrupt */
  CTU_1_T2_IRQn                = 719u,             /**< CTU 1 Trigger 2 interrupt */
  CTU_1_T3_IRQn                = 720u,             /**< CTU 1 Trigger 3 interrupt */
  CTU_1_T4_IRQn                = 721u,             /**< CTU 1 Trigger 4 interrupt */
  CTU_1_T5_IRQn                = 722u,             /**< CTU 1 Trigger 5 interrupt */
  CTU_1_T6_IRQn                = 723u,             /**< CTU 1 Trigger 6 interrupt */
  CTU_1_T7_IRQn                = 724u,             /**< CTU 1 Trigger 7 interrupt */
  CTU_1_FIFO0_IRQn             = 725u,             /**< CTU 1 FIFO 0 interrupt */
  CTU_1_FIFO1_IRQn             = 726u,             /**< CTU 1 FIFO 1 interrupt */
  CTU_1_FIFO2_IRQn             = 727u,             /**< CTU 1 FIFO 2 interrupt */
  CTU_1_FIFO3_IRQn             = 728u,             /**< CTU 1 FIFO 3 interrupt */
  CTU_1_ADC_IRQn               = 729u,             /**< CTU 1 ADC interrupt */
  CTU_1_ERR_IRQn               = 730u,             /**< CTU 1 Error interrupt */
  SGEN_Err_IRQn                = 732u              /**< sgen_error */
} IRQn_Type;

/*!
 * @}
 */ /* end of group Interrupt_vector_numbers_MPC5744P */


/* ----------------------------------------------------------------------------
   -- Device Peripheral Access Layer for MPC5744P
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Peripheral_access_layer_MPC5744P Device Peripheral Access Layer for MPC5744P
 * @{
 */

/* @brief This module covers memory mapped registers available on SoC */

/* ----------------------------------------------------------------------------
   -- ADC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ADC_Peripheral_Access_Layer ADC Peripheral Access Layer
 * @{
 */


/** ADC - Size of Registers Arrays */
#define ADC_CEOCFR_COUNT                         1u
#define ADC_CIMR_COUNT                           1u
#define ADC_DMAR_COUNT                           1u
#define ADC_PSR_COUNT                            1u
#define ADC_CTR_COUNT                            2u
#define ADC_NCMR_COUNT                           1u
#define ADC_JCMR_COUNT                           1u
#define ADC_CDR_COUNT                            16u
#define ADC_CWSELR_COUNT                         2u
#define ADC_CWENR_COUNT                          1u
#define ADC_AWORR_COUNT                          1u

/** ADC - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< Main Configuration Register, offset: 0x0 */
  __I  uint32_t MSR;                               /**< Main Status register, offset: 0x4 */
       uint8_t RESERVED_0[8];
  __IO uint32_t ISR;                               /**< Interrupt Status Register, offset: 0x10 */
  __IO uint32_t CEOCFR[ADC_CEOCFR_COUNT];          /**< Channel Pending register 0, array offset: 0x14, array step: 0x4 */
       uint8_t RESERVED_1[8];
  __IO uint32_t IMR;                               /**< Interrupt Mask Register, offset: 0x20 */
  __IO uint32_t CIMR[ADC_CIMR_COUNT];              /**< Channel Interrupt Mask Register 0, array offset: 0x24, array step: 0x4 */
       uint8_t RESERVED_2[8];
  __IO uint32_t WTISR;                             /**< Watchdog Threshold Interrupt Status Register, offset: 0x30 */
  __IO uint32_t WTIMR;                             /**< Watchdog Threshold Interrupt Mask Register, offset: 0x34 */
       uint8_t RESERVED_3[8];
  __IO uint32_t DMAE;                              /**< DMA Enable register, offset: 0x40 */
  __IO uint32_t DMAR[ADC_DMAR_COUNT];              /**< DMA Channel Select Register 0, array offset: 0x44, array step: 0x4 */
       uint8_t RESERVED_4[24];
  __IO uint32_t THRHLR0;                           /**< Threshold Register, offset: 0x60 */
  __IO uint32_t THRHLR1;                           /**< Threshold Register, offset: 0x64 */
  __IO uint32_t THRHLR2;                           /**< Threshold Register, offset: 0x68 */
  __IO uint32_t THRHLR3;                           /**< Threshold Register, offset: 0x6C */
       uint8_t RESERVED_5[16];
  __IO uint32_t PSCR;                              /**< Presampling Control Register, offset: 0x80 */
  __IO uint32_t PSR[ADC_PSR_COUNT];                /**< Presampling register 0, array offset: 0x84, array step: 0x4 */
       uint8_t RESERVED_6[12];
  __IO uint32_t CTR[ADC_CTR_COUNT];                /**< Conversion Timing Register 0..Conversion Timing Register 1, array offset: 0x94, array step: 0x4 */
       uint8_t RESERVED_7[8];
  __IO uint32_t NCMR[ADC_NCMR_COUNT];              /**< Normal Conversion Mask Register 0, array offset: 0xA4, array step: 0x4 */
       uint8_t RESERVED_8[12];
  __IO uint32_t JCMR[ADC_JCMR_COUNT];              /**< Injected Conversion Mask Register 0, array offset: 0xB4, array step: 0x4 */
       uint8_t RESERVED_9[16];
  __IO uint32_t PDEDR;                             /**< Power Down Exit Delay Register, offset: 0xC8 */
       uint8_t RESERVED_10[52];
  __I  uint32_t CDR[ADC_CDR_COUNT];                /**< Channel Data Register n (Precision Channels), array offset: 0x100, array step: 0x4 */
       uint8_t RESERVED_11[320];
  __IO uint32_t THRHLR4;                           /**< Threshold Register, offset: 0x280 */
  __IO uint32_t THRHLR5;                           /**< Threshold Register, offset: 0x284 */
  __IO uint32_t THRHLR6;                           /**< Threshold Register, offset: 0x288 */
  __IO uint32_t THRHLR7;                           /**< Threshold Register, offset: 0x28C */
  __IO uint32_t THRHLR8;                           /**< Threshold Register, offset: 0x290 */
  __IO uint32_t THRHLR9;                           /**< Threshold Register, offset: 0x294 */
  __IO uint32_t THRHLR10;                          /**< Threshold Register, offset: 0x298 */
  __IO uint32_t THRHLR11;                          /**< Threshold Register, offset: 0x29C */
  __IO uint32_t THRHLR12;                          /**< Threshold Register, offset: 0x2A0 */
  __IO uint32_t THRHLR13;                          /**< Threshold Register, offset: 0x2A4 */
  __IO uint32_t THRHLR14;                          /**< Threshold Register, offset: 0x2A8 */
  __IO uint32_t THRHLR15;                          /**< Threshold Register, offset: 0x2AC */
  __IO uint32_t CWSELR[ADC_CWSELR_COUNT];          /**< Channel Watchdog Select Register 0..Channel Watchdog Select Register 1, array offset: 0x2B0, array step: 0x4 */
       uint8_t RESERVED_12[40];
  __IO uint32_t CWENR[ADC_CWENR_COUNT];            /**< Channel Watchdog Enable Register 0, array offset: 0x2E0, array step: 0x4 */
       uint8_t RESERVED_13[12];
  __IO uint32_t AWORR[ADC_AWORR_COUNT];            /**< Analog Watchdog Out of Range Register 0, array offset: 0x2F0, array step: 0x4 */
       uint8_t RESERVED_14[76];
  __IO uint32_t STCR1;                             /**< Self Test Configuration Register 1, offset: 0x340 */
  __IO uint32_t STCR2;                             /**< Self Test Configuration Register 2, offset: 0x344 */
  __IO uint32_t STCR3;                             /**< Self Test Configuration Register 3, offset: 0x348 */
  __IO uint32_t STBRR;                             /**< Self Test Baud Rate Register, offset: 0x34C */
  __IO uint32_t STSR1;                             /**< Self Test Status Register 1, offset: 0x350 */
  __I  uint32_t STSR2;                             /**< Self Test Status Register 2, offset: 0x354 */
  __I  uint32_t STSR3;                             /**< Self Test Status Register 3, offset: 0x358 */
  __I  uint32_t STSR4;                             /**< Self Test Status Register 4, offset: 0x35C */
       uint8_t RESERVED_15[16];
  __I  uint32_t STDR1;                             /**< Self Test Data Register 1, offset: 0x370 */
  __I  uint32_t STDR2;                             /**< Self Test Data Register 2, offset: 0x374 */
       uint8_t RESERVED_16[8];
  __IO uint32_t STAW0R;                            /**< Self Test Analog Watchdog Register 0, offset: 0x380 */
  __IO uint32_t STAW1AR;                           /**< Self Test Analog Watchdog Register 1A, offset: 0x384 */
  __IO uint32_t STAW1BR;                           /**< Self Test Analog Watchdog Register 1B, offset: 0x388 */
  __IO uint32_t STAW2R;                            /**< Self Test Analog Watchdog Register 2, offset: 0x38C */
       uint8_t RESERVED_17[4];
  __IO uint32_t STAW4R;                            /**< Self Test Analog Watchdog Register 4, offset: 0x394 */
  __IO uint32_t STAW5R;                            /**< Self Test Analog Watchdog Register 5, offset: 0x398 */
       uint8_t RESERVED_18[4];
  __IO uint32_t CALBISTREG;                        /**< Calibration, BIST Control and status Register, offset: 0x3A0 */
       uint8_t RESERVED_19[4];
  __IO uint32_t OFSGNUSR;                          /**< Offset and Gain User Register, offset: 0x3A8 */
} ADC_Type, *ADC_MemMapPtr;

 /** Number of instances of the ADC module. */
#define ADC_INSTANCE_COUNT                       (4u)


/* ADC - Peripheral instance base addresses */
/** Peripheral ADC_0 base address */
#define ADC_0_BASE                               (0xFBE00000u)
/** Peripheral ADC_0 base pointer */
#define ADC_0                                    ((ADC_Type *)ADC_0_BASE)
/** Peripheral ADC_1 base address */
#define ADC_1_BASE                               (0xFFE04000u)
/** Peripheral ADC_1 base pointer */
#define ADC_1                                    ((ADC_Type *)ADC_1_BASE)
/** Peripheral ADC_2 base address */
#define ADC_2_BASE                               (0xFBE08000u)
/** Peripheral ADC_2 base pointer */
#define ADC_2                                    ((ADC_Type *)ADC_2_BASE)
/** Peripheral ADC_3 base address */
#define ADC_3_BASE                               (0xFFE0C000u)
/** Peripheral ADC_3 base pointer */
#define ADC_3                                    ((ADC_Type *)ADC_3_BASE)
/** Array initializer of ADC peripheral base addresses */
#define ADC_BASE_ADDRS                           { ADC_0_BASE, ADC_1_BASE, ADC_2_BASE, ADC_3_BASE }
/** Array initializer of ADC peripheral base pointers */
#define ADC_BASE_PTRS                            { ADC_0, ADC_1, ADC_2, ADC_3 }

/* ----------------------------------------------------------------------------
   -- ADC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ADC_Register_Masks ADC Register Masks
 * @{
 */

/* MCR Bit Fields */
#define ADC_MCR_PWDN_MASK                        0x1u
#define ADC_MCR_PWDN_SHIFT                       0u
#define ADC_MCR_PWDN_WIDTH                       1u
#define ADC_MCR_PWDN(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_MCR_PWDN_SHIFT))&ADC_MCR_PWDN_MASK)
#define ADC_MCR_REFSEL_MASK                      0x6u
#define ADC_MCR_REFSEL_SHIFT                     1u
#define ADC_MCR_REFSEL_WIDTH                     2u
#define ADC_MCR_REFSEL(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MCR_REFSEL_SHIFT))&ADC_MCR_REFSEL_MASK)
#define ADC_MCR_ACKO_MASK                        0x20u
#define ADC_MCR_ACKO_SHIFT                       5u
#define ADC_MCR_ACKO_WIDTH                       1u
#define ADC_MCR_ACKO(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_MCR_ACKO_SHIFT))&ADC_MCR_ACKO_MASK)
#define ADC_MCR_ABORT_MASK                       0x40u
#define ADC_MCR_ABORT_SHIFT                      6u
#define ADC_MCR_ABORT_WIDTH                      1u
#define ADC_MCR_ABORT(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_MCR_ABORT_SHIFT))&ADC_MCR_ABORT_MASK)
#define ADC_MCR_ABORT_CHAIN_MASK                 0x80u
#define ADC_MCR_ABORT_CHAIN_SHIFT                7u
#define ADC_MCR_ABORT_CHAIN_WIDTH                1u
#define ADC_MCR_ABORT_CHAIN(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_MCR_ABORT_CHAIN_SHIFT))&ADC_MCR_ABORT_CHAIN_MASK)
#define ADC_MCR_ADCLKSEL_MASK                    0x100u
#define ADC_MCR_ADCLKSEL_SHIFT                   8u
#define ADC_MCR_ADCLKSEL_WIDTH                   1u
#define ADC_MCR_ADCLKSEL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_MCR_ADCLKSEL_SHIFT))&ADC_MCR_ADCLKSEL_MASK)
#define ADC_MCR_STCL_MASK                        0x8000u
#define ADC_MCR_STCL_SHIFT                       15u
#define ADC_MCR_STCL_WIDTH                       1u
#define ADC_MCR_STCL(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_MCR_STCL_SHIFT))&ADC_MCR_STCL_MASK)
#define ADC_MCR_CTUEN_MASK                       0x20000u
#define ADC_MCR_CTUEN_SHIFT                      17u
#define ADC_MCR_CTUEN_WIDTH                      1u
#define ADC_MCR_CTUEN(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_MCR_CTUEN_SHIFT))&ADC_MCR_CTUEN_MASK)
#define ADC_MCR_JSTART_MASK                      0x100000u
#define ADC_MCR_JSTART_SHIFT                     20u
#define ADC_MCR_JSTART_WIDTH                     1u
#define ADC_MCR_JSTART(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MCR_JSTART_SHIFT))&ADC_MCR_JSTART_MASK)
#define ADC_MCR_JEDGE_MASK                       0x200000u
#define ADC_MCR_JEDGE_SHIFT                      21u
#define ADC_MCR_JEDGE_WIDTH                      1u
#define ADC_MCR_JEDGE(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_MCR_JEDGE_SHIFT))&ADC_MCR_JEDGE_MASK)
#define ADC_MCR_JTRGEN_MASK                      0x400000u
#define ADC_MCR_JTRGEN_SHIFT                     22u
#define ADC_MCR_JTRGEN_WIDTH                     1u
#define ADC_MCR_JTRGEN(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MCR_JTRGEN_SHIFT))&ADC_MCR_JTRGEN_MASK)
#define ADC_MCR_NSTART_MASK                      0x1000000u
#define ADC_MCR_NSTART_SHIFT                     24u
#define ADC_MCR_NSTART_WIDTH                     1u
#define ADC_MCR_NSTART(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MCR_NSTART_SHIFT))&ADC_MCR_NSTART_MASK)
#define ADC_MCR_EDGE_MASK                        0x4000000u
#define ADC_MCR_EDGE_SHIFT                       26u
#define ADC_MCR_EDGE_WIDTH                       1u
#define ADC_MCR_EDGE(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_MCR_EDGE_SHIFT))&ADC_MCR_EDGE_MASK)
#define ADC_MCR_TRGEN_MASK                       0x8000000u
#define ADC_MCR_TRGEN_SHIFT                      27u
#define ADC_MCR_TRGEN_WIDTH                      1u
#define ADC_MCR_TRGEN(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_MCR_TRGEN_SHIFT))&ADC_MCR_TRGEN_MASK)
#define ADC_MCR_MODE_MASK                        0x20000000u
#define ADC_MCR_MODE_SHIFT                       29u
#define ADC_MCR_MODE_WIDTH                       1u
#define ADC_MCR_MODE(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_MCR_MODE_SHIFT))&ADC_MCR_MODE_MASK)
#define ADC_MCR_WLSIDE_MASK                      0x40000000u
#define ADC_MCR_WLSIDE_SHIFT                     30u
#define ADC_MCR_WLSIDE_WIDTH                     1u
#define ADC_MCR_WLSIDE(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MCR_WLSIDE_SHIFT))&ADC_MCR_WLSIDE_MASK)
#define ADC_MCR_OWREN_MASK                       0x80000000u
#define ADC_MCR_OWREN_SHIFT                      31u
#define ADC_MCR_OWREN_WIDTH                      1u
#define ADC_MCR_OWREN(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_MCR_OWREN_SHIFT))&ADC_MCR_OWREN_MASK)
/* MSR Bit Fields */
#define ADC_MSR_ADCSTATUS_MASK                   0x7u
#define ADC_MSR_ADCSTATUS_SHIFT                  0u
#define ADC_MSR_ADCSTATUS_WIDTH                  3u
#define ADC_MSR_ADCSTATUS(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_MSR_ADCSTATUS_SHIFT))&ADC_MSR_ADCSTATUS_MASK)
#define ADC_MSR_ACKO_MASK                        0x20u
#define ADC_MSR_ACKO_SHIFT                       5u
#define ADC_MSR_ACKO_WIDTH                       1u
#define ADC_MSR_ACKO(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_MSR_ACKO_SHIFT))&ADC_MSR_ACKO_MASK)
#define ADC_MSR_CHADDR_MASK                      0xFE00u
#define ADC_MSR_CHADDR_SHIFT                     9u
#define ADC_MSR_CHADDR_WIDTH                     7u
#define ADC_MSR_CHADDR(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MSR_CHADDR_SHIFT))&ADC_MSR_CHADDR_MASK)
#define ADC_MSR_CTUSTART_MASK                    0x10000u
#define ADC_MSR_CTUSTART_SHIFT                   16u
#define ADC_MSR_CTUSTART_WIDTH                   1u
#define ADC_MSR_CTUSTART(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_MSR_CTUSTART_SHIFT))&ADC_MSR_CTUSTART_MASK)
#define ADC_MSR_SELF_TEST_S_MASK                 0x40000u
#define ADC_MSR_SELF_TEST_S_SHIFT                18u
#define ADC_MSR_SELF_TEST_S_WIDTH                1u
#define ADC_MSR_SELF_TEST_S(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_MSR_SELF_TEST_S_SHIFT))&ADC_MSR_SELF_TEST_S_MASK)
#define ADC_MSR_JSTART_MASK                      0x100000u
#define ADC_MSR_JSTART_SHIFT                     20u
#define ADC_MSR_JSTART_WIDTH                     1u
#define ADC_MSR_JSTART(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MSR_JSTART_SHIFT))&ADC_MSR_JSTART_MASK)
#define ADC_MSR_JABORT_MASK                      0x800000u
#define ADC_MSR_JABORT_SHIFT                     23u
#define ADC_MSR_JABORT_WIDTH                     1u
#define ADC_MSR_JABORT(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MSR_JABORT_SHIFT))&ADC_MSR_JABORT_MASK)
#define ADC_MSR_NSTART_MASK                      0x1000000u
#define ADC_MSR_NSTART_SHIFT                     24u
#define ADC_MSR_NSTART_WIDTH                     1u
#define ADC_MSR_NSTART(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MSR_NSTART_SHIFT))&ADC_MSR_NSTART_MASK)
#define ADC_MSR_CALIBRTD_MASK                    0x80000000u
#define ADC_MSR_CALIBRTD_SHIFT                   31u
#define ADC_MSR_CALIBRTD_WIDTH                   1u
#define ADC_MSR_CALIBRTD(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_MSR_CALIBRTD_SHIFT))&ADC_MSR_CALIBRTD_MASK)
/* ISR Bit Fields */
#define ADC_ISR_ECH_MASK                         0x1u
#define ADC_ISR_ECH_SHIFT                        0u
#define ADC_ISR_ECH_WIDTH                        1u
#define ADC_ISR_ECH(x)                           (((uint32_t)(((uint32_t)(x))<<ADC_ISR_ECH_SHIFT))&ADC_ISR_ECH_MASK)
#define ADC_ISR_EOC_MASK                         0x2u
#define ADC_ISR_EOC_SHIFT                        1u
#define ADC_ISR_EOC_WIDTH                        1u
#define ADC_ISR_EOC(x)                           (((uint32_t)(((uint32_t)(x))<<ADC_ISR_EOC_SHIFT))&ADC_ISR_EOC_MASK)
#define ADC_ISR_JECH_MASK                        0x4u
#define ADC_ISR_JECH_SHIFT                       2u
#define ADC_ISR_JECH_WIDTH                       1u
#define ADC_ISR_JECH(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_ISR_JECH_SHIFT))&ADC_ISR_JECH_MASK)
#define ADC_ISR_JEOC_MASK                        0x8u
#define ADC_ISR_JEOC_SHIFT                       3u
#define ADC_ISR_JEOC_WIDTH                       1u
#define ADC_ISR_JEOC(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_ISR_JEOC_SHIFT))&ADC_ISR_JEOC_MASK)
#define ADC_ISR_EOCTU_MASK                       0x10u
#define ADC_ISR_EOCTU_SHIFT                      4u
#define ADC_ISR_EOCTU_WIDTH                      1u
#define ADC_ISR_EOCTU(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_ISR_EOCTU_SHIFT))&ADC_ISR_EOCTU_MASK)
/* CEOCFR Bit Fields */
#define ADC_CEOCFR_EOCCH0_MASK                   0x1u
#define ADC_CEOCFR_EOCCH0_SHIFT                  0u
#define ADC_CEOCFR_EOCCH0_WIDTH                  1u
#define ADC_CEOCFR_EOCCH0(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH0_SHIFT))&ADC_CEOCFR_EOCCH0_MASK)
#define ADC_CEOCFR_EOCCH1_MASK                   0x2u
#define ADC_CEOCFR_EOCCH1_SHIFT                  1u
#define ADC_CEOCFR_EOCCH1_WIDTH                  1u
#define ADC_CEOCFR_EOCCH1(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH1_SHIFT))&ADC_CEOCFR_EOCCH1_MASK)
#define ADC_CEOCFR_EOCCH2_MASK                   0x4u
#define ADC_CEOCFR_EOCCH2_SHIFT                  2u
#define ADC_CEOCFR_EOCCH2_WIDTH                  1u
#define ADC_CEOCFR_EOCCH2(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH2_SHIFT))&ADC_CEOCFR_EOCCH2_MASK)
#define ADC_CEOCFR_EOCCH3_MASK                   0x8u
#define ADC_CEOCFR_EOCCH3_SHIFT                  3u
#define ADC_CEOCFR_EOCCH3_WIDTH                  1u
#define ADC_CEOCFR_EOCCH3(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH3_SHIFT))&ADC_CEOCFR_EOCCH3_MASK)
#define ADC_CEOCFR_EOCCH4_MASK                   0x10u
#define ADC_CEOCFR_EOCCH4_SHIFT                  4u
#define ADC_CEOCFR_EOCCH4_WIDTH                  1u
#define ADC_CEOCFR_EOCCH4(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH4_SHIFT))&ADC_CEOCFR_EOCCH4_MASK)
#define ADC_CEOCFR_EOCCH5_MASK                   0x20u
#define ADC_CEOCFR_EOCCH5_SHIFT                  5u
#define ADC_CEOCFR_EOCCH5_WIDTH                  1u
#define ADC_CEOCFR_EOCCH5(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH5_SHIFT))&ADC_CEOCFR_EOCCH5_MASK)
#define ADC_CEOCFR_EOCCH6_MASK                   0x40u
#define ADC_CEOCFR_EOCCH6_SHIFT                  6u
#define ADC_CEOCFR_EOCCH6_WIDTH                  1u
#define ADC_CEOCFR_EOCCH6(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH6_SHIFT))&ADC_CEOCFR_EOCCH6_MASK)
#define ADC_CEOCFR_EOCCH7_MASK                   0x80u
#define ADC_CEOCFR_EOCCH7_SHIFT                  7u
#define ADC_CEOCFR_EOCCH7_WIDTH                  1u
#define ADC_CEOCFR_EOCCH7(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH7_SHIFT))&ADC_CEOCFR_EOCCH7_MASK)
#define ADC_CEOCFR_EOCCH8_MASK                   0x100u
#define ADC_CEOCFR_EOCCH8_SHIFT                  8u
#define ADC_CEOCFR_EOCCH8_WIDTH                  1u
#define ADC_CEOCFR_EOCCH8(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH8_SHIFT))&ADC_CEOCFR_EOCCH8_MASK)
#define ADC_CEOCFR_EOCCH9_MASK                   0x200u
#define ADC_CEOCFR_EOCCH9_SHIFT                  9u
#define ADC_CEOCFR_EOCCH9_WIDTH                  1u
#define ADC_CEOCFR_EOCCH9(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH9_SHIFT))&ADC_CEOCFR_EOCCH9_MASK)
#define ADC_CEOCFR_EOCCH10_MASK                  0x400u
#define ADC_CEOCFR_EOCCH10_SHIFT                 10u
#define ADC_CEOCFR_EOCCH10_WIDTH                 1u
#define ADC_CEOCFR_EOCCH10(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH10_SHIFT))&ADC_CEOCFR_EOCCH10_MASK)
#define ADC_CEOCFR_EOCCH11_MASK                  0x800u
#define ADC_CEOCFR_EOCCH11_SHIFT                 11u
#define ADC_CEOCFR_EOCCH11_WIDTH                 1u
#define ADC_CEOCFR_EOCCH11(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH11_SHIFT))&ADC_CEOCFR_EOCCH11_MASK)
#define ADC_CEOCFR_EOCCH12_MASK                  0x1000u
#define ADC_CEOCFR_EOCCH12_SHIFT                 12u
#define ADC_CEOCFR_EOCCH12_WIDTH                 1u
#define ADC_CEOCFR_EOCCH12(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH12_SHIFT))&ADC_CEOCFR_EOCCH12_MASK)
#define ADC_CEOCFR_EOCCH13_MASK                  0x2000u
#define ADC_CEOCFR_EOCCH13_SHIFT                 13u
#define ADC_CEOCFR_EOCCH13_WIDTH                 1u
#define ADC_CEOCFR_EOCCH13(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH13_SHIFT))&ADC_CEOCFR_EOCCH13_MASK)
#define ADC_CEOCFR_EOCCH14_MASK                  0x4000u
#define ADC_CEOCFR_EOCCH14_SHIFT                 14u
#define ADC_CEOCFR_EOCCH14_WIDTH                 1u
#define ADC_CEOCFR_EOCCH14(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH14_SHIFT))&ADC_CEOCFR_EOCCH14_MASK)
#define ADC_CEOCFR_EOCCH15_MASK                  0x8000u
#define ADC_CEOCFR_EOCCH15_SHIFT                 15u
#define ADC_CEOCFR_EOCCH15_WIDTH                 1u
#define ADC_CEOCFR_EOCCH15(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH15_SHIFT))&ADC_CEOCFR_EOCCH15_MASK)
/* IMR Bit Fields */
#define ADC_IMR_MSKECH_MASK                      0x1u
#define ADC_IMR_MSKECH_SHIFT                     0u
#define ADC_IMR_MSKECH_WIDTH                     1u
#define ADC_IMR_MSKECH(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_IMR_MSKECH_SHIFT))&ADC_IMR_MSKECH_MASK)
#define ADC_IMR_MSKEOC_MASK                      0x2u
#define ADC_IMR_MSKEOC_SHIFT                     1u
#define ADC_IMR_MSKEOC_WIDTH                     1u
#define ADC_IMR_MSKEOC(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_IMR_MSKEOC_SHIFT))&ADC_IMR_MSKEOC_MASK)
#define ADC_IMR_MSKJECH_MASK                     0x4u
#define ADC_IMR_MSKJECH_SHIFT                    2u
#define ADC_IMR_MSKJECH_WIDTH                    1u
#define ADC_IMR_MSKJECH(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_IMR_MSKJECH_SHIFT))&ADC_IMR_MSKJECH_MASK)
#define ADC_IMR_MSKJEOC_MASK                     0x8u
#define ADC_IMR_MSKJEOC_SHIFT                    3u
#define ADC_IMR_MSKJEOC_WIDTH                    1u
#define ADC_IMR_MSKJEOC(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_IMR_MSKJEOC_SHIFT))&ADC_IMR_MSKJEOC_MASK)
#define ADC_IMR_MSKEOCTU_MASK                    0x10u
#define ADC_IMR_MSKEOCTU_SHIFT                   4u
#define ADC_IMR_MSKEOCTU_WIDTH                   1u
#define ADC_IMR_MSKEOCTU(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_IMR_MSKEOCTU_SHIFT))&ADC_IMR_MSKEOCTU_MASK)
/* CIMR Bit Fields */
#define ADC_CIMR_CIM0_MASK                       0x1u
#define ADC_CIMR_CIM0_SHIFT                      0u
#define ADC_CIMR_CIM0_WIDTH                      1u
#define ADC_CIMR_CIM0(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM0_SHIFT))&ADC_CIMR_CIM0_MASK)
#define ADC_CIMR_CIM1_MASK                       0x2u
#define ADC_CIMR_CIM1_SHIFT                      1u
#define ADC_CIMR_CIM1_WIDTH                      1u
#define ADC_CIMR_CIM1(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM1_SHIFT))&ADC_CIMR_CIM1_MASK)
#define ADC_CIMR_CIM2_MASK                       0x4u
#define ADC_CIMR_CIM2_SHIFT                      2u
#define ADC_CIMR_CIM2_WIDTH                      1u
#define ADC_CIMR_CIM2(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM2_SHIFT))&ADC_CIMR_CIM2_MASK)
#define ADC_CIMR_CIM3_MASK                       0x8u
#define ADC_CIMR_CIM3_SHIFT                      3u
#define ADC_CIMR_CIM3_WIDTH                      1u
#define ADC_CIMR_CIM3(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM3_SHIFT))&ADC_CIMR_CIM3_MASK)
#define ADC_CIMR_CIM4_MASK                       0x10u
#define ADC_CIMR_CIM4_SHIFT                      4u
#define ADC_CIMR_CIM4_WIDTH                      1u
#define ADC_CIMR_CIM4(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM4_SHIFT))&ADC_CIMR_CIM4_MASK)
#define ADC_CIMR_CIM5_MASK                       0x20u
#define ADC_CIMR_CIM5_SHIFT                      5u
#define ADC_CIMR_CIM5_WIDTH                      1u
#define ADC_CIMR_CIM5(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM5_SHIFT))&ADC_CIMR_CIM5_MASK)
#define ADC_CIMR_CIM6_MASK                       0x40u
#define ADC_CIMR_CIM6_SHIFT                      6u
#define ADC_CIMR_CIM6_WIDTH                      1u
#define ADC_CIMR_CIM6(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM6_SHIFT))&ADC_CIMR_CIM6_MASK)
#define ADC_CIMR_CIM7_MASK                       0x80u
#define ADC_CIMR_CIM7_SHIFT                      7u
#define ADC_CIMR_CIM7_WIDTH                      1u
#define ADC_CIMR_CIM7(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM7_SHIFT))&ADC_CIMR_CIM7_MASK)
#define ADC_CIMR_CIM8_MASK                       0x100u
#define ADC_CIMR_CIM8_SHIFT                      8u
#define ADC_CIMR_CIM8_WIDTH                      1u
#define ADC_CIMR_CIM8(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM8_SHIFT))&ADC_CIMR_CIM8_MASK)
#define ADC_CIMR_CIM9_MASK                       0x200u
#define ADC_CIMR_CIM9_SHIFT                      9u
#define ADC_CIMR_CIM9_WIDTH                      1u
#define ADC_CIMR_CIM9(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM9_SHIFT))&ADC_CIMR_CIM9_MASK)
#define ADC_CIMR_CIM10_MASK                      0x400u
#define ADC_CIMR_CIM10_SHIFT                     10u
#define ADC_CIMR_CIM10_WIDTH                     1u
#define ADC_CIMR_CIM10(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM10_SHIFT))&ADC_CIMR_CIM10_MASK)
#define ADC_CIMR_CIM11_MASK                      0x800u
#define ADC_CIMR_CIM11_SHIFT                     11u
#define ADC_CIMR_CIM11_WIDTH                     1u
#define ADC_CIMR_CIM11(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM11_SHIFT))&ADC_CIMR_CIM11_MASK)
#define ADC_CIMR_CIM12_MASK                      0x1000u
#define ADC_CIMR_CIM12_SHIFT                     12u
#define ADC_CIMR_CIM12_WIDTH                     1u
#define ADC_CIMR_CIM12(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM12_SHIFT))&ADC_CIMR_CIM12_MASK)
#define ADC_CIMR_CIM13_MASK                      0x2000u
#define ADC_CIMR_CIM13_SHIFT                     13u
#define ADC_CIMR_CIM13_WIDTH                     1u
#define ADC_CIMR_CIM13(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM13_SHIFT))&ADC_CIMR_CIM13_MASK)
#define ADC_CIMR_CIM14_MASK                      0x4000u
#define ADC_CIMR_CIM14_SHIFT                     14u
#define ADC_CIMR_CIM14_WIDTH                     1u
#define ADC_CIMR_CIM14(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM14_SHIFT))&ADC_CIMR_CIM14_MASK)
#define ADC_CIMR_CIM15_MASK                      0x8000u
#define ADC_CIMR_CIM15_SHIFT                     15u
#define ADC_CIMR_CIM15_WIDTH                     1u
#define ADC_CIMR_CIM15(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM15_SHIFT))&ADC_CIMR_CIM15_MASK)
/* WTISR Bit Fields */
#define ADC_WTISR_WDG0L_MASK                     0x1u
#define ADC_WTISR_WDG0L_SHIFT                    0u
#define ADC_WTISR_WDG0L_WIDTH                    1u
#define ADC_WTISR_WDG0L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG0L_SHIFT))&ADC_WTISR_WDG0L_MASK)
#define ADC_WTISR_WDG0H_MASK                     0x2u
#define ADC_WTISR_WDG0H_SHIFT                    1u
#define ADC_WTISR_WDG0H_WIDTH                    1u
#define ADC_WTISR_WDG0H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG0H_SHIFT))&ADC_WTISR_WDG0H_MASK)
#define ADC_WTISR_WDG1L_MASK                     0x4u
#define ADC_WTISR_WDG1L_SHIFT                    2u
#define ADC_WTISR_WDG1L_WIDTH                    1u
#define ADC_WTISR_WDG1L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG1L_SHIFT))&ADC_WTISR_WDG1L_MASK)
#define ADC_WTISR_WDG1H_MASK                     0x8u
#define ADC_WTISR_WDG1H_SHIFT                    3u
#define ADC_WTISR_WDG1H_WIDTH                    1u
#define ADC_WTISR_WDG1H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG1H_SHIFT))&ADC_WTISR_WDG1H_MASK)
#define ADC_WTISR_WDG2L_MASK                     0x10u
#define ADC_WTISR_WDG2L_SHIFT                    4u
#define ADC_WTISR_WDG2L_WIDTH                    1u
#define ADC_WTISR_WDG2L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG2L_SHIFT))&ADC_WTISR_WDG2L_MASK)
#define ADC_WTISR_WDG2H_MASK                     0x20u
#define ADC_WTISR_WDG2H_SHIFT                    5u
#define ADC_WTISR_WDG2H_WIDTH                    1u
#define ADC_WTISR_WDG2H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG2H_SHIFT))&ADC_WTISR_WDG2H_MASK)
#define ADC_WTISR_WDG3L_MASK                     0x40u
#define ADC_WTISR_WDG3L_SHIFT                    6u
#define ADC_WTISR_WDG3L_WIDTH                    1u
#define ADC_WTISR_WDG3L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG3L_SHIFT))&ADC_WTISR_WDG3L_MASK)
#define ADC_WTISR_WDG3H_MASK                     0x80u
#define ADC_WTISR_WDG3H_SHIFT                    7u
#define ADC_WTISR_WDG3H_WIDTH                    1u
#define ADC_WTISR_WDG3H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG3H_SHIFT))&ADC_WTISR_WDG3H_MASK)
#define ADC_WTISR_WDG4L_MASK                     0x100u
#define ADC_WTISR_WDG4L_SHIFT                    8u
#define ADC_WTISR_WDG4L_WIDTH                    1u
#define ADC_WTISR_WDG4L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG4L_SHIFT))&ADC_WTISR_WDG4L_MASK)
#define ADC_WTISR_WDG4H_MASK                     0x200u
#define ADC_WTISR_WDG4H_SHIFT                    9u
#define ADC_WTISR_WDG4H_WIDTH                    1u
#define ADC_WTISR_WDG4H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG4H_SHIFT))&ADC_WTISR_WDG4H_MASK)
#define ADC_WTISR_WDG5L_MASK                     0x400u
#define ADC_WTISR_WDG5L_SHIFT                    10u
#define ADC_WTISR_WDG5L_WIDTH                    1u
#define ADC_WTISR_WDG5L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG5L_SHIFT))&ADC_WTISR_WDG5L_MASK)
#define ADC_WTISR_WDG5H_MASK                     0x800u
#define ADC_WTISR_WDG5H_SHIFT                    11u
#define ADC_WTISR_WDG5H_WIDTH                    1u
#define ADC_WTISR_WDG5H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG5H_SHIFT))&ADC_WTISR_WDG5H_MASK)
#define ADC_WTISR_WDG6L_MASK                     0x1000u
#define ADC_WTISR_WDG6L_SHIFT                    12u
#define ADC_WTISR_WDG6L_WIDTH                    1u
#define ADC_WTISR_WDG6L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG6L_SHIFT))&ADC_WTISR_WDG6L_MASK)
#define ADC_WTISR_WDG6H_MASK                     0x2000u
#define ADC_WTISR_WDG6H_SHIFT                    13u
#define ADC_WTISR_WDG6H_WIDTH                    1u
#define ADC_WTISR_WDG6H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG6H_SHIFT))&ADC_WTISR_WDG6H_MASK)
#define ADC_WTISR_WDG7L_MASK                     0x4000u
#define ADC_WTISR_WDG7L_SHIFT                    14u
#define ADC_WTISR_WDG7L_WIDTH                    1u
#define ADC_WTISR_WDG7L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG7L_SHIFT))&ADC_WTISR_WDG7L_MASK)
#define ADC_WTISR_WDG7H_MASK                     0x8000u
#define ADC_WTISR_WDG7H_SHIFT                    15u
#define ADC_WTISR_WDG7H_WIDTH                    1u
#define ADC_WTISR_WDG7H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG7H_SHIFT))&ADC_WTISR_WDG7H_MASK)
#define ADC_WTISR_WDG8L_MASK                     0x10000u
#define ADC_WTISR_WDG8L_SHIFT                    16u
#define ADC_WTISR_WDG8L_WIDTH                    1u
#define ADC_WTISR_WDG8L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG8L_SHIFT))&ADC_WTISR_WDG8L_MASK)
#define ADC_WTISR_WDG8H_MASK                     0x20000u
#define ADC_WTISR_WDG8H_SHIFT                    17u
#define ADC_WTISR_WDG8H_WIDTH                    1u
#define ADC_WTISR_WDG8H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG8H_SHIFT))&ADC_WTISR_WDG8H_MASK)
#define ADC_WTISR_WDG9L_MASK                     0x40000u
#define ADC_WTISR_WDG9L_SHIFT                    18u
#define ADC_WTISR_WDG9L_WIDTH                    1u
#define ADC_WTISR_WDG9L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG9L_SHIFT))&ADC_WTISR_WDG9L_MASK)
#define ADC_WTISR_WDG9H_MASK                     0x80000u
#define ADC_WTISR_WDG9H_SHIFT                    19u
#define ADC_WTISR_WDG9H_WIDTH                    1u
#define ADC_WTISR_WDG9H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG9H_SHIFT))&ADC_WTISR_WDG9H_MASK)
#define ADC_WTISR_WDG10L_MASK                    0x100000u
#define ADC_WTISR_WDG10L_SHIFT                   20u
#define ADC_WTISR_WDG10L_WIDTH                   1u
#define ADC_WTISR_WDG10L(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG10L_SHIFT))&ADC_WTISR_WDG10L_MASK)
#define ADC_WTISR_WDG10H_MASK                    0x200000u
#define ADC_WTISR_WDG10H_SHIFT                   21u
#define ADC_WTISR_WDG10H_WIDTH                   1u
#define ADC_WTISR_WDG10H(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG10H_SHIFT))&ADC_WTISR_WDG10H_MASK)
#define ADC_WTISR_WDG11L_MASK                    0x400000u
#define ADC_WTISR_WDG11L_SHIFT                   22u
#define ADC_WTISR_WDG11L_WIDTH                   1u
#define ADC_WTISR_WDG11L(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG11L_SHIFT))&ADC_WTISR_WDG11L_MASK)
#define ADC_WTISR_WDG11H_MASK                    0x800000u
#define ADC_WTISR_WDG11H_SHIFT                   23u
#define ADC_WTISR_WDG11H_WIDTH                   1u
#define ADC_WTISR_WDG11H(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG11H_SHIFT))&ADC_WTISR_WDG11H_MASK)
#define ADC_WTISR_WDG12L_MASK                    0x1000000u
#define ADC_WTISR_WDG12L_SHIFT                   24u
#define ADC_WTISR_WDG12L_WIDTH                   1u
#define ADC_WTISR_WDG12L(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG12L_SHIFT))&ADC_WTISR_WDG12L_MASK)
#define ADC_WTISR_WDG12H_MASK                    0x2000000u
#define ADC_WTISR_WDG12H_SHIFT                   25u
#define ADC_WTISR_WDG12H_WIDTH                   1u
#define ADC_WTISR_WDG12H(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG12H_SHIFT))&ADC_WTISR_WDG12H_MASK)
#define ADC_WTISR_WDG13L_MASK                    0x4000000u
#define ADC_WTISR_WDG13L_SHIFT                   26u
#define ADC_WTISR_WDG13L_WIDTH                   1u
#define ADC_WTISR_WDG13L(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG13L_SHIFT))&ADC_WTISR_WDG13L_MASK)
#define ADC_WTISR_WDG13H_MASK                    0x8000000u
#define ADC_WTISR_WDG13H_SHIFT                   27u
#define ADC_WTISR_WDG13H_WIDTH                   1u
#define ADC_WTISR_WDG13H(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG13H_SHIFT))&ADC_WTISR_WDG13H_MASK)
#define ADC_WTISR_WDG14L_MASK                    0x10000000u
#define ADC_WTISR_WDG14L_SHIFT                   28u
#define ADC_WTISR_WDG14L_WIDTH                   1u
#define ADC_WTISR_WDG14L(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG14L_SHIFT))&ADC_WTISR_WDG14L_MASK)
#define ADC_WTISR_WDG14H_MASK                    0x20000000u
#define ADC_WTISR_WDG14H_SHIFT                   29u
#define ADC_WTISR_WDG14H_WIDTH                   1u
#define ADC_WTISR_WDG14H(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG14H_SHIFT))&ADC_WTISR_WDG14H_MASK)
#define ADC_WTISR_WDG15L_MASK                    0x40000000u
#define ADC_WTISR_WDG15L_SHIFT                   30u
#define ADC_WTISR_WDG15L_WIDTH                   1u
#define ADC_WTISR_WDG15L(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG15L_SHIFT))&ADC_WTISR_WDG15L_MASK)
#define ADC_WTISR_WDG15H_MASK                    0x80000000u
#define ADC_WTISR_WDG15H_SHIFT                   31u
#define ADC_WTISR_WDG15H_WIDTH                   1u
#define ADC_WTISR_WDG15H(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG15H_SHIFT))&ADC_WTISR_WDG15H_MASK)
/* WTIMR Bit Fields */
#define ADC_WTIMR_MSKWDG0L_MASK                  0x1u
#define ADC_WTIMR_MSKWDG0L_SHIFT                 0u
#define ADC_WTIMR_MSKWDG0L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG0L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG0L_SHIFT))&ADC_WTIMR_MSKWDG0L_MASK)
#define ADC_WTIMR_MSKWDG0H_MASK                  0x2u
#define ADC_WTIMR_MSKWDG0H_SHIFT                 1u
#define ADC_WTIMR_MSKWDG0H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG0H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG0H_SHIFT))&ADC_WTIMR_MSKWDG0H_MASK)
#define ADC_WTIMR_MSKWDG1L_MASK                  0x4u
#define ADC_WTIMR_MSKWDG1L_SHIFT                 2u
#define ADC_WTIMR_MSKWDG1L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG1L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG1L_SHIFT))&ADC_WTIMR_MSKWDG1L_MASK)
#define ADC_WTIMR_MSKWDG1H_MASK                  0x8u
#define ADC_WTIMR_MSKWDG1H_SHIFT                 3u
#define ADC_WTIMR_MSKWDG1H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG1H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG1H_SHIFT))&ADC_WTIMR_MSKWDG1H_MASK)
#define ADC_WTIMR_MSKWDG2L_MASK                  0x10u
#define ADC_WTIMR_MSKWDG2L_SHIFT                 4u
#define ADC_WTIMR_MSKWDG2L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG2L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG2L_SHIFT))&ADC_WTIMR_MSKWDG2L_MASK)
#define ADC_WTIMR_MSKWDG2H_MASK                  0x20u
#define ADC_WTIMR_MSKWDG2H_SHIFT                 5u
#define ADC_WTIMR_MSKWDG2H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG2H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG2H_SHIFT))&ADC_WTIMR_MSKWDG2H_MASK)
#define ADC_WTIMR_MSKWDG3L_MASK                  0x40u
#define ADC_WTIMR_MSKWDG3L_SHIFT                 6u
#define ADC_WTIMR_MSKWDG3L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG3L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG3L_SHIFT))&ADC_WTIMR_MSKWDG3L_MASK)
#define ADC_WTIMR_MSKWDG3H_MASK                  0x80u
#define ADC_WTIMR_MSKWDG3H_SHIFT                 7u
#define ADC_WTIMR_MSKWDG3H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG3H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG3H_SHIFT))&ADC_WTIMR_MSKWDG3H_MASK)
#define ADC_WTIMR_MSKWDG4L_MASK                  0x100u
#define ADC_WTIMR_MSKWDG4L_SHIFT                 8u
#define ADC_WTIMR_MSKWDG4L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG4L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG4L_SHIFT))&ADC_WTIMR_MSKWDG4L_MASK)
#define ADC_WTIMR_MSKWDG4H_MASK                  0x200u
#define ADC_WTIMR_MSKWDG4H_SHIFT                 9u
#define ADC_WTIMR_MSKWDG4H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG4H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG4H_SHIFT))&ADC_WTIMR_MSKWDG4H_MASK)
#define ADC_WTIMR_MSKWDG5L_MASK                  0x400u
#define ADC_WTIMR_MSKWDG5L_SHIFT                 10u
#define ADC_WTIMR_MSKWDG5L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG5L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG5L_SHIFT))&ADC_WTIMR_MSKWDG5L_MASK)
#define ADC_WTIMR_MSKWDG5H_MASK                  0x800u
#define ADC_WTIMR_MSKWDG5H_SHIFT                 11u
#define ADC_WTIMR_MSKWDG5H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG5H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG5H_SHIFT))&ADC_WTIMR_MSKWDG5H_MASK)
#define ADC_WTIMR_MSKWDG6L_MASK                  0x1000u
#define ADC_WTIMR_MSKWDG6L_SHIFT                 12u
#define ADC_WTIMR_MSKWDG6L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG6L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG6L_SHIFT))&ADC_WTIMR_MSKWDG6L_MASK)
#define ADC_WTIMR_MSKWDG6H_MASK                  0x2000u
#define ADC_WTIMR_MSKWDG6H_SHIFT                 13u
#define ADC_WTIMR_MSKWDG6H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG6H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG6H_SHIFT))&ADC_WTIMR_MSKWDG6H_MASK)
#define ADC_WTIMR_MSKWDG7L_MASK                  0x4000u
#define ADC_WTIMR_MSKWDG7L_SHIFT                 14u
#define ADC_WTIMR_MSKWDG7L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG7L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG7L_SHIFT))&ADC_WTIMR_MSKWDG7L_MASK)
#define ADC_WTIMR_MSKWDG7H_MASK                  0x8000u
#define ADC_WTIMR_MSKWDG7H_SHIFT                 15u
#define ADC_WTIMR_MSKWDG7H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG7H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG7H_SHIFT))&ADC_WTIMR_MSKWDG7H_MASK)
#define ADC_WTIMR_MSKWDG8L_MASK                  0x10000u
#define ADC_WTIMR_MSKWDG8L_SHIFT                 16u
#define ADC_WTIMR_MSKWDG8L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG8L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG8L_SHIFT))&ADC_WTIMR_MSKWDG8L_MASK)
#define ADC_WTIMR_MSKWDG8H_MASK                  0x20000u
#define ADC_WTIMR_MSKWDG8H_SHIFT                 17u
#define ADC_WTIMR_MSKWDG8H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG8H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG8H_SHIFT))&ADC_WTIMR_MSKWDG8H_MASK)
#define ADC_WTIMR_MSKWDG9L_MASK                  0x40000u
#define ADC_WTIMR_MSKWDG9L_SHIFT                 18u
#define ADC_WTIMR_MSKWDG9L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG9L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG9L_SHIFT))&ADC_WTIMR_MSKWDG9L_MASK)
#define ADC_WTIMR_MSKWDG9H_MASK                  0x80000u
#define ADC_WTIMR_MSKWDG9H_SHIFT                 19u
#define ADC_WTIMR_MSKWDG9H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG9H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG9H_SHIFT))&ADC_WTIMR_MSKWDG9H_MASK)
#define ADC_WTIMR_MSKWDG10L_MASK                 0x100000u
#define ADC_WTIMR_MSKWDG10L_SHIFT                20u
#define ADC_WTIMR_MSKWDG10L_WIDTH                1u
#define ADC_WTIMR_MSKWDG10L(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG10L_SHIFT))&ADC_WTIMR_MSKWDG10L_MASK)
#define ADC_WTIMR_MSKWDG10H_MASK                 0x200000u
#define ADC_WTIMR_MSKWDG10H_SHIFT                21u
#define ADC_WTIMR_MSKWDG10H_WIDTH                1u
#define ADC_WTIMR_MSKWDG10H(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG10H_SHIFT))&ADC_WTIMR_MSKWDG10H_MASK)
#define ADC_WTIMR_MSKWDG11L_MASK                 0x400000u
#define ADC_WTIMR_MSKWDG11L_SHIFT                22u
#define ADC_WTIMR_MSKWDG11L_WIDTH                1u
#define ADC_WTIMR_MSKWDG11L(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG11L_SHIFT))&ADC_WTIMR_MSKWDG11L_MASK)
#define ADC_WTIMR_MSKWDG11H_MASK                 0x800000u
#define ADC_WTIMR_MSKWDG11H_SHIFT                23u
#define ADC_WTIMR_MSKWDG11H_WIDTH                1u
#define ADC_WTIMR_MSKWDG11H(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG11H_SHIFT))&ADC_WTIMR_MSKWDG11H_MASK)
#define ADC_WTIMR_MSKWDG12L_MASK                 0x1000000u
#define ADC_WTIMR_MSKWDG12L_SHIFT                24u
#define ADC_WTIMR_MSKWDG12L_WIDTH                1u
#define ADC_WTIMR_MSKWDG12L(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG12L_SHIFT))&ADC_WTIMR_MSKWDG12L_MASK)
#define ADC_WTIMR_MSKWDG12H_MASK                 0x2000000u
#define ADC_WTIMR_MSKWDG12H_SHIFT                25u
#define ADC_WTIMR_MSKWDG12H_WIDTH                1u
#define ADC_WTIMR_MSKWDG12H(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG12H_SHIFT))&ADC_WTIMR_MSKWDG12H_MASK)
#define ADC_WTIMR_MSKWDG13L_MASK                 0x4000000u
#define ADC_WTIMR_MSKWDG13L_SHIFT                26u
#define ADC_WTIMR_MSKWDG13L_WIDTH                1u
#define ADC_WTIMR_MSKWDG13L(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG13L_SHIFT))&ADC_WTIMR_MSKWDG13L_MASK)
#define ADC_WTIMR_MSKWDG13H_MASK                 0x8000000u
#define ADC_WTIMR_MSKWDG13H_SHIFT                27u
#define ADC_WTIMR_MSKWDG13H_WIDTH                1u
#define ADC_WTIMR_MSKWDG13H(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG13H_SHIFT))&ADC_WTIMR_MSKWDG13H_MASK)
#define ADC_WTIMR_MSKWDG14L_MASK                 0x10000000u
#define ADC_WTIMR_MSKWDG14L_SHIFT                28u
#define ADC_WTIMR_MSKWDG14L_WIDTH                1u
#define ADC_WTIMR_MSKWDG14L(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG14L_SHIFT))&ADC_WTIMR_MSKWDG14L_MASK)
#define ADC_WTIMR_MSKWDG14H_MASK                 0x20000000u
#define ADC_WTIMR_MSKWDG14H_SHIFT                29u
#define ADC_WTIMR_MSKWDG14H_WIDTH                1u
#define ADC_WTIMR_MSKWDG14H(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG14H_SHIFT))&ADC_WTIMR_MSKWDG14H_MASK)
#define ADC_WTIMR_MSKWDG15L_MASK                 0x40000000u
#define ADC_WTIMR_MSKWDG15L_SHIFT                30u
#define ADC_WTIMR_MSKWDG15L_WIDTH                1u
#define ADC_WTIMR_MSKWDG15L(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG15L_SHIFT))&ADC_WTIMR_MSKWDG15L_MASK)
#define ADC_WTIMR_MSKWDG15H_MASK                 0x80000000u
#define ADC_WTIMR_MSKWDG15H_SHIFT                31u
#define ADC_WTIMR_MSKWDG15H_WIDTH                1u
#define ADC_WTIMR_MSKWDG15H(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG15H_SHIFT))&ADC_WTIMR_MSKWDG15H_MASK)
/* DMAE Bit Fields */
#define ADC_DMAE_DMAEN_MASK                      0x1u
#define ADC_DMAE_DMAEN_SHIFT                     0u
#define ADC_DMAE_DMAEN_WIDTH                     1u
#define ADC_DMAE_DMAEN(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAE_DMAEN_SHIFT))&ADC_DMAE_DMAEN_MASK)
#define ADC_DMAE_DCLR_MASK                       0x2u
#define ADC_DMAE_DCLR_SHIFT                      1u
#define ADC_DMAE_DCLR_WIDTH                      1u
#define ADC_DMAE_DCLR(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAE_DCLR_SHIFT))&ADC_DMAE_DCLR_MASK)
/* DMAR Bit Fields */
#define ADC_DMAR_DMA0_MASK                       0x1u
#define ADC_DMAR_DMA0_SHIFT                      0u
#define ADC_DMAR_DMA0_WIDTH                      1u
#define ADC_DMAR_DMA0(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA0_SHIFT))&ADC_DMAR_DMA0_MASK)
#define ADC_DMAR_DMA1_MASK                       0x2u
#define ADC_DMAR_DMA1_SHIFT                      1u
#define ADC_DMAR_DMA1_WIDTH                      1u
#define ADC_DMAR_DMA1(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA1_SHIFT))&ADC_DMAR_DMA1_MASK)
#define ADC_DMAR_DMA2_MASK                       0x4u
#define ADC_DMAR_DMA2_SHIFT                      2u
#define ADC_DMAR_DMA2_WIDTH                      1u
#define ADC_DMAR_DMA2(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA2_SHIFT))&ADC_DMAR_DMA2_MASK)
#define ADC_DMAR_DMA3_MASK                       0x8u
#define ADC_DMAR_DMA3_SHIFT                      3u
#define ADC_DMAR_DMA3_WIDTH                      1u
#define ADC_DMAR_DMA3(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA3_SHIFT))&ADC_DMAR_DMA3_MASK)
#define ADC_DMAR_DMA4_MASK                       0x10u
#define ADC_DMAR_DMA4_SHIFT                      4u
#define ADC_DMAR_DMA4_WIDTH                      1u
#define ADC_DMAR_DMA4(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA4_SHIFT))&ADC_DMAR_DMA4_MASK)
#define ADC_DMAR_DMA5_MASK                       0x20u
#define ADC_DMAR_DMA5_SHIFT                      5u
#define ADC_DMAR_DMA5_WIDTH                      1u
#define ADC_DMAR_DMA5(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA5_SHIFT))&ADC_DMAR_DMA5_MASK)
#define ADC_DMAR_DMA6_MASK                       0x40u
#define ADC_DMAR_DMA6_SHIFT                      6u
#define ADC_DMAR_DMA6_WIDTH                      1u
#define ADC_DMAR_DMA6(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA6_SHIFT))&ADC_DMAR_DMA6_MASK)
#define ADC_DMAR_DMA7_MASK                       0x80u
#define ADC_DMAR_DMA7_SHIFT                      7u
#define ADC_DMAR_DMA7_WIDTH                      1u
#define ADC_DMAR_DMA7(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA7_SHIFT))&ADC_DMAR_DMA7_MASK)
#define ADC_DMAR_DMA8_MASK                       0x100u
#define ADC_DMAR_DMA8_SHIFT                      8u
#define ADC_DMAR_DMA8_WIDTH                      1u
#define ADC_DMAR_DMA8(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA8_SHIFT))&ADC_DMAR_DMA8_MASK)
#define ADC_DMAR_DMA9_MASK                       0x200u
#define ADC_DMAR_DMA9_SHIFT                      9u
#define ADC_DMAR_DMA9_WIDTH                      1u
#define ADC_DMAR_DMA9(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA9_SHIFT))&ADC_DMAR_DMA9_MASK)
#define ADC_DMAR_DMA10_MASK                      0x400u
#define ADC_DMAR_DMA10_SHIFT                     10u
#define ADC_DMAR_DMA10_WIDTH                     1u
#define ADC_DMAR_DMA10(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA10_SHIFT))&ADC_DMAR_DMA10_MASK)
#define ADC_DMAR_DMA11_MASK                      0x800u
#define ADC_DMAR_DMA11_SHIFT                     11u
#define ADC_DMAR_DMA11_WIDTH                     1u
#define ADC_DMAR_DMA11(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA11_SHIFT))&ADC_DMAR_DMA11_MASK)
#define ADC_DMAR_DMA12_MASK                      0x1000u
#define ADC_DMAR_DMA12_SHIFT                     12u
#define ADC_DMAR_DMA12_WIDTH                     1u
#define ADC_DMAR_DMA12(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA12_SHIFT))&ADC_DMAR_DMA12_MASK)
#define ADC_DMAR_DMA13_MASK                      0x2000u
#define ADC_DMAR_DMA13_SHIFT                     13u
#define ADC_DMAR_DMA13_WIDTH                     1u
#define ADC_DMAR_DMA13(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA13_SHIFT))&ADC_DMAR_DMA13_MASK)
#define ADC_DMAR_DMA14_MASK                      0x4000u
#define ADC_DMAR_DMA14_SHIFT                     14u
#define ADC_DMAR_DMA14_WIDTH                     1u
#define ADC_DMAR_DMA14(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA14_SHIFT))&ADC_DMAR_DMA14_MASK)
#define ADC_DMAR_DMA15_MASK                      0x8000u
#define ADC_DMAR_DMA15_SHIFT                     15u
#define ADC_DMAR_DMA15_WIDTH                     1u
#define ADC_DMAR_DMA15(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA15_SHIFT))&ADC_DMAR_DMA15_MASK)
/* THRHLR0 Bit Fields */
#define ADC_THRHLR0_THRL_MASK                    0xFFFu
#define ADC_THRHLR0_THRL_SHIFT                   0u
#define ADC_THRHLR0_THRL_WIDTH                   12u
#define ADC_THRHLR0_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR0_THRL_SHIFT))&ADC_THRHLR0_THRL_MASK)
#define ADC_THRHLR0_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR0_THRH_SHIFT                   16u
#define ADC_THRHLR0_THRH_WIDTH                   12u
#define ADC_THRHLR0_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR0_THRH_SHIFT))&ADC_THRHLR0_THRH_MASK)
/* THRHLR1 Bit Fields */
#define ADC_THRHLR1_THRL_MASK                    0xFFFu
#define ADC_THRHLR1_THRL_SHIFT                   0u
#define ADC_THRHLR1_THRL_WIDTH                   12u
#define ADC_THRHLR1_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR1_THRL_SHIFT))&ADC_THRHLR1_THRL_MASK)
#define ADC_THRHLR1_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR1_THRH_SHIFT                   16u
#define ADC_THRHLR1_THRH_WIDTH                   12u
#define ADC_THRHLR1_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR1_THRH_SHIFT))&ADC_THRHLR1_THRH_MASK)
/* THRHLR2 Bit Fields */
#define ADC_THRHLR2_THRL_MASK                    0xFFFu
#define ADC_THRHLR2_THRL_SHIFT                   0u
#define ADC_THRHLR2_THRL_WIDTH                   12u
#define ADC_THRHLR2_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR2_THRL_SHIFT))&ADC_THRHLR2_THRL_MASK)
#define ADC_THRHLR2_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR2_THRH_SHIFT                   16u
#define ADC_THRHLR2_THRH_WIDTH                   12u
#define ADC_THRHLR2_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR2_THRH_SHIFT))&ADC_THRHLR2_THRH_MASK)
/* THRHLR3 Bit Fields */
#define ADC_THRHLR3_THRL_MASK                    0xFFFu
#define ADC_THRHLR3_THRL_SHIFT                   0u
#define ADC_THRHLR3_THRL_WIDTH                   12u
#define ADC_THRHLR3_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR3_THRL_SHIFT))&ADC_THRHLR3_THRL_MASK)
#define ADC_THRHLR3_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR3_THRH_SHIFT                   16u
#define ADC_THRHLR3_THRH_WIDTH                   12u
#define ADC_THRHLR3_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR3_THRH_SHIFT))&ADC_THRHLR3_THRH_MASK)
/* PSCR Bit Fields */
#define ADC_PSCR_PRECONV_MASK                    0x1u
#define ADC_PSCR_PRECONV_SHIFT                   0u
#define ADC_PSCR_PRECONV_WIDTH                   1u
#define ADC_PSCR_PRECONV(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_PSCR_PRECONV_SHIFT))&ADC_PSCR_PRECONV_MASK)
#define ADC_PSCR_PREVAL0_MASK                    0x6u
#define ADC_PSCR_PREVAL0_SHIFT                   1u
#define ADC_PSCR_PREVAL0_WIDTH                   2u
#define ADC_PSCR_PREVAL0(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_PSCR_PREVAL0_SHIFT))&ADC_PSCR_PREVAL0_MASK)
#define ADC_PSCR_PREVAL1_MASK                    0x18u
#define ADC_PSCR_PREVAL1_SHIFT                   3u
#define ADC_PSCR_PREVAL1_WIDTH                   2u
#define ADC_PSCR_PREVAL1(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_PSCR_PREVAL1_SHIFT))&ADC_PSCR_PREVAL1_MASK)
/* PSR Bit Fields */
#define ADC_PSR_PRES0_MASK                       0x1u
#define ADC_PSR_PRES0_SHIFT                      0u
#define ADC_PSR_PRES0_WIDTH                      1u
#define ADC_PSR_PRES0(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES0_SHIFT))&ADC_PSR_PRES0_MASK)
#define ADC_PSR_PRES1_MASK                       0x2u
#define ADC_PSR_PRES1_SHIFT                      1u
#define ADC_PSR_PRES1_WIDTH                      1u
#define ADC_PSR_PRES1(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES1_SHIFT))&ADC_PSR_PRES1_MASK)
#define ADC_PSR_PRES2_MASK                       0x4u
#define ADC_PSR_PRES2_SHIFT                      2u
#define ADC_PSR_PRES2_WIDTH                      1u
#define ADC_PSR_PRES2(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES2_SHIFT))&ADC_PSR_PRES2_MASK)
#define ADC_PSR_PRES3_MASK                       0x8u
#define ADC_PSR_PRES3_SHIFT                      3u
#define ADC_PSR_PRES3_WIDTH                      1u
#define ADC_PSR_PRES3(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES3_SHIFT))&ADC_PSR_PRES3_MASK)
#define ADC_PSR_PRES4_MASK                       0x10u
#define ADC_PSR_PRES4_SHIFT                      4u
#define ADC_PSR_PRES4_WIDTH                      1u
#define ADC_PSR_PRES4(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES4_SHIFT))&ADC_PSR_PRES4_MASK)
#define ADC_PSR_PRES5_MASK                       0x20u
#define ADC_PSR_PRES5_SHIFT                      5u
#define ADC_PSR_PRES5_WIDTH                      1u
#define ADC_PSR_PRES5(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES5_SHIFT))&ADC_PSR_PRES5_MASK)
#define ADC_PSR_PRES6_MASK                       0x40u
#define ADC_PSR_PRES6_SHIFT                      6u
#define ADC_PSR_PRES6_WIDTH                      1u
#define ADC_PSR_PRES6(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES6_SHIFT))&ADC_PSR_PRES6_MASK)
#define ADC_PSR_PRES7_MASK                       0x80u
#define ADC_PSR_PRES7_SHIFT                      7u
#define ADC_PSR_PRES7_WIDTH                      1u
#define ADC_PSR_PRES7(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES7_SHIFT))&ADC_PSR_PRES7_MASK)
#define ADC_PSR_PRES8_MASK                       0x100u
#define ADC_PSR_PRES8_SHIFT                      8u
#define ADC_PSR_PRES8_WIDTH                      1u
#define ADC_PSR_PRES8(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES8_SHIFT))&ADC_PSR_PRES8_MASK)
#define ADC_PSR_PRES9_MASK                       0x200u
#define ADC_PSR_PRES9_SHIFT                      9u
#define ADC_PSR_PRES9_WIDTH                      1u
#define ADC_PSR_PRES9(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES9_SHIFT))&ADC_PSR_PRES9_MASK)
#define ADC_PSR_PRES10_MASK                      0x400u
#define ADC_PSR_PRES10_SHIFT                     10u
#define ADC_PSR_PRES10_WIDTH                     1u
#define ADC_PSR_PRES10(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES10_SHIFT))&ADC_PSR_PRES10_MASK)
#define ADC_PSR_PRES11_MASK                      0x800u
#define ADC_PSR_PRES11_SHIFT                     11u
#define ADC_PSR_PRES11_WIDTH                     1u
#define ADC_PSR_PRES11(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES11_SHIFT))&ADC_PSR_PRES11_MASK)
#define ADC_PSR_PRES12_MASK                      0x1000u
#define ADC_PSR_PRES12_SHIFT                     12u
#define ADC_PSR_PRES12_WIDTH                     1u
#define ADC_PSR_PRES12(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES12_SHIFT))&ADC_PSR_PRES12_MASK)
#define ADC_PSR_PRES13_MASK                      0x2000u
#define ADC_PSR_PRES13_SHIFT                     13u
#define ADC_PSR_PRES13_WIDTH                     1u
#define ADC_PSR_PRES13(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES13_SHIFT))&ADC_PSR_PRES13_MASK)
#define ADC_PSR_PRES14_MASK                      0x4000u
#define ADC_PSR_PRES14_SHIFT                     14u
#define ADC_PSR_PRES14_WIDTH                     1u
#define ADC_PSR_PRES14(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES14_SHIFT))&ADC_PSR_PRES14_MASK)
#define ADC_PSR_PRES15_MASK                      0x8000u
#define ADC_PSR_PRES15_SHIFT                     15u
#define ADC_PSR_PRES15_WIDTH                     1u
#define ADC_PSR_PRES15(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES15_SHIFT))&ADC_PSR_PRES15_MASK)
/* CTR Bit Fields */
#define ADC_CTR_INPSAMP_MASK                     0xFFu
#define ADC_CTR_INPSAMP_SHIFT                    0u
#define ADC_CTR_INPSAMP_WIDTH                    8u
#define ADC_CTR_INPSAMP(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CTR_INPSAMP_SHIFT))&ADC_CTR_INPSAMP_MASK)
/* NCMR Bit Fields */
#define ADC_NCMR_CH0_MASK                        0x1u
#define ADC_NCMR_CH0_SHIFT                       0u
#define ADC_NCMR_CH0_WIDTH                       1u
#define ADC_NCMR_CH0(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH0_SHIFT))&ADC_NCMR_CH0_MASK)
#define ADC_NCMR_CH1_MASK                        0x2u
#define ADC_NCMR_CH1_SHIFT                       1u
#define ADC_NCMR_CH1_WIDTH                       1u
#define ADC_NCMR_CH1(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH1_SHIFT))&ADC_NCMR_CH1_MASK)
#define ADC_NCMR_CH2_MASK                        0x4u
#define ADC_NCMR_CH2_SHIFT                       2u
#define ADC_NCMR_CH2_WIDTH                       1u
#define ADC_NCMR_CH2(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH2_SHIFT))&ADC_NCMR_CH2_MASK)
#define ADC_NCMR_CH3_MASK                        0x8u
#define ADC_NCMR_CH3_SHIFT                       3u
#define ADC_NCMR_CH3_WIDTH                       1u
#define ADC_NCMR_CH3(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH3_SHIFT))&ADC_NCMR_CH3_MASK)
#define ADC_NCMR_CH4_MASK                        0x10u
#define ADC_NCMR_CH4_SHIFT                       4u
#define ADC_NCMR_CH4_WIDTH                       1u
#define ADC_NCMR_CH4(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH4_SHIFT))&ADC_NCMR_CH4_MASK)
#define ADC_NCMR_CH5_MASK                        0x20u
#define ADC_NCMR_CH5_SHIFT                       5u
#define ADC_NCMR_CH5_WIDTH                       1u
#define ADC_NCMR_CH5(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH5_SHIFT))&ADC_NCMR_CH5_MASK)
#define ADC_NCMR_CH6_MASK                        0x40u
#define ADC_NCMR_CH6_SHIFT                       6u
#define ADC_NCMR_CH6_WIDTH                       1u
#define ADC_NCMR_CH6(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH6_SHIFT))&ADC_NCMR_CH6_MASK)
#define ADC_NCMR_CH7_MASK                        0x80u
#define ADC_NCMR_CH7_SHIFT                       7u
#define ADC_NCMR_CH7_WIDTH                       1u
#define ADC_NCMR_CH7(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH7_SHIFT))&ADC_NCMR_CH7_MASK)
#define ADC_NCMR_CH8_MASK                        0x100u
#define ADC_NCMR_CH8_SHIFT                       8u
#define ADC_NCMR_CH8_WIDTH                       1u
#define ADC_NCMR_CH8(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH8_SHIFT))&ADC_NCMR_CH8_MASK)
#define ADC_NCMR_CH9_MASK                        0x200u
#define ADC_NCMR_CH9_SHIFT                       9u
#define ADC_NCMR_CH9_WIDTH                       1u
#define ADC_NCMR_CH9(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH9_SHIFT))&ADC_NCMR_CH9_MASK)
#define ADC_NCMR_CH10_MASK                       0x400u
#define ADC_NCMR_CH10_SHIFT                      10u
#define ADC_NCMR_CH10_WIDTH                      1u
#define ADC_NCMR_CH10(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH10_SHIFT))&ADC_NCMR_CH10_MASK)
#define ADC_NCMR_CH11_MASK                       0x800u
#define ADC_NCMR_CH11_SHIFT                      11u
#define ADC_NCMR_CH11_WIDTH                      1u
#define ADC_NCMR_CH11(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH11_SHIFT))&ADC_NCMR_CH11_MASK)
#define ADC_NCMR_CH12_MASK                       0x1000u
#define ADC_NCMR_CH12_SHIFT                      12u
#define ADC_NCMR_CH12_WIDTH                      1u
#define ADC_NCMR_CH12(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH12_SHIFT))&ADC_NCMR_CH12_MASK)
#define ADC_NCMR_CH13_MASK                       0x2000u
#define ADC_NCMR_CH13_SHIFT                      13u
#define ADC_NCMR_CH13_WIDTH                      1u
#define ADC_NCMR_CH13(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH13_SHIFT))&ADC_NCMR_CH13_MASK)
#define ADC_NCMR_CH14_MASK                       0x4000u
#define ADC_NCMR_CH14_SHIFT                      14u
#define ADC_NCMR_CH14_WIDTH                      1u
#define ADC_NCMR_CH14(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH14_SHIFT))&ADC_NCMR_CH14_MASK)
#define ADC_NCMR_CH15_MASK                       0x8000u
#define ADC_NCMR_CH15_SHIFT                      15u
#define ADC_NCMR_CH15_WIDTH                      1u
#define ADC_NCMR_CH15(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH15_SHIFT))&ADC_NCMR_CH15_MASK)
/* JCMR Bit Fields */
#define ADC_JCMR_CH0_MASK                        0x1u
#define ADC_JCMR_CH0_SHIFT                       0u
#define ADC_JCMR_CH0_WIDTH                       1u
#define ADC_JCMR_CH0(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH0_SHIFT))&ADC_JCMR_CH0_MASK)
#define ADC_JCMR_CH1_MASK                        0x2u
#define ADC_JCMR_CH1_SHIFT                       1u
#define ADC_JCMR_CH1_WIDTH                       1u
#define ADC_JCMR_CH1(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH1_SHIFT))&ADC_JCMR_CH1_MASK)
#define ADC_JCMR_CH2_MASK                        0x4u
#define ADC_JCMR_CH2_SHIFT                       2u
#define ADC_JCMR_CH2_WIDTH                       1u
#define ADC_JCMR_CH2(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH2_SHIFT))&ADC_JCMR_CH2_MASK)
#define ADC_JCMR_CH3_MASK                        0x8u
#define ADC_JCMR_CH3_SHIFT                       3u
#define ADC_JCMR_CH3_WIDTH                       1u
#define ADC_JCMR_CH3(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH3_SHIFT))&ADC_JCMR_CH3_MASK)
#define ADC_JCMR_CH4_MASK                        0x10u
#define ADC_JCMR_CH4_SHIFT                       4u
#define ADC_JCMR_CH4_WIDTH                       1u
#define ADC_JCMR_CH4(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH4_SHIFT))&ADC_JCMR_CH4_MASK)
#define ADC_JCMR_CH5_MASK                        0x20u
#define ADC_JCMR_CH5_SHIFT                       5u
#define ADC_JCMR_CH5_WIDTH                       1u
#define ADC_JCMR_CH5(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH5_SHIFT))&ADC_JCMR_CH5_MASK)
#define ADC_JCMR_CH6_MASK                        0x40u
#define ADC_JCMR_CH6_SHIFT                       6u
#define ADC_JCMR_CH6_WIDTH                       1u
#define ADC_JCMR_CH6(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH6_SHIFT))&ADC_JCMR_CH6_MASK)
#define ADC_JCMR_CH7_MASK                        0x80u
#define ADC_JCMR_CH7_SHIFT                       7u
#define ADC_JCMR_CH7_WIDTH                       1u
#define ADC_JCMR_CH7(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH7_SHIFT))&ADC_JCMR_CH7_MASK)
#define ADC_JCMR_CH8_MASK                        0x100u
#define ADC_JCMR_CH8_SHIFT                       8u
#define ADC_JCMR_CH8_WIDTH                       1u
#define ADC_JCMR_CH8(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH8_SHIFT))&ADC_JCMR_CH8_MASK)
#define ADC_JCMR_CH9_MASK                        0x200u
#define ADC_JCMR_CH9_SHIFT                       9u
#define ADC_JCMR_CH9_WIDTH                       1u
#define ADC_JCMR_CH9(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH9_SHIFT))&ADC_JCMR_CH9_MASK)
#define ADC_JCMR_CH10_MASK                       0x400u
#define ADC_JCMR_CH10_SHIFT                      10u
#define ADC_JCMR_CH10_WIDTH                      1u
#define ADC_JCMR_CH10(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH10_SHIFT))&ADC_JCMR_CH10_MASK)
#define ADC_JCMR_CH11_MASK                       0x800u
#define ADC_JCMR_CH11_SHIFT                      11u
#define ADC_JCMR_CH11_WIDTH                      1u
#define ADC_JCMR_CH11(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH11_SHIFT))&ADC_JCMR_CH11_MASK)
#define ADC_JCMR_CH12_MASK                       0x1000u
#define ADC_JCMR_CH12_SHIFT                      12u
#define ADC_JCMR_CH12_WIDTH                      1u
#define ADC_JCMR_CH12(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH12_SHIFT))&ADC_JCMR_CH12_MASK)
#define ADC_JCMR_CH13_MASK                       0x2000u
#define ADC_JCMR_CH13_SHIFT                      13u
#define ADC_JCMR_CH13_WIDTH                      1u
#define ADC_JCMR_CH13(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH13_SHIFT))&ADC_JCMR_CH13_MASK)
#define ADC_JCMR_CH14_MASK                       0x4000u
#define ADC_JCMR_CH14_SHIFT                      14u
#define ADC_JCMR_CH14_WIDTH                      1u
#define ADC_JCMR_CH14(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH14_SHIFT))&ADC_JCMR_CH14_MASK)
#define ADC_JCMR_CH15_MASK                       0x8000u
#define ADC_JCMR_CH15_SHIFT                      15u
#define ADC_JCMR_CH15_WIDTH                      1u
#define ADC_JCMR_CH15(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH15_SHIFT))&ADC_JCMR_CH15_MASK)
/* PDEDR Bit Fields */
#define ADC_PDEDR_PDED_MASK                      0xFFu
#define ADC_PDEDR_PDED_SHIFT                     0u
#define ADC_PDEDR_PDED_WIDTH                     8u
#define ADC_PDEDR_PDED(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PDEDR_PDED_SHIFT))&ADC_PDEDR_PDED_MASK)
/* CDR Bit Fields */
#define ADC_CDR_CDATA_MASK                       0xFFFFu
#define ADC_CDR_CDATA_SHIFT                      0u
#define ADC_CDR_CDATA_WIDTH                      16u
#define ADC_CDR_CDATA(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CDR_CDATA_SHIFT))&ADC_CDR_CDATA_MASK)
#define ADC_CDR_RESULT_MASK                      0x30000u
#define ADC_CDR_RESULT_SHIFT                     16u
#define ADC_CDR_RESULT_WIDTH                     2u
#define ADC_CDR_RESULT(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CDR_RESULT_SHIFT))&ADC_CDR_RESULT_MASK)
#define ADC_CDR_OVERW_MASK                       0x40000u
#define ADC_CDR_OVERW_SHIFT                      18u
#define ADC_CDR_OVERW_WIDTH                      1u
#define ADC_CDR_OVERW(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CDR_OVERW_SHIFT))&ADC_CDR_OVERW_MASK)
#define ADC_CDR_VALID_MASK                       0x80000u
#define ADC_CDR_VALID_SHIFT                      19u
#define ADC_CDR_VALID_WIDTH                      1u
#define ADC_CDR_VALID(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CDR_VALID_SHIFT))&ADC_CDR_VALID_MASK)
/* THRHLR4 Bit Fields */
#define ADC_THRHLR4_THRL_MASK                    0xFFFu
#define ADC_THRHLR4_THRL_SHIFT                   0u
#define ADC_THRHLR4_THRL_WIDTH                   12u
#define ADC_THRHLR4_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR4_THRL_SHIFT))&ADC_THRHLR4_THRL_MASK)
#define ADC_THRHLR4_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR4_THRH_SHIFT                   16u
#define ADC_THRHLR4_THRH_WIDTH                   12u
#define ADC_THRHLR4_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR4_THRH_SHIFT))&ADC_THRHLR4_THRH_MASK)
/* THRHLR5 Bit Fields */
#define ADC_THRHLR5_THRL_MASK                    0xFFFu
#define ADC_THRHLR5_THRL_SHIFT                   0u
#define ADC_THRHLR5_THRL_WIDTH                   12u
#define ADC_THRHLR5_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR5_THRL_SHIFT))&ADC_THRHLR5_THRL_MASK)
#define ADC_THRHLR5_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR5_THRH_SHIFT                   16u
#define ADC_THRHLR5_THRH_WIDTH                   12u
#define ADC_THRHLR5_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR5_THRH_SHIFT))&ADC_THRHLR5_THRH_MASK)
/* THRHLR6 Bit Fields */
#define ADC_THRHLR6_THRL_MASK                    0xFFFu
#define ADC_THRHLR6_THRL_SHIFT                   0u
#define ADC_THRHLR6_THRL_WIDTH                   12u
#define ADC_THRHLR6_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR6_THRL_SHIFT))&ADC_THRHLR6_THRL_MASK)
#define ADC_THRHLR6_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR6_THRH_SHIFT                   16u
#define ADC_THRHLR6_THRH_WIDTH                   12u
#define ADC_THRHLR6_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR6_THRH_SHIFT))&ADC_THRHLR6_THRH_MASK)
/* THRHLR7 Bit Fields */
#define ADC_THRHLR7_THRL_MASK                    0xFFFu
#define ADC_THRHLR7_THRL_SHIFT                   0u
#define ADC_THRHLR7_THRL_WIDTH                   12u
#define ADC_THRHLR7_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR7_THRL_SHIFT))&ADC_THRHLR7_THRL_MASK)
#define ADC_THRHLR7_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR7_THRH_SHIFT                   16u
#define ADC_THRHLR7_THRH_WIDTH                   12u
#define ADC_THRHLR7_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR7_THRH_SHIFT))&ADC_THRHLR7_THRH_MASK)
/* THRHLR8 Bit Fields */
#define ADC_THRHLR8_THRL_MASK                    0xFFFu
#define ADC_THRHLR8_THRL_SHIFT                   0u
#define ADC_THRHLR8_THRL_WIDTH                   12u
#define ADC_THRHLR8_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR8_THRL_SHIFT))&ADC_THRHLR8_THRL_MASK)
#define ADC_THRHLR8_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR8_THRH_SHIFT                   16u
#define ADC_THRHLR8_THRH_WIDTH                   12u
#define ADC_THRHLR8_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR8_THRH_SHIFT))&ADC_THRHLR8_THRH_MASK)
/* THRHLR9 Bit Fields */
#define ADC_THRHLR9_THRL_MASK                    0xFFFu
#define ADC_THRHLR9_THRL_SHIFT                   0u
#define ADC_THRHLR9_THRL_WIDTH                   12u
#define ADC_THRHLR9_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR9_THRL_SHIFT))&ADC_THRHLR9_THRL_MASK)
#define ADC_THRHLR9_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR9_THRH_SHIFT                   16u
#define ADC_THRHLR9_THRH_WIDTH                   12u
#define ADC_THRHLR9_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR9_THRH_SHIFT))&ADC_THRHLR9_THRH_MASK)
/* THRHLR10 Bit Fields */
#define ADC_THRHLR10_THRL_MASK                   0xFFFu
#define ADC_THRHLR10_THRL_SHIFT                  0u
#define ADC_THRHLR10_THRL_WIDTH                  12u
#define ADC_THRHLR10_THRL(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR10_THRL_SHIFT))&ADC_THRHLR10_THRL_MASK)
#define ADC_THRHLR10_THRH_MASK                   0xFFF0000u
#define ADC_THRHLR10_THRH_SHIFT                  16u
#define ADC_THRHLR10_THRH_WIDTH                  12u
#define ADC_THRHLR10_THRH(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR10_THRH_SHIFT))&ADC_THRHLR10_THRH_MASK)
/* THRHLR11 Bit Fields */
#define ADC_THRHLR11_THRL_MASK                   0xFFFu
#define ADC_THRHLR11_THRL_SHIFT                  0u
#define ADC_THRHLR11_THRL_WIDTH                  12u
#define ADC_THRHLR11_THRL(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR11_THRL_SHIFT))&ADC_THRHLR11_THRL_MASK)
#define ADC_THRHLR11_THRH_MASK                   0xFFF0000u
#define ADC_THRHLR11_THRH_SHIFT                  16u
#define ADC_THRHLR11_THRH_WIDTH                  12u
#define ADC_THRHLR11_THRH(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR11_THRH_SHIFT))&ADC_THRHLR11_THRH_MASK)
/* THRHLR12 Bit Fields */
#define ADC_THRHLR12_THRL_MASK                   0xFFFu
#define ADC_THRHLR12_THRL_SHIFT                  0u
#define ADC_THRHLR12_THRL_WIDTH                  12u
#define ADC_THRHLR12_THRL(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR12_THRL_SHIFT))&ADC_THRHLR12_THRL_MASK)
#define ADC_THRHLR12_THRH_MASK                   0xFFF0000u
#define ADC_THRHLR12_THRH_SHIFT                  16u
#define ADC_THRHLR12_THRH_WIDTH                  12u
#define ADC_THRHLR12_THRH(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR12_THRH_SHIFT))&ADC_THRHLR12_THRH_MASK)
/* THRHLR13 Bit Fields */
#define ADC_THRHLR13_THRL_MASK                   0xFFFu
#define ADC_THRHLR13_THRL_SHIFT                  0u
#define ADC_THRHLR13_THRL_WIDTH                  12u
#define ADC_THRHLR13_THRL(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR13_THRL_SHIFT))&ADC_THRHLR13_THRL_MASK)
#define ADC_THRHLR13_THRH_MASK                   0xFFF0000u
#define ADC_THRHLR13_THRH_SHIFT                  16u
#define ADC_THRHLR13_THRH_WIDTH                  12u
#define ADC_THRHLR13_THRH(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR13_THRH_SHIFT))&ADC_THRHLR13_THRH_MASK)
/* THRHLR14 Bit Fields */
#define ADC_THRHLR14_THRL_MASK                   0xFFFu
#define ADC_THRHLR14_THRL_SHIFT                  0u
#define ADC_THRHLR14_THRL_WIDTH                  12u
#define ADC_THRHLR14_THRL(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR14_THRL_SHIFT))&ADC_THRHLR14_THRL_MASK)
#define ADC_THRHLR14_THRH_MASK                   0xFFF0000u
#define ADC_THRHLR14_THRH_SHIFT                  16u
#define ADC_THRHLR14_THRH_WIDTH                  12u
#define ADC_THRHLR14_THRH(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR14_THRH_SHIFT))&ADC_THRHLR14_THRH_MASK)
/* THRHLR15 Bit Fields */
#define ADC_THRHLR15_THRL_MASK                   0xFFFu
#define ADC_THRHLR15_THRL_SHIFT                  0u
#define ADC_THRHLR15_THRL_WIDTH                  12u
#define ADC_THRHLR15_THRL(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR15_THRL_SHIFT))&ADC_THRHLR15_THRL_MASK)
#define ADC_THRHLR15_THRH_MASK                   0xFFF0000u
#define ADC_THRHLR15_THRH_SHIFT                  16u
#define ADC_THRHLR15_THRH_WIDTH                  12u
#define ADC_THRHLR15_THRH(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR15_THRH_SHIFT))&ADC_THRHLR15_THRH_MASK)
/* CWSELR Bit Fields */
#define ADC_CWSELR_WSEL_CH0_MASK                 0xFu
#define ADC_CWSELR_WSEL_CH0_SHIFT                0u
#define ADC_CWSELR_WSEL_CH0_WIDTH                4u
#define ADC_CWSELR_WSEL_CH0(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH0_SHIFT))&ADC_CWSELR_WSEL_CH0_MASK)
#define ADC_CWSELR_WSEL_CH8_MASK                 0xFu
#define ADC_CWSELR_WSEL_CH8_SHIFT                0u
#define ADC_CWSELR_WSEL_CH8_WIDTH                4u
#define ADC_CWSELR_WSEL_CH8(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH8_SHIFT))&ADC_CWSELR_WSEL_CH8_MASK)
#define ADC_CWSELR_WSEL_CH1_MASK                 0xF0u
#define ADC_CWSELR_WSEL_CH1_SHIFT                4u
#define ADC_CWSELR_WSEL_CH1_WIDTH                4u
#define ADC_CWSELR_WSEL_CH1(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH1_SHIFT))&ADC_CWSELR_WSEL_CH1_MASK)
#define ADC_CWSELR_WSEL_CH9_MASK                 0xF0u
#define ADC_CWSELR_WSEL_CH9_SHIFT                4u
#define ADC_CWSELR_WSEL_CH9_WIDTH                4u
#define ADC_CWSELR_WSEL_CH9(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH9_SHIFT))&ADC_CWSELR_WSEL_CH9_MASK)
#define ADC_CWSELR_WSEL_CH10_MASK                0xF00u
#define ADC_CWSELR_WSEL_CH10_SHIFT               8u
#define ADC_CWSELR_WSEL_CH10_WIDTH               4u
#define ADC_CWSELR_WSEL_CH10(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH10_SHIFT))&ADC_CWSELR_WSEL_CH10_MASK)
#define ADC_CWSELR_WSEL_CH2_MASK                 0xF00u
#define ADC_CWSELR_WSEL_CH2_SHIFT                8u
#define ADC_CWSELR_WSEL_CH2_WIDTH                4u
#define ADC_CWSELR_WSEL_CH2(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH2_SHIFT))&ADC_CWSELR_WSEL_CH2_MASK)
#define ADC_CWSELR_WSEL_CH11_MASK                0xF000u
#define ADC_CWSELR_WSEL_CH11_SHIFT               12u
#define ADC_CWSELR_WSEL_CH11_WIDTH               4u
#define ADC_CWSELR_WSEL_CH11(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH11_SHIFT))&ADC_CWSELR_WSEL_CH11_MASK)
#define ADC_CWSELR_WSEL_CH3_MASK                 0xF000u
#define ADC_CWSELR_WSEL_CH3_SHIFT                12u
#define ADC_CWSELR_WSEL_CH3_WIDTH                4u
#define ADC_CWSELR_WSEL_CH3(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH3_SHIFT))&ADC_CWSELR_WSEL_CH3_MASK)
#define ADC_CWSELR_WSEL_CH12_MASK                0xF0000u
#define ADC_CWSELR_WSEL_CH12_SHIFT               16u
#define ADC_CWSELR_WSEL_CH12_WIDTH               4u
#define ADC_CWSELR_WSEL_CH12(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH12_SHIFT))&ADC_CWSELR_WSEL_CH12_MASK)
#define ADC_CWSELR_WSEL_CH4_MASK                 0xF0000u
#define ADC_CWSELR_WSEL_CH4_SHIFT                16u
#define ADC_CWSELR_WSEL_CH4_WIDTH                4u
#define ADC_CWSELR_WSEL_CH4(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH4_SHIFT))&ADC_CWSELR_WSEL_CH4_MASK)
#define ADC_CWSELR_WSEL_CH5_MASK                 0xF00000u
#define ADC_CWSELR_WSEL_CH5_SHIFT                20u
#define ADC_CWSELR_WSEL_CH5_WIDTH                4u
#define ADC_CWSELR_WSEL_CH5(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH5_SHIFT))&ADC_CWSELR_WSEL_CH5_MASK)
#define ADC_CWSELR_WSEL_CH13_MASK                0xF00000u
#define ADC_CWSELR_WSEL_CH13_SHIFT               20u
#define ADC_CWSELR_WSEL_CH13_WIDTH               4u
#define ADC_CWSELR_WSEL_CH13(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH13_SHIFT))&ADC_CWSELR_WSEL_CH13_MASK)
#define ADC_CWSELR_WSEL_CH14_MASK                0xF000000u
#define ADC_CWSELR_WSEL_CH14_SHIFT               24u
#define ADC_CWSELR_WSEL_CH14_WIDTH               4u
#define ADC_CWSELR_WSEL_CH14(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH14_SHIFT))&ADC_CWSELR_WSEL_CH14_MASK)
#define ADC_CWSELR_WSEL_CH6_MASK                 0xF000000u
#define ADC_CWSELR_WSEL_CH6_SHIFT                24u
#define ADC_CWSELR_WSEL_CH6_WIDTH                4u
#define ADC_CWSELR_WSEL_CH6(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH6_SHIFT))&ADC_CWSELR_WSEL_CH6_MASK)
#define ADC_CWSELR_WSEL_CH7_MASK                 0xF0000000u
#define ADC_CWSELR_WSEL_CH7_SHIFT                28u
#define ADC_CWSELR_WSEL_CH7_WIDTH                4u
#define ADC_CWSELR_WSEL_CH7(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH7_SHIFT))&ADC_CWSELR_WSEL_CH7_MASK)
#define ADC_CWSELR_WSEL_CH15_MASK                0xF0000000u
#define ADC_CWSELR_WSEL_CH15_SHIFT               28u
#define ADC_CWSELR_WSEL_CH15_WIDTH               4u
#define ADC_CWSELR_WSEL_CH15(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH15_SHIFT))&ADC_CWSELR_WSEL_CH15_MASK)
/* CWENR Bit Fields */
#define ADC_CWENR_CWEN0_MASK                     0x1u
#define ADC_CWENR_CWEN0_SHIFT                    0u
#define ADC_CWENR_CWEN0_WIDTH                    1u
#define ADC_CWENR_CWEN0(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN0_SHIFT))&ADC_CWENR_CWEN0_MASK)
#define ADC_CWENR_CWEN1_MASK                     0x2u
#define ADC_CWENR_CWEN1_SHIFT                    1u
#define ADC_CWENR_CWEN1_WIDTH                    1u
#define ADC_CWENR_CWEN1(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN1_SHIFT))&ADC_CWENR_CWEN1_MASK)
#define ADC_CWENR_CWEN2_MASK                     0x4u
#define ADC_CWENR_CWEN2_SHIFT                    2u
#define ADC_CWENR_CWEN2_WIDTH                    1u
#define ADC_CWENR_CWEN2(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN2_SHIFT))&ADC_CWENR_CWEN2_MASK)
#define ADC_CWENR_CWEN3_MASK                     0x8u
#define ADC_CWENR_CWEN3_SHIFT                    3u
#define ADC_CWENR_CWEN3_WIDTH                    1u
#define ADC_CWENR_CWEN3(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN3_SHIFT))&ADC_CWENR_CWEN3_MASK)
#define ADC_CWENR_CWEN4_MASK                     0x10u
#define ADC_CWENR_CWEN4_SHIFT                    4u
#define ADC_CWENR_CWEN4_WIDTH                    1u
#define ADC_CWENR_CWEN4(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN4_SHIFT))&ADC_CWENR_CWEN4_MASK)
#define ADC_CWENR_CWEN5_MASK                     0x20u
#define ADC_CWENR_CWEN5_SHIFT                    5u
#define ADC_CWENR_CWEN5_WIDTH                    1u
#define ADC_CWENR_CWEN5(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN5_SHIFT))&ADC_CWENR_CWEN5_MASK)
#define ADC_CWENR_CWEN6_MASK                     0x40u
#define ADC_CWENR_CWEN6_SHIFT                    6u
#define ADC_CWENR_CWEN6_WIDTH                    1u
#define ADC_CWENR_CWEN6(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN6_SHIFT))&ADC_CWENR_CWEN6_MASK)
#define ADC_CWENR_CWEN7_MASK                     0x80u
#define ADC_CWENR_CWEN7_SHIFT                    7u
#define ADC_CWENR_CWEN7_WIDTH                    1u
#define ADC_CWENR_CWEN7(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN7_SHIFT))&ADC_CWENR_CWEN7_MASK)
#define ADC_CWENR_CWEN8_MASK                     0x100u
#define ADC_CWENR_CWEN8_SHIFT                    8u
#define ADC_CWENR_CWEN8_WIDTH                    1u
#define ADC_CWENR_CWEN8(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN8_SHIFT))&ADC_CWENR_CWEN8_MASK)
#define ADC_CWENR_CWEN9_MASK                     0x200u
#define ADC_CWENR_CWEN9_SHIFT                    9u
#define ADC_CWENR_CWEN9_WIDTH                    1u
#define ADC_CWENR_CWEN9(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN9_SHIFT))&ADC_CWENR_CWEN9_MASK)
#define ADC_CWENR_CWEN10_MASK                    0x400u
#define ADC_CWENR_CWEN10_SHIFT                   10u
#define ADC_CWENR_CWEN10_WIDTH                   1u
#define ADC_CWENR_CWEN10(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN10_SHIFT))&ADC_CWENR_CWEN10_MASK)
#define ADC_CWENR_CWEN11_MASK                    0x800u
#define ADC_CWENR_CWEN11_SHIFT                   11u
#define ADC_CWENR_CWEN11_WIDTH                   1u
#define ADC_CWENR_CWEN11(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN11_SHIFT))&ADC_CWENR_CWEN11_MASK)
#define ADC_CWENR_CWEN12_MASK                    0x1000u
#define ADC_CWENR_CWEN12_SHIFT                   12u
#define ADC_CWENR_CWEN12_WIDTH                   1u
#define ADC_CWENR_CWEN12(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN12_SHIFT))&ADC_CWENR_CWEN12_MASK)
#define ADC_CWENR_CWEN13_MASK                    0x2000u
#define ADC_CWENR_CWEN13_SHIFT                   13u
#define ADC_CWENR_CWEN13_WIDTH                   1u
#define ADC_CWENR_CWEN13(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN13_SHIFT))&ADC_CWENR_CWEN13_MASK)
#define ADC_CWENR_CWEN14_MASK                    0x4000u
#define ADC_CWENR_CWEN14_SHIFT                   14u
#define ADC_CWENR_CWEN14_WIDTH                   1u
#define ADC_CWENR_CWEN14(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN14_SHIFT))&ADC_CWENR_CWEN14_MASK)
#define ADC_CWENR_CWEN15_MASK                    0x8000u
#define ADC_CWENR_CWEN15_SHIFT                   15u
#define ADC_CWENR_CWEN15_WIDTH                   1u
#define ADC_CWENR_CWEN15(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN15_SHIFT))&ADC_CWENR_CWEN15_MASK)
/* AWORR Bit Fields */
#define ADC_AWORR_AWOR_CH0_MASK                  0x1u
#define ADC_AWORR_AWOR_CH0_SHIFT                 0u
#define ADC_AWORR_AWOR_CH0_WIDTH                 1u
#define ADC_AWORR_AWOR_CH0(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH0_SHIFT))&ADC_AWORR_AWOR_CH0_MASK)
#define ADC_AWORR_AWOR_CH1_MASK                  0x2u
#define ADC_AWORR_AWOR_CH1_SHIFT                 1u
#define ADC_AWORR_AWOR_CH1_WIDTH                 1u
#define ADC_AWORR_AWOR_CH1(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH1_SHIFT))&ADC_AWORR_AWOR_CH1_MASK)
#define ADC_AWORR_AWOR_CH2_MASK                  0x4u
#define ADC_AWORR_AWOR_CH2_SHIFT                 2u
#define ADC_AWORR_AWOR_CH2_WIDTH                 1u
#define ADC_AWORR_AWOR_CH2(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH2_SHIFT))&ADC_AWORR_AWOR_CH2_MASK)
#define ADC_AWORR_AWOR_CH3_MASK                  0x8u
#define ADC_AWORR_AWOR_CH3_SHIFT                 3u
#define ADC_AWORR_AWOR_CH3_WIDTH                 1u
#define ADC_AWORR_AWOR_CH3(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH3_SHIFT))&ADC_AWORR_AWOR_CH3_MASK)
#define ADC_AWORR_AWOR_CH4_MASK                  0x10u
#define ADC_AWORR_AWOR_CH4_SHIFT                 4u
#define ADC_AWORR_AWOR_CH4_WIDTH                 1u
#define ADC_AWORR_AWOR_CH4(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH4_SHIFT))&ADC_AWORR_AWOR_CH4_MASK)
#define ADC_AWORR_AWOR_CH5_MASK                  0x20u
#define ADC_AWORR_AWOR_CH5_SHIFT                 5u
#define ADC_AWORR_AWOR_CH5_WIDTH                 1u
#define ADC_AWORR_AWOR_CH5(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH5_SHIFT))&ADC_AWORR_AWOR_CH5_MASK)
#define ADC_AWORR_AWOR_CH6_MASK                  0x40u
#define ADC_AWORR_AWOR_CH6_SHIFT                 6u
#define ADC_AWORR_AWOR_CH6_WIDTH                 1u
#define ADC_AWORR_AWOR_CH6(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH6_SHIFT))&ADC_AWORR_AWOR_CH6_MASK)
#define ADC_AWORR_AWOR_CH7_MASK                  0x80u
#define ADC_AWORR_AWOR_CH7_SHIFT                 7u
#define ADC_AWORR_AWOR_CH7_WIDTH                 1u
#define ADC_AWORR_AWOR_CH7(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH7_SHIFT))&ADC_AWORR_AWOR_CH7_MASK)
#define ADC_AWORR_AWOR_CH8_MASK                  0x100u
#define ADC_AWORR_AWOR_CH8_SHIFT                 8u
#define ADC_AWORR_AWOR_CH8_WIDTH                 1u
#define ADC_AWORR_AWOR_CH8(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH8_SHIFT))&ADC_AWORR_AWOR_CH8_MASK)
#define ADC_AWORR_AWOR_CH9_MASK                  0x200u
#define ADC_AWORR_AWOR_CH9_SHIFT                 9u
#define ADC_AWORR_AWOR_CH9_WIDTH                 1u
#define ADC_AWORR_AWOR_CH9(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH9_SHIFT))&ADC_AWORR_AWOR_CH9_MASK)
#define ADC_AWORR_AWOR_CH10_MASK                 0x400u
#define ADC_AWORR_AWOR_CH10_SHIFT                10u
#define ADC_AWORR_AWOR_CH10_WIDTH                1u
#define ADC_AWORR_AWOR_CH10(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH10_SHIFT))&ADC_AWORR_AWOR_CH10_MASK)
#define ADC_AWORR_AWOR_CH11_MASK                 0x800u
#define ADC_AWORR_AWOR_CH11_SHIFT                11u
#define ADC_AWORR_AWOR_CH11_WIDTH                1u
#define ADC_AWORR_AWOR_CH11(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH11_SHIFT))&ADC_AWORR_AWOR_CH11_MASK)
#define ADC_AWORR_AWOR_CH12_MASK                 0x1000u
#define ADC_AWORR_AWOR_CH12_SHIFT                12u
#define ADC_AWORR_AWOR_CH12_WIDTH                1u
#define ADC_AWORR_AWOR_CH12(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH12_SHIFT))&ADC_AWORR_AWOR_CH12_MASK)
#define ADC_AWORR_AWOR_CH13_MASK                 0x2000u
#define ADC_AWORR_AWOR_CH13_SHIFT                13u
#define ADC_AWORR_AWOR_CH13_WIDTH                1u
#define ADC_AWORR_AWOR_CH13(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH13_SHIFT))&ADC_AWORR_AWOR_CH13_MASK)
#define ADC_AWORR_AWOR_CH14_MASK                 0x4000u
#define ADC_AWORR_AWOR_CH14_SHIFT                14u
#define ADC_AWORR_AWOR_CH14_WIDTH                1u
#define ADC_AWORR_AWOR_CH14(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH14_SHIFT))&ADC_AWORR_AWOR_CH14_MASK)
#define ADC_AWORR_AWOR_CH15_MASK                 0x8000u
#define ADC_AWORR_AWOR_CH15_SHIFT                15u
#define ADC_AWORR_AWOR_CH15_WIDTH                1u
#define ADC_AWORR_AWOR_CH15(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH15_SHIFT))&ADC_AWORR_AWOR_CH15_MASK)
/* STCR1 Bit Fields */
#define ADC_STCR1_INPSAMP_S_MASK                 0xFF00u
#define ADC_STCR1_INPSAMP_S_SHIFT                8u
#define ADC_STCR1_INPSAMP_S_WIDTH                8u
#define ADC_STCR1_INPSAMP_S(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_STCR1_INPSAMP_S_SHIFT))&ADC_STCR1_INPSAMP_S_MASK)
#define ADC_STCR1_INPSAMP_C_MASK                 0xFF000000u
#define ADC_STCR1_INPSAMP_C_SHIFT                24u
#define ADC_STCR1_INPSAMP_C_WIDTH                8u
#define ADC_STCR1_INPSAMP_C(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_STCR1_INPSAMP_C_SHIFT))&ADC_STCR1_INPSAMP_C_MASK)
/* STCR2 Bit Fields */
#define ADC_STCR2_FMA_S_MASK                     0x1u
#define ADC_STCR2_FMA_S_SHIFT                    0u
#define ADC_STCR2_FMA_S_WIDTH                    1u
#define ADC_STCR2_FMA_S(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_FMA_S_SHIFT))&ADC_STCR2_FMA_S_MASK)
#define ADC_STCR2_FMA_C_MASK                     0x4u
#define ADC_STCR2_FMA_C_SHIFT                    2u
#define ADC_STCR2_FMA_C_WIDTH                    1u
#define ADC_STCR2_FMA_C(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_FMA_C_SHIFT))&ADC_STCR2_FMA_C_MASK)
#define ADC_STCR2_FMA_WDTERR_MASK                0x8u
#define ADC_STCR2_FMA_WDTERR_SHIFT               3u
#define ADC_STCR2_FMA_WDTERR_WIDTH               1u
#define ADC_STCR2_FMA_WDTERR(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_FMA_WDTERR_SHIFT))&ADC_STCR2_FMA_WDTERR_MASK)
#define ADC_STCR2_FMA_WDSERR_MASK                0x10u
#define ADC_STCR2_FMA_WDSERR_SHIFT               4u
#define ADC_STCR2_FMA_WDSERR_WIDTH               1u
#define ADC_STCR2_FMA_WDSERR(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_FMA_WDSERR_SHIFT))&ADC_STCR2_FMA_WDSERR_MASK)
#define ADC_STCR2_EN_MASK                        0x80u
#define ADC_STCR2_EN_SHIFT                       7u
#define ADC_STCR2_EN_WIDTH                       1u
#define ADC_STCR2_EN(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_EN_SHIFT))&ADC_STCR2_EN_MASK)
#define ADC_STCR2_MSKERR_S0_MASK                 0x800u
#define ADC_STCR2_MSKERR_S0_SHIFT                11u
#define ADC_STCR2_MSKERR_S0_WIDTH                1u
#define ADC_STCR2_MSKERR_S0(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_MSKERR_S0_SHIFT))&ADC_STCR2_MSKERR_S0_MASK)
#define ADC_STCR2_MSKERR_S1_MASK                 0x1000u
#define ADC_STCR2_MSKERR_S1_SHIFT                12u
#define ADC_STCR2_MSKERR_S1_WIDTH                1u
#define ADC_STCR2_MSKERR_S1(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_MSKERR_S1_SHIFT))&ADC_STCR2_MSKERR_S1_MASK)
#define ADC_STCR2_MSKERR_S2_MASK                 0x2000u
#define ADC_STCR2_MSKERR_S2_SHIFT                13u
#define ADC_STCR2_MSKERR_S2_WIDTH                1u
#define ADC_STCR2_MSKERR_S2(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_MSKERR_S2_SHIFT))&ADC_STCR2_MSKERR_S2_MASK)
#define ADC_STCR2_MSKERR_C_MASK                  0x8000u
#define ADC_STCR2_MSKERR_C_SHIFT                 15u
#define ADC_STCR2_MSKERR_C_WIDTH                 1u
#define ADC_STCR2_MSKERR_C(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_MSKERR_C_SHIFT))&ADC_STCR2_MSKERR_C_MASK)
#define ADC_STCR2_MSKWDG_EOA_S_MASK              0x10000u
#define ADC_STCR2_MSKWDG_EOA_S_SHIFT             16u
#define ADC_STCR2_MSKWDG_EOA_S_WIDTH             1u
#define ADC_STCR2_MSKWDG_EOA_S(x)                (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_MSKWDG_EOA_S_SHIFT))&ADC_STCR2_MSKWDG_EOA_S_MASK)
#define ADC_STCR2_MSKWDG_EOA_C_MASK              0x40000u
#define ADC_STCR2_MSKWDG_EOA_C_SHIFT             18u
#define ADC_STCR2_MSKWDG_EOA_C_WIDTH             1u
#define ADC_STCR2_MSKWDG_EOA_C(x)                (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_MSKWDG_EOA_C_SHIFT))&ADC_STCR2_MSKWDG_EOA_C_MASK)
#define ADC_STCR2_MSKST_EOC_MASK                 0x800000u
#define ADC_STCR2_MSKST_EOC_SHIFT                23u
#define ADC_STCR2_MSKST_EOC_WIDTH                1u
#define ADC_STCR2_MSKST_EOC(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_MSKST_EOC_SHIFT))&ADC_STCR2_MSKST_EOC_MASK)
#define ADC_STCR2_MSKWDTERR_MASK                 0x2000000u
#define ADC_STCR2_MSKWDTERR_SHIFT                25u
#define ADC_STCR2_MSKWDTERR_WIDTH                1u
#define ADC_STCR2_MSKWDTERR(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_MSKWDTERR_SHIFT))&ADC_STCR2_MSKWDTERR_MASK)
#define ADC_STCR2_SERR_MASK                      0x4000000u
#define ADC_STCR2_SERR_SHIFT                     26u
#define ADC_STCR2_SERR_WIDTH                     1u
#define ADC_STCR2_SERR(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_SERR_SHIFT))&ADC_STCR2_SERR_MASK)
#define ADC_STCR2_MSKWDSERR_MASK                 0x8000000u
#define ADC_STCR2_MSKWDSERR_SHIFT                27u
#define ADC_STCR2_MSKWDSERR_WIDTH                1u
#define ADC_STCR2_MSKWDSERR(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_STCR2_MSKWDSERR_SHIFT))&ADC_STCR2_MSKWDSERR_MASK)
/* STCR3 Bit Fields */
#define ADC_STCR3_MSTEP_MASK                     0x1Fu
#define ADC_STCR3_MSTEP_SHIFT                    0u
#define ADC_STCR3_MSTEP_WIDTH                    5u
#define ADC_STCR3_MSTEP(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STCR3_MSTEP_SHIFT))&ADC_STCR3_MSTEP_MASK)
#define ADC_STCR3_ALG_MASK                       0x300u
#define ADC_STCR3_ALG_SHIFT                      8u
#define ADC_STCR3_ALG_WIDTH                      2u
#define ADC_STCR3_ALG(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_STCR3_ALG_SHIFT))&ADC_STCR3_ALG_MASK)
/* STBRR Bit Fields */
#define ADC_STBRR_BR_MASK                        0xFFu
#define ADC_STBRR_BR_SHIFT                       0u
#define ADC_STBRR_BR_WIDTH                       8u
#define ADC_STBRR_BR(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_STBRR_BR_SHIFT))&ADC_STBRR_BR_MASK)
#define ADC_STBRR_WDT_MASK                       0x70000u
#define ADC_STBRR_WDT_SHIFT                      16u
#define ADC_STBRR_WDT_WIDTH                      3u
#define ADC_STBRR_WDT(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_STBRR_WDT_SHIFT))&ADC_STBRR_WDT_MASK)
/* STSR1 Bit Fields */
#define ADC_STSR1_STEP_C_MASK                    0x3E0u
#define ADC_STSR1_STEP_C_SHIFT                   5u
#define ADC_STSR1_STEP_C_WIDTH                   5u
#define ADC_STSR1_STEP_C(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STSR1_STEP_C_SHIFT))&ADC_STSR1_STEP_C_MASK)
#define ADC_STSR1_ERR_S0_MASK                    0x800u
#define ADC_STSR1_ERR_S0_SHIFT                   11u
#define ADC_STSR1_ERR_S0_WIDTH                   1u
#define ADC_STSR1_ERR_S0(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STSR1_ERR_S0_SHIFT))&ADC_STSR1_ERR_S0_MASK)
#define ADC_STSR1_ERR_S1_MASK                    0x1000u
#define ADC_STSR1_ERR_S1_SHIFT                   12u
#define ADC_STSR1_ERR_S1_WIDTH                   1u
#define ADC_STSR1_ERR_S1(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STSR1_ERR_S1_SHIFT))&ADC_STSR1_ERR_S1_MASK)
#define ADC_STSR1_ERR_S2_MASK                    0x2000u
#define ADC_STSR1_ERR_S2_SHIFT                   13u
#define ADC_STSR1_ERR_S2_WIDTH                   1u
#define ADC_STSR1_ERR_S2(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STSR1_ERR_S2_SHIFT))&ADC_STSR1_ERR_S2_MASK)
#define ADC_STSR1_ERR_C_MASK                     0x8000u
#define ADC_STSR1_ERR_C_SHIFT                    15u
#define ADC_STSR1_ERR_C_WIDTH                    1u
#define ADC_STSR1_ERR_C(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STSR1_ERR_C_SHIFT))&ADC_STSR1_ERR_C_MASK)
#define ADC_STSR1_WDG_EOA_S_MASK                 0x10000u
#define ADC_STSR1_WDG_EOA_S_SHIFT                16u
#define ADC_STSR1_WDG_EOA_S_WIDTH                1u
#define ADC_STSR1_WDG_EOA_S(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_STSR1_WDG_EOA_S_SHIFT))&ADC_STSR1_WDG_EOA_S_MASK)
#define ADC_STSR1_WDG_EOA_C_MASK                 0x40000u
#define ADC_STSR1_WDG_EOA_C_SHIFT                18u
#define ADC_STSR1_WDG_EOA_C_WIDTH                1u
#define ADC_STSR1_WDG_EOA_C(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_STSR1_WDG_EOA_C_SHIFT))&ADC_STSR1_WDG_EOA_C_MASK)
#define ADC_STSR1_ST_EOC_MASK                    0x800000u
#define ADC_STSR1_ST_EOC_SHIFT                   23u
#define ADC_STSR1_ST_EOC_WIDTH                   1u
#define ADC_STSR1_ST_EOC(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STSR1_ST_EOC_SHIFT))&ADC_STSR1_ST_EOC_MASK)
#define ADC_STSR1_OVERWR_MASK                    0x1000000u
#define ADC_STSR1_OVERWR_SHIFT                   24u
#define ADC_STSR1_OVERWR_WIDTH                   1u
#define ADC_STSR1_OVERWR(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STSR1_OVERWR_SHIFT))&ADC_STSR1_OVERWR_MASK)
#define ADC_STSR1_WDTERR_MASK                    0x2000000u
#define ADC_STSR1_WDTERR_SHIFT                   25u
#define ADC_STSR1_WDTERR_WIDTH                   1u
#define ADC_STSR1_WDTERR(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STSR1_WDTERR_SHIFT))&ADC_STSR1_WDTERR_MASK)
#define ADC_STSR1_WDSERR_MASK                    0x8000000u
#define ADC_STSR1_WDSERR_SHIFT                   27u
#define ADC_STSR1_WDSERR_WIDTH                   1u
#define ADC_STSR1_WDSERR(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STSR1_WDSERR_SHIFT))&ADC_STSR1_WDSERR_MASK)
/* STSR2 Bit Fields */
#define ADC_STSR2_DATA0_MASK                     0xFFFu
#define ADC_STSR2_DATA0_SHIFT                    0u
#define ADC_STSR2_DATA0_WIDTH                    12u
#define ADC_STSR2_DATA0(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STSR2_DATA0_SHIFT))&ADC_STSR2_DATA0_MASK)
#define ADC_STSR2_DATA1_MASK                     0xFFF0000u
#define ADC_STSR2_DATA1_SHIFT                    16u
#define ADC_STSR2_DATA1_WIDTH                    12u
#define ADC_STSR2_DATA1(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STSR2_DATA1_SHIFT))&ADC_STSR2_DATA1_MASK)
#define ADC_STSR2_OVFL_MASK                      0x80000000u
#define ADC_STSR2_OVFL_SHIFT                     31u
#define ADC_STSR2_OVFL_WIDTH                     1u
#define ADC_STSR2_OVFL(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_STSR2_OVFL_SHIFT))&ADC_STSR2_OVFL_MASK)
/* STSR3 Bit Fields */
#define ADC_STSR3_DATA0_MASK                     0xFFFu
#define ADC_STSR3_DATA0_SHIFT                    0u
#define ADC_STSR3_DATA0_WIDTH                    12u
#define ADC_STSR3_DATA0(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STSR3_DATA0_SHIFT))&ADC_STSR3_DATA0_MASK)
#define ADC_STSR3_DATA1_MASK                     0xFFF0000u
#define ADC_STSR3_DATA1_SHIFT                    16u
#define ADC_STSR3_DATA1_WIDTH                    12u
#define ADC_STSR3_DATA1(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STSR3_DATA1_SHIFT))&ADC_STSR3_DATA1_MASK)
/* STSR4 Bit Fields */
#define ADC_STSR4_DATA1_MASK                     0xFFF0000u
#define ADC_STSR4_DATA1_SHIFT                    16u
#define ADC_STSR4_DATA1_WIDTH                    12u
#define ADC_STSR4_DATA1(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STSR4_DATA1_SHIFT))&ADC_STSR4_DATA1_MASK)
/* STDR1 Bit Fields */
#define ADC_STDR1_TCDATA_MASK                    0xFFFu
#define ADC_STDR1_TCDATA_SHIFT                   0u
#define ADC_STDR1_TCDATA_WIDTH                   12u
#define ADC_STDR1_TCDATA(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STDR1_TCDATA_SHIFT))&ADC_STDR1_TCDATA_MASK)
#define ADC_STDR1_OWERWR_MASK                    0x40000u
#define ADC_STDR1_OWERWR_SHIFT                   18u
#define ADC_STDR1_OWERWR_WIDTH                   1u
#define ADC_STDR1_OWERWR(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STDR1_OWERWR_SHIFT))&ADC_STDR1_OWERWR_MASK)
#define ADC_STDR1_VALID_MASK                     0x80000u
#define ADC_STDR1_VALID_SHIFT                    19u
#define ADC_STDR1_VALID_WIDTH                    1u
#define ADC_STDR1_VALID(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STDR1_VALID_SHIFT))&ADC_STDR1_VALID_MASK)
/* STDR2 Bit Fields */
#define ADC_STDR2_IDATA_MASK                     0xFFFu
#define ADC_STDR2_IDATA_SHIFT                    0u
#define ADC_STDR2_IDATA_WIDTH                    12u
#define ADC_STDR2_IDATA(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STDR2_IDATA_SHIFT))&ADC_STDR2_IDATA_MASK)
#define ADC_STDR2_OWERWR_MASK                    0x40000u
#define ADC_STDR2_OWERWR_SHIFT                   18u
#define ADC_STDR2_OWERWR_WIDTH                   1u
#define ADC_STDR2_OWERWR(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STDR2_OWERWR_SHIFT))&ADC_STDR2_OWERWR_MASK)
#define ADC_STDR2_VALID_MASK                     0x80000u
#define ADC_STDR2_VALID_SHIFT                    19u
#define ADC_STDR2_VALID_WIDTH                    1u
#define ADC_STDR2_VALID(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STDR2_VALID_SHIFT))&ADC_STDR2_VALID_MASK)
#define ADC_STDR2_FDATA_MASK                     0xFFF00000u
#define ADC_STDR2_FDATA_SHIFT                    20u
#define ADC_STDR2_FDATA_WIDTH                    12u
#define ADC_STDR2_FDATA(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STDR2_FDATA_SHIFT))&ADC_STDR2_FDATA_MASK)
/* STAW0R Bit Fields */
#define ADC_STAW0R_THRL_MASK                     0xFFFu
#define ADC_STAW0R_THRL_SHIFT                    0u
#define ADC_STAW0R_THRL_WIDTH                    12u
#define ADC_STAW0R_THRL(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STAW0R_THRL_SHIFT))&ADC_STAW0R_THRL_MASK)
#define ADC_STAW0R_THRH_MASK                     0xFFF0000u
#define ADC_STAW0R_THRH_SHIFT                    16u
#define ADC_STAW0R_THRH_WIDTH                    12u
#define ADC_STAW0R_THRH(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STAW0R_THRH_SHIFT))&ADC_STAW0R_THRH_MASK)
#define ADC_STAW0R_WDTE_MASK                     0x40000000u
#define ADC_STAW0R_WDTE_SHIFT                    30u
#define ADC_STAW0R_WDTE_WIDTH                    1u
#define ADC_STAW0R_WDTE(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STAW0R_WDTE_SHIFT))&ADC_STAW0R_WDTE_MASK)
#define ADC_STAW0R_AWDE_MASK                     0x80000000u
#define ADC_STAW0R_AWDE_SHIFT                    31u
#define ADC_STAW0R_AWDE_WIDTH                    1u
#define ADC_STAW0R_AWDE(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STAW0R_AWDE_SHIFT))&ADC_STAW0R_AWDE_MASK)
/* STAW1AR Bit Fields */
#define ADC_STAW1AR_THRL_MASK                    0xFFFu
#define ADC_STAW1AR_THRL_SHIFT                   0u
#define ADC_STAW1AR_THRL_WIDTH                   12u
#define ADC_STAW1AR_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STAW1AR_THRL_SHIFT))&ADC_STAW1AR_THRL_MASK)
#define ADC_STAW1AR_THRH_MASK                    0xFFF0000u
#define ADC_STAW1AR_THRH_SHIFT                   16u
#define ADC_STAW1AR_THRH_WIDTH                   12u
#define ADC_STAW1AR_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STAW1AR_THRH_SHIFT))&ADC_STAW1AR_THRH_MASK)
#define ADC_STAW1AR_AWDE_MASK                    0x80000000u
#define ADC_STAW1AR_AWDE_SHIFT                   31u
#define ADC_STAW1AR_AWDE_WIDTH                   1u
#define ADC_STAW1AR_AWDE(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STAW1AR_AWDE_SHIFT))&ADC_STAW1AR_AWDE_MASK)
/* STAW1BR Bit Fields */
#define ADC_STAW1BR_THRL_MASK                    0xFFFu
#define ADC_STAW1BR_THRL_SHIFT                   0u
#define ADC_STAW1BR_THRL_WIDTH                   12u
#define ADC_STAW1BR_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STAW1BR_THRL_SHIFT))&ADC_STAW1BR_THRL_MASK)
#define ADC_STAW1BR_THRH_MASK                    0xFFF0000u
#define ADC_STAW1BR_THRH_SHIFT                   16u
#define ADC_STAW1BR_THRH_WIDTH                   12u
#define ADC_STAW1BR_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_STAW1BR_THRH_SHIFT))&ADC_STAW1BR_THRH_MASK)
/* STAW2R Bit Fields */
#define ADC_STAW2R_THRL_MASK                     0xFFFu
#define ADC_STAW2R_THRL_SHIFT                    0u
#define ADC_STAW2R_THRL_WIDTH                    12u
#define ADC_STAW2R_THRL(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STAW2R_THRL_SHIFT))&ADC_STAW2R_THRL_MASK)
#define ADC_STAW2R_AWDE_MASK                     0x80000000u
#define ADC_STAW2R_AWDE_SHIFT                    31u
#define ADC_STAW2R_AWDE_WIDTH                    1u
#define ADC_STAW2R_AWDE(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STAW2R_AWDE_SHIFT))&ADC_STAW2R_AWDE_MASK)
/* STAW4R Bit Fields */
#define ADC_STAW4R_THRL_MASK                     0xFFFu
#define ADC_STAW4R_THRL_SHIFT                    0u
#define ADC_STAW4R_THRL_WIDTH                    12u
#define ADC_STAW4R_THRL(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STAW4R_THRL_SHIFT))&ADC_STAW4R_THRL_MASK)
#define ADC_STAW4R_THRH_MASK                     0xFFF0000u
#define ADC_STAW4R_THRH_SHIFT                    16u
#define ADC_STAW4R_THRH_WIDTH                    12u
#define ADC_STAW4R_THRH(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STAW4R_THRH_SHIFT))&ADC_STAW4R_THRH_MASK)
#define ADC_STAW4R_WDTE_MASK                     0x40000000u
#define ADC_STAW4R_WDTE_SHIFT                    30u
#define ADC_STAW4R_WDTE_WIDTH                    1u
#define ADC_STAW4R_WDTE(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STAW4R_WDTE_SHIFT))&ADC_STAW4R_WDTE_MASK)
#define ADC_STAW4R_AWDE_MASK                     0x80000000u
#define ADC_STAW4R_AWDE_SHIFT                    31u
#define ADC_STAW4R_AWDE_WIDTH                    1u
#define ADC_STAW4R_AWDE(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STAW4R_AWDE_SHIFT))&ADC_STAW4R_AWDE_MASK)
/* STAW5R Bit Fields */
#define ADC_STAW5R_THRL_MASK                     0xFFFu
#define ADC_STAW5R_THRL_SHIFT                    0u
#define ADC_STAW5R_THRL_WIDTH                    12u
#define ADC_STAW5R_THRL(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STAW5R_THRL_SHIFT))&ADC_STAW5R_THRL_MASK)
#define ADC_STAW5R_THRH_MASK                     0xFFF0000u
#define ADC_STAW5R_THRH_SHIFT                    16u
#define ADC_STAW5R_THRH_WIDTH                    12u
#define ADC_STAW5R_THRH(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_STAW5R_THRH_SHIFT))&ADC_STAW5R_THRH_MASK)
/* CALBISTREG Bit Fields */
#define ADC_CALBISTREG_TEST_EN_MASK              0x1u
#define ADC_CALBISTREG_TEST_EN_SHIFT             0u
#define ADC_CALBISTREG_TEST_EN_WIDTH             1u
#define ADC_CALBISTREG_TEST_EN(x)                (((uint32_t)(((uint32_t)(x))<<ADC_CALBISTREG_TEST_EN_SHIFT))&ADC_CALBISTREG_TEST_EN_MASK)
#define ADC_CALBISTREG_TEST_FAIL_MASK            0x8u
#define ADC_CALBISTREG_TEST_FAIL_SHIFT           3u
#define ADC_CALBISTREG_TEST_FAIL_WIDTH           1u
#define ADC_CALBISTREG_TEST_FAIL(x)              (((uint32_t)(((uint32_t)(x))<<ADC_CALBISTREG_TEST_FAIL_SHIFT))&ADC_CALBISTREG_TEST_FAIL_MASK)
#define ADC_CALBISTREG_AVG_EN_MASK               0x10u
#define ADC_CALBISTREG_AVG_EN_SHIFT              4u
#define ADC_CALBISTREG_AVG_EN_WIDTH              1u
#define ADC_CALBISTREG_AVG_EN(x)                 (((uint32_t)(((uint32_t)(x))<<ADC_CALBISTREG_AVG_EN_SHIFT))&ADC_CALBISTREG_AVG_EN_MASK)
#define ADC_CALBISTREG_NR_SMPL_MASK              0x60u
#define ADC_CALBISTREG_NR_SMPL_SHIFT             5u
#define ADC_CALBISTREG_NR_SMPL_WIDTH             2u
#define ADC_CALBISTREG_NR_SMPL(x)                (((uint32_t)(((uint32_t)(x))<<ADC_CALBISTREG_NR_SMPL_SHIFT))&ADC_CALBISTREG_NR_SMPL_MASK)
#define ADC_CALBISTREG_C_T_BUSY_MASK             0x8000u
#define ADC_CALBISTREG_C_T_BUSY_SHIFT            15u
#define ADC_CALBISTREG_C_T_BUSY_WIDTH            1u
#define ADC_CALBISTREG_C_T_BUSY(x)               (((uint32_t)(((uint32_t)(x))<<ADC_CALBISTREG_C_T_BUSY_SHIFT))&ADC_CALBISTREG_C_T_BUSY_MASK)
#define ADC_CALBISTREG_TSAMP_MASK                0x18000000u
#define ADC_CALBISTREG_TSAMP_SHIFT               27u
#define ADC_CALBISTREG_TSAMP_WIDTH               2u
#define ADC_CALBISTREG_TSAMP(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CALBISTREG_TSAMP_SHIFT))&ADC_CALBISTREG_TSAMP_MASK)
#define ADC_CALBISTREG_OPMODE_MASK               0xE0000000u
#define ADC_CALBISTREG_OPMODE_SHIFT              29u
#define ADC_CALBISTREG_OPMODE_WIDTH              3u
#define ADC_CALBISTREG_OPMODE(x)                 (((uint32_t)(((uint32_t)(x))<<ADC_CALBISTREG_OPMODE_SHIFT))&ADC_CALBISTREG_OPMODE_MASK)
/* OFSGNUSR Bit Fields */
#define ADC_OFSGNUSR_OFFSET_USER_MASK            0xFFu
#define ADC_OFSGNUSR_OFFSET_USER_SHIFT           0u
#define ADC_OFSGNUSR_OFFSET_USER_WIDTH           8u
#define ADC_OFSGNUSR_OFFSET_USER(x)              (((uint32_t)(((uint32_t)(x))<<ADC_OFSGNUSR_OFFSET_USER_SHIFT))&ADC_OFSGNUSR_OFFSET_USER_MASK)
#define ADC_OFSGNUSR_GAIN_USER_MASK              0x3FF0000u
#define ADC_OFSGNUSR_GAIN_USER_SHIFT             16u
#define ADC_OFSGNUSR_GAIN_USER_WIDTH             10u
#define ADC_OFSGNUSR_GAIN_USER(x)                (((uint32_t)(((uint32_t)(x))<<ADC_OFSGNUSR_GAIN_USER_SHIFT))&ADC_OFSGNUSR_GAIN_USER_MASK)

/*!
 * @}
 */ /* end of group ADC_Register_Masks */


/*!
 * @}
 */ /* end of group ADC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- AIPS Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup AIPS_Peripheral_Access_Layer AIPS Peripheral Access Layer
 * @{
 */


/** AIPS - Size of Registers Arrays */
#define AIPS_PACR_COUNT                          8u
#define AIPS_OPACR_COUNT                         32u

/** AIPS - Register Layout Typedef */
typedef struct {
  __IO uint32_t MPRA;                              /**< Master Privilege Register A, offset: 0x0 */
       uint8_t RESERVED_0[252];
  __IO uint32_t PACR[AIPS_PACR_COUNT];             /**< Peripheral Access Control Register, array offset: 0x100, array step: 0x4 */
       uint8_t RESERVED_1[32];
  __IO uint32_t OPACR[AIPS_OPACR_COUNT];           /**< Off-Platform Peripheral Access Control Register, array offset: 0x140, array step: 0x4 */
} AIPS_Type, *AIPS_MemMapPtr;

 /** Number of instances of the AIPS module. */
#define AIPS_INSTANCE_COUNT                      (2u)


/* AIPS - Peripheral instance base addresses */
/** Peripheral AIPS_A base address */
#define AIPS_A_BASE                              (0xFC000000u)
/** Peripheral AIPS_A base pointer */
#define AIPS_A                                   ((AIPS_Type *)AIPS_A_BASE)
/** Peripheral AIPS_B base address */
#define AIPS_B_BASE                              (0xF8000000u)
/** Peripheral AIPS_B base pointer */
#define AIPS_B                                   ((AIPS_Type *)AIPS_B_BASE)
/** Array initializer of AIPS peripheral base addresses */
#define AIPS_BASE_ADDRS                          { AIPS_A_BASE, AIPS_B_BASE }
/** Array initializer of AIPS peripheral base pointers */
#define AIPS_BASE_PTRS                           { AIPS_A, AIPS_B }

/* ----------------------------------------------------------------------------
   -- AIPS Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup AIPS_Register_Masks AIPS Register Masks
 * @{
 */

/* MPRA Bit Fields */
#define AIPS_MPRA_MPL5_MASK                      0x100u
#define AIPS_MPRA_MPL5_SHIFT                     8u
#define AIPS_MPRA_MPL5_WIDTH                     1u
#define AIPS_MPRA_MPL5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL5_SHIFT))&AIPS_MPRA_MPL5_MASK)
#define AIPS_MPRA_MTW5_MASK                      0x200u
#define AIPS_MPRA_MTW5_SHIFT                     9u
#define AIPS_MPRA_MTW5_WIDTH                     1u
#define AIPS_MPRA_MTW5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW5_SHIFT))&AIPS_MPRA_MTW5_MASK)
#define AIPS_MPRA_MTR5_MASK                      0x400u
#define AIPS_MPRA_MTR5_SHIFT                     10u
#define AIPS_MPRA_MTR5_WIDTH                     1u
#define AIPS_MPRA_MTR5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR5_SHIFT))&AIPS_MPRA_MTR5_MASK)
#define AIPS_MPRA_MPL4_MASK                      0x1000u
#define AIPS_MPRA_MPL4_SHIFT                     12u
#define AIPS_MPRA_MPL4_WIDTH                     1u
#define AIPS_MPRA_MPL4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL4_SHIFT))&AIPS_MPRA_MPL4_MASK)
#define AIPS_MPRA_MTW4_MASK                      0x2000u
#define AIPS_MPRA_MTW4_SHIFT                     13u
#define AIPS_MPRA_MTW4_WIDTH                     1u
#define AIPS_MPRA_MTW4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW4_SHIFT))&AIPS_MPRA_MTW4_MASK)
#define AIPS_MPRA_MTR4_MASK                      0x4000u
#define AIPS_MPRA_MTR4_SHIFT                     14u
#define AIPS_MPRA_MTR4_WIDTH                     1u
#define AIPS_MPRA_MTR4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR4_SHIFT))&AIPS_MPRA_MTR4_MASK)
#define AIPS_MPRA_MPL3_MASK                      0x10000u
#define AIPS_MPRA_MPL3_SHIFT                     16u
#define AIPS_MPRA_MPL3_WIDTH                     1u
#define AIPS_MPRA_MPL3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL3_SHIFT))&AIPS_MPRA_MPL3_MASK)
#define AIPS_MPRA_MTW3_MASK                      0x20000u
#define AIPS_MPRA_MTW3_SHIFT                     17u
#define AIPS_MPRA_MTW3_WIDTH                     1u
#define AIPS_MPRA_MTW3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW3_SHIFT))&AIPS_MPRA_MTW3_MASK)
#define AIPS_MPRA_MTR3_MASK                      0x40000u
#define AIPS_MPRA_MTR3_SHIFT                     18u
#define AIPS_MPRA_MTR3_WIDTH                     1u
#define AIPS_MPRA_MTR3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR3_SHIFT))&AIPS_MPRA_MTR3_MASK)
#define AIPS_MPRA_MPL2_MASK                      0x100000u
#define AIPS_MPRA_MPL2_SHIFT                     20u
#define AIPS_MPRA_MPL2_WIDTH                     1u
#define AIPS_MPRA_MPL2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL2_SHIFT))&AIPS_MPRA_MPL2_MASK)
#define AIPS_MPRA_MTW2_MASK                      0x200000u
#define AIPS_MPRA_MTW2_SHIFT                     21u
#define AIPS_MPRA_MTW2_WIDTH                     1u
#define AIPS_MPRA_MTW2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW2_SHIFT))&AIPS_MPRA_MTW2_MASK)
#define AIPS_MPRA_MTR2_MASK                      0x400000u
#define AIPS_MPRA_MTR2_SHIFT                     22u
#define AIPS_MPRA_MTR2_WIDTH                     1u
#define AIPS_MPRA_MTR2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR2_SHIFT))&AIPS_MPRA_MTR2_MASK)
#define AIPS_MPRA_MPL0_MASK                      0x10000000u
#define AIPS_MPRA_MPL0_SHIFT                     28u
#define AIPS_MPRA_MPL0_WIDTH                     1u
#define AIPS_MPRA_MPL0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL0_SHIFT))&AIPS_MPRA_MPL0_MASK)
#define AIPS_MPRA_MTW0_MASK                      0x20000000u
#define AIPS_MPRA_MTW0_SHIFT                     29u
#define AIPS_MPRA_MTW0_WIDTH                     1u
#define AIPS_MPRA_MTW0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW0_SHIFT))&AIPS_MPRA_MTW0_MASK)
#define AIPS_MPRA_MTR0_MASK                      0x40000000u
#define AIPS_MPRA_MTR0_SHIFT                     30u
#define AIPS_MPRA_MTR0_WIDTH                     1u
#define AIPS_MPRA_MTR0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR0_SHIFT))&AIPS_MPRA_MTR0_MASK)
/* PACR Bit Fields */
#define AIPS_PACR_TP7_MASK                       0x1u
#define AIPS_PACR_TP7_SHIFT                      0u
#define AIPS_PACR_TP7_WIDTH                      1u
#define AIPS_PACR_TP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP7_SHIFT))&AIPS_PACR_TP7_MASK)
#define AIPS_PACR_WP7_MASK                       0x2u
#define AIPS_PACR_WP7_SHIFT                      1u
#define AIPS_PACR_WP7_WIDTH                      1u
#define AIPS_PACR_WP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP7_SHIFT))&AIPS_PACR_WP7_MASK)
#define AIPS_PACR_SP7_MASK                       0x4u
#define AIPS_PACR_SP7_SHIFT                      2u
#define AIPS_PACR_SP7_WIDTH                      1u
#define AIPS_PACR_SP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP7_SHIFT))&AIPS_PACR_SP7_MASK)
#define AIPS_PACR_TP6_MASK                       0x10u
#define AIPS_PACR_TP6_SHIFT                      4u
#define AIPS_PACR_TP6_WIDTH                      1u
#define AIPS_PACR_TP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP6_SHIFT))&AIPS_PACR_TP6_MASK)
#define AIPS_PACR_WP6_MASK                       0x20u
#define AIPS_PACR_WP6_SHIFT                      5u
#define AIPS_PACR_WP6_WIDTH                      1u
#define AIPS_PACR_WP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP6_SHIFT))&AIPS_PACR_WP6_MASK)
#define AIPS_PACR_SP6_MASK                       0x40u
#define AIPS_PACR_SP6_SHIFT                      6u
#define AIPS_PACR_SP6_WIDTH                      1u
#define AIPS_PACR_SP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP6_SHIFT))&AIPS_PACR_SP6_MASK)
#define AIPS_PACR_TP5_MASK                       0x100u
#define AIPS_PACR_TP5_SHIFT                      8u
#define AIPS_PACR_TP5_WIDTH                      1u
#define AIPS_PACR_TP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP5_SHIFT))&AIPS_PACR_TP5_MASK)
#define AIPS_PACR_WP5_MASK                       0x200u
#define AIPS_PACR_WP5_SHIFT                      9u
#define AIPS_PACR_WP5_WIDTH                      1u
#define AIPS_PACR_WP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP5_SHIFT))&AIPS_PACR_WP5_MASK)
#define AIPS_PACR_SP5_MASK                       0x400u
#define AIPS_PACR_SP5_SHIFT                      10u
#define AIPS_PACR_SP5_WIDTH                      1u
#define AIPS_PACR_SP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP5_SHIFT))&AIPS_PACR_SP5_MASK)
#define AIPS_PACR_TP4_MASK                       0x1000u
#define AIPS_PACR_TP4_SHIFT                      12u
#define AIPS_PACR_TP4_WIDTH                      1u
#define AIPS_PACR_TP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP4_SHIFT))&AIPS_PACR_TP4_MASK)
#define AIPS_PACR_WP4_MASK                       0x2000u
#define AIPS_PACR_WP4_SHIFT                      13u
#define AIPS_PACR_WP4_WIDTH                      1u
#define AIPS_PACR_WP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP4_SHIFT))&AIPS_PACR_WP4_MASK)
#define AIPS_PACR_SP4_MASK                       0x4000u
#define AIPS_PACR_SP4_SHIFT                      14u
#define AIPS_PACR_SP4_WIDTH                      1u
#define AIPS_PACR_SP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP4_SHIFT))&AIPS_PACR_SP4_MASK)
#define AIPS_PACR_TP3_MASK                       0x10000u
#define AIPS_PACR_TP3_SHIFT                      16u
#define AIPS_PACR_TP3_WIDTH                      1u
#define AIPS_PACR_TP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP3_SHIFT))&AIPS_PACR_TP3_MASK)
#define AIPS_PACR_WP3_MASK                       0x20000u
#define AIPS_PACR_WP3_SHIFT                      17u
#define AIPS_PACR_WP3_WIDTH                      1u
#define AIPS_PACR_WP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP3_SHIFT))&AIPS_PACR_WP3_MASK)
#define AIPS_PACR_SP3_MASK                       0x40000u
#define AIPS_PACR_SP3_SHIFT                      18u
#define AIPS_PACR_SP3_WIDTH                      1u
#define AIPS_PACR_SP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP3_SHIFT))&AIPS_PACR_SP3_MASK)
#define AIPS_PACR_TP2_MASK                       0x100000u
#define AIPS_PACR_TP2_SHIFT                      20u
#define AIPS_PACR_TP2_WIDTH                      1u
#define AIPS_PACR_TP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP2_SHIFT))&AIPS_PACR_TP2_MASK)
#define AIPS_PACR_WP2_MASK                       0x200000u
#define AIPS_PACR_WP2_SHIFT                      21u
#define AIPS_PACR_WP2_WIDTH                      1u
#define AIPS_PACR_WP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP2_SHIFT))&AIPS_PACR_WP2_MASK)
#define AIPS_PACR_SP2_MASK                       0x400000u
#define AIPS_PACR_SP2_SHIFT                      22u
#define AIPS_PACR_SP2_WIDTH                      1u
#define AIPS_PACR_SP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP2_SHIFT))&AIPS_PACR_SP2_MASK)
#define AIPS_PACR_TP1_MASK                       0x1000000u
#define AIPS_PACR_TP1_SHIFT                      24u
#define AIPS_PACR_TP1_WIDTH                      1u
#define AIPS_PACR_TP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP1_SHIFT))&AIPS_PACR_TP1_MASK)
#define AIPS_PACR_WP1_MASK                       0x2000000u
#define AIPS_PACR_WP1_SHIFT                      25u
#define AIPS_PACR_WP1_WIDTH                      1u
#define AIPS_PACR_WP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP1_SHIFT))&AIPS_PACR_WP1_MASK)
#define AIPS_PACR_SP1_MASK                       0x4000000u
#define AIPS_PACR_SP1_SHIFT                      26u
#define AIPS_PACR_SP1_WIDTH                      1u
#define AIPS_PACR_SP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP1_SHIFT))&AIPS_PACR_SP1_MASK)
#define AIPS_PACR_TP0_MASK                       0x10000000u
#define AIPS_PACR_TP0_SHIFT                      28u
#define AIPS_PACR_TP0_WIDTH                      1u
#define AIPS_PACR_TP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP0_SHIFT))&AIPS_PACR_TP0_MASK)
#define AIPS_PACR_WP0_MASK                       0x20000000u
#define AIPS_PACR_WP0_SHIFT                      29u
#define AIPS_PACR_WP0_WIDTH                      1u
#define AIPS_PACR_WP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP0_SHIFT))&AIPS_PACR_WP0_MASK)
#define AIPS_PACR_SP0_MASK                       0x40000000u
#define AIPS_PACR_SP0_SHIFT                      30u
#define AIPS_PACR_SP0_WIDTH                      1u
#define AIPS_PACR_SP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP0_SHIFT))&AIPS_PACR_SP0_MASK)
/* OPACR Bit Fields */
#define AIPS_OPACR_TP7_MASK                      0x1u
#define AIPS_OPACR_TP7_SHIFT                     0u
#define AIPS_OPACR_TP7_WIDTH                     1u
#define AIPS_OPACR_TP7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP7_SHIFT))&AIPS_OPACR_TP7_MASK)
#define AIPS_OPACR_WP7_MASK                      0x2u
#define AIPS_OPACR_WP7_SHIFT                     1u
#define AIPS_OPACR_WP7_WIDTH                     1u
#define AIPS_OPACR_WP7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP7_SHIFT))&AIPS_OPACR_WP7_MASK)
#define AIPS_OPACR_SP7_MASK                      0x4u
#define AIPS_OPACR_SP7_SHIFT                     2u
#define AIPS_OPACR_SP7_WIDTH                     1u
#define AIPS_OPACR_SP7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP7_SHIFT))&AIPS_OPACR_SP7_MASK)
#define AIPS_OPACR_TP6_MASK                      0x10u
#define AIPS_OPACR_TP6_SHIFT                     4u
#define AIPS_OPACR_TP6_WIDTH                     1u
#define AIPS_OPACR_TP6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP6_SHIFT))&AIPS_OPACR_TP6_MASK)
#define AIPS_OPACR_WP6_MASK                      0x20u
#define AIPS_OPACR_WP6_SHIFT                     5u
#define AIPS_OPACR_WP6_WIDTH                     1u
#define AIPS_OPACR_WP6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP6_SHIFT))&AIPS_OPACR_WP6_MASK)
#define AIPS_OPACR_SP6_MASK                      0x40u
#define AIPS_OPACR_SP6_SHIFT                     6u
#define AIPS_OPACR_SP6_WIDTH                     1u
#define AIPS_OPACR_SP6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP6_SHIFT))&AIPS_OPACR_SP6_MASK)
#define AIPS_OPACR_TP5_MASK                      0x100u
#define AIPS_OPACR_TP5_SHIFT                     8u
#define AIPS_OPACR_TP5_WIDTH                     1u
#define AIPS_OPACR_TP5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP5_SHIFT))&AIPS_OPACR_TP5_MASK)
#define AIPS_OPACR_WP5_MASK                      0x200u
#define AIPS_OPACR_WP5_SHIFT                     9u
#define AIPS_OPACR_WP5_WIDTH                     1u
#define AIPS_OPACR_WP5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP5_SHIFT))&AIPS_OPACR_WP5_MASK)
#define AIPS_OPACR_SP5_MASK                      0x400u
#define AIPS_OPACR_SP5_SHIFT                     10u
#define AIPS_OPACR_SP5_WIDTH                     1u
#define AIPS_OPACR_SP5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP5_SHIFT))&AIPS_OPACR_SP5_MASK)
#define AIPS_OPACR_TP4_MASK                      0x1000u
#define AIPS_OPACR_TP4_SHIFT                     12u
#define AIPS_OPACR_TP4_WIDTH                     1u
#define AIPS_OPACR_TP4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP4_SHIFT))&AIPS_OPACR_TP4_MASK)
#define AIPS_OPACR_WP4_MASK                      0x2000u
#define AIPS_OPACR_WP4_SHIFT                     13u
#define AIPS_OPACR_WP4_WIDTH                     1u
#define AIPS_OPACR_WP4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP4_SHIFT))&AIPS_OPACR_WP4_MASK)
#define AIPS_OPACR_SP4_MASK                      0x4000u
#define AIPS_OPACR_SP4_SHIFT                     14u
#define AIPS_OPACR_SP4_WIDTH                     1u
#define AIPS_OPACR_SP4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP4_SHIFT))&AIPS_OPACR_SP4_MASK)
#define AIPS_OPACR_TP3_MASK                      0x10000u
#define AIPS_OPACR_TP3_SHIFT                     16u
#define AIPS_OPACR_TP3_WIDTH                     1u
#define AIPS_OPACR_TP3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP3_SHIFT))&AIPS_OPACR_TP3_MASK)
#define AIPS_OPACR_WP3_MASK                      0x20000u
#define AIPS_OPACR_WP3_SHIFT                     17u
#define AIPS_OPACR_WP3_WIDTH                     1u
#define AIPS_OPACR_WP3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP3_SHIFT))&AIPS_OPACR_WP3_MASK)
#define AIPS_OPACR_SP3_MASK                      0x40000u
#define AIPS_OPACR_SP3_SHIFT                     18u
#define AIPS_OPACR_SP3_WIDTH                     1u
#define AIPS_OPACR_SP3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP3_SHIFT))&AIPS_OPACR_SP3_MASK)
#define AIPS_OPACR_TP2_MASK                      0x100000u
#define AIPS_OPACR_TP2_SHIFT                     20u
#define AIPS_OPACR_TP2_WIDTH                     1u
#define AIPS_OPACR_TP2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP2_SHIFT))&AIPS_OPACR_TP2_MASK)
#define AIPS_OPACR_WP2_MASK                      0x200000u
#define AIPS_OPACR_WP2_SHIFT                     21u
#define AIPS_OPACR_WP2_WIDTH                     1u
#define AIPS_OPACR_WP2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP2_SHIFT))&AIPS_OPACR_WP2_MASK)
#define AIPS_OPACR_SP2_MASK                      0x400000u
#define AIPS_OPACR_SP2_SHIFT                     22u
#define AIPS_OPACR_SP2_WIDTH                     1u
#define AIPS_OPACR_SP2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP2_SHIFT))&AIPS_OPACR_SP2_MASK)
#define AIPS_OPACR_TP1_MASK                      0x1000000u
#define AIPS_OPACR_TP1_SHIFT                     24u
#define AIPS_OPACR_TP1_WIDTH                     1u
#define AIPS_OPACR_TP1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP1_SHIFT))&AIPS_OPACR_TP1_MASK)
#define AIPS_OPACR_WP1_MASK                      0x2000000u
#define AIPS_OPACR_WP1_SHIFT                     25u
#define AIPS_OPACR_WP1_WIDTH                     1u
#define AIPS_OPACR_WP1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP1_SHIFT))&AIPS_OPACR_WP1_MASK)
#define AIPS_OPACR_SP1_MASK                      0x4000000u
#define AIPS_OPACR_SP1_SHIFT                     26u
#define AIPS_OPACR_SP1_WIDTH                     1u
#define AIPS_OPACR_SP1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP1_SHIFT))&AIPS_OPACR_SP1_MASK)
#define AIPS_OPACR_TP0_MASK                      0x10000000u
#define AIPS_OPACR_TP0_SHIFT                     28u
#define AIPS_OPACR_TP0_WIDTH                     1u
#define AIPS_OPACR_TP0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP0_SHIFT))&AIPS_OPACR_TP0_MASK)
#define AIPS_OPACR_WP0_MASK                      0x20000000u
#define AIPS_OPACR_WP0_SHIFT                     29u
#define AIPS_OPACR_WP0_WIDTH                     1u
#define AIPS_OPACR_WP0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP0_SHIFT))&AIPS_OPACR_WP0_MASK)
#define AIPS_OPACR_SP0_MASK                      0x40000000u
#define AIPS_OPACR_SP0_SHIFT                     30u
#define AIPS_OPACR_SP0_WIDTH                     1u
#define AIPS_OPACR_SP0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP0_SHIFT))&AIPS_OPACR_SP0_MASK)

/*!
 * @}
 */ /* end of group AIPS_Register_Masks */


/*!
 * @}
 */ /* end of group AIPS_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- C55FMC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup C55FMC_Peripheral_Access_Layer C55FMC Peripheral Access Layer
 * @{
 */


/** C55FMC - Size of Registers Arrays */
#define C55FMC_UM_COUNT                          9u

/** C55FMC - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< Module Configuration Register, offset: 0x0 */
       uint8_t RESERVED_0[4];
  __I  uint32_t MCRE;                              /**< Extended Module Configuration Register, offset: 0x8 */
       uint8_t RESERVED_1[4];
  __IO uint32_t LOCK0;                             /**< Lock 0 register, offset: 0x10 */
  __IO uint32_t LOCK1;                             /**< Lock 1 register, offset: 0x14 */
  __IO uint32_t LOCK2;                             /**< Lock 2 register, offset: 0x18 */
  __IO uint32_t LOCK3;                             /**< Lock 3 register, offset: 0x1C */
       uint8_t RESERVED_2[24];
  __IO uint32_t SEL0;                              /**< Select 0 register, offset: 0x38 */
  __IO uint32_t SEL1;                              /**< Select 1 register, offset: 0x3C */
  __IO uint32_t SEL2;                              /**< Select 2 register, offset: 0x40 */
  __IO uint32_t SEL3;                              /**< Select 3 register, offset: 0x44 */
       uint8_t RESERVED_3[8];
  __I  uint32_t ADR;                               /**< Address register, offset: 0x50 */
  __IO uint32_t UT0;                               /**< UTest 0 register, offset: 0x54 */
  __IO uint32_t UM[C55FMC_UM_COUNT];               /**< UMISR register, array offset: 0x58, array step: 0x4 */
  __IO uint32_t UM9;                               /**< UMISR register, offset: 0x7C */
  __I  uint32_t OPP0;                              /**< Over-Program Protection 0 register, offset: 0x80 */
  __I  uint32_t OPP1;                              /**< Over-Program Protection 1 register, offset: 0x84 */
  __I  uint32_t OPP2;                              /**< Over-Program Protection 2 register, offset: 0x88 */
  __I  uint32_t OPP3;                              /**< Over-Program Protection 3 register, offset: 0x8C */
} C55FMC_Type, *C55FMC_MemMapPtr;

 /** Number of instances of the C55FMC module. */
#define C55FMC_INSTANCE_COUNT                    (1u)


/* C55FMC - Peripheral instance base addresses */
/** Peripheral C55FMC base address */
#define C55FMC_BASE                              (0xFFFE0000u)
/** Peripheral C55FMC base pointer */
#define C55FMC                                   ((C55FMC_Type *)C55FMC_BASE)
/** Array initializer of C55FMC peripheral base addresses */
#define C55FMC_BASE_ADDRS                        { C55FMC_BASE }
/** Array initializer of C55FMC peripheral base pointers */
#define C55FMC_BASE_PTRS                         { C55FMC }

/* ----------------------------------------------------------------------------
   -- C55FMC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup C55FMC_Register_Masks C55FMC Register Masks
 * @{
 */

/* MCR Bit Fields */
#define C55FMC_MCR_EHV_MASK                      0x1u
#define C55FMC_MCR_EHV_SHIFT                     0u
#define C55FMC_MCR_EHV_WIDTH                     1u
#define C55FMC_MCR_EHV(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_EHV_SHIFT))&C55FMC_MCR_EHV_MASK)
#define C55FMC_MCR_ESUS_MASK                     0x2u
#define C55FMC_MCR_ESUS_SHIFT                    1u
#define C55FMC_MCR_ESUS_WIDTH                    1u
#define C55FMC_MCR_ESUS(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_ESUS_SHIFT))&C55FMC_MCR_ESUS_MASK)
#define C55FMC_MCR_ERS_MASK                      0x4u
#define C55FMC_MCR_ERS_SHIFT                     2u
#define C55FMC_MCR_ERS_WIDTH                     1u
#define C55FMC_MCR_ERS(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_ERS_SHIFT))&C55FMC_MCR_ERS_MASK)
#define C55FMC_MCR_PSUS_MASK                     0x8u
#define C55FMC_MCR_PSUS_SHIFT                    3u
#define C55FMC_MCR_PSUS_WIDTH                    1u
#define C55FMC_MCR_PSUS(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_PSUS_SHIFT))&C55FMC_MCR_PSUS_MASK)
#define C55FMC_MCR_PGM_MASK                      0x10u
#define C55FMC_MCR_PGM_SHIFT                     4u
#define C55FMC_MCR_PGM_WIDTH                     1u
#define C55FMC_MCR_PGM(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_PGM_SHIFT))&C55FMC_MCR_PGM_MASK)
#define C55FMC_MCR_PECIE_MASK                    0x100u
#define C55FMC_MCR_PECIE_SHIFT                   8u
#define C55FMC_MCR_PECIE_WIDTH                   1u
#define C55FMC_MCR_PECIE(x)                      (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_PECIE_SHIFT))&C55FMC_MCR_PECIE_MASK)
#define C55FMC_MCR_PEG_MASK                      0x200u
#define C55FMC_MCR_PEG_SHIFT                     9u
#define C55FMC_MCR_PEG_WIDTH                     1u
#define C55FMC_MCR_PEG(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_PEG_SHIFT))&C55FMC_MCR_PEG_MASK)
#define C55FMC_MCR_DONE_MASK                     0x400u
#define C55FMC_MCR_DONE_SHIFT                    10u
#define C55FMC_MCR_DONE_WIDTH                    1u
#define C55FMC_MCR_DONE(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_DONE_SHIFT))&C55FMC_MCR_DONE_MASK)
#define C55FMC_MCR_PEAS_MASK                     0x800u
#define C55FMC_MCR_PEAS_SHIFT                    11u
#define C55FMC_MCR_PEAS_WIDTH                    1u
#define C55FMC_MCR_PEAS(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_PEAS_SHIFT))&C55FMC_MCR_PEAS_MASK)
#define C55FMC_MCR_SBC_MASK                      0x2000u
#define C55FMC_MCR_SBC_SHIFT                     13u
#define C55FMC_MCR_SBC_WIDTH                     1u
#define C55FMC_MCR_SBC(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_SBC_SHIFT))&C55FMC_MCR_SBC_MASK)
#define C55FMC_MCR_RWE_MASK                      0x4000u
#define C55FMC_MCR_RWE_SHIFT                     14u
#define C55FMC_MCR_RWE_WIDTH                     1u
#define C55FMC_MCR_RWE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_RWE_SHIFT))&C55FMC_MCR_RWE_MASK)
#define C55FMC_MCR_EER_MASK                      0x8000u
#define C55FMC_MCR_EER_SHIFT                     15u
#define C55FMC_MCR_EER_WIDTH                     1u
#define C55FMC_MCR_EER(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_EER_SHIFT))&C55FMC_MCR_EER_MASK)
#define C55FMC_MCR_EEE_MASK                      0x10000000u
#define C55FMC_MCR_EEE_SHIFT                     28u
#define C55FMC_MCR_EEE_WIDTH                     1u
#define C55FMC_MCR_EEE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_EEE_SHIFT))&C55FMC_MCR_EEE_MASK)
#define C55FMC_MCR_AEE_MASK                      0x20000000u
#define C55FMC_MCR_AEE_SHIFT                     29u
#define C55FMC_MCR_AEE_WIDTH                     1u
#define C55FMC_MCR_AEE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_AEE_SHIFT))&C55FMC_MCR_AEE_MASK)
#define C55FMC_MCR_RRE_MASK                      0x40000000u
#define C55FMC_MCR_RRE_SHIFT                     30u
#define C55FMC_MCR_RRE_WIDTH                     1u
#define C55FMC_MCR_RRE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_RRE_SHIFT))&C55FMC_MCR_RRE_MASK)
#define C55FMC_MCR_RVE_MASK                      0x80000000u
#define C55FMC_MCR_RVE_SHIFT                     31u
#define C55FMC_MCR_RVE_WIDTH                     1u
#define C55FMC_MCR_RVE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_RVE_SHIFT))&C55FMC_MCR_RVE_MASK)
/* MCRE Bit Fields */
#define C55FMC_MCRE_n16Kl_MASK                   0x7u
#define C55FMC_MCRE_n16Kl_SHIFT                  0u
#define C55FMC_MCRE_n16Kl_WIDTH                  3u
#define C55FMC_MCRE_n16Kl(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n16Kl_SHIFT))&C55FMC_MCRE_n16Kl_MASK)
#define C55FMC_MCRE_n32Kl_MASK                   0x18u
#define C55FMC_MCRE_n32Kl_SHIFT                  3u
#define C55FMC_MCRE_n32Kl_WIDTH                  2u
#define C55FMC_MCRE_n32Kl(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n32Kl_SHIFT))&C55FMC_MCRE_n32Kl_MASK)
#define C55FMC_MCRE_n64Kl_MASK                   0xE0u
#define C55FMC_MCRE_n64Kl_SHIFT                  5u
#define C55FMC_MCRE_n64Kl_WIDTH                  3u
#define C55FMC_MCRE_n64Kl(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n64Kl_SHIFT))&C55FMC_MCRE_n64Kl_MASK)
#define C55FMC_MCRE_n16Km_MASK                   0x700u
#define C55FMC_MCRE_n16Km_SHIFT                  8u
#define C55FMC_MCRE_n16Km_WIDTH                  3u
#define C55FMC_MCRE_n16Km(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n16Km_SHIFT))&C55FMC_MCRE_n16Km_MASK)
#define C55FMC_MCRE_n32Km_MASK                   0x1800u
#define C55FMC_MCRE_n32Km_SHIFT                  11u
#define C55FMC_MCRE_n32Km_WIDTH                  2u
#define C55FMC_MCRE_n32Km(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n32Km_SHIFT))&C55FMC_MCRE_n32Km_MASK)
#define C55FMC_MCRE_n64Km_MASK                   0xE000u
#define C55FMC_MCRE_n64Km_SHIFT                  13u
#define C55FMC_MCRE_n64Km_WIDTH                  3u
#define C55FMC_MCRE_n64Km(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n64Km_SHIFT))&C55FMC_MCRE_n64Km_MASK)
#define C55FMC_MCRE_n16Kh_MASK                   0x70000u
#define C55FMC_MCRE_n16Kh_SHIFT                  16u
#define C55FMC_MCRE_n16Kh_WIDTH                  3u
#define C55FMC_MCRE_n16Kh(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n16Kh_SHIFT))&C55FMC_MCRE_n16Kh_MASK)
#define C55FMC_MCRE_n32Kh_MASK                   0x180000u
#define C55FMC_MCRE_n32Kh_SHIFT                  19u
#define C55FMC_MCRE_n32Kh_WIDTH                  2u
#define C55FMC_MCRE_n32Kh(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n32Kh_SHIFT))&C55FMC_MCRE_n32Kh_MASK)
#define C55FMC_MCRE_n64Kh_MASK                   0xE00000u
#define C55FMC_MCRE_n64Kh_SHIFT                  21u
#define C55FMC_MCRE_n64Kh_WIDTH                  3u
#define C55FMC_MCRE_n64Kh(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n64Kh_SHIFT))&C55FMC_MCRE_n64Kh_MASK)
#define C55FMC_MCRE_n256K_MASK                   0x1F000000u
#define C55FMC_MCRE_n256K_SHIFT                  24u
#define C55FMC_MCRE_n256K_WIDTH                  5u
#define C55FMC_MCRE_n256K(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n256K_SHIFT))&C55FMC_MCRE_n256K_MASK)
#define C55FMC_MCRE_HT_MASK                      0x80000000u
#define C55FMC_MCRE_HT_SHIFT                     31u
#define C55FMC_MCRE_HT_WIDTH                     1u
#define C55FMC_MCRE_HT(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_HT_SHIFT))&C55FMC_MCRE_HT_MASK)
/* LOCK0 Bit Fields */
#define C55FMC_LOCK0_MIDLOCK_MASK                0xFFFFu
#define C55FMC_LOCK0_MIDLOCK_SHIFT               0u
#define C55FMC_LOCK0_MIDLOCK_WIDTH               16u
#define C55FMC_LOCK0_MIDLOCK(x)                  (((uint32_t)(((uint32_t)(x))<<C55FMC_LOCK0_MIDLOCK_SHIFT))&C55FMC_LOCK0_MIDLOCK_MASK)
#define C55FMC_LOCK0_LOWLOCK_MASK                0x3FFF0000u
#define C55FMC_LOCK0_LOWLOCK_SHIFT               16u
#define C55FMC_LOCK0_LOWLOCK_WIDTH               14u
#define C55FMC_LOCK0_LOWLOCK(x)                  (((uint32_t)(((uint32_t)(x))<<C55FMC_LOCK0_LOWLOCK_SHIFT))&C55FMC_LOCK0_LOWLOCK_MASK)
#define C55FMC_LOCK0_TSLOCK_MASK                 0x80000000u
#define C55FMC_LOCK0_TSLOCK_SHIFT                31u
#define C55FMC_LOCK0_TSLOCK_WIDTH                1u
#define C55FMC_LOCK0_TSLOCK(x)                   (((uint32_t)(((uint32_t)(x))<<C55FMC_LOCK0_TSLOCK_SHIFT))&C55FMC_LOCK0_TSLOCK_MASK)
/* LOCK1 Bit Fields */
#define C55FMC_LOCK1_HIGHLOCK_MASK               0xFFFFu
#define C55FMC_LOCK1_HIGHLOCK_SHIFT              0u
#define C55FMC_LOCK1_HIGHLOCK_WIDTH              16u
#define C55FMC_LOCK1_HIGHLOCK(x)                 (((uint32_t)(((uint32_t)(x))<<C55FMC_LOCK1_HIGHLOCK_SHIFT))&C55FMC_LOCK1_HIGHLOCK_MASK)
/* LOCK2 Bit Fields */
#define C55FMC_LOCK2_A256KLOCK_MASK              0xFFFFFFFFu
#define C55FMC_LOCK2_A256KLOCK_SHIFT             0u
#define C55FMC_LOCK2_A256KLOCK_WIDTH             32u
#define C55FMC_LOCK2_A256KLOCK(x)                (((uint32_t)(((uint32_t)(x))<<C55FMC_LOCK2_A256KLOCK_SHIFT))&C55FMC_LOCK2_A256KLOCK_MASK)
/* LOCK3 Bit Fields */
#define C55FMC_LOCK3_A256KLOCK_MASK              0xFFFFu
#define C55FMC_LOCK3_A256KLOCK_SHIFT             0u
#define C55FMC_LOCK3_A256KLOCK_WIDTH             16u
#define C55FMC_LOCK3_A256KLOCK(x)                (((uint32_t)(((uint32_t)(x))<<C55FMC_LOCK3_A256KLOCK_SHIFT))&C55FMC_LOCK3_A256KLOCK_MASK)
/* SEL0 Bit Fields */
#define C55FMC_SEL0_MIDSEL_MASK                  0xFFFFu
#define C55FMC_SEL0_MIDSEL_SHIFT                 0u
#define C55FMC_SEL0_MIDSEL_WIDTH                 16u
#define C55FMC_SEL0_MIDSEL(x)                    (((uint32_t)(((uint32_t)(x))<<C55FMC_SEL0_MIDSEL_SHIFT))&C55FMC_SEL0_MIDSEL_MASK)
#define C55FMC_SEL0_LOWSEL_MASK                  0x3FFF0000u
#define C55FMC_SEL0_LOWSEL_SHIFT                 16u
#define C55FMC_SEL0_LOWSEL_WIDTH                 14u
#define C55FMC_SEL0_LOWSEL(x)                    (((uint32_t)(((uint32_t)(x))<<C55FMC_SEL0_LOWSEL_SHIFT))&C55FMC_SEL0_LOWSEL_MASK)
/* SEL1 Bit Fields */
#define C55FMC_SEL1_HIGHSEL_MASK                 0xFFFFu
#define C55FMC_SEL1_HIGHSEL_SHIFT                0u
#define C55FMC_SEL1_HIGHSEL_WIDTH                16u
#define C55FMC_SEL1_HIGHSEL(x)                   (((uint32_t)(((uint32_t)(x))<<C55FMC_SEL1_HIGHSEL_SHIFT))&C55FMC_SEL1_HIGHSEL_MASK)
/* SEL2 Bit Fields */
#define C55FMC_SEL2_A256KSEL_MASK                0xFFFFFFFFu
#define C55FMC_SEL2_A256KSEL_SHIFT               0u
#define C55FMC_SEL2_A256KSEL_WIDTH               32u
#define C55FMC_SEL2_A256KSEL(x)                  (((uint32_t)(((uint32_t)(x))<<C55FMC_SEL2_A256KSEL_SHIFT))&C55FMC_SEL2_A256KSEL_MASK)
/* SEL3 Bit Fields */
#define C55FMC_SEL3_A256KSEL_MASK                0xFFFFu
#define C55FMC_SEL3_A256KSEL_SHIFT               0u
#define C55FMC_SEL3_A256KSEL_WIDTH               16u
#define C55FMC_SEL3_A256KSEL(x)                  (((uint32_t)(((uint32_t)(x))<<C55FMC_SEL3_A256KSEL_SHIFT))&C55FMC_SEL3_A256KSEL_MASK)
/* ADR Bit Fields */
#define C55FMC_ADR_ADDR_MASK                     0xFFFFF8u
#define C55FMC_ADR_ADDR_SHIFT                    3u
#define C55FMC_ADR_ADDR_WIDTH                    21u
#define C55FMC_ADR_ADDR(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_ADDR_SHIFT))&C55FMC_ADR_ADDR_MASK)
#define C55FMC_ADR_a16k_MASK                     0x1000000u
#define C55FMC_ADR_a16k_SHIFT                    24u
#define C55FMC_ADR_a16k_WIDTH                    1u
#define C55FMC_ADR_a16k(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_a16k_SHIFT))&C55FMC_ADR_a16k_MASK)
#define C55FMC_ADR_a32k_MASK                     0x2000000u
#define C55FMC_ADR_a32k_SHIFT                    25u
#define C55FMC_ADR_a32k_WIDTH                    1u
#define C55FMC_ADR_a32k(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_a32k_SHIFT))&C55FMC_ADR_a32k_MASK)
#define C55FMC_ADR_a64k_MASK                     0x4000000u
#define C55FMC_ADR_a64k_SHIFT                    26u
#define C55FMC_ADR_a64k_WIDTH                    1u
#define C55FMC_ADR_a64k(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_a64k_SHIFT))&C55FMC_ADR_a64k_MASK)
#define C55FMC_ADR_a256k_MASK                    0x8000000u
#define C55FMC_ADR_a256k_SHIFT                   27u
#define C55FMC_ADR_a256k_WIDTH                   1u
#define C55FMC_ADR_a256k(x)                      (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_a256k_SHIFT))&C55FMC_ADR_a256k_MASK)
#define C55FMC_ADR_aL_MASK                       0x10000000u
#define C55FMC_ADR_aL_SHIFT                      28u
#define C55FMC_ADR_aL_WIDTH                      1u
#define C55FMC_ADR_aL(x)                         (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_aL_SHIFT))&C55FMC_ADR_aL_MASK)
#define C55FMC_ADR_aM_MASK                       0x20000000u
#define C55FMC_ADR_aM_SHIFT                      29u
#define C55FMC_ADR_aM_WIDTH                      1u
#define C55FMC_ADR_aM(x)                         (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_aM_SHIFT))&C55FMC_ADR_aM_MASK)
#define C55FMC_ADR_aH_MASK                       0x40000000u
#define C55FMC_ADR_aH_SHIFT                      30u
#define C55FMC_ADR_aH_WIDTH                      1u
#define C55FMC_ADR_aH(x)                         (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_aH_SHIFT))&C55FMC_ADR_aH_MASK)
#define C55FMC_ADR_SAD_MASK                      0x80000000u
#define C55FMC_ADR_SAD_SHIFT                     31u
#define C55FMC_ADR_SAD_WIDTH                     1u
#define C55FMC_ADR_SAD(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_SAD_SHIFT))&C55FMC_ADR_SAD_MASK)
/* UT0 Bit Fields */
#define C55FMC_UT0_AID_MASK                      0x1u
#define C55FMC_UT0_AID_SHIFT                     0u
#define C55FMC_UT0_AID_WIDTH                     1u
#define C55FMC_UT0_AID(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_AID_SHIFT))&C55FMC_UT0_AID_MASK)
#define C55FMC_UT0_AIE_MASK                      0x2u
#define C55FMC_UT0_AIE_SHIFT                     1u
#define C55FMC_UT0_AIE_WIDTH                     1u
#define C55FMC_UT0_AIE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_AIE_SHIFT))&C55FMC_UT0_AIE_MASK)
#define C55FMC_UT0_AIS_MASK                      0x4u
#define C55FMC_UT0_AIS_SHIFT                     2u
#define C55FMC_UT0_AIS_WIDTH                     1u
#define C55FMC_UT0_AIS(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_AIS_SHIFT))&C55FMC_UT0_AIS_MASK)
#define C55FMC_UT0_MRV_MASK                      0x10u
#define C55FMC_UT0_MRV_SHIFT                     4u
#define C55FMC_UT0_MRV_WIDTH                     1u
#define C55FMC_UT0_MRV(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_MRV_SHIFT))&C55FMC_UT0_MRV_MASK)
#define C55FMC_UT0_MRE_MASK                      0x20u
#define C55FMC_UT0_MRE_SHIFT                     5u
#define C55FMC_UT0_MRE_WIDTH                     1u
#define C55FMC_UT0_MRE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_MRE_SHIFT))&C55FMC_UT0_MRE_MASK)
#define C55FMC_UT0_AISUS_MASK                    0x40u
#define C55FMC_UT0_AISUS_SHIFT                   6u
#define C55FMC_UT0_AISUS_WIDTH                   1u
#define C55FMC_UT0_AISUS(x)                      (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_AISUS_SHIFT))&C55FMC_UT0_AISUS_MASK)
#define C55FMC_UT0_AIBPE_MASK                    0x100u
#define C55FMC_UT0_AIBPE_SHIFT                   8u
#define C55FMC_UT0_AIBPE_WIDTH                   1u
#define C55FMC_UT0_AIBPE(x)                      (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_AIBPE_SHIFT))&C55FMC_UT0_AIBPE_MASK)
#define C55FMC_UT0_NAIBP_MASK                    0x200u
#define C55FMC_UT0_NAIBP_SHIFT                   9u
#define C55FMC_UT0_NAIBP_WIDTH                   1u
#define C55FMC_UT0_NAIBP(x)                      (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_NAIBP_SHIFT))&C55FMC_UT0_NAIBP_MASK)
#define C55FMC_UT0_CPE_MASK                      0x10000u
#define C55FMC_UT0_CPE_SHIFT                     16u
#define C55FMC_UT0_CPE_WIDTH                     1u
#define C55FMC_UT0_CPE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_CPE_SHIFT))&C55FMC_UT0_CPE_MASK)
#define C55FMC_UT0_CPA_MASK                      0x20000u
#define C55FMC_UT0_CPA_SHIFT                     17u
#define C55FMC_UT0_CPA_WIDTH                     1u
#define C55FMC_UT0_CPA(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_CPA_SHIFT))&C55FMC_UT0_CPA_MASK)
#define C55FMC_UT0_CPR_MASK                      0x40000u
#define C55FMC_UT0_CPR_SHIFT                     18u
#define C55FMC_UT0_CPR_WIDTH                     1u
#define C55FMC_UT0_CPR(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_CPR_SHIFT))&C55FMC_UT0_CPR_MASK)
#define C55FMC_UT0_SBCE_MASK                     0x40000000u
#define C55FMC_UT0_SBCE_SHIFT                    30u
#define C55FMC_UT0_SBCE_WIDTH                    1u
#define C55FMC_UT0_SBCE(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_SBCE_SHIFT))&C55FMC_UT0_SBCE_MASK)
#define C55FMC_UT0_UTE_MASK                      0x80000000u
#define C55FMC_UT0_UTE_SHIFT                     31u
#define C55FMC_UT0_UTE_WIDTH                     1u
#define C55FMC_UT0_UTE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_UTE_SHIFT))&C55FMC_UT0_UTE_MASK)
/* UM Bit Fields */
#define C55FMC_UM_MISR_MASK                      0xFFFFFFFFu
#define C55FMC_UM_MISR_SHIFT                     0u
#define C55FMC_UM_MISR_WIDTH                     32u
#define C55FMC_UM_MISR(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UM_MISR_SHIFT))&C55FMC_UM_MISR_MASK)
/* UM9 Bit Fields */
#define C55FMC_UM9_MISR_MASK                     0x1u
#define C55FMC_UM9_MISR_SHIFT                    0u
#define C55FMC_UM9_MISR_WIDTH                    1u
#define C55FMC_UM9_MISR(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_UM9_MISR_SHIFT))&C55FMC_UM9_MISR_MASK)
/* OPP0 Bit Fields */
#define C55FMC_OPP0_MIDOPP_MASK                  0xFFFFu
#define C55FMC_OPP0_MIDOPP_SHIFT                 0u
#define C55FMC_OPP0_MIDOPP_WIDTH                 16u
#define C55FMC_OPP0_MIDOPP(x)                    (((uint32_t)(((uint32_t)(x))<<C55FMC_OPP0_MIDOPP_SHIFT))&C55FMC_OPP0_MIDOPP_MASK)
#define C55FMC_OPP0_LOWOPP_MASK                  0x3FFF0000u
#define C55FMC_OPP0_LOWOPP_SHIFT                 16u
#define C55FMC_OPP0_LOWOPP_WIDTH                 14u
#define C55FMC_OPP0_LOWOPP(x)                    (((uint32_t)(((uint32_t)(x))<<C55FMC_OPP0_LOWOPP_SHIFT))&C55FMC_OPP0_LOWOPP_MASK)
/* OPP1 Bit Fields */
#define C55FMC_OPP1_HIGHOPP_MASK                 0xFFFFu
#define C55FMC_OPP1_HIGHOPP_SHIFT                0u
#define C55FMC_OPP1_HIGHOPP_WIDTH                16u
#define C55FMC_OPP1_HIGHOPP(x)                   (((uint32_t)(((uint32_t)(x))<<C55FMC_OPP1_HIGHOPP_SHIFT))&C55FMC_OPP1_HIGHOPP_MASK)
/* OPP2 Bit Fields */
#define C55FMC_OPP2_A256KOPP_MASK                0xFFFFFFFFu
#define C55FMC_OPP2_A256KOPP_SHIFT               0u
#define C55FMC_OPP2_A256KOPP_WIDTH               32u
#define C55FMC_OPP2_A256KOPP(x)                  (((uint32_t)(((uint32_t)(x))<<C55FMC_OPP2_A256KOPP_SHIFT))&C55FMC_OPP2_A256KOPP_MASK)
/* OPP3 Bit Fields */
#define C55FMC_OPP3_A256KOPP_MASK                0xFFFFu
#define C55FMC_OPP3_A256KOPP_SHIFT               0u
#define C55FMC_OPP3_A256KOPP_WIDTH               16u
#define C55FMC_OPP3_A256KOPP(x)                  (((uint32_t)(((uint32_t)(x))<<C55FMC_OPP3_A256KOPP_SHIFT))&C55FMC_OPP3_A256KOPP_MASK)

/*!
 * @}
 */ /* end of group C55FMC_Register_Masks */


/*!
 * @}
 */ /* end of group C55FMC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CAN Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CAN_Peripheral_Access_Layer CAN Peripheral Access Layer
 * @{
 */


/** CAN - Size of Registers Arrays */
#define CAN_RAMn_COUNT                           384u
#define CAN_RXIMR_COUNT                          64u

/** CAN - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< Module Configuration Register, offset: 0x0 */
  __IO uint32_t CTRL1;                             /**< Control 1 register, offset: 0x4 */
  __IO uint32_t TIMER;                             /**< Free Running Timer, offset: 0x8 */
       uint8_t RESERVED_0[4];
  __IO uint32_t RXMGMASK;                          /**< Rx Mailboxes Global Mask Register, offset: 0x10 */
  __IO uint32_t RX14MASK;                          /**< Rx 14 Mask register, offset: 0x14 */
  __IO uint32_t RX15MASK;                          /**< Rx 15 Mask register, offset: 0x18 */
  __IO uint32_t ECR;                               /**< Error Counter, offset: 0x1C */
  __IO uint32_t ESR1;                              /**< Error and Status 1 register, offset: 0x20 */
  __IO uint32_t IMASK2;                            /**< Interrupt Masks 2 register, offset: 0x24 */
  __IO uint32_t IMASK1;                            /**< Interrupt Masks 1 register, offset: 0x28 */
  __IO uint32_t IFLAG2;                            /**< Interrupt Flags 2 register, offset: 0x2C */
  __IO uint32_t IFLAG1;                            /**< Interrupt Flags 1 register, offset: 0x30 */
  __IO uint32_t CTRL2;                             /**< Control 2 register, offset: 0x34 */
  __I  uint32_t ESR2;                              /**< Error and Status 2 register, offset: 0x38 */
       uint8_t RESERVED_1[8];
  __I  uint32_t CRCR;                              /**< CRC Register, offset: 0x44 */
  __IO uint32_t RXFGMASK;                          /**< Rx FIFO Global Mask register, offset: 0x48 */
  __I  uint32_t RXFIR;                             /**< Rx FIFO Information Register, offset: 0x4C */
       uint8_t RESERVED_2[48];
  __IO uint32_t RAMn[CAN_RAMn_COUNT];              /**< Embedded RAM, array offset: 0x80, array step: 0x4 */
       uint8_t RESERVED_3[512];
  __IO uint32_t RXIMR[CAN_RXIMR_COUNT];            /**< Rx Individual Mask Registers, array offset: 0x880, array step: 0x4 */
       uint8_t RESERVED_4[352];
  __IO uint32_t MECR;                              /**< Memory Error Control Register, offset: 0xAE0 */
  __IO uint32_t ERRIAR;                            /**< Error Injection Address Register, offset: 0xAE4 */
  __IO uint32_t ERRIDPR;                           /**< Error Injection Data Pattern Register, offset: 0xAE8 */
  __IO uint32_t ERRIPPR;                           /**< Error Injection Parity Pattern Register, offset: 0xAEC */
  __I  uint32_t RERRAR;                            /**< Error Report Address Register, offset: 0xAF0 */
  __I  uint32_t RERRDR;                            /**< Error Report Data Register, offset: 0xAF4 */
  __I  uint32_t RERRSYNR;                          /**< Error Report Syndrome Register, offset: 0xAF8 */
  __IO uint32_t ERRSR;                             /**< Error Status Register, offset: 0xAFC */
} CAN_Type, *CAN_MemMapPtr;

 /** Number of instances of the CAN module. */
#define CAN_INSTANCE_COUNT                       (3u)


/* CAN - Peripheral instance base addresses */
/** Peripheral CAN_0 base address */
#define CAN_0_BASE                               (0xFFEC0000u)
/** Peripheral CAN_0 base pointer */
#define CAN_0                                    ((CAN_Type *)CAN_0_BASE)
/** Peripheral CAN_1 base address */
#define CAN_1_BASE                               (0xFFEC4000u)
/** Peripheral CAN_1 base pointer */
#define CAN_1                                    ((CAN_Type *)CAN_1_BASE)
/** Peripheral CAN_2 base address */
#define CAN_2_BASE                               (0xFFEC8000u)
/** Peripheral CAN_2 base pointer */
#define CAN_2                                    ((CAN_Type *)CAN_2_BASE)
/** Array initializer of CAN peripheral base addresses */
#define CAN_BASE_ADDRS                           { CAN_0_BASE, CAN_1_BASE, CAN_2_BASE }
/** Array initializer of CAN peripheral base pointers */
#define CAN_BASE_PTRS                            { CAN_0, CAN_1, CAN_2 }

/** Interrupt vectors for the CAN peripheral type */
#define CAN_Rx_Warning_IRQS                      { CAN0_ORed_IRQn, CAN1_ORed_IRQn, \
                                                   CAN2_ORed_IRQn }

#define CAN_Tx_Warning_IRQS                      { CAN0_ORed_IRQn, CAN1_ORed_IRQn, \
                                                   CAN2_ORed_IRQn }

#define CAN_Error_IRQS                           { CAN0_Error_IRQn, CAN1_Error_IRQn, \
                                                   CAN2_Error_IRQn }

#define CAN_Bus_Off_IRQS                         { CAN0_ORed_IRQn, CAN1_ORed_IRQn, \
                                                   CAN2_ORed_IRQn }

#define CAN_ORed_00_03_MB_IRQS                   { CAN0_ORed_00_03_MB_IRQn, \
                                                   CAN1_ORed_00_03_MB_IRQn, \
                                                   CAN2_ORed_00_03_MB_IRQn }

#define CAN_ORed_04_07_MB_IRQS                   { CAN0_ORed_04_07_MB_IRQn, \
                                                   CAN1_ORed_04_07_MB_IRQn, \
                                                   CAN2_ORed_04_07_MB_IRQn }

#define CAN_ORed_08_11_MB_IRQS                   { CAN0_ORed_08_11_MB_IRQn, \
                                                   CAN1_ORed_08_11_MB_IRQn, \
                                                   CAN2_ORed_08_11_MB_IRQn }

#define CAN_ORed_12_15_MB_IRQS                   { CAN0_ORed_12_15_MB_IRQn, \
                                                   CAN1_ORed_12_15_MB_IRQn, \
                                                   CAN2_ORed_12_15_MB_IRQn }

#define CAN_ORed_16_31_MB_IRQS                   { CAN0_ORed_16_31_MB_IRQn, \
                                                   CAN1_ORed_16_31_MB_IRQn, \
                                                   CAN2_ORed_16_31_MB_IRQn }

#define CAN_ORed_32_39_MB_IRQS                   { CAN0_ORed_32_39_MB_IRQn, \
                                                   CAN1_ORed_32_39_MB_IRQn, \
                                                   CAN2_ORed_32_39_MB_IRQn }

#define CAN_ORed_40_47_MB_IRQS                   { CAN0_ORed_40_47_MB_IRQn, \
                                                   CAN1_ORed_40_47_MB_IRQn, \
                                                   CAN2_ORed_40_47_MB_IRQn }

#define CAN_ORed_48_55_MB_IRQS                   { CAN0_ORed_48_55_MB_IRQn, \
                                                   CAN1_ORed_48_55_MB_IRQn, \
                                                   CAN2_ORed_48_55_MB_IRQn }

#define CAN_ORed_56_63_MB_IRQS                   { CAN0_ORed_56_63_MB_IRQn, \
                                                   CAN1_ORed_56_63_MB_IRQn, \
                                                   CAN2_ORed_56_63_MB_IRQn }

/* ----------------------------------------------------------------------------
   -- CAN Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CAN_Register_Masks CAN Register Masks
 * @{
 */

/* MCR Bit Fields */
#define CAN_MCR_MAXMB_MASK                       0x7Fu
#define CAN_MCR_MAXMB_SHIFT                      0u
#define CAN_MCR_MAXMB_WIDTH                      7u
#define CAN_MCR_MAXMB(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_MCR_MAXMB_SHIFT))&CAN_MCR_MAXMB_MASK)
#define CAN_MCR_IDAM_MASK                        0x300u
#define CAN_MCR_IDAM_SHIFT                       8u
#define CAN_MCR_IDAM_WIDTH                       2u
#define CAN_MCR_IDAM(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_IDAM_SHIFT))&CAN_MCR_IDAM_MASK)
#define CAN_MCR_AEN_MASK                         0x1000u
#define CAN_MCR_AEN_SHIFT                        12u
#define CAN_MCR_AEN_WIDTH                        1u
#define CAN_MCR_AEN(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_MCR_AEN_SHIFT))&CAN_MCR_AEN_MASK)
#define CAN_MCR_LPRIOEN_MASK                     0x2000u
#define CAN_MCR_LPRIOEN_SHIFT                    13u
#define CAN_MCR_LPRIOEN_WIDTH                    1u
#define CAN_MCR_LPRIOEN(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_MCR_LPRIOEN_SHIFT))&CAN_MCR_LPRIOEN_MASK)
#define CAN_MCR_IRMQ_MASK                        0x10000u
#define CAN_MCR_IRMQ_SHIFT                       16u
#define CAN_MCR_IRMQ_WIDTH                       1u
#define CAN_MCR_IRMQ(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_IRMQ_SHIFT))&CAN_MCR_IRMQ_MASK)
#define CAN_MCR_SRXDIS_MASK                      0x20000u
#define CAN_MCR_SRXDIS_SHIFT                     17u
#define CAN_MCR_SRXDIS_WIDTH                     1u
#define CAN_MCR_SRXDIS(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SRXDIS_SHIFT))&CAN_MCR_SRXDIS_MASK)
#define CAN_MCR_LPMACK_MASK                      0x100000u
#define CAN_MCR_LPMACK_SHIFT                     20u
#define CAN_MCR_LPMACK_WIDTH                     1u
#define CAN_MCR_LPMACK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_LPMACK_SHIFT))&CAN_MCR_LPMACK_MASK)
#define CAN_MCR_WRNEN_MASK                       0x200000u
#define CAN_MCR_WRNEN_SHIFT                      21u
#define CAN_MCR_WRNEN_WIDTH                      1u
#define CAN_MCR_WRNEN(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_MCR_WRNEN_SHIFT))&CAN_MCR_WRNEN_MASK)
#define CAN_MCR_SUPV_MASK                        0x800000u
#define CAN_MCR_SUPV_SHIFT                       23u
#define CAN_MCR_SUPV_WIDTH                       1u
#define CAN_MCR_SUPV(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SUPV_SHIFT))&CAN_MCR_SUPV_MASK)
#define CAN_MCR_FRZACK_MASK                      0x1000000u
#define CAN_MCR_FRZACK_SHIFT                     24u
#define CAN_MCR_FRZACK_WIDTH                     1u
#define CAN_MCR_FRZACK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_FRZACK_SHIFT))&CAN_MCR_FRZACK_MASK)
#define CAN_MCR_SOFTRST_MASK                     0x2000000u
#define CAN_MCR_SOFTRST_SHIFT                    25u
#define CAN_MCR_SOFTRST_WIDTH                    1u
#define CAN_MCR_SOFTRST(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SOFTRST_SHIFT))&CAN_MCR_SOFTRST_MASK)
#define CAN_MCR_NOTRDY_MASK                      0x8000000u
#define CAN_MCR_NOTRDY_SHIFT                     27u
#define CAN_MCR_NOTRDY_WIDTH                     1u
#define CAN_MCR_NOTRDY(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_NOTRDY_SHIFT))&CAN_MCR_NOTRDY_MASK)
#define CAN_MCR_HALT_MASK                        0x10000000u
#define CAN_MCR_HALT_SHIFT                       28u
#define CAN_MCR_HALT_WIDTH                       1u
#define CAN_MCR_HALT(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_HALT_SHIFT))&CAN_MCR_HALT_MASK)
#define CAN_MCR_RFEN_MASK                        0x20000000u
#define CAN_MCR_RFEN_SHIFT                       29u
#define CAN_MCR_RFEN_WIDTH                       1u
#define CAN_MCR_RFEN(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_RFEN_SHIFT))&CAN_MCR_RFEN_MASK)
#define CAN_MCR_FRZ_MASK                         0x40000000u
#define CAN_MCR_FRZ_SHIFT                        30u
#define CAN_MCR_FRZ_WIDTH                        1u
#define CAN_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_MCR_FRZ_SHIFT))&CAN_MCR_FRZ_MASK)
#define CAN_MCR_MDIS_MASK                        0x80000000u
#define CAN_MCR_MDIS_SHIFT                       31u
#define CAN_MCR_MDIS_WIDTH                       1u
#define CAN_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_MDIS_SHIFT))&CAN_MCR_MDIS_MASK)
/* CTRL1 Bit Fields */
#define CAN_CTRL1_PROPSEG_MASK                   0x7u
#define CAN_CTRL1_PROPSEG_SHIFT                  0u
#define CAN_CTRL1_PROPSEG_WIDTH                  3u
#define CAN_CTRL1_PROPSEG(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PROPSEG_SHIFT))&CAN_CTRL1_PROPSEG_MASK)
#define CAN_CTRL1_LOM_MASK                       0x8u
#define CAN_CTRL1_LOM_SHIFT                      3u
#define CAN_CTRL1_LOM_WIDTH                      1u
#define CAN_CTRL1_LOM(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LOM_SHIFT))&CAN_CTRL1_LOM_MASK)
#define CAN_CTRL1_LBUF_MASK                      0x10u
#define CAN_CTRL1_LBUF_SHIFT                     4u
#define CAN_CTRL1_LBUF_WIDTH                     1u
#define CAN_CTRL1_LBUF(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LBUF_SHIFT))&CAN_CTRL1_LBUF_MASK)
#define CAN_CTRL1_TSYN_MASK                      0x20u
#define CAN_CTRL1_TSYN_SHIFT                     5u
#define CAN_CTRL1_TSYN_WIDTH                     1u
#define CAN_CTRL1_TSYN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_TSYN_SHIFT))&CAN_CTRL1_TSYN_MASK)
#define CAN_CTRL1_BOFFREC_MASK                   0x40u
#define CAN_CTRL1_BOFFREC_SHIFT                  6u
#define CAN_CTRL1_BOFFREC_WIDTH                  1u
#define CAN_CTRL1_BOFFREC(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_BOFFREC_SHIFT))&CAN_CTRL1_BOFFREC_MASK)
#define CAN_CTRL1_SMP_MASK                       0x80u
#define CAN_CTRL1_SMP_SHIFT                      7u
#define CAN_CTRL1_SMP_WIDTH                      1u
#define CAN_CTRL1_SMP(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_SMP_SHIFT))&CAN_CTRL1_SMP_MASK)
#define CAN_CTRL1_RWRNMSK_MASK                   0x400u
#define CAN_CTRL1_RWRNMSK_SHIFT                  10u
#define CAN_CTRL1_RWRNMSK_WIDTH                  1u
#define CAN_CTRL1_RWRNMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_RWRNMSK_SHIFT))&CAN_CTRL1_RWRNMSK_MASK)
#define CAN_CTRL1_TWRNMSK_MASK                   0x800u
#define CAN_CTRL1_TWRNMSK_SHIFT                  11u
#define CAN_CTRL1_TWRNMSK_WIDTH                  1u
#define CAN_CTRL1_TWRNMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_TWRNMSK_SHIFT))&CAN_CTRL1_TWRNMSK_MASK)
#define CAN_CTRL1_LPB_MASK                       0x1000u
#define CAN_CTRL1_LPB_SHIFT                      12u
#define CAN_CTRL1_LPB_WIDTH                      1u
#define CAN_CTRL1_LPB(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LPB_SHIFT))&CAN_CTRL1_LPB_MASK)
#define CAN_CTRL1_CLKSRC_MASK                    0x2000u
#define CAN_CTRL1_CLKSRC_SHIFT                   13u
#define CAN_CTRL1_CLKSRC_WIDTH                   1u
#define CAN_CTRL1_CLKSRC(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_CLKSRC_SHIFT))&CAN_CTRL1_CLKSRC_MASK)
#define CAN_CTRL1_ERRMSK_MASK                    0x4000u
#define CAN_CTRL1_ERRMSK_SHIFT                   14u
#define CAN_CTRL1_ERRMSK_WIDTH                   1u
#define CAN_CTRL1_ERRMSK(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_ERRMSK_SHIFT))&CAN_CTRL1_ERRMSK_MASK)
#define CAN_CTRL1_BOFFMSK_MASK                   0x8000u
#define CAN_CTRL1_BOFFMSK_SHIFT                  15u
#define CAN_CTRL1_BOFFMSK_WIDTH                  1u
#define CAN_CTRL1_BOFFMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_BOFFMSK_SHIFT))&CAN_CTRL1_BOFFMSK_MASK)
#define CAN_CTRL1_PSEG2_MASK                     0x70000u
#define CAN_CTRL1_PSEG2_SHIFT                    16u
#define CAN_CTRL1_PSEG2_WIDTH                    3u
#define CAN_CTRL1_PSEG2(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PSEG2_SHIFT))&CAN_CTRL1_PSEG2_MASK)
#define CAN_CTRL1_PSEG1_MASK                     0x380000u
#define CAN_CTRL1_PSEG1_SHIFT                    19u
#define CAN_CTRL1_PSEG1_WIDTH                    3u
#define CAN_CTRL1_PSEG1(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PSEG1_SHIFT))&CAN_CTRL1_PSEG1_MASK)
#define CAN_CTRL1_RJW_MASK                       0xC00000u
#define CAN_CTRL1_RJW_SHIFT                      22u
#define CAN_CTRL1_RJW_WIDTH                      2u
#define CAN_CTRL1_RJW(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_RJW_SHIFT))&CAN_CTRL1_RJW_MASK)
#define CAN_CTRL1_PRESDIV_MASK                   0xFF000000u
#define CAN_CTRL1_PRESDIV_SHIFT                  24u
#define CAN_CTRL1_PRESDIV_WIDTH                  8u
#define CAN_CTRL1_PRESDIV(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PRESDIV_SHIFT))&CAN_CTRL1_PRESDIV_MASK)
/* TIMER Bit Fields */
#define CAN_TIMER_TIMER_MASK                     0xFFFFu
#define CAN_TIMER_TIMER_SHIFT                    0u
#define CAN_TIMER_TIMER_WIDTH                    16u
#define CAN_TIMER_TIMER(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_TIMER_TIMER_SHIFT))&CAN_TIMER_TIMER_MASK)
/* RXMGMASK Bit Fields */
#define CAN_RXMGMASK_MG_MASK                     0xFFFFFFFFu
#define CAN_RXMGMASK_MG_SHIFT                    0u
#define CAN_RXMGMASK_MG_WIDTH                    32u
#define CAN_RXMGMASK_MG(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_RXMGMASK_MG_SHIFT))&CAN_RXMGMASK_MG_MASK)
/* RX14MASK Bit Fields */
#define CAN_RX14MASK_RX14M_MASK                  0xFFFFFFFFu
#define CAN_RX14MASK_RX14M_SHIFT                 0u
#define CAN_RX14MASK_RX14M_WIDTH                 32u
#define CAN_RX14MASK_RX14M(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RX14MASK_RX14M_SHIFT))&CAN_RX14MASK_RX14M_MASK)
/* RX15MASK Bit Fields */
#define CAN_RX15MASK_RX15M_MASK                  0xFFFFFFFFu
#define CAN_RX15MASK_RX15M_SHIFT                 0u
#define CAN_RX15MASK_RX15M_WIDTH                 32u
#define CAN_RX15MASK_RX15M(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RX15MASK_RX15M_SHIFT))&CAN_RX15MASK_RX15M_MASK)
/* ECR Bit Fields */
#define CAN_ECR_TXERRCNT_MASK                    0xFFu
#define CAN_ECR_TXERRCNT_SHIFT                   0u
#define CAN_ECR_TXERRCNT_WIDTH                   8u
#define CAN_ECR_TXERRCNT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ECR_TXERRCNT_SHIFT))&CAN_ECR_TXERRCNT_MASK)
#define CAN_ECR_RXERRCNT_MASK                    0xFF00u
#define CAN_ECR_RXERRCNT_SHIFT                   8u
#define CAN_ECR_RXERRCNT_WIDTH                   8u
#define CAN_ECR_RXERRCNT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ECR_RXERRCNT_SHIFT))&CAN_ECR_RXERRCNT_MASK)
/* ESR1 Bit Fields */
#define CAN_ESR1_ERRINT_MASK                     0x2u
#define CAN_ESR1_ERRINT_SHIFT                    1u
#define CAN_ESR1_ERRINT_WIDTH                    1u
#define CAN_ESR1_ERRINT(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ERRINT_SHIFT))&CAN_ESR1_ERRINT_MASK)
#define CAN_ESR1_BOFFINT_MASK                    0x4u
#define CAN_ESR1_BOFFINT_SHIFT                   2u
#define CAN_ESR1_BOFFINT_WIDTH                   1u
#define CAN_ESR1_BOFFINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BOFFINT_SHIFT))&CAN_ESR1_BOFFINT_MASK)
#define CAN_ESR1_RX_MASK                         0x8u
#define CAN_ESR1_RX_SHIFT                        3u
#define CAN_ESR1_RX_WIDTH                        1u
#define CAN_ESR1_RX(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RX_SHIFT))&CAN_ESR1_RX_MASK)
#define CAN_ESR1_FLTCONF_MASK                    0x30u
#define CAN_ESR1_FLTCONF_SHIFT                   4u
#define CAN_ESR1_FLTCONF_WIDTH                   2u
#define CAN_ESR1_FLTCONF(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_FLTCONF_SHIFT))&CAN_ESR1_FLTCONF_MASK)
#define CAN_ESR1_TX_MASK                         0x40u
#define CAN_ESR1_TX_SHIFT                        6u
#define CAN_ESR1_TX_WIDTH                        1u
#define CAN_ESR1_TX(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TX_SHIFT))&CAN_ESR1_TX_MASK)
#define CAN_ESR1_IDLE_MASK                       0x80u
#define CAN_ESR1_IDLE_SHIFT                      7u
#define CAN_ESR1_IDLE_WIDTH                      1u
#define CAN_ESR1_IDLE(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_IDLE_SHIFT))&CAN_ESR1_IDLE_MASK)
#define CAN_ESR1_RXWRN_MASK                      0x100u
#define CAN_ESR1_RXWRN_SHIFT                     8u
#define CAN_ESR1_RXWRN_WIDTH                     1u
#define CAN_ESR1_RXWRN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RXWRN_SHIFT))&CAN_ESR1_RXWRN_MASK)
#define CAN_ESR1_TXWRN_MASK                      0x200u
#define CAN_ESR1_TXWRN_SHIFT                     9u
#define CAN_ESR1_TXWRN_WIDTH                     1u
#define CAN_ESR1_TXWRN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TXWRN_SHIFT))&CAN_ESR1_TXWRN_MASK)
#define CAN_ESR1_STFERR_MASK                     0x400u
#define CAN_ESR1_STFERR_SHIFT                    10u
#define CAN_ESR1_STFERR_WIDTH                    1u
#define CAN_ESR1_STFERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_STFERR_SHIFT))&CAN_ESR1_STFERR_MASK)
#define CAN_ESR1_FRMERR_MASK                     0x800u
#define CAN_ESR1_FRMERR_SHIFT                    11u
#define CAN_ESR1_FRMERR_WIDTH                    1u
#define CAN_ESR1_FRMERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_FRMERR_SHIFT))&CAN_ESR1_FRMERR_MASK)
#define CAN_ESR1_CRCERR_MASK                     0x1000u
#define CAN_ESR1_CRCERR_SHIFT                    12u
#define CAN_ESR1_CRCERR_WIDTH                    1u
#define CAN_ESR1_CRCERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_CRCERR_SHIFT))&CAN_ESR1_CRCERR_MASK)
#define CAN_ESR1_ACKERR_MASK                     0x2000u
#define CAN_ESR1_ACKERR_SHIFT                    13u
#define CAN_ESR1_ACKERR_WIDTH                    1u
#define CAN_ESR1_ACKERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ACKERR_SHIFT))&CAN_ESR1_ACKERR_MASK)
#define CAN_ESR1_BIT0ERR_MASK                    0x4000u
#define CAN_ESR1_BIT0ERR_SHIFT                   14u
#define CAN_ESR1_BIT0ERR_WIDTH                   1u
#define CAN_ESR1_BIT0ERR(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BIT0ERR_SHIFT))&CAN_ESR1_BIT0ERR_MASK)
#define CAN_ESR1_BIT1ERR_MASK                    0x8000u
#define CAN_ESR1_BIT1ERR_SHIFT                   15u
#define CAN_ESR1_BIT1ERR_WIDTH                   1u
#define CAN_ESR1_BIT1ERR(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BIT1ERR_SHIFT))&CAN_ESR1_BIT1ERR_MASK)
#define CAN_ESR1_RWRNINT_MASK                    0x10000u
#define CAN_ESR1_RWRNINT_SHIFT                   16u
#define CAN_ESR1_RWRNINT_WIDTH                   1u
#define CAN_ESR1_RWRNINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RWRNINT_SHIFT))&CAN_ESR1_RWRNINT_MASK)
#define CAN_ESR1_TWRNINT_MASK                    0x20000u
#define CAN_ESR1_TWRNINT_SHIFT                   17u
#define CAN_ESR1_TWRNINT_WIDTH                   1u
#define CAN_ESR1_TWRNINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TWRNINT_SHIFT))&CAN_ESR1_TWRNINT_MASK)
#define CAN_ESR1_SYNCH_MASK                      0x40000u
#define CAN_ESR1_SYNCH_SHIFT                     18u
#define CAN_ESR1_SYNCH_WIDTH                     1u
#define CAN_ESR1_SYNCH(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_SYNCH_SHIFT))&CAN_ESR1_SYNCH_MASK)
/* IMASK2 Bit Fields */
#define CAN_IMASK2_BUFHM_MASK                    0xFFFFFFFFu
#define CAN_IMASK2_BUFHM_SHIFT                   0u
#define CAN_IMASK2_BUFHM_WIDTH                   32u
#define CAN_IMASK2_BUFHM(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IMASK2_BUFHM_SHIFT))&CAN_IMASK2_BUFHM_MASK)
/* IMASK1 Bit Fields */
#define CAN_IMASK1_BUFLM_MASK                    0xFFFFFFFFu
#define CAN_IMASK1_BUFLM_SHIFT                   0u
#define CAN_IMASK1_BUFLM_WIDTH                   32u
#define CAN_IMASK1_BUFLM(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IMASK1_BUFLM_SHIFT))&CAN_IMASK1_BUFLM_MASK)
/* IFLAG2 Bit Fields */
#define CAN_IFLAG2_BUFHI_MASK                    0xFFFFFFFFu
#define CAN_IFLAG2_BUFHI_SHIFT                   0u
#define CAN_IFLAG2_BUFHI_WIDTH                   32u
#define CAN_IFLAG2_BUFHI(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG2_BUFHI_SHIFT))&CAN_IFLAG2_BUFHI_MASK)
/* IFLAG1 Bit Fields */
#define CAN_IFLAG1_BUF0I_MASK                    0x1u
#define CAN_IFLAG1_BUF0I_SHIFT                   0u
#define CAN_IFLAG1_BUF0I_WIDTH                   1u
#define CAN_IFLAG1_BUF0I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF0I_SHIFT))&CAN_IFLAG1_BUF0I_MASK)
#define CAN_IFLAG1_BUF4TO1I_MASK                 0x1Eu
#define CAN_IFLAG1_BUF4TO1I_SHIFT                1u
#define CAN_IFLAG1_BUF4TO1I_WIDTH                4u
#define CAN_IFLAG1_BUF4TO1I(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF4TO1I_SHIFT))&CAN_IFLAG1_BUF4TO1I_MASK)
#define CAN_IFLAG1_BUF5I_MASK                    0x20u
#define CAN_IFLAG1_BUF5I_SHIFT                   5u
#define CAN_IFLAG1_BUF5I_WIDTH                   1u
#define CAN_IFLAG1_BUF5I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF5I_SHIFT))&CAN_IFLAG1_BUF5I_MASK)
#define CAN_IFLAG1_BUF6I_MASK                    0x40u
#define CAN_IFLAG1_BUF6I_SHIFT                   6u
#define CAN_IFLAG1_BUF6I_WIDTH                   1u
#define CAN_IFLAG1_BUF6I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF6I_SHIFT))&CAN_IFLAG1_BUF6I_MASK)
#define CAN_IFLAG1_BUF7I_MASK                    0x80u
#define CAN_IFLAG1_BUF7I_SHIFT                   7u
#define CAN_IFLAG1_BUF7I_WIDTH                   1u
#define CAN_IFLAG1_BUF7I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF7I_SHIFT))&CAN_IFLAG1_BUF7I_MASK)
#define CAN_IFLAG1_BUF31TO8I_MASK                0xFFFFFF00u
#define CAN_IFLAG1_BUF31TO8I_SHIFT               8u
#define CAN_IFLAG1_BUF31TO8I_WIDTH               24u
#define CAN_IFLAG1_BUF31TO8I(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF31TO8I_SHIFT))&CAN_IFLAG1_BUF31TO8I_MASK)
/* CTRL2 Bit Fields */
#define CAN_CTRL2_EACEN_MASK                     0x10000u
#define CAN_CTRL2_EACEN_SHIFT                    16u
#define CAN_CTRL2_EACEN_WIDTH                    1u
#define CAN_CTRL2_EACEN(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_EACEN_SHIFT))&CAN_CTRL2_EACEN_MASK)
#define CAN_CTRL2_RRS_MASK                       0x20000u
#define CAN_CTRL2_RRS_SHIFT                      17u
#define CAN_CTRL2_RRS_WIDTH                      1u
#define CAN_CTRL2_RRS(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_RRS_SHIFT))&CAN_CTRL2_RRS_MASK)
#define CAN_CTRL2_MRP_MASK                       0x40000u
#define CAN_CTRL2_MRP_SHIFT                      18u
#define CAN_CTRL2_MRP_WIDTH                      1u
#define CAN_CTRL2_MRP(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_MRP_SHIFT))&CAN_CTRL2_MRP_MASK)
#define CAN_CTRL2_TASD_MASK                      0xF80000u
#define CAN_CTRL2_TASD_SHIFT                     19u
#define CAN_CTRL2_TASD_WIDTH                     5u
#define CAN_CTRL2_TASD(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_TASD_SHIFT))&CAN_CTRL2_TASD_MASK)
#define CAN_CTRL2_RFFN_MASK                      0xF000000u
#define CAN_CTRL2_RFFN_SHIFT                     24u
#define CAN_CTRL2_RFFN_WIDTH                     4u
#define CAN_CTRL2_RFFN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_RFFN_SHIFT))&CAN_CTRL2_RFFN_MASK)
#define CAN_CTRL2_WRMFRZ_MASK                    0x10000000u
#define CAN_CTRL2_WRMFRZ_SHIFT                   28u
#define CAN_CTRL2_WRMFRZ_WIDTH                   1u
#define CAN_CTRL2_WRMFRZ(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_WRMFRZ_SHIFT))&CAN_CTRL2_WRMFRZ_MASK)
#define CAN_CTRL2_ECRWRE_MASK                    0x20000000u
#define CAN_CTRL2_ECRWRE_SHIFT                   29u
#define CAN_CTRL2_ECRWRE_WIDTH                   1u
#define CAN_CTRL2_ECRWRE(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_ECRWRE_SHIFT))&CAN_CTRL2_ECRWRE_MASK)
/* ESR2 Bit Fields */
#define CAN_ESR2_IMB_MASK                        0x2000u
#define CAN_ESR2_IMB_SHIFT                       13u
#define CAN_ESR2_IMB_WIDTH                       1u
#define CAN_ESR2_IMB(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_IMB_SHIFT))&CAN_ESR2_IMB_MASK)
#define CAN_ESR2_VPS_MASK                        0x4000u
#define CAN_ESR2_VPS_SHIFT                       14u
#define CAN_ESR2_VPS_WIDTH                       1u
#define CAN_ESR2_VPS(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_VPS_SHIFT))&CAN_ESR2_VPS_MASK)
#define CAN_ESR2_LPTM_MASK                       0x7F0000u
#define CAN_ESR2_LPTM_SHIFT                      16u
#define CAN_ESR2_LPTM_WIDTH                      7u
#define CAN_ESR2_LPTM(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_LPTM_SHIFT))&CAN_ESR2_LPTM_MASK)
/* CRCR Bit Fields */
#define CAN_CRCR_TXCRC_MASK                      0x7FFFu
#define CAN_CRCR_TXCRC_SHIFT                     0u
#define CAN_CRCR_TXCRC_WIDTH                     15u
#define CAN_CRCR_TXCRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CRCR_TXCRC_SHIFT))&CAN_CRCR_TXCRC_MASK)
#define CAN_CRCR_MBCRC_MASK                      0x7F0000u
#define CAN_CRCR_MBCRC_SHIFT                     16u
#define CAN_CRCR_MBCRC_WIDTH                     7u
#define CAN_CRCR_MBCRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CRCR_MBCRC_SHIFT))&CAN_CRCR_MBCRC_MASK)
/* RXFGMASK Bit Fields */
#define CAN_RXFGMASK_FGM_MASK                    0xFFFFFFFFu
#define CAN_RXFGMASK_FGM_SHIFT                   0u
#define CAN_RXFGMASK_FGM_WIDTH                   32u
#define CAN_RXFGMASK_FGM(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_FGM_SHIFT))&CAN_RXFGMASK_FGM_MASK)
/* RXFIR Bit Fields */
#define CAN_RXFIR_IDHIT_MASK                     0x1FFu
#define CAN_RXFIR_IDHIT_SHIFT                    0u
#define CAN_RXFIR_IDHIT_WIDTH                    9u
#define CAN_RXFIR_IDHIT(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_RXFIR_IDHIT_SHIFT))&CAN_RXFIR_IDHIT_MASK)
/* RAMn Bit Fields */
#define CAN_RAMn_DATA_BYTE_3_MASK                0xFFu
#define CAN_RAMn_DATA_BYTE_3_SHIFT               0u
#define CAN_RAMn_DATA_BYTE_3_WIDTH               8u
#define CAN_RAMn_DATA_BYTE_3(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_RAMn_DATA_BYTE_3_SHIFT))&CAN_RAMn_DATA_BYTE_3_MASK)
#define CAN_RAMn_DATA_BYTE_2_MASK                0xFF00u
#define CAN_RAMn_DATA_BYTE_2_SHIFT               8u
#define CAN_RAMn_DATA_BYTE_2_WIDTH               8u
#define CAN_RAMn_DATA_BYTE_2(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_RAMn_DATA_BYTE_2_SHIFT))&CAN_RAMn_DATA_BYTE_2_MASK)
#define CAN_RAMn_DATA_BYTE_1_MASK                0xFF0000u
#define CAN_RAMn_DATA_BYTE_1_SHIFT               16u
#define CAN_RAMn_DATA_BYTE_1_WIDTH               8u
#define CAN_RAMn_DATA_BYTE_1(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_RAMn_DATA_BYTE_1_SHIFT))&CAN_RAMn_DATA_BYTE_1_MASK)
#define CAN_RAMn_DATA_BYTE_0_MASK                0xFF000000u
#define CAN_RAMn_DATA_BYTE_0_SHIFT               24u
#define CAN_RAMn_DATA_BYTE_0_WIDTH               8u
#define CAN_RAMn_DATA_BYTE_0(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_RAMn_DATA_BYTE_0_SHIFT))&CAN_RAMn_DATA_BYTE_0_MASK)
/* RXIMR Bit Fields */
#define CAN_RXIMR_MI_MASK                        0xFFFFFFFFu
#define CAN_RXIMR_MI_SHIFT                       0u
#define CAN_RXIMR_MI_WIDTH                       32u
#define CAN_RXIMR_MI(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_RXIMR_MI_SHIFT))&CAN_RXIMR_MI_MASK)
/* MECR Bit Fields */
#define CAN_MECR_NCEFAFRZ_MASK                   0x80u
#define CAN_MECR_NCEFAFRZ_SHIFT                  7u
#define CAN_MECR_NCEFAFRZ_WIDTH                  1u
#define CAN_MECR_NCEFAFRZ(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_MECR_NCEFAFRZ_SHIFT))&CAN_MECR_NCEFAFRZ_MASK)
#define CAN_MECR_ECCDIS_MASK                     0x100u
#define CAN_MECR_ECCDIS_SHIFT                    8u
#define CAN_MECR_ECCDIS_WIDTH                    1u
#define CAN_MECR_ECCDIS(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_MECR_ECCDIS_SHIFT))&CAN_MECR_ECCDIS_MASK)
#define CAN_MECR_RERRDIS_MASK                    0x200u
#define CAN_MECR_RERRDIS_SHIFT                   9u
#define CAN_MECR_RERRDIS_WIDTH                   1u
#define CAN_MECR_RERRDIS(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_MECR_RERRDIS_SHIFT))&CAN_MECR_RERRDIS_MASK)
#define CAN_MECR_EXTERRIE_MASK                   0x2000u
#define CAN_MECR_EXTERRIE_SHIFT                  13u
#define CAN_MECR_EXTERRIE_WIDTH                  1u
#define CAN_MECR_EXTERRIE(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_MECR_EXTERRIE_SHIFT))&CAN_MECR_EXTERRIE_MASK)
#define CAN_MECR_FAERRIE_MASK                    0x4000u
#define CAN_MECR_FAERRIE_SHIFT                   14u
#define CAN_MECR_FAERRIE_WIDTH                   1u
#define CAN_MECR_FAERRIE(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_MECR_FAERRIE_SHIFT))&CAN_MECR_FAERRIE_MASK)
#define CAN_MECR_HAERRIE_MASK                    0x8000u
#define CAN_MECR_HAERRIE_SHIFT                   15u
#define CAN_MECR_HAERRIE_WIDTH                   1u
#define CAN_MECR_HAERRIE(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_MECR_HAERRIE_SHIFT))&CAN_MECR_HAERRIE_MASK)
#define CAN_MECR_CEI_MSK_MASK                    0x10000u
#define CAN_MECR_CEI_MSK_SHIFT                   16u
#define CAN_MECR_CEI_MSK_WIDTH                   1u
#define CAN_MECR_CEI_MSK(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_MECR_CEI_MSK_SHIFT))&CAN_MECR_CEI_MSK_MASK)
#define CAN_MECR_ECRWRDIS_MASK                   0x80000000u
#define CAN_MECR_ECRWRDIS_SHIFT                  31u
#define CAN_MECR_ECRWRDIS_WIDTH                  1u
#define CAN_MECR_ECRWRDIS(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_MECR_ECRWRDIS_SHIFT))&CAN_MECR_ECRWRDIS_MASK)
/* ERRIAR Bit Fields */
#define CAN_ERRIAR_INJADDR_MASK                  0x3FFFu
#define CAN_ERRIAR_INJADDR_SHIFT                 0u
#define CAN_ERRIAR_INJADDR_WIDTH                 14u
#define CAN_ERRIAR_INJADDR(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_ERRIAR_INJADDR_SHIFT))&CAN_ERRIAR_INJADDR_MASK)
/* ERRIDPR Bit Fields */
#define CAN_ERRIDPR_DFLIP_MASK                   0xFFFFFFFFu
#define CAN_ERRIDPR_DFLIP_SHIFT                  0u
#define CAN_ERRIDPR_DFLIP_WIDTH                  32u
#define CAN_ERRIDPR_DFLIP(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_ERRIDPR_DFLIP_SHIFT))&CAN_ERRIDPR_DFLIP_MASK)
/* ERRIPPR Bit Fields */
#define CAN_ERRIPPR_PFLIP0_MASK                  0x1Fu
#define CAN_ERRIPPR_PFLIP0_SHIFT                 0u
#define CAN_ERRIPPR_PFLIP0_WIDTH                 5u
#define CAN_ERRIPPR_PFLIP0(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_ERRIPPR_PFLIP0_SHIFT))&CAN_ERRIPPR_PFLIP0_MASK)
#define CAN_ERRIPPR_PFLIP1_MASK                  0x1F00u
#define CAN_ERRIPPR_PFLIP1_SHIFT                 8u
#define CAN_ERRIPPR_PFLIP1_WIDTH                 5u
#define CAN_ERRIPPR_PFLIP1(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_ERRIPPR_PFLIP1_SHIFT))&CAN_ERRIPPR_PFLIP1_MASK)
#define CAN_ERRIPPR_PFLIP2_MASK                  0x1F0000u
#define CAN_ERRIPPR_PFLIP2_SHIFT                 16u
#define CAN_ERRIPPR_PFLIP2_WIDTH                 5u
#define CAN_ERRIPPR_PFLIP2(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_ERRIPPR_PFLIP2_SHIFT))&CAN_ERRIPPR_PFLIP2_MASK)
#define CAN_ERRIPPR_PFLIP3_MASK                  0x1F000000u
#define CAN_ERRIPPR_PFLIP3_SHIFT                 24u
#define CAN_ERRIPPR_PFLIP3_WIDTH                 5u
#define CAN_ERRIPPR_PFLIP3(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_ERRIPPR_PFLIP3_SHIFT))&CAN_ERRIPPR_PFLIP3_MASK)
/* RERRAR Bit Fields */
#define CAN_RERRAR_ERRADDR_MASK                  0x3FFFu
#define CAN_RERRAR_ERRADDR_SHIFT                 0u
#define CAN_RERRAR_ERRADDR_WIDTH                 14u
#define CAN_RERRAR_ERRADDR(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RERRAR_ERRADDR_SHIFT))&CAN_RERRAR_ERRADDR_MASK)
#define CAN_RERRAR_SAID_MASK                     0x70000u
#define CAN_RERRAR_SAID_SHIFT                    16u
#define CAN_RERRAR_SAID_WIDTH                    3u
#define CAN_RERRAR_SAID(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_RERRAR_SAID_SHIFT))&CAN_RERRAR_SAID_MASK)
#define CAN_RERRAR_NCE_MASK                      0x1000000u
#define CAN_RERRAR_NCE_SHIFT                     24u
#define CAN_RERRAR_NCE_WIDTH                     1u
#define CAN_RERRAR_NCE(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_RERRAR_NCE_SHIFT))&CAN_RERRAR_NCE_MASK)
/* RERRDR Bit Fields */
#define CAN_RERRDR_RDATA_MASK                    0xFFFFFFFFu
#define CAN_RERRDR_RDATA_SHIFT                   0u
#define CAN_RERRDR_RDATA_WIDTH                   32u
#define CAN_RERRDR_RDATA(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_RERRDR_RDATA_SHIFT))&CAN_RERRDR_RDATA_MASK)
/* RERRSYNR Bit Fields */
#define CAN_RERRSYNR_SYND0_MASK                  0x1Fu
#define CAN_RERRSYNR_SYND0_SHIFT                 0u
#define CAN_RERRSYNR_SYND0_WIDTH                 5u
#define CAN_RERRSYNR_SYND0(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RERRSYNR_SYND0_SHIFT))&CAN_RERRSYNR_SYND0_MASK)
#define CAN_RERRSYNR_BE0_MASK                    0x80u
#define CAN_RERRSYNR_BE0_SHIFT                   7u
#define CAN_RERRSYNR_BE0_WIDTH                   1u
#define CAN_RERRSYNR_BE0(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_RERRSYNR_BE0_SHIFT))&CAN_RERRSYNR_BE0_MASK)
#define CAN_RERRSYNR_SYND1_MASK                  0x1F00u
#define CAN_RERRSYNR_SYND1_SHIFT                 8u
#define CAN_RERRSYNR_SYND1_WIDTH                 5u
#define CAN_RERRSYNR_SYND1(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RERRSYNR_SYND1_SHIFT))&CAN_RERRSYNR_SYND1_MASK)
#define CAN_RERRSYNR_BE1_MASK                    0x8000u
#define CAN_RERRSYNR_BE1_SHIFT                   15u
#define CAN_RERRSYNR_BE1_WIDTH                   1u
#define CAN_RERRSYNR_BE1(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_RERRSYNR_BE1_SHIFT))&CAN_RERRSYNR_BE1_MASK)
#define CAN_RERRSYNR_SYND2_MASK                  0x1F0000u
#define CAN_RERRSYNR_SYND2_SHIFT                 16u
#define CAN_RERRSYNR_SYND2_WIDTH                 5u
#define CAN_RERRSYNR_SYND2(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RERRSYNR_SYND2_SHIFT))&CAN_RERRSYNR_SYND2_MASK)
#define CAN_RERRSYNR_BE2_MASK                    0x800000u
#define CAN_RERRSYNR_BE2_SHIFT                   23u
#define CAN_RERRSYNR_BE2_WIDTH                   1u
#define CAN_RERRSYNR_BE2(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_RERRSYNR_BE2_SHIFT))&CAN_RERRSYNR_BE2_MASK)
#define CAN_RERRSYNR_SYND3_MASK                  0x1F000000u
#define CAN_RERRSYNR_SYND3_SHIFT                 24u
#define CAN_RERRSYNR_SYND3_WIDTH                 5u
#define CAN_RERRSYNR_SYND3(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RERRSYNR_SYND3_SHIFT))&CAN_RERRSYNR_SYND3_MASK)
#define CAN_RERRSYNR_BE3_MASK                    0x80000000u
#define CAN_RERRSYNR_BE3_SHIFT                   31u
#define CAN_RERRSYNR_BE3_WIDTH                   1u
#define CAN_RERRSYNR_BE3(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_RERRSYNR_BE3_SHIFT))&CAN_RERRSYNR_BE3_MASK)
/* ERRSR Bit Fields */
#define CAN_ERRSR_CEIOF_MASK                     0x1u
#define CAN_ERRSR_CEIOF_SHIFT                    0u
#define CAN_ERRSR_CEIOF_WIDTH                    1u
#define CAN_ERRSR_CEIOF(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ERRSR_CEIOF_SHIFT))&CAN_ERRSR_CEIOF_MASK)
#define CAN_ERRSR_FANCEIOF_MASK                  0x4u
#define CAN_ERRSR_FANCEIOF_SHIFT                 2u
#define CAN_ERRSR_FANCEIOF_WIDTH                 1u
#define CAN_ERRSR_FANCEIOF(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_ERRSR_FANCEIOF_SHIFT))&CAN_ERRSR_FANCEIOF_MASK)
#define CAN_ERRSR_HANCEIOF_MASK                  0x8u
#define CAN_ERRSR_HANCEIOF_SHIFT                 3u
#define CAN_ERRSR_HANCEIOF_WIDTH                 1u
#define CAN_ERRSR_HANCEIOF(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_ERRSR_HANCEIOF_SHIFT))&CAN_ERRSR_HANCEIOF_MASK)
#define CAN_ERRSR_CEIF_MASK                      0x10000u
#define CAN_ERRSR_CEIF_SHIFT                     16u
#define CAN_ERRSR_CEIF_WIDTH                     1u
#define CAN_ERRSR_CEIF(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ERRSR_CEIF_SHIFT))&CAN_ERRSR_CEIF_MASK)
#define CAN_ERRSR_FANCEIF_MASK                   0x40000u
#define CAN_ERRSR_FANCEIF_SHIFT                  18u
#define CAN_ERRSR_FANCEIF_WIDTH                  1u
#define CAN_ERRSR_FANCEIF(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_ERRSR_FANCEIF_SHIFT))&CAN_ERRSR_FANCEIF_MASK)
#define CAN_ERRSR_HANCEIF_MASK                   0x80000u
#define CAN_ERRSR_HANCEIF_SHIFT                  19u
#define CAN_ERRSR_HANCEIF_WIDTH                  1u
#define CAN_ERRSR_HANCEIF(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_ERRSR_HANCEIF_SHIFT))&CAN_ERRSR_HANCEIF_MASK)

/*!
 * @}
 */ /* end of group CAN_Register_Masks */


/*!
 * @}
 */ /* end of group CAN_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CMU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMU_Peripheral_Access_Layer CMU Peripheral Access Layer
 * @{
 */


/** CMU - Size of Registers Arrays */

/** CMU - Register Layout Typedef */
typedef struct {
  __IO uint32_t CSR;                               /**< CMU Control Status Register, offset: 0x0 */
  __I  uint32_t FDR;                               /**< CMU Frequency Display Register, offset: 0x4 */
  __IO uint32_t HFREFR;                            /**< CMU High Frequency Reference Register CLKMN1, offset: 0x8 */
  __IO uint32_t LFREFR;                            /**< CMU Low Frequency Reference Register CLKMN1, offset: 0xC */
  __IO uint32_t ISR;                               /**< CMU Interrupt Status Register, offset: 0x10 */
       uint8_t RESERVED_0[4];
  __IO uint32_t MDR;                               /**< CMU Measurement Duration Register, offset: 0x18 */
} CMU_Type, *CMU_MemMapPtr;

 /** Number of instances of the CMU module. */
#define CMU_INSTANCE_COUNT                       (5u)


/* CMU - Peripheral instance base addresses */
/** Peripheral CMU_0 base address */
#define CMU_0_BASE                               (0xFBFB0200u)
/** Peripheral CMU_0 base pointer */
#define CMU_0                                    ((CMU_Type *)CMU_0_BASE)
/** Peripheral CMU_1 base address */
#define CMU_1_BASE                               (0xFBFB0240u)
/** Peripheral CMU_1 base pointer */
#define CMU_1                                    ((CMU_Type *)CMU_1_BASE)
/** Peripheral CMU_2 base address */
#define CMU_2_BASE                               (0xFBFB0280u)
/** Peripheral CMU_2 base pointer */
#define CMU_2                                    ((CMU_Type *)CMU_2_BASE)
/** Peripheral CMU_3 base address */
#define CMU_3_BASE                               (0xFBFB02C0u)
/** Peripheral CMU_3 base pointer */
#define CMU_3                                    ((CMU_Type *)CMU_3_BASE)
/** Peripheral CMU_4 base address */
#define CMU_4_BASE                               (0xFBFB0300u)
/** Peripheral CMU_4 base pointer */
#define CMU_4                                    ((CMU_Type *)CMU_4_BASE)
/** Array initializer of CMU peripheral base addresses */
#define CMU_BASE_ADDRS                           { CMU_0_BASE, CMU_1_BASE, CMU_2_BASE, CMU_3_BASE, CMU_4_BASE }
/** Array initializer of CMU peripheral base pointers */
#define CMU_BASE_PTRS                            { CMU_0, CMU_1, CMU_2, CMU_3, CMU_4 }

/* ----------------------------------------------------------------------------
   -- CMU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMU_Register_Masks CMU Register Masks
 * @{
 */

/* CSR Bit Fields */
#define CMU_CSR_CME_MASK                         0x1u
#define CMU_CSR_CME_SHIFT                        0u
#define CMU_CSR_CME_WIDTH                        1u
#define CMU_CSR_CME(x)                           (((uint32_t)(((uint32_t)(x))<<CMU_CSR_CME_SHIFT))&CMU_CSR_CME_MASK)
#define CMU_CSR_RCDIV_MASK                       0x6u
#define CMU_CSR_RCDIV_SHIFT                      1u
#define CMU_CSR_RCDIV_WIDTH                      2u
#define CMU_CSR_RCDIV(x)                         (((uint32_t)(((uint32_t)(x))<<CMU_CSR_RCDIV_SHIFT))&CMU_CSR_RCDIV_MASK)
#define CMU_CSR_CKSEL1_MASK                      0x300u
#define CMU_CSR_CKSEL1_SHIFT                     8u
#define CMU_CSR_CKSEL1_WIDTH                     2u
#define CMU_CSR_CKSEL1(x)                        (((uint32_t)(((uint32_t)(x))<<CMU_CSR_CKSEL1_SHIFT))&CMU_CSR_CKSEL1_MASK)
#define CMU_CSR_SFM_MASK                         0x800000u
#define CMU_CSR_SFM_SHIFT                        23u
#define CMU_CSR_SFM_WIDTH                        1u
#define CMU_CSR_SFM(x)                           (((uint32_t)(((uint32_t)(x))<<CMU_CSR_SFM_SHIFT))&CMU_CSR_SFM_MASK)
/* FDR Bit Fields */
#define CMU_FDR_FD_MASK                          0xFFFFFu
#define CMU_FDR_FD_SHIFT                         0u
#define CMU_FDR_FD_WIDTH                         20u
#define CMU_FDR_FD(x)                            (((uint32_t)(((uint32_t)(x))<<CMU_FDR_FD_SHIFT))&CMU_FDR_FD_MASK)
/* HFREFR Bit Fields */
#define CMU_HFREFR_HFREF_MASK                    0xFFFu
#define CMU_HFREFR_HFREF_SHIFT                   0u
#define CMU_HFREFR_HFREF_WIDTH                   12u
#define CMU_HFREFR_HFREF(x)                      (((uint32_t)(((uint32_t)(x))<<CMU_HFREFR_HFREF_SHIFT))&CMU_HFREFR_HFREF_MASK)
/* LFREFR Bit Fields */
#define CMU_LFREFR_LFREF_MASK                    0xFFFu
#define CMU_LFREFR_LFREF_SHIFT                   0u
#define CMU_LFREFR_LFREF_WIDTH                   12u
#define CMU_LFREFR_LFREF(x)                      (((uint32_t)(((uint32_t)(x))<<CMU_LFREFR_LFREF_SHIFT))&CMU_LFREFR_LFREF_MASK)
/* ISR Bit Fields */
#define CMU_ISR_OLRI_MASK                        0x1u
#define CMU_ISR_OLRI_SHIFT                       0u
#define CMU_ISR_OLRI_WIDTH                       1u
#define CMU_ISR_OLRI(x)                          (((uint32_t)(((uint32_t)(x))<<CMU_ISR_OLRI_SHIFT))&CMU_ISR_OLRI_MASK)
#define CMU_ISR_FLLI_MASK                        0x2u
#define CMU_ISR_FLLI_SHIFT                       1u
#define CMU_ISR_FLLI_WIDTH                       1u
#define CMU_ISR_FLLI(x)                          (((uint32_t)(((uint32_t)(x))<<CMU_ISR_FLLI_SHIFT))&CMU_ISR_FLLI_MASK)
#define CMU_ISR_FHHI_MASK                        0x4u
#define CMU_ISR_FHHI_SHIFT                       2u
#define CMU_ISR_FHHI_WIDTH                       1u
#define CMU_ISR_FHHI(x)                          (((uint32_t)(((uint32_t)(x))<<CMU_ISR_FHHI_SHIFT))&CMU_ISR_FHHI_MASK)
/* MDR Bit Fields */
#define CMU_MDR_MD_MASK                          0xFFFFFu
#define CMU_MDR_MD_SHIFT                         0u
#define CMU_MDR_MD_WIDTH                         20u
#define CMU_MDR_MD(x)                            (((uint32_t)(((uint32_t)(x))<<CMU_MDR_MD_SHIFT))&CMU_MDR_MD_MASK)

/*!
 * @}
 */ /* end of group CMU_Register_Masks */


/*!
 * @}
 */ /* end of group CMU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CRC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CRC_Peripheral_Access_Layer CRC Peripheral Access Layer
 * @{
 */


/** CRC - Size of Registers Arrays */

/** CRC - Register Layout Typedef */
typedef struct {
  __IO uint32_t CFG;                               /**< Configuration Register, offset: 0x0 */
  __IO uint32_t INP;                               /**< Input Register, offset: 0x4 */
  __IO uint32_t CSTAT;                             /**< Current Status Register, offset: 0x8 */
  __I  uint32_t OUTP;                              /**< Output Register, offset: 0xC */
} CRC_Type, *CRC_MemMapPtr;

 /** Number of instances of the CRC module. */
#define CRC_INSTANCE_COUNT                       (3u)


/* CRC - Peripheral instance base addresses */
/** Peripheral CRC_0 base address */
#define CRC_0_BASE                               (0xFFF64000u)
/** Peripheral CRC_0 base pointer */
#define CRC_0                                    ((CRC_Type *)CRC_0_BASE)
/** Peripheral CRC_1 base address */
#define CRC_1_BASE                               (0xFFF64010u)
/** Peripheral CRC_1 base pointer */
#define CRC_1                                    ((CRC_Type *)CRC_1_BASE)
/** Peripheral CRC_2 base address */
#define CRC_2_BASE                               (0xFFF64020u)
/** Peripheral CRC_2 base pointer */
#define CRC_2                                    ((CRC_Type *)CRC_2_BASE)
/** Array initializer of CRC peripheral base addresses */
#define CRC_BASE_ADDRS                           { CRC_0_BASE, CRC_1_BASE, CRC_2_BASE }
/** Array initializer of CRC peripheral base pointers */
#define CRC_BASE_PTRS                            { CRC_0, CRC_1, CRC_2 }

/* ----------------------------------------------------------------------------
   -- CRC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CRC_Register_Masks CRC Register Masks
 * @{
 */

/* CFG Bit Fields */
#define CRC_CFG_INV_MASK                         0x1u
#define CRC_CFG_INV_SHIFT                        0u
#define CRC_CFG_INV_WIDTH                        1u
#define CRC_CFG_INV(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_CFG_INV_SHIFT))&CRC_CFG_INV_MASK)
#define CRC_CFG_SWAP_MASK                        0x2u
#define CRC_CFG_SWAP_SHIFT                       1u
#define CRC_CFG_SWAP_WIDTH                       1u
#define CRC_CFG_SWAP(x)                          (((uint32_t)(((uint32_t)(x))<<CRC_CFG_SWAP_SHIFT))&CRC_CFG_SWAP_MASK)
#define CRC_CFG_POLYG_MASK                       0xCu
#define CRC_CFG_POLYG_SHIFT                      2u
#define CRC_CFG_POLYG_WIDTH                      2u
#define CRC_CFG_POLYG(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_CFG_POLYG_SHIFT))&CRC_CFG_POLYG_MASK)
#define CRC_CFG_SWAP_BITWISE_MASK                0x10u
#define CRC_CFG_SWAP_BITWISE_SHIFT               4u
#define CRC_CFG_SWAP_BITWISE_WIDTH               1u
#define CRC_CFG_SWAP_BITWISE(x)                  (((uint32_t)(((uint32_t)(x))<<CRC_CFG_SWAP_BITWISE_SHIFT))&CRC_CFG_SWAP_BITWISE_MASK)
#define CRC_CFG_SWAP_BYTEWISE_MASK               0x20u
#define CRC_CFG_SWAP_BYTEWISE_SHIFT              5u
#define CRC_CFG_SWAP_BYTEWISE_WIDTH              1u
#define CRC_CFG_SWAP_BYTEWISE(x)                 (((uint32_t)(((uint32_t)(x))<<CRC_CFG_SWAP_BYTEWISE_SHIFT))&CRC_CFG_SWAP_BYTEWISE_MASK)
/* INP Bit Fields */
#define CRC_INP_INP_MASK                         0xFFFFFFFFu
#define CRC_INP_INP_SHIFT                        0u
#define CRC_INP_INP_WIDTH                        32u
#define CRC_INP_INP(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_INP_INP_SHIFT))&CRC_INP_INP_MASK)
/* CSTAT Bit Fields */
#define CRC_CSTAT_CSTAT_MASK                     0xFFFFFFFFu
#define CRC_CSTAT_CSTAT_SHIFT                    0u
#define CRC_CSTAT_CSTAT_WIDTH                    32u
#define CRC_CSTAT_CSTAT(x)                       (((uint32_t)(((uint32_t)(x))<<CRC_CSTAT_CSTAT_SHIFT))&CRC_CSTAT_CSTAT_MASK)
/* OUTP Bit Fields */
#define CRC_OUTP_OUTP_MASK                       0xFFFFFFFFu
#define CRC_OUTP_OUTP_SHIFT                      0u
#define CRC_OUTP_OUTP_WIDTH                      32u
#define CRC_OUTP_OUTP(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_OUTP_OUTP_SHIFT))&CRC_OUTP_OUTP_MASK)

/*!
 * @}
 */ /* end of group CRC_Register_Masks */


/*!
 * @}
 */ /* end of group CRC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CTU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CTU_Peripheral_Access_Layer CTU Peripheral Access Layer
 * @{
 */


/** CTU - Size of Registers Arrays */
#define CTU_TCR_COUNT                            8u
#define CTU_CHANNEL_COUNT                        24u
#define CTU_FR_COUNT                             4u
#define CTU_FL_COUNT                             4u

/** CTU - Register Layout Typedef */
typedef struct {
  __IO uint32_t TGSISR;                            /**< Trigger Generator Subunit Input Selection Register, offset: 0x0 */
  __IO uint16_t TGSCR;                             /**< Trigger Generator Subunit Control Register, offset: 0x4 */
  __IO uint16_t TCR[CTU_TCR_COUNT];                /**< Trigger Compare Register, array offset: 0x6, array step: 0x2 */
  __IO uint16_t TGSCCR;                            /**< TGS Counter Compare Register, offset: 0x16 */
  __IO uint16_t TGSCRR;                            /**< TGS Counter Reload Register, offset: 0x18 */
       uint8_t RESERVED_0[2];
  __IO uint32_t CLCR1;                             /**< Commands List Control Register 1, offset: 0x1C */
  __IO uint32_t CLCR2;                             /**< Commands List Control Register 2, offset: 0x20 */
  __IO uint32_t THCR1;                             /**< Trigger Handler Control Register 1, offset: 0x24 */
  __IO uint32_t THCR2;                             /**< Trigger Handler Control Register 2, offset: 0x28 */
  union {                                          /* offset: 0x2C, array step: 0x2 */
    __IO uint16_t CLR_A;                             /**< Commands List Register A for ADC single-conversion mode commands, array offset: 0x2C, array step: 0x2 */
    __IO uint16_t CLR_B;                             /**< Command List Register B for ADC dual-conversion mode commands, array offset: 0x2C, array step: 0x2 */
    __IO uint16_t CLR_C;                             /**< Command List Register C for self-test commands, array offset: 0x2C, array step: 0x2 */
  } CHANNEL[CTU_CHANNEL_COUNT];
       uint8_t RESERVED_1[16];
  __IO uint16_t FDCR;                              /**< FIFO DMA Control Register, offset: 0x6C */
       uint8_t RESERVED_2[2];
  __IO uint32_t FCR;                               /**< FIFO Control Register, offset: 0x70 */
  __IO uint32_t FTH;                               /**< FIFO Threshold Register, offset: 0x74 */
       uint8_t RESERVED_3[4];
  __IO uint32_t FST;                               /**< FIFO Status Register, offset: 0x7C */
  __I  uint32_t FR[CTU_FR_COUNT];                  /**< FIFO Right Aligned Data Register, array offset: 0x80, array step: 0x4 */
       uint8_t RESERVED_4[16];
  __I  uint32_t FL[CTU_FL_COUNT];                  /**< FIFO Signed Left Aligned Data Register, array offset: 0xA0, array step: 0x4 */
       uint8_t RESERVED_5[16];
  __IO uint16_t EFR;                               /**< Error Flag Register, offset: 0xC0 */
  __IO uint16_t IFR;                               /**< Interrupt Flag Register, offset: 0xC2 */
  __IO uint16_t IR;                                /**< Interrupt/DMA Register, offset: 0xC4 */
  __IO uint16_t COTR;                              /**< Control ON Time Register, offset: 0xC6 */
  __IO uint16_t CR;                                /**< Control Register, offset: 0xC8 */
  __IO uint16_t DFR;                               /**< Digital Filter Register, offset: 0xCA */
  __IO uint16_t EXPAR;                             /**< Expected Value A Register, offset: 0xCC */
  __IO uint16_t EXPBR;                             /**< Expected Value B Register, offset: 0xCE */
  __IO uint16_t CNTRNGR;                           /**< Counter Range Register, offset: 0xD0 */
       uint8_t RESERVED_6[2];
  __IO uint32_t LISTCSR;                           /**< List Control/Status Register, offset: 0xD4 */
} CTU_Type, *CTU_MemMapPtr;

 /** Number of instances of the CTU module. */
#define CTU_INSTANCE_COUNT                       (2u)


/* CTU - Peripheral instance base addresses */
/** Peripheral CTU_0 base address */
#define CTU_0_BASE                               (0xFBC10000u)
/** Peripheral CTU_0 base pointer */
#define CTU_0                                    ((CTU_Type *)CTU_0_BASE)
/** Peripheral CTU_1 base address */
#define CTU_1_BASE                               (0xFFC14000u)
/** Peripheral CTU_1 base pointer */
#define CTU_1                                    ((CTU_Type *)CTU_1_BASE)
/** Array initializer of CTU peripheral base addresses */
#define CTU_BASE_ADDRS                           { CTU_0_BASE, CTU_1_BASE }
/** Array initializer of CTU peripheral base pointers */
#define CTU_BASE_PTRS                            { CTU_0, CTU_1 }

/* ----------------------------------------------------------------------------
   -- CTU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CTU_Register_Masks CTU Register Masks
 * @{
 */

/* TGSISR Bit Fields */
#define CTU_TGSISR_I0_RE_MASK                    0x1u
#define CTU_TGSISR_I0_RE_SHIFT                   0u
#define CTU_TGSISR_I0_RE_WIDTH                   1u
#define CTU_TGSISR_I0_RE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I0_RE_SHIFT))&CTU_TGSISR_I0_RE_MASK)
#define CTU_TGSISR_I0_FE_MASK                    0x2u
#define CTU_TGSISR_I0_FE_SHIFT                   1u
#define CTU_TGSISR_I0_FE_WIDTH                   1u
#define CTU_TGSISR_I0_FE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I0_FE_SHIFT))&CTU_TGSISR_I0_FE_MASK)
#define CTU_TGSISR_I1_RE_MASK                    0x4u
#define CTU_TGSISR_I1_RE_SHIFT                   2u
#define CTU_TGSISR_I1_RE_WIDTH                   1u
#define CTU_TGSISR_I1_RE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I1_RE_SHIFT))&CTU_TGSISR_I1_RE_MASK)
#define CTU_TGSISR_I1_FE_MASK                    0x8u
#define CTU_TGSISR_I1_FE_SHIFT                   3u
#define CTU_TGSISR_I1_FE_WIDTH                   1u
#define CTU_TGSISR_I1_FE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I1_FE_SHIFT))&CTU_TGSISR_I1_FE_MASK)
#define CTU_TGSISR_I2_RE_MASK                    0x10u
#define CTU_TGSISR_I2_RE_SHIFT                   4u
#define CTU_TGSISR_I2_RE_WIDTH                   1u
#define CTU_TGSISR_I2_RE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I2_RE_SHIFT))&CTU_TGSISR_I2_RE_MASK)
#define CTU_TGSISR_I2_FE_MASK                    0x20u
#define CTU_TGSISR_I2_FE_SHIFT                   5u
#define CTU_TGSISR_I2_FE_WIDTH                   1u
#define CTU_TGSISR_I2_FE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I2_FE_SHIFT))&CTU_TGSISR_I2_FE_MASK)
#define CTU_TGSISR_I3_RE_MASK                    0x40u
#define CTU_TGSISR_I3_RE_SHIFT                   6u
#define CTU_TGSISR_I3_RE_WIDTH                   1u
#define CTU_TGSISR_I3_RE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I3_RE_SHIFT))&CTU_TGSISR_I3_RE_MASK)
#define CTU_TGSISR_I3_FE_MASK                    0x80u
#define CTU_TGSISR_I3_FE_SHIFT                   7u
#define CTU_TGSISR_I3_FE_WIDTH                   1u
#define CTU_TGSISR_I3_FE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I3_FE_SHIFT))&CTU_TGSISR_I3_FE_MASK)
#define CTU_TGSISR_I4_RE_MASK                    0x100u
#define CTU_TGSISR_I4_RE_SHIFT                   8u
#define CTU_TGSISR_I4_RE_WIDTH                   1u
#define CTU_TGSISR_I4_RE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I4_RE_SHIFT))&CTU_TGSISR_I4_RE_MASK)
#define CTU_TGSISR_I4_FE_MASK                    0x200u
#define CTU_TGSISR_I4_FE_SHIFT                   9u
#define CTU_TGSISR_I4_FE_WIDTH                   1u
#define CTU_TGSISR_I4_FE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I4_FE_SHIFT))&CTU_TGSISR_I4_FE_MASK)
#define CTU_TGSISR_I5_RE_MASK                    0x400u
#define CTU_TGSISR_I5_RE_SHIFT                   10u
#define CTU_TGSISR_I5_RE_WIDTH                   1u
#define CTU_TGSISR_I5_RE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I5_RE_SHIFT))&CTU_TGSISR_I5_RE_MASK)
#define CTU_TGSISR_I5_FE_MASK                    0x800u
#define CTU_TGSISR_I5_FE_SHIFT                   11u
#define CTU_TGSISR_I5_FE_WIDTH                   1u
#define CTU_TGSISR_I5_FE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I5_FE_SHIFT))&CTU_TGSISR_I5_FE_MASK)
#define CTU_TGSISR_I6_RE_MASK                    0x1000u
#define CTU_TGSISR_I6_RE_SHIFT                   12u
#define CTU_TGSISR_I6_RE_WIDTH                   1u
#define CTU_TGSISR_I6_RE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I6_RE_SHIFT))&CTU_TGSISR_I6_RE_MASK)
#define CTU_TGSISR_I6_FE_MASK                    0x2000u
#define CTU_TGSISR_I6_FE_SHIFT                   13u
#define CTU_TGSISR_I6_FE_WIDTH                   1u
#define CTU_TGSISR_I6_FE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I6_FE_SHIFT))&CTU_TGSISR_I6_FE_MASK)
#define CTU_TGSISR_I7_RE_MASK                    0x4000u
#define CTU_TGSISR_I7_RE_SHIFT                   14u
#define CTU_TGSISR_I7_RE_WIDTH                   1u
#define CTU_TGSISR_I7_RE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I7_RE_SHIFT))&CTU_TGSISR_I7_RE_MASK)
#define CTU_TGSISR_I7_FE_MASK                    0x8000u
#define CTU_TGSISR_I7_FE_SHIFT                   15u
#define CTU_TGSISR_I7_FE_WIDTH                   1u
#define CTU_TGSISR_I7_FE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I7_FE_SHIFT))&CTU_TGSISR_I7_FE_MASK)
#define CTU_TGSISR_I8_RE_MASK                    0x10000u
#define CTU_TGSISR_I8_RE_SHIFT                   16u
#define CTU_TGSISR_I8_RE_WIDTH                   1u
#define CTU_TGSISR_I8_RE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I8_RE_SHIFT))&CTU_TGSISR_I8_RE_MASK)
#define CTU_TGSISR_I8_FE_MASK                    0x20000u
#define CTU_TGSISR_I8_FE_SHIFT                   17u
#define CTU_TGSISR_I8_FE_WIDTH                   1u
#define CTU_TGSISR_I8_FE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I8_FE_SHIFT))&CTU_TGSISR_I8_FE_MASK)
#define CTU_TGSISR_I9_RE_MASK                    0x40000u
#define CTU_TGSISR_I9_RE_SHIFT                   18u
#define CTU_TGSISR_I9_RE_WIDTH                   1u
#define CTU_TGSISR_I9_RE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I9_RE_SHIFT))&CTU_TGSISR_I9_RE_MASK)
#define CTU_TGSISR_I9_FE_MASK                    0x80000u
#define CTU_TGSISR_I9_FE_SHIFT                   19u
#define CTU_TGSISR_I9_FE_WIDTH                   1u
#define CTU_TGSISR_I9_FE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I9_FE_SHIFT))&CTU_TGSISR_I9_FE_MASK)
#define CTU_TGSISR_I10_RE_MASK                   0x100000u
#define CTU_TGSISR_I10_RE_SHIFT                  20u
#define CTU_TGSISR_I10_RE_WIDTH                  1u
#define CTU_TGSISR_I10_RE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I10_RE_SHIFT))&CTU_TGSISR_I10_RE_MASK)
#define CTU_TGSISR_I10_FE_MASK                   0x200000u
#define CTU_TGSISR_I10_FE_SHIFT                  21u
#define CTU_TGSISR_I10_FE_WIDTH                  1u
#define CTU_TGSISR_I10_FE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I10_FE_SHIFT))&CTU_TGSISR_I10_FE_MASK)
#define CTU_TGSISR_I11_RE_MASK                   0x400000u
#define CTU_TGSISR_I11_RE_SHIFT                  22u
#define CTU_TGSISR_I11_RE_WIDTH                  1u
#define CTU_TGSISR_I11_RE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I11_RE_SHIFT))&CTU_TGSISR_I11_RE_MASK)
#define CTU_TGSISR_I11_FE_MASK                   0x800000u
#define CTU_TGSISR_I11_FE_SHIFT                  23u
#define CTU_TGSISR_I11_FE_WIDTH                  1u
#define CTU_TGSISR_I11_FE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I11_FE_SHIFT))&CTU_TGSISR_I11_FE_MASK)
#define CTU_TGSISR_I12_RE_MASK                   0x1000000u
#define CTU_TGSISR_I12_RE_SHIFT                  24u
#define CTU_TGSISR_I12_RE_WIDTH                  1u
#define CTU_TGSISR_I12_RE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I12_RE_SHIFT))&CTU_TGSISR_I12_RE_MASK)
#define CTU_TGSISR_I12_FE_MASK                   0x2000000u
#define CTU_TGSISR_I12_FE_SHIFT                  25u
#define CTU_TGSISR_I12_FE_WIDTH                  1u
#define CTU_TGSISR_I12_FE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I12_FE_SHIFT))&CTU_TGSISR_I12_FE_MASK)
#define CTU_TGSISR_I13_RE_MASK                   0x4000000u
#define CTU_TGSISR_I13_RE_SHIFT                  26u
#define CTU_TGSISR_I13_RE_WIDTH                  1u
#define CTU_TGSISR_I13_RE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I13_RE_SHIFT))&CTU_TGSISR_I13_RE_MASK)
#define CTU_TGSISR_I13_FE_MASK                   0x8000000u
#define CTU_TGSISR_I13_FE_SHIFT                  27u
#define CTU_TGSISR_I13_FE_WIDTH                  1u
#define CTU_TGSISR_I13_FE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I13_FE_SHIFT))&CTU_TGSISR_I13_FE_MASK)
#define CTU_TGSISR_I14_RE_MASK                   0x10000000u
#define CTU_TGSISR_I14_RE_SHIFT                  28u
#define CTU_TGSISR_I14_RE_WIDTH                  1u
#define CTU_TGSISR_I14_RE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I14_RE_SHIFT))&CTU_TGSISR_I14_RE_MASK)
#define CTU_TGSISR_I14_FE_MASK                   0x20000000u
#define CTU_TGSISR_I14_FE_SHIFT                  29u
#define CTU_TGSISR_I14_FE_WIDTH                  1u
#define CTU_TGSISR_I14_FE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I14_FE_SHIFT))&CTU_TGSISR_I14_FE_MASK)
#define CTU_TGSISR_I15_RE_MASK                   0x40000000u
#define CTU_TGSISR_I15_RE_SHIFT                  30u
#define CTU_TGSISR_I15_RE_WIDTH                  1u
#define CTU_TGSISR_I15_RE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I15_RE_SHIFT))&CTU_TGSISR_I15_RE_MASK)
#define CTU_TGSISR_I15_FE_MASK                   0x80000000u
#define CTU_TGSISR_I15_FE_SHIFT                  31u
#define CTU_TGSISR_I15_FE_WIDTH                  1u
#define CTU_TGSISR_I15_FE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_TGSISR_I15_FE_SHIFT))&CTU_TGSISR_I15_FE_MASK)
/* TGSCR Bit Fields */
#define CTU_TGSCR_TGS_M_MASK                     0x1u
#define CTU_TGSCR_TGS_M_SHIFT                    0u
#define CTU_TGSCR_TGS_M_WIDTH                    1u
#define CTU_TGSCR_TGS_M(x)                       (((uint16_t)(((uint16_t)(x))<<CTU_TGSCR_TGS_M_SHIFT))&CTU_TGSCR_TGS_M_MASK)
#define CTU_TGSCR_MRS_SM_MASK                    0x3Eu
#define CTU_TGSCR_MRS_SM_SHIFT                   1u
#define CTU_TGSCR_MRS_SM_WIDTH                   5u
#define CTU_TGSCR_MRS_SM(x)                      (((uint16_t)(((uint16_t)(x))<<CTU_TGSCR_MRS_SM_SHIFT))&CTU_TGSCR_MRS_SM_MASK)
#define CTU_TGSCR_PRES_MASK                      0xC0u
#define CTU_TGSCR_PRES_SHIFT                     6u
#define CTU_TGSCR_PRES_WIDTH                     2u
#define CTU_TGSCR_PRES(x)                        (((uint16_t)(((uint16_t)(x))<<CTU_TGSCR_PRES_SHIFT))&CTU_TGSCR_PRES_MASK)
#define CTU_TGSCR_ET_TM_MASK                     0x100u
#define CTU_TGSCR_ET_TM_SHIFT                    8u
#define CTU_TGSCR_ET_TM_WIDTH                    1u
#define CTU_TGSCR_ET_TM(x)                       (((uint16_t)(((uint16_t)(x))<<CTU_TGSCR_ET_TM_SHIFT))&CTU_TGSCR_ET_TM_MASK)
/* TCR Bit Fields */
#define CTU_TCR_TCRV_MASK                        0xFFFFu
#define CTU_TCR_TCRV_SHIFT                       0u
#define CTU_TCR_TCRV_WIDTH                       16u
#define CTU_TCR_TCRV(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_TCR_TCRV_SHIFT))&CTU_TCR_TCRV_MASK)
/* TGSCCR Bit Fields */
#define CTU_TGSCCR_TGSCCV_MASK                   0xFFFFu
#define CTU_TGSCCR_TGSCCV_SHIFT                  0u
#define CTU_TGSCCR_TGSCCV_WIDTH                  16u
#define CTU_TGSCCR_TGSCCV(x)                     (((uint16_t)(((uint16_t)(x))<<CTU_TGSCCR_TGSCCV_SHIFT))&CTU_TGSCCR_TGSCCV_MASK)
/* TGSCRR Bit Fields */
#define CTU_TGSCRR_TGSCRV_MASK                   0xFFFFu
#define CTU_TGSCRR_TGSCRV_SHIFT                  0u
#define CTU_TGSCRR_TGSCRV_WIDTH                  16u
#define CTU_TGSCRR_TGSCRV(x)                     (((uint16_t)(((uint16_t)(x))<<CTU_TGSCRR_TGSCRV_SHIFT))&CTU_TGSCRR_TGSCRV_MASK)
/* CLCR1 Bit Fields */
#define CTU_CLCR1_T0_INDEX_MASK                  0x1Fu
#define CTU_CLCR1_T0_INDEX_SHIFT                 0u
#define CTU_CLCR1_T0_INDEX_WIDTH                 5u
#define CTU_CLCR1_T0_INDEX(x)                    (((uint32_t)(((uint32_t)(x))<<CTU_CLCR1_T0_INDEX_SHIFT))&CTU_CLCR1_T0_INDEX_MASK)
#define CTU_CLCR1_T1_INDEX_MASK                  0x1F00u
#define CTU_CLCR1_T1_INDEX_SHIFT                 8u
#define CTU_CLCR1_T1_INDEX_WIDTH                 5u
#define CTU_CLCR1_T1_INDEX(x)                    (((uint32_t)(((uint32_t)(x))<<CTU_CLCR1_T1_INDEX_SHIFT))&CTU_CLCR1_T1_INDEX_MASK)
#define CTU_CLCR1_T2_INDEX_MASK                  0x1F0000u
#define CTU_CLCR1_T2_INDEX_SHIFT                 16u
#define CTU_CLCR1_T2_INDEX_WIDTH                 5u
#define CTU_CLCR1_T2_INDEX(x)                    (((uint32_t)(((uint32_t)(x))<<CTU_CLCR1_T2_INDEX_SHIFT))&CTU_CLCR1_T2_INDEX_MASK)
#define CTU_CLCR1_T3_INDEX_MASK                  0x1F000000u
#define CTU_CLCR1_T3_INDEX_SHIFT                 24u
#define CTU_CLCR1_T3_INDEX_WIDTH                 5u
#define CTU_CLCR1_T3_INDEX(x)                    (((uint32_t)(((uint32_t)(x))<<CTU_CLCR1_T3_INDEX_SHIFT))&CTU_CLCR1_T3_INDEX_MASK)
/* CLCR2 Bit Fields */
#define CTU_CLCR2_T4_INDEX_MASK                  0x1Fu
#define CTU_CLCR2_T4_INDEX_SHIFT                 0u
#define CTU_CLCR2_T4_INDEX_WIDTH                 5u
#define CTU_CLCR2_T4_INDEX(x)                    (((uint32_t)(((uint32_t)(x))<<CTU_CLCR2_T4_INDEX_SHIFT))&CTU_CLCR2_T4_INDEX_MASK)
#define CTU_CLCR2_T5_INDEX_MASK                  0x1F00u
#define CTU_CLCR2_T5_INDEX_SHIFT                 8u
#define CTU_CLCR2_T5_INDEX_WIDTH                 5u
#define CTU_CLCR2_T5_INDEX(x)                    (((uint32_t)(((uint32_t)(x))<<CTU_CLCR2_T5_INDEX_SHIFT))&CTU_CLCR2_T5_INDEX_MASK)
#define CTU_CLCR2_T6_INDEX_MASK                  0x1F0000u
#define CTU_CLCR2_T6_INDEX_SHIFT                 16u
#define CTU_CLCR2_T6_INDEX_WIDTH                 5u
#define CTU_CLCR2_T6_INDEX(x)                    (((uint32_t)(((uint32_t)(x))<<CTU_CLCR2_T6_INDEX_SHIFT))&CTU_CLCR2_T6_INDEX_MASK)
#define CTU_CLCR2_T7_INDEX_MASK                  0x1F000000u
#define CTU_CLCR2_T7_INDEX_SHIFT                 24u
#define CTU_CLCR2_T7_INDEX_WIDTH                 5u
#define CTU_CLCR2_T7_INDEX(x)                    (((uint32_t)(((uint32_t)(x))<<CTU_CLCR2_T7_INDEX_SHIFT))&CTU_CLCR2_T7_INDEX_MASK)
/* THCR1 Bit Fields */
#define CTU_THCR1_T0_ADCE_MASK                   0x1u
#define CTU_THCR1_T0_ADCE_SHIFT                  0u
#define CTU_THCR1_T0_ADCE_WIDTH                  1u
#define CTU_THCR1_T0_ADCE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T0_ADCE_SHIFT))&CTU_THCR1_T0_ADCE_MASK)
#define CTU_THCR1_T0_T1E_MASK                    0x2u
#define CTU_THCR1_T0_T1E_SHIFT                   1u
#define CTU_THCR1_T0_T1E_WIDTH                   1u
#define CTU_THCR1_T0_T1E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T0_T1E_SHIFT))&CTU_THCR1_T0_T1E_MASK)
#define CTU_THCR1_T0_T2E_MASK                    0x4u
#define CTU_THCR1_T0_T2E_SHIFT                   2u
#define CTU_THCR1_T0_T2E_WIDTH                   1u
#define CTU_THCR1_T0_T2E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T0_T2E_SHIFT))&CTU_THCR1_T0_T2E_MASK)
#define CTU_THCR1_T0_T3E_MASK                    0x8u
#define CTU_THCR1_T0_T3E_SHIFT                   3u
#define CTU_THCR1_T0_T3E_WIDTH                   1u
#define CTU_THCR1_T0_T3E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T0_T3E_SHIFT))&CTU_THCR1_T0_T3E_MASK)
#define CTU_THCR1_T0_T4E_MASK                    0x10u
#define CTU_THCR1_T0_T4E_SHIFT                   4u
#define CTU_THCR1_T0_T4E_WIDTH                   1u
#define CTU_THCR1_T0_T4E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T0_T4E_SHIFT))&CTU_THCR1_T0_T4E_MASK)
#define CTU_THCR1_T0_ETE_MASK                    0x20u
#define CTU_THCR1_T0_ETE_SHIFT                   5u
#define CTU_THCR1_T0_ETE_WIDTH                   1u
#define CTU_THCR1_T0_ETE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T0_ETE_SHIFT))&CTU_THCR1_T0_ETE_MASK)
#define CTU_THCR1_T0_E_MASK                      0x40u
#define CTU_THCR1_T0_E_SHIFT                     6u
#define CTU_THCR1_T0_E_WIDTH                     1u
#define CTU_THCR1_T0_E(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T0_E_SHIFT))&CTU_THCR1_T0_E_MASK)
#define CTU_THCR1_T1_ADCE_MASK                   0x100u
#define CTU_THCR1_T1_ADCE_SHIFT                  8u
#define CTU_THCR1_T1_ADCE_WIDTH                  1u
#define CTU_THCR1_T1_ADCE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T1_ADCE_SHIFT))&CTU_THCR1_T1_ADCE_MASK)
#define CTU_THCR1_T1_T1E_MASK                    0x200u
#define CTU_THCR1_T1_T1E_SHIFT                   9u
#define CTU_THCR1_T1_T1E_WIDTH                   1u
#define CTU_THCR1_T1_T1E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T1_T1E_SHIFT))&CTU_THCR1_T1_T1E_MASK)
#define CTU_THCR1_T1_T2E_MASK                    0x400u
#define CTU_THCR1_T1_T2E_SHIFT                   10u
#define CTU_THCR1_T1_T2E_WIDTH                   1u
#define CTU_THCR1_T1_T2E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T1_T2E_SHIFT))&CTU_THCR1_T1_T2E_MASK)
#define CTU_THCR1_T1_T3E_MASK                    0x800u
#define CTU_THCR1_T1_T3E_SHIFT                   11u
#define CTU_THCR1_T1_T3E_WIDTH                   1u
#define CTU_THCR1_T1_T3E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T1_T3E_SHIFT))&CTU_THCR1_T1_T3E_MASK)
#define CTU_THCR1_T1_T4E_MASK                    0x1000u
#define CTU_THCR1_T1_T4E_SHIFT                   12u
#define CTU_THCR1_T1_T4E_WIDTH                   1u
#define CTU_THCR1_T1_T4E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T1_T4E_SHIFT))&CTU_THCR1_T1_T4E_MASK)
#define CTU_THCR1_T1_ETE_MASK                    0x2000u
#define CTU_THCR1_T1_ETE_SHIFT                   13u
#define CTU_THCR1_T1_ETE_WIDTH                   1u
#define CTU_THCR1_T1_ETE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T1_ETE_SHIFT))&CTU_THCR1_T1_ETE_MASK)
#define CTU_THCR1_T1_E_MASK                      0x4000u
#define CTU_THCR1_T1_E_SHIFT                     14u
#define CTU_THCR1_T1_E_WIDTH                     1u
#define CTU_THCR1_T1_E(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T1_E_SHIFT))&CTU_THCR1_T1_E_MASK)
#define CTU_THCR1_T2_ADCE_MASK                   0x10000u
#define CTU_THCR1_T2_ADCE_SHIFT                  16u
#define CTU_THCR1_T2_ADCE_WIDTH                  1u
#define CTU_THCR1_T2_ADCE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T2_ADCE_SHIFT))&CTU_THCR1_T2_ADCE_MASK)
#define CTU_THCR1_T2_T1E_MASK                    0x20000u
#define CTU_THCR1_T2_T1E_SHIFT                   17u
#define CTU_THCR1_T2_T1E_WIDTH                   1u
#define CTU_THCR1_T2_T1E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T2_T1E_SHIFT))&CTU_THCR1_T2_T1E_MASK)
#define CTU_THCR1_T2_T2E_MASK                    0x40000u
#define CTU_THCR1_T2_T2E_SHIFT                   18u
#define CTU_THCR1_T2_T2E_WIDTH                   1u
#define CTU_THCR1_T2_T2E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T2_T2E_SHIFT))&CTU_THCR1_T2_T2E_MASK)
#define CTU_THCR1_T2_T3E_MASK                    0x80000u
#define CTU_THCR1_T2_T3E_SHIFT                   19u
#define CTU_THCR1_T2_T3E_WIDTH                   1u
#define CTU_THCR1_T2_T3E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T2_T3E_SHIFT))&CTU_THCR1_T2_T3E_MASK)
#define CTU_THCR1_T2_T4E_MASK                    0x100000u
#define CTU_THCR1_T2_T4E_SHIFT                   20u
#define CTU_THCR1_T2_T4E_WIDTH                   1u
#define CTU_THCR1_T2_T4E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T2_T4E_SHIFT))&CTU_THCR1_T2_T4E_MASK)
#define CTU_THCR1_T2_ETE_MASK                    0x200000u
#define CTU_THCR1_T2_ETE_SHIFT                   21u
#define CTU_THCR1_T2_ETE_WIDTH                   1u
#define CTU_THCR1_T2_ETE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T2_ETE_SHIFT))&CTU_THCR1_T2_ETE_MASK)
#define CTU_THCR1_T2_E_MASK                      0x400000u
#define CTU_THCR1_T2_E_SHIFT                     22u
#define CTU_THCR1_T2_E_WIDTH                     1u
#define CTU_THCR1_T2_E(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T2_E_SHIFT))&CTU_THCR1_T2_E_MASK)
#define CTU_THCR1_T3_ADCE_MASK                   0x1000000u
#define CTU_THCR1_T3_ADCE_SHIFT                  24u
#define CTU_THCR1_T3_ADCE_WIDTH                  1u
#define CTU_THCR1_T3_ADCE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T3_ADCE_SHIFT))&CTU_THCR1_T3_ADCE_MASK)
#define CTU_THCR1_T3_T1E_MASK                    0x2000000u
#define CTU_THCR1_T3_T1E_SHIFT                   25u
#define CTU_THCR1_T3_T1E_WIDTH                   1u
#define CTU_THCR1_T3_T1E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T3_T1E_SHIFT))&CTU_THCR1_T3_T1E_MASK)
#define CTU_THCR1_T3_T2E_MASK                    0x4000000u
#define CTU_THCR1_T3_T2E_SHIFT                   26u
#define CTU_THCR1_T3_T2E_WIDTH                   1u
#define CTU_THCR1_T3_T2E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T3_T2E_SHIFT))&CTU_THCR1_T3_T2E_MASK)
#define CTU_THCR1_T3_T3E_MASK                    0x8000000u
#define CTU_THCR1_T3_T3E_SHIFT                   27u
#define CTU_THCR1_T3_T3E_WIDTH                   1u
#define CTU_THCR1_T3_T3E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T3_T3E_SHIFT))&CTU_THCR1_T3_T3E_MASK)
#define CTU_THCR1_T3_T4E_MASK                    0x10000000u
#define CTU_THCR1_T3_T4E_SHIFT                   28u
#define CTU_THCR1_T3_T4E_WIDTH                   1u
#define CTU_THCR1_T3_T4E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T3_T4E_SHIFT))&CTU_THCR1_T3_T4E_MASK)
#define CTU_THCR1_T3_ETE_MASK                    0x20000000u
#define CTU_THCR1_T3_ETE_SHIFT                   29u
#define CTU_THCR1_T3_ETE_WIDTH                   1u
#define CTU_THCR1_T3_ETE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T3_ETE_SHIFT))&CTU_THCR1_T3_ETE_MASK)
#define CTU_THCR1_T3_E_MASK                      0x40000000u
#define CTU_THCR1_T3_E_SHIFT                     30u
#define CTU_THCR1_T3_E_WIDTH                     1u
#define CTU_THCR1_T3_E(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_THCR1_T3_E_SHIFT))&CTU_THCR1_T3_E_MASK)
/* THCR2 Bit Fields */
#define CTU_THCR2_T4_ADCE_MASK                   0x1u
#define CTU_THCR2_T4_ADCE_SHIFT                  0u
#define CTU_THCR2_T4_ADCE_WIDTH                  1u
#define CTU_THCR2_T4_ADCE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T4_ADCE_SHIFT))&CTU_THCR2_T4_ADCE_MASK)
#define CTU_THCR2_T4_T1E_MASK                    0x2u
#define CTU_THCR2_T4_T1E_SHIFT                   1u
#define CTU_THCR2_T4_T1E_WIDTH                   1u
#define CTU_THCR2_T4_T1E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T4_T1E_SHIFT))&CTU_THCR2_T4_T1E_MASK)
#define CTU_THCR2_T4_T2E_MASK                    0x4u
#define CTU_THCR2_T4_T2E_SHIFT                   2u
#define CTU_THCR2_T4_T2E_WIDTH                   1u
#define CTU_THCR2_T4_T2E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T4_T2E_SHIFT))&CTU_THCR2_T4_T2E_MASK)
#define CTU_THCR2_T4_T3E_MASK                    0x8u
#define CTU_THCR2_T4_T3E_SHIFT                   3u
#define CTU_THCR2_T4_T3E_WIDTH                   1u
#define CTU_THCR2_T4_T3E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T4_T3E_SHIFT))&CTU_THCR2_T4_T3E_MASK)
#define CTU_THCR2_T4_T4E_MASK                    0x10u
#define CTU_THCR2_T4_T4E_SHIFT                   4u
#define CTU_THCR2_T4_T4E_WIDTH                   1u
#define CTU_THCR2_T4_T4E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T4_T4E_SHIFT))&CTU_THCR2_T4_T4E_MASK)
#define CTU_THCR2_T4_ETE_MASK                    0x20u
#define CTU_THCR2_T4_ETE_SHIFT                   5u
#define CTU_THCR2_T4_ETE_WIDTH                   1u
#define CTU_THCR2_T4_ETE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T4_ETE_SHIFT))&CTU_THCR2_T4_ETE_MASK)
#define CTU_THCR2_T4_E_MASK                      0x40u
#define CTU_THCR2_T4_E_SHIFT                     6u
#define CTU_THCR2_T4_E_WIDTH                     1u
#define CTU_THCR2_T4_E(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T4_E_SHIFT))&CTU_THCR2_T4_E_MASK)
#define CTU_THCR2_T5_ADCE_MASK                   0x100u
#define CTU_THCR2_T5_ADCE_SHIFT                  8u
#define CTU_THCR2_T5_ADCE_WIDTH                  1u
#define CTU_THCR2_T5_ADCE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T5_ADCE_SHIFT))&CTU_THCR2_T5_ADCE_MASK)
#define CTU_THCR2_T5_T1E_MASK                    0x200u
#define CTU_THCR2_T5_T1E_SHIFT                   9u
#define CTU_THCR2_T5_T1E_WIDTH                   1u
#define CTU_THCR2_T5_T1E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T5_T1E_SHIFT))&CTU_THCR2_T5_T1E_MASK)
#define CTU_THCR2_T5_T2E_MASK                    0x400u
#define CTU_THCR2_T5_T2E_SHIFT                   10u
#define CTU_THCR2_T5_T2E_WIDTH                   1u
#define CTU_THCR2_T5_T2E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T5_T2E_SHIFT))&CTU_THCR2_T5_T2E_MASK)
#define CTU_THCR2_T5_T3E_MASK                    0x800u
#define CTU_THCR2_T5_T3E_SHIFT                   11u
#define CTU_THCR2_T5_T3E_WIDTH                   1u
#define CTU_THCR2_T5_T3E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T5_T3E_SHIFT))&CTU_THCR2_T5_T3E_MASK)
#define CTU_THCR2_T5_T4E_MASK                    0x1000u
#define CTU_THCR2_T5_T4E_SHIFT                   12u
#define CTU_THCR2_T5_T4E_WIDTH                   1u
#define CTU_THCR2_T5_T4E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T5_T4E_SHIFT))&CTU_THCR2_T5_T4E_MASK)
#define CTU_THCR2_T5_ETE_MASK                    0x2000u
#define CTU_THCR2_T5_ETE_SHIFT                   13u
#define CTU_THCR2_T5_ETE_WIDTH                   1u
#define CTU_THCR2_T5_ETE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T5_ETE_SHIFT))&CTU_THCR2_T5_ETE_MASK)
#define CTU_THCR2_T5_E_MASK                      0x4000u
#define CTU_THCR2_T5_E_SHIFT                     14u
#define CTU_THCR2_T5_E_WIDTH                     1u
#define CTU_THCR2_T5_E(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T5_E_SHIFT))&CTU_THCR2_T5_E_MASK)
#define CTU_THCR2_T6_ADCE_MASK                   0x10000u
#define CTU_THCR2_T6_ADCE_SHIFT                  16u
#define CTU_THCR2_T6_ADCE_WIDTH                  1u
#define CTU_THCR2_T6_ADCE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T6_ADCE_SHIFT))&CTU_THCR2_T6_ADCE_MASK)
#define CTU_THCR2_T6_T1E_MASK                    0x20000u
#define CTU_THCR2_T6_T1E_SHIFT                   17u
#define CTU_THCR2_T6_T1E_WIDTH                   1u
#define CTU_THCR2_T6_T1E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T6_T1E_SHIFT))&CTU_THCR2_T6_T1E_MASK)
#define CTU_THCR2_T6_T2E_MASK                    0x40000u
#define CTU_THCR2_T6_T2E_SHIFT                   18u
#define CTU_THCR2_T6_T2E_WIDTH                   1u
#define CTU_THCR2_T6_T2E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T6_T2E_SHIFT))&CTU_THCR2_T6_T2E_MASK)
#define CTU_THCR2_T6_T3E_MASK                    0x80000u
#define CTU_THCR2_T6_T3E_SHIFT                   19u
#define CTU_THCR2_T6_T3E_WIDTH                   1u
#define CTU_THCR2_T6_T3E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T6_T3E_SHIFT))&CTU_THCR2_T6_T3E_MASK)
#define CTU_THCR2_T6_T4E_MASK                    0x100000u
#define CTU_THCR2_T6_T4E_SHIFT                   20u
#define CTU_THCR2_T6_T4E_WIDTH                   1u
#define CTU_THCR2_T6_T4E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T6_T4E_SHIFT))&CTU_THCR2_T6_T4E_MASK)
#define CTU_THCR2_T6_ETE_MASK                    0x200000u
#define CTU_THCR2_T6_ETE_SHIFT                   21u
#define CTU_THCR2_T6_ETE_WIDTH                   1u
#define CTU_THCR2_T6_ETE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T6_ETE_SHIFT))&CTU_THCR2_T6_ETE_MASK)
#define CTU_THCR2_T6_E_MASK                      0x400000u
#define CTU_THCR2_T6_E_SHIFT                     22u
#define CTU_THCR2_T6_E_WIDTH                     1u
#define CTU_THCR2_T6_E(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T6_E_SHIFT))&CTU_THCR2_T6_E_MASK)
#define CTU_THCR2_T7_ADCE_MASK                   0x1000000u
#define CTU_THCR2_T7_ADCE_SHIFT                  24u
#define CTU_THCR2_T7_ADCE_WIDTH                  1u
#define CTU_THCR2_T7_ADCE(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T7_ADCE_SHIFT))&CTU_THCR2_T7_ADCE_MASK)
#define CTU_THCR2_T7_T1E_MASK                    0x2000000u
#define CTU_THCR2_T7_T1E_SHIFT                   25u
#define CTU_THCR2_T7_T1E_WIDTH                   1u
#define CTU_THCR2_T7_T1E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T7_T1E_SHIFT))&CTU_THCR2_T7_T1E_MASK)
#define CTU_THCR2_T7_T2E_MASK                    0x4000000u
#define CTU_THCR2_T7_T2E_SHIFT                   26u
#define CTU_THCR2_T7_T2E_WIDTH                   1u
#define CTU_THCR2_T7_T2E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T7_T2E_SHIFT))&CTU_THCR2_T7_T2E_MASK)
#define CTU_THCR2_T7_T3E_MASK                    0x8000000u
#define CTU_THCR2_T7_T3E_SHIFT                   27u
#define CTU_THCR2_T7_T3E_WIDTH                   1u
#define CTU_THCR2_T7_T3E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T7_T3E_SHIFT))&CTU_THCR2_T7_T3E_MASK)
#define CTU_THCR2_T7_T4E_MASK                    0x10000000u
#define CTU_THCR2_T7_T4E_SHIFT                   28u
#define CTU_THCR2_T7_T4E_WIDTH                   1u
#define CTU_THCR2_T7_T4E(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T7_T4E_SHIFT))&CTU_THCR2_T7_T4E_MASK)
#define CTU_THCR2_T7_ETE_MASK                    0x20000000u
#define CTU_THCR2_T7_ETE_SHIFT                   29u
#define CTU_THCR2_T7_ETE_WIDTH                   1u
#define CTU_THCR2_T7_ETE(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T7_ETE_SHIFT))&CTU_THCR2_T7_ETE_MASK)
#define CTU_THCR2_T7_E_MASK                      0x40000000u
#define CTU_THCR2_T7_E_SHIFT                     30u
#define CTU_THCR2_T7_E_WIDTH                     1u
#define CTU_THCR2_T7_E(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_THCR2_T7_E_SHIFT))&CTU_THCR2_T7_E_MASK)
/* CLR_A Bit Fields */
#define CTU_CLR_A_CH_MASK                        0xFu
#define CTU_CLR_A_CH_SHIFT                       0u
#define CTU_CLR_A_CH_WIDTH                       4u
#define CTU_CLR_A_CH(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_CLR_A_CH_SHIFT))&CTU_CLR_A_CH_MASK)
#define CTU_CLR_A_SU_MASK                        0x20u
#define CTU_CLR_A_SU_SHIFT                       5u
#define CTU_CLR_A_SU_WIDTH                       1u
#define CTU_CLR_A_SU(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_CLR_A_SU_SHIFT))&CTU_CLR_A_SU_MASK)
#define CTU_CLR_A_ST0_MASK                       0x200u
#define CTU_CLR_A_ST0_SHIFT                      9u
#define CTU_CLR_A_ST0_WIDTH                      1u
#define CTU_CLR_A_ST0(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_CLR_A_ST0_SHIFT))&CTU_CLR_A_ST0_MASK)
#define CTU_CLR_A_FIFO_MASK                      0x1C00u
#define CTU_CLR_A_FIFO_SHIFT                     10u
#define CTU_CLR_A_FIFO_WIDTH                     3u
#define CTU_CLR_A_FIFO(x)                        (((uint16_t)(((uint16_t)(x))<<CTU_CLR_A_FIFO_SHIFT))&CTU_CLR_A_FIFO_MASK)
#define CTU_CLR_A_CMS_MASK                       0x2000u
#define CTU_CLR_A_CMS_SHIFT                      13u
#define CTU_CLR_A_CMS_WIDTH                      1u
#define CTU_CLR_A_CMS(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_CLR_A_CMS_SHIFT))&CTU_CLR_A_CMS_MASK)
#define CTU_CLR_A_LC_MASK                        0x4000u
#define CTU_CLR_A_LC_SHIFT                       14u
#define CTU_CLR_A_LC_WIDTH                       1u
#define CTU_CLR_A_LC(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_CLR_A_LC_SHIFT))&CTU_CLR_A_LC_MASK)
#define CTU_CLR_A_CIR_MASK                       0x8000u
#define CTU_CLR_A_CIR_SHIFT                      15u
#define CTU_CLR_A_CIR_WIDTH                      1u
#define CTU_CLR_A_CIR(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_CLR_A_CIR_SHIFT))&CTU_CLR_A_CIR_MASK)
/* CLR_B Bit Fields */
#define CTU_CLR_B_CH_A_MASK                      0xFu
#define CTU_CLR_B_CH_A_SHIFT                     0u
#define CTU_CLR_B_CH_A_WIDTH                     4u
#define CTU_CLR_B_CH_A(x)                        (((uint16_t)(((uint16_t)(x))<<CTU_CLR_B_CH_A_SHIFT))&CTU_CLR_B_CH_A_MASK)
#define CTU_CLR_B_CH_B_MASK                      0x1E0u
#define CTU_CLR_B_CH_B_SHIFT                     5u
#define CTU_CLR_B_CH_B_WIDTH                     4u
#define CTU_CLR_B_CH_B(x)                        (((uint16_t)(((uint16_t)(x))<<CTU_CLR_B_CH_B_SHIFT))&CTU_CLR_B_CH_B_MASK)
#define CTU_CLR_B_ST0_MASK                       0x200u
#define CTU_CLR_B_ST0_SHIFT                      9u
#define CTU_CLR_B_ST0_WIDTH                      1u
#define CTU_CLR_B_ST0(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_CLR_B_ST0_SHIFT))&CTU_CLR_B_ST0_MASK)
#define CTU_CLR_B_FIFO_MASK                      0x1C00u
#define CTU_CLR_B_FIFO_SHIFT                     10u
#define CTU_CLR_B_FIFO_WIDTH                     3u
#define CTU_CLR_B_FIFO(x)                        (((uint16_t)(((uint16_t)(x))<<CTU_CLR_B_FIFO_SHIFT))&CTU_CLR_B_FIFO_MASK)
#define CTU_CLR_B_CMS_MASK                       0x2000u
#define CTU_CLR_B_CMS_SHIFT                      13u
#define CTU_CLR_B_CMS_WIDTH                      1u
#define CTU_CLR_B_CMS(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_CLR_B_CMS_SHIFT))&CTU_CLR_B_CMS_MASK)
#define CTU_CLR_B_LC_MASK                        0x4000u
#define CTU_CLR_B_LC_SHIFT                       14u
#define CTU_CLR_B_LC_WIDTH                       1u
#define CTU_CLR_B_LC(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_CLR_B_LC_SHIFT))&CTU_CLR_B_LC_MASK)
#define CTU_CLR_B_CIR_MASK                       0x8000u
#define CTU_CLR_B_CIR_SHIFT                      15u
#define CTU_CLR_B_CIR_WIDTH                      1u
#define CTU_CLR_B_CIR(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_CLR_B_CIR_SHIFT))&CTU_CLR_B_CIR_MASK)
/* CLR_C Bit Fields */
#define CTU_CLR_C_BSIZE_MASK                     0x7Fu
#define CTU_CLR_C_BSIZE_SHIFT                    0u
#define CTU_CLR_C_BSIZE_WIDTH                    7u
#define CTU_CLR_C_BSIZE(x)                       (((uint16_t)(((uint16_t)(x))<<CTU_CLR_C_BSIZE_SHIFT))&CTU_CLR_C_BSIZE_MASK)
#define CTU_CLR_C_ALG_MASK                       0x180u
#define CTU_CLR_C_ALG_SHIFT                      7u
#define CTU_CLR_C_ALG_WIDTH                      2u
#define CTU_CLR_C_ALG(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_CLR_C_ALG_SHIFT))&CTU_CLR_C_ALG_MASK)
#define CTU_CLR_C_ST0_MASK                       0x200u
#define CTU_CLR_C_ST0_SHIFT                      9u
#define CTU_CLR_C_ST0_WIDTH                      1u
#define CTU_CLR_C_ST0(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_CLR_C_ST0_SHIFT))&CTU_CLR_C_ST0_MASK)
#define CTU_CLR_C_ST_SU_MASK                     0x800u
#define CTU_CLR_C_ST_SU_SHIFT                    11u
#define CTU_CLR_C_ST_SU_WIDTH                    1u
#define CTU_CLR_C_ST_SU(x)                       (((uint16_t)(((uint16_t)(x))<<CTU_CLR_C_ST_SU_SHIFT))&CTU_CLR_C_ST_SU_MASK)
#define CTU_CLR_C_ST_CMS_MASK                    0x1000u
#define CTU_CLR_C_ST_CMS_SHIFT                   12u
#define CTU_CLR_C_ST_CMS_WIDTH                   1u
#define CTU_CLR_C_ST_CMS(x)                      (((uint16_t)(((uint16_t)(x))<<CTU_CLR_C_ST_CMS_SHIFT))&CTU_CLR_C_ST_CMS_MASK)
#define CTU_CLR_C_ST1_MASK                       0x2000u
#define CTU_CLR_C_ST1_SHIFT                      13u
#define CTU_CLR_C_ST1_WIDTH                      1u
#define CTU_CLR_C_ST1(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_CLR_C_ST1_SHIFT))&CTU_CLR_C_ST1_MASK)
#define CTU_CLR_C_LC_MASK                        0x4000u
#define CTU_CLR_C_LC_SHIFT                       14u
#define CTU_CLR_C_LC_WIDTH                       1u
#define CTU_CLR_C_LC(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_CLR_C_LC_SHIFT))&CTU_CLR_C_LC_MASK)
#define CTU_CLR_C_CIR_MASK                       0x8000u
#define CTU_CLR_C_CIR_SHIFT                      15u
#define CTU_CLR_C_CIR_WIDTH                      1u
#define CTU_CLR_C_CIR(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_CLR_C_CIR_SHIFT))&CTU_CLR_C_CIR_MASK)
/* FDCR Bit Fields */
#define CTU_FDCR_DE0_MASK                        0x1u
#define CTU_FDCR_DE0_SHIFT                       0u
#define CTU_FDCR_DE0_WIDTH                       1u
#define CTU_FDCR_DE0(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_FDCR_DE0_SHIFT))&CTU_FDCR_DE0_MASK)
#define CTU_FDCR_DE1_MASK                        0x2u
#define CTU_FDCR_DE1_SHIFT                       1u
#define CTU_FDCR_DE1_WIDTH                       1u
#define CTU_FDCR_DE1(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_FDCR_DE1_SHIFT))&CTU_FDCR_DE1_MASK)
#define CTU_FDCR_DE2_MASK                        0x4u
#define CTU_FDCR_DE2_SHIFT                       2u
#define CTU_FDCR_DE2_WIDTH                       1u
#define CTU_FDCR_DE2(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_FDCR_DE2_SHIFT))&CTU_FDCR_DE2_MASK)
#define CTU_FDCR_DE3_MASK                        0x8u
#define CTU_FDCR_DE3_SHIFT                       3u
#define CTU_FDCR_DE3_WIDTH                       1u
#define CTU_FDCR_DE3(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_FDCR_DE3_SHIFT))&CTU_FDCR_DE3_MASK)
/* FCR Bit Fields */
#define CTU_FCR_FULL_EN0_MASK                    0x1u
#define CTU_FCR_FULL_EN0_SHIFT                   0u
#define CTU_FCR_FULL_EN0_WIDTH                   1u
#define CTU_FCR_FULL_EN0(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_FCR_FULL_EN0_SHIFT))&CTU_FCR_FULL_EN0_MASK)
#define CTU_FCR_EMPTY_EN0_MASK                   0x2u
#define CTU_FCR_EMPTY_EN0_SHIFT                  1u
#define CTU_FCR_EMPTY_EN0_WIDTH                  1u
#define CTU_FCR_EMPTY_EN0(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_FCR_EMPTY_EN0_SHIFT))&CTU_FCR_EMPTY_EN0_MASK)
#define CTU_FCR_OF_EN0_MASK                      0x4u
#define CTU_FCR_OF_EN0_SHIFT                     2u
#define CTU_FCR_OF_EN0_WIDTH                     1u
#define CTU_FCR_OF_EN0(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_FCR_OF_EN0_SHIFT))&CTU_FCR_OF_EN0_MASK)
#define CTU_FCR_OR_EN0_MASK                      0x8u
#define CTU_FCR_OR_EN0_SHIFT                     3u
#define CTU_FCR_OR_EN0_WIDTH                     1u
#define CTU_FCR_OR_EN0(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_FCR_OR_EN0_SHIFT))&CTU_FCR_OR_EN0_MASK)
#define CTU_FCR_FULL_EN1_MASK                    0x10u
#define CTU_FCR_FULL_EN1_SHIFT                   4u
#define CTU_FCR_FULL_EN1_WIDTH                   1u
#define CTU_FCR_FULL_EN1(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_FCR_FULL_EN1_SHIFT))&CTU_FCR_FULL_EN1_MASK)
#define CTU_FCR_EMPTY_EN1_MASK                   0x20u
#define CTU_FCR_EMPTY_EN1_SHIFT                  5u
#define CTU_FCR_EMPTY_EN1_WIDTH                  1u
#define CTU_FCR_EMPTY_EN1(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_FCR_EMPTY_EN1_SHIFT))&CTU_FCR_EMPTY_EN1_MASK)
#define CTU_FCR_OF_EN1_MASK                      0x40u
#define CTU_FCR_OF_EN1_SHIFT                     6u
#define CTU_FCR_OF_EN1_WIDTH                     1u
#define CTU_FCR_OF_EN1(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_FCR_OF_EN1_SHIFT))&CTU_FCR_OF_EN1_MASK)
#define CTU_FCR_OR_EN1_MASK                      0x80u
#define CTU_FCR_OR_EN1_SHIFT                     7u
#define CTU_FCR_OR_EN1_WIDTH                     1u
#define CTU_FCR_OR_EN1(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_FCR_OR_EN1_SHIFT))&CTU_FCR_OR_EN1_MASK)
#define CTU_FCR_FULL_EN2_MASK                    0x100u
#define CTU_FCR_FULL_EN2_SHIFT                   8u
#define CTU_FCR_FULL_EN2_WIDTH                   1u
#define CTU_FCR_FULL_EN2(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_FCR_FULL_EN2_SHIFT))&CTU_FCR_FULL_EN2_MASK)
#define CTU_FCR_EMPTY_EN2_MASK                   0x200u
#define CTU_FCR_EMPTY_EN2_SHIFT                  9u
#define CTU_FCR_EMPTY_EN2_WIDTH                  1u
#define CTU_FCR_EMPTY_EN2(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_FCR_EMPTY_EN2_SHIFT))&CTU_FCR_EMPTY_EN2_MASK)
#define CTU_FCR_OF_EN2_MASK                      0x400u
#define CTU_FCR_OF_EN2_SHIFT                     10u
#define CTU_FCR_OF_EN2_WIDTH                     1u
#define CTU_FCR_OF_EN2(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_FCR_OF_EN2_SHIFT))&CTU_FCR_OF_EN2_MASK)
#define CTU_FCR_OR_EN2_MASK                      0x800u
#define CTU_FCR_OR_EN2_SHIFT                     11u
#define CTU_FCR_OR_EN2_WIDTH                     1u
#define CTU_FCR_OR_EN2(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_FCR_OR_EN2_SHIFT))&CTU_FCR_OR_EN2_MASK)
#define CTU_FCR_FULL_EN3_MASK                    0x1000u
#define CTU_FCR_FULL_EN3_SHIFT                   12u
#define CTU_FCR_FULL_EN3_WIDTH                   1u
#define CTU_FCR_FULL_EN3(x)                      (((uint32_t)(((uint32_t)(x))<<CTU_FCR_FULL_EN3_SHIFT))&CTU_FCR_FULL_EN3_MASK)
#define CTU_FCR_EMPTY_EN3_MASK                   0x2000u
#define CTU_FCR_EMPTY_EN3_SHIFT                  13u
#define CTU_FCR_EMPTY_EN3_WIDTH                  1u
#define CTU_FCR_EMPTY_EN3(x)                     (((uint32_t)(((uint32_t)(x))<<CTU_FCR_EMPTY_EN3_SHIFT))&CTU_FCR_EMPTY_EN3_MASK)
#define CTU_FCR_OF_EN3_MASK                      0x4000u
#define CTU_FCR_OF_EN3_SHIFT                     14u
#define CTU_FCR_OF_EN3_WIDTH                     1u
#define CTU_FCR_OF_EN3(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_FCR_OF_EN3_SHIFT))&CTU_FCR_OF_EN3_MASK)
#define CTU_FCR_OR_EN3_MASK                      0x8000u
#define CTU_FCR_OR_EN3_SHIFT                     15u
#define CTU_FCR_OR_EN3_WIDTH                     1u
#define CTU_FCR_OR_EN3(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_FCR_OR_EN3_SHIFT))&CTU_FCR_OR_EN3_MASK)
/* FTH Bit Fields */
#define CTU_FTH_TH0_MASK                         0xFFu
#define CTU_FTH_TH0_SHIFT                        0u
#define CTU_FTH_TH0_WIDTH                        8u
#define CTU_FTH_TH0(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FTH_TH0_SHIFT))&CTU_FTH_TH0_MASK)
#define CTU_FTH_TH1_MASK                         0xFF00u
#define CTU_FTH_TH1_SHIFT                        8u
#define CTU_FTH_TH1_WIDTH                        8u
#define CTU_FTH_TH1(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FTH_TH1_SHIFT))&CTU_FTH_TH1_MASK)
#define CTU_FTH_TH2_MASK                         0xFF0000u
#define CTU_FTH_TH2_SHIFT                        16u
#define CTU_FTH_TH2_WIDTH                        8u
#define CTU_FTH_TH2(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FTH_TH2_SHIFT))&CTU_FTH_TH2_MASK)
#define CTU_FTH_TH3_MASK                         0xFF000000u
#define CTU_FTH_TH3_SHIFT                        24u
#define CTU_FTH_TH3_WIDTH                        8u
#define CTU_FTH_TH3(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FTH_TH3_SHIFT))&CTU_FTH_TH3_MASK)
/* FST Bit Fields */
#define CTU_FST_FULL0_MASK                       0x1u
#define CTU_FST_FULL0_SHIFT                      0u
#define CTU_FST_FULL0_WIDTH                      1u
#define CTU_FST_FULL0(x)                         (((uint32_t)(((uint32_t)(x))<<CTU_FST_FULL0_SHIFT))&CTU_FST_FULL0_MASK)
#define CTU_FST_EMP0_MASK                        0x2u
#define CTU_FST_EMP0_SHIFT                       1u
#define CTU_FST_EMP0_WIDTH                       1u
#define CTU_FST_EMP0(x)                          (((uint32_t)(((uint32_t)(x))<<CTU_FST_EMP0_SHIFT))&CTU_FST_EMP0_MASK)
#define CTU_FST_OF0_MASK                         0x4u
#define CTU_FST_OF0_SHIFT                        2u
#define CTU_FST_OF0_WIDTH                        1u
#define CTU_FST_OF0(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FST_OF0_SHIFT))&CTU_FST_OF0_MASK)
#define CTU_FST_OR0_MASK                         0x8u
#define CTU_FST_OR0_SHIFT                        3u
#define CTU_FST_OR0_WIDTH                        1u
#define CTU_FST_OR0(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FST_OR0_SHIFT))&CTU_FST_OR0_MASK)
#define CTU_FST_FULL1_MASK                       0x10u
#define CTU_FST_FULL1_SHIFT                      4u
#define CTU_FST_FULL1_WIDTH                      1u
#define CTU_FST_FULL1(x)                         (((uint32_t)(((uint32_t)(x))<<CTU_FST_FULL1_SHIFT))&CTU_FST_FULL1_MASK)
#define CTU_FST_EMP1_MASK                        0x20u
#define CTU_FST_EMP1_SHIFT                       5u
#define CTU_FST_EMP1_WIDTH                       1u
#define CTU_FST_EMP1(x)                          (((uint32_t)(((uint32_t)(x))<<CTU_FST_EMP1_SHIFT))&CTU_FST_EMP1_MASK)
#define CTU_FST_OF1_MASK                         0x40u
#define CTU_FST_OF1_SHIFT                        6u
#define CTU_FST_OF1_WIDTH                        1u
#define CTU_FST_OF1(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FST_OF1_SHIFT))&CTU_FST_OF1_MASK)
#define CTU_FST_OR1_MASK                         0x80u
#define CTU_FST_OR1_SHIFT                        7u
#define CTU_FST_OR1_WIDTH                        1u
#define CTU_FST_OR1(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FST_OR1_SHIFT))&CTU_FST_OR1_MASK)
#define CTU_FST_FULL2_MASK                       0x100u
#define CTU_FST_FULL2_SHIFT                      8u
#define CTU_FST_FULL2_WIDTH                      1u
#define CTU_FST_FULL2(x)                         (((uint32_t)(((uint32_t)(x))<<CTU_FST_FULL2_SHIFT))&CTU_FST_FULL2_MASK)
#define CTU_FST_EMP2_MASK                        0x200u
#define CTU_FST_EMP2_SHIFT                       9u
#define CTU_FST_EMP2_WIDTH                       1u
#define CTU_FST_EMP2(x)                          (((uint32_t)(((uint32_t)(x))<<CTU_FST_EMP2_SHIFT))&CTU_FST_EMP2_MASK)
#define CTU_FST_OF2_MASK                         0x400u
#define CTU_FST_OF2_SHIFT                        10u
#define CTU_FST_OF2_WIDTH                        1u
#define CTU_FST_OF2(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FST_OF2_SHIFT))&CTU_FST_OF2_MASK)
#define CTU_FST_OR2_MASK                         0x800u
#define CTU_FST_OR2_SHIFT                        11u
#define CTU_FST_OR2_WIDTH                        1u
#define CTU_FST_OR2(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FST_OR2_SHIFT))&CTU_FST_OR2_MASK)
#define CTU_FST_FULL3_MASK                       0x1000u
#define CTU_FST_FULL3_SHIFT                      12u
#define CTU_FST_FULL3_WIDTH                      1u
#define CTU_FST_FULL3(x)                         (((uint32_t)(((uint32_t)(x))<<CTU_FST_FULL3_SHIFT))&CTU_FST_FULL3_MASK)
#define CTU_FST_EMP3_MASK                        0x2000u
#define CTU_FST_EMP3_SHIFT                       13u
#define CTU_FST_EMP3_WIDTH                       1u
#define CTU_FST_EMP3(x)                          (((uint32_t)(((uint32_t)(x))<<CTU_FST_EMP3_SHIFT))&CTU_FST_EMP3_MASK)
#define CTU_FST_OF3_MASK                         0x4000u
#define CTU_FST_OF3_SHIFT                        14u
#define CTU_FST_OF3_WIDTH                        1u
#define CTU_FST_OF3(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FST_OF3_SHIFT))&CTU_FST_OF3_MASK)
#define CTU_FST_OR3_MASK                         0x8000u
#define CTU_FST_OR3_SHIFT                        15u
#define CTU_FST_OR3_WIDTH                        1u
#define CTU_FST_OR3(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FST_OR3_SHIFT))&CTU_FST_OR3_MASK)
/* FR Bit Fields */
#define CTU_FR_DATA_MASK                         0xFFFu
#define CTU_FR_DATA_SHIFT                        0u
#define CTU_FR_DATA_WIDTH                        12u
#define CTU_FR_DATA(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FR_DATA_SHIFT))&CTU_FR_DATA_MASK)
#define CTU_FR_N_CH_MASK                         0xF0000u
#define CTU_FR_N_CH_SHIFT                        16u
#define CTU_FR_N_CH_WIDTH                        4u
#define CTU_FR_N_CH(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FR_N_CH_SHIFT))&CTU_FR_N_CH_MASK)
#define CTU_FR_ADC_MASK                          0x100000u
#define CTU_FR_ADC_SHIFT                         20u
#define CTU_FR_ADC_WIDTH                         1u
#define CTU_FR_ADC(x)                            (((uint32_t)(((uint32_t)(x))<<CTU_FR_ADC_SHIFT))&CTU_FR_ADC_MASK)
/* FL Bit Fields */
#define CTU_FL_LA_DATA_MASK                      0x7FF8u
#define CTU_FL_LA_DATA_SHIFT                     3u
#define CTU_FL_LA_DATA_WIDTH                     12u
#define CTU_FL_LA_DATA(x)                        (((uint32_t)(((uint32_t)(x))<<CTU_FL_LA_DATA_SHIFT))&CTU_FL_LA_DATA_MASK)
#define CTU_FL_N_CH_MASK                         0xF0000u
#define CTU_FL_N_CH_SHIFT                        16u
#define CTU_FL_N_CH_WIDTH                        4u
#define CTU_FL_N_CH(x)                           (((uint32_t)(((uint32_t)(x))<<CTU_FL_N_CH_SHIFT))&CTU_FL_N_CH_MASK)
#define CTU_FL_ADC_MASK                          0x100000u
#define CTU_FL_ADC_SHIFT                         20u
#define CTU_FL_ADC_WIDTH                         1u
#define CTU_FL_ADC(x)                            (((uint32_t)(((uint32_t)(x))<<CTU_FL_ADC_SHIFT))&CTU_FL_ADC_MASK)
/* EFR Bit Fields */
#define CTU_EFR_MRS_RE_MASK                      0x1u
#define CTU_EFR_MRS_RE_SHIFT                     0u
#define CTU_EFR_MRS_RE_WIDTH                     1u
#define CTU_EFR_MRS_RE(x)                        (((uint16_t)(((uint16_t)(x))<<CTU_EFR_MRS_RE_SHIFT))&CTU_EFR_MRS_RE_MASK)
#define CTU_EFR_SM_TO_MASK                       0x2u
#define CTU_EFR_SM_TO_SHIFT                      1u
#define CTU_EFR_SM_TO_WIDTH                      1u
#define CTU_EFR_SM_TO(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_EFR_SM_TO_SHIFT))&CTU_EFR_SM_TO_MASK)
#define CTU_EFR_ICE_MASK                         0x4u
#define CTU_EFR_ICE_SHIFT                        2u
#define CTU_EFR_ICE_WIDTH                        1u
#define CTU_EFR_ICE(x)                           (((uint16_t)(((uint16_t)(x))<<CTU_EFR_ICE_SHIFT))&CTU_EFR_ICE_MASK)
#define CTU_EFR_MRS_O_MASK                       0x8u
#define CTU_EFR_MRS_O_SHIFT                      3u
#define CTU_EFR_MRS_O_WIDTH                      1u
#define CTU_EFR_MRS_O(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_EFR_MRS_O_SHIFT))&CTU_EFR_MRS_O_MASK)
#define CTU_EFR_TGS_OSM_MASK                     0x10u
#define CTU_EFR_TGS_OSM_SHIFT                    4u
#define CTU_EFR_TGS_OSM_WIDTH                    1u
#define CTU_EFR_TGS_OSM(x)                       (((uint16_t)(((uint16_t)(x))<<CTU_EFR_TGS_OSM_SHIFT))&CTU_EFR_TGS_OSM_MASK)
#define CTU_EFR_ADC_OE_MASK                      0x20u
#define CTU_EFR_ADC_OE_SHIFT                     5u
#define CTU_EFR_ADC_OE_WIDTH                     1u
#define CTU_EFR_ADC_OE(x)                        (((uint16_t)(((uint16_t)(x))<<CTU_EFR_ADC_OE_SHIFT))&CTU_EFR_ADC_OE_MASK)
#define CTU_EFR_T1_OE_MASK                       0x40u
#define CTU_EFR_T1_OE_SHIFT                      6u
#define CTU_EFR_T1_OE_WIDTH                      1u
#define CTU_EFR_T1_OE(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_EFR_T1_OE_SHIFT))&CTU_EFR_T1_OE_MASK)
#define CTU_EFR_T2_OE_MASK                       0x80u
#define CTU_EFR_T2_OE_SHIFT                      7u
#define CTU_EFR_T2_OE_WIDTH                      1u
#define CTU_EFR_T2_OE(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_EFR_T2_OE_SHIFT))&CTU_EFR_T2_OE_MASK)
#define CTU_EFR_T3_OE_MASK                       0x100u
#define CTU_EFR_T3_OE_SHIFT                      8u
#define CTU_EFR_T3_OE_WIDTH                      1u
#define CTU_EFR_T3_OE(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_EFR_T3_OE_SHIFT))&CTU_EFR_T3_OE_MASK)
#define CTU_EFR_T4_OE_MASK                       0x200u
#define CTU_EFR_T4_OE_SHIFT                      9u
#define CTU_EFR_T4_OE_WIDTH                      1u
#define CTU_EFR_T4_OE(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_EFR_T4_OE_SHIFT))&CTU_EFR_T4_OE_MASK)
#define CTU_EFR_ERRCMP_MASK                      0x400u
#define CTU_EFR_ERRCMP_SHIFT                     10u
#define CTU_EFR_ERRCMP_WIDTH                     1u
#define CTU_EFR_ERRCMP(x)                        (((uint16_t)(((uint16_t)(x))<<CTU_EFR_ERRCMP_SHIFT))&CTU_EFR_ERRCMP_MASK)
#define CTU_EFR_ET_OE_MASK                       0x800u
#define CTU_EFR_ET_OE_SHIFT                      11u
#define CTU_EFR_ET_OE_WIDTH                      1u
#define CTU_EFR_ET_OE(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_EFR_ET_OE_SHIFT))&CTU_EFR_ET_OE_MASK)
#define CTU_EFR_CS_MASK                          0x1000u
#define CTU_EFR_CS_SHIFT                         12u
#define CTU_EFR_CS_WIDTH                         1u
#define CTU_EFR_CS(x)                            (((uint16_t)(((uint16_t)(x))<<CTU_EFR_CS_SHIFT))&CTU_EFR_CS_MASK)
#define CTU_EFR_LIST_BE_MASK                     0x2000u
#define CTU_EFR_LIST_BE_SHIFT                    13u
#define CTU_EFR_LIST_BE_WIDTH                    1u
#define CTU_EFR_LIST_BE(x)                       (((uint16_t)(((uint16_t)(x))<<CTU_EFR_LIST_BE_SHIFT))&CTU_EFR_LIST_BE_MASK)
/* IFR Bit Fields */
#define CTU_IFR_MRS_I_MASK                       0x1u
#define CTU_IFR_MRS_I_SHIFT                      0u
#define CTU_IFR_MRS_I_WIDTH                      1u
#define CTU_IFR_MRS_I(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_IFR_MRS_I_SHIFT))&CTU_IFR_MRS_I_MASK)
#define CTU_IFR_T0_I_MASK                        0x2u
#define CTU_IFR_T0_I_SHIFT                       1u
#define CTU_IFR_T0_I_WIDTH                       1u
#define CTU_IFR_T0_I(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IFR_T0_I_SHIFT))&CTU_IFR_T0_I_MASK)
#define CTU_IFR_T1_I_MASK                        0x4u
#define CTU_IFR_T1_I_SHIFT                       2u
#define CTU_IFR_T1_I_WIDTH                       1u
#define CTU_IFR_T1_I(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IFR_T1_I_SHIFT))&CTU_IFR_T1_I_MASK)
#define CTU_IFR_T2_I_MASK                        0x8u
#define CTU_IFR_T2_I_SHIFT                       3u
#define CTU_IFR_T2_I_WIDTH                       1u
#define CTU_IFR_T2_I(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IFR_T2_I_SHIFT))&CTU_IFR_T2_I_MASK)
#define CTU_IFR_T3_I_MASK                        0x10u
#define CTU_IFR_T3_I_SHIFT                       4u
#define CTU_IFR_T3_I_WIDTH                       1u
#define CTU_IFR_T3_I(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IFR_T3_I_SHIFT))&CTU_IFR_T3_I_MASK)
#define CTU_IFR_T4_I_MASK                        0x20u
#define CTU_IFR_T4_I_SHIFT                       5u
#define CTU_IFR_T4_I_WIDTH                       1u
#define CTU_IFR_T4_I(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IFR_T4_I_SHIFT))&CTU_IFR_T4_I_MASK)
#define CTU_IFR_T5_I_MASK                        0x40u
#define CTU_IFR_T5_I_SHIFT                       6u
#define CTU_IFR_T5_I_WIDTH                       1u
#define CTU_IFR_T5_I(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IFR_T5_I_SHIFT))&CTU_IFR_T5_I_MASK)
#define CTU_IFR_T6_I_MASK                        0x80u
#define CTU_IFR_T6_I_SHIFT                       7u
#define CTU_IFR_T6_I_WIDTH                       1u
#define CTU_IFR_T6_I(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IFR_T6_I_SHIFT))&CTU_IFR_T6_I_MASK)
#define CTU_IFR_T7_I_MASK                        0x100u
#define CTU_IFR_T7_I_SHIFT                       8u
#define CTU_IFR_T7_I_WIDTH                       1u
#define CTU_IFR_T7_I(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IFR_T7_I_SHIFT))&CTU_IFR_T7_I_MASK)
#define CTU_IFR_ADC_I_MASK                       0x200u
#define CTU_IFR_ADC_I_SHIFT                      9u
#define CTU_IFR_ADC_I_WIDTH                      1u
#define CTU_IFR_ADC_I(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_IFR_ADC_I_SHIFT))&CTU_IFR_ADC_I_MASK)
#define CTU_IFR_SERR_A_MASK                      0x400u
#define CTU_IFR_SERR_A_SHIFT                     10u
#define CTU_IFR_SERR_A_WIDTH                     1u
#define CTU_IFR_SERR_A(x)                        (((uint16_t)(((uint16_t)(x))<<CTU_IFR_SERR_A_SHIFT))&CTU_IFR_SERR_A_MASK)
#define CTU_IFR_SERR_B_MASK                      0x800u
#define CTU_IFR_SERR_B_SHIFT                     11u
#define CTU_IFR_SERR_B_WIDTH                     1u
#define CTU_IFR_SERR_B(x)                        (((uint16_t)(((uint16_t)(x))<<CTU_IFR_SERR_B_SHIFT))&CTU_IFR_SERR_B_MASK)
/* IR Bit Fields */
#define CTU_IR_IEE_MASK                          0x1u
#define CTU_IR_IEE_SHIFT                         0u
#define CTU_IR_IEE_WIDTH                         1u
#define CTU_IR_IEE(x)                            (((uint16_t)(((uint16_t)(x))<<CTU_IR_IEE_SHIFT))&CTU_IR_IEE_MASK)
#define CTU_IR_MRS_IE_MASK                       0x2u
#define CTU_IR_MRS_IE_SHIFT                      1u
#define CTU_IR_MRS_IE_WIDTH                      1u
#define CTU_IR_MRS_IE(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_IR_MRS_IE_SHIFT))&CTU_IR_MRS_IE_MASK)
#define CTU_IR_MRS_DMAE_MASK                     0x4u
#define CTU_IR_MRS_DMAE_SHIFT                    2u
#define CTU_IR_MRS_DMAE_WIDTH                    1u
#define CTU_IR_MRS_DMAE(x)                       (((uint16_t)(((uint16_t)(x))<<CTU_IR_MRS_DMAE_SHIFT))&CTU_IR_MRS_DMAE_MASK)
#define CTU_IR_DMA_DE_MASK                       0x8u
#define CTU_IR_DMA_DE_SHIFT                      3u
#define CTU_IR_DMA_DE_WIDTH                      1u
#define CTU_IR_DMA_DE(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_IR_DMA_DE_SHIFT))&CTU_IR_DMA_DE_MASK)
#define CTU_IR_SAF_CNT_A_EN_MASK                 0x10u
#define CTU_IR_SAF_CNT_A_EN_SHIFT                4u
#define CTU_IR_SAF_CNT_A_EN_WIDTH                1u
#define CTU_IR_SAF_CNT_A_EN(x)                   (((uint16_t)(((uint16_t)(x))<<CTU_IR_SAF_CNT_A_EN_SHIFT))&CTU_IR_SAF_CNT_A_EN_MASK)
#define CTU_IR_SAF_CNT_B_EN_MASK                 0x20u
#define CTU_IR_SAF_CNT_B_EN_SHIFT                5u
#define CTU_IR_SAF_CNT_B_EN_WIDTH                1u
#define CTU_IR_SAF_CNT_B_EN(x)                   (((uint16_t)(((uint16_t)(x))<<CTU_IR_SAF_CNT_B_EN_SHIFT))&CTU_IR_SAF_CNT_B_EN_MASK)
#define CTU_IR_T0_IE_MASK                        0x100u
#define CTU_IR_T0_IE_SHIFT                       8u
#define CTU_IR_T0_IE_WIDTH                       1u
#define CTU_IR_T0_IE(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IR_T0_IE_SHIFT))&CTU_IR_T0_IE_MASK)
#define CTU_IR_T1_IE_MASK                        0x200u
#define CTU_IR_T1_IE_SHIFT                       9u
#define CTU_IR_T1_IE_WIDTH                       1u
#define CTU_IR_T1_IE(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IR_T1_IE_SHIFT))&CTU_IR_T1_IE_MASK)
#define CTU_IR_T2_IE_MASK                        0x400u
#define CTU_IR_T2_IE_SHIFT                       10u
#define CTU_IR_T2_IE_WIDTH                       1u
#define CTU_IR_T2_IE(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IR_T2_IE_SHIFT))&CTU_IR_T2_IE_MASK)
#define CTU_IR_T3_IE_MASK                        0x800u
#define CTU_IR_T3_IE_SHIFT                       11u
#define CTU_IR_T3_IE_WIDTH                       1u
#define CTU_IR_T3_IE(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IR_T3_IE_SHIFT))&CTU_IR_T3_IE_MASK)
#define CTU_IR_T4_IE_MASK                        0x1000u
#define CTU_IR_T4_IE_SHIFT                       12u
#define CTU_IR_T4_IE_WIDTH                       1u
#define CTU_IR_T4_IE(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IR_T4_IE_SHIFT))&CTU_IR_T4_IE_MASK)
#define CTU_IR_T5_IE_MASK                        0x2000u
#define CTU_IR_T5_IE_SHIFT                       13u
#define CTU_IR_T5_IE_WIDTH                       1u
#define CTU_IR_T5_IE(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IR_T5_IE_SHIFT))&CTU_IR_T5_IE_MASK)
#define CTU_IR_T6_IE_MASK                        0x4000u
#define CTU_IR_T6_IE_SHIFT                       14u
#define CTU_IR_T6_IE_WIDTH                       1u
#define CTU_IR_T6_IE(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IR_T6_IE_SHIFT))&CTU_IR_T6_IE_MASK)
#define CTU_IR_T7_IE_MASK                        0x8000u
#define CTU_IR_T7_IE_SHIFT                       15u
#define CTU_IR_T7_IE_WIDTH                       1u
#define CTU_IR_T7_IE(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_IR_T7_IE_SHIFT))&CTU_IR_T7_IE_MASK)
/* COTR Bit Fields */
#define CTU_COTR_COTGT_MASK                      0xFFu
#define CTU_COTR_COTGT_SHIFT                     0u
#define CTU_COTR_COTGT_WIDTH                     8u
#define CTU_COTR_COTGT(x)                        (((uint16_t)(((uint16_t)(x))<<CTU_COTR_COTGT_SHIFT))&CTU_COTR_COTGT_MASK)
/* CR Bit Fields */
#define CTU_CR_TGSISR_RE_MASK                    0x1u
#define CTU_CR_TGSISR_RE_SHIFT                   0u
#define CTU_CR_TGSISR_RE_WIDTH                   1u
#define CTU_CR_TGSISR_RE(x)                      (((uint16_t)(((uint16_t)(x))<<CTU_CR_TGSISR_RE_SHIFT))&CTU_CR_TGSISR_RE_MASK)
#define CTU_CR_GRE_MASK                          0x2u
#define CTU_CR_GRE_SHIFT                         1u
#define CTU_CR_GRE_WIDTH                         1u
#define CTU_CR_GRE(x)                            (((uint16_t)(((uint16_t)(x))<<CTU_CR_GRE_SHIFT))&CTU_CR_GRE_MASK)
#define CTU_CR_MRS_SG_MASK                       0x4u
#define CTU_CR_MRS_SG_SHIFT                      2u
#define CTU_CR_MRS_SG_WIDTH                      1u
#define CTU_CR_MRS_SG(x)                         (((uint16_t)(((uint16_t)(x))<<CTU_CR_MRS_SG_SHIFT))&CTU_CR_MRS_SG_MASK)
#define CTU_CR_FGRE_MASK                         0x8u
#define CTU_CR_FGRE_SHIFT                        3u
#define CTU_CR_FGRE_WIDTH                        1u
#define CTU_CR_FGRE(x)                           (((uint16_t)(((uint16_t)(x))<<CTU_CR_FGRE_SHIFT))&CTU_CR_FGRE_MASK)
#define CTU_CR_CGRE_MASK                         0x10u
#define CTU_CR_CGRE_SHIFT                        4u
#define CTU_CR_CGRE_WIDTH                        1u
#define CTU_CR_CGRE(x)                           (((uint16_t)(((uint16_t)(x))<<CTU_CR_CGRE_SHIFT))&CTU_CR_CGRE_MASK)
#define CTU_CR_DFE_MASK                          0x20u
#define CTU_CR_DFE_SHIFT                         5u
#define CTU_CR_DFE_WIDTH                         1u
#define CTU_CR_DFE(x)                            (((uint16_t)(((uint16_t)(x))<<CTU_CR_DFE_SHIFT))&CTU_CR_DFE_MASK)
#define CTU_CR_CTU_ODIS_MASK                     0x40u
#define CTU_CR_CTU_ODIS_SHIFT                    6u
#define CTU_CR_CTU_ODIS_WIDTH                    1u
#define CTU_CR_CTU_ODIS(x)                       (((uint16_t)(((uint16_t)(x))<<CTU_CR_CTU_ODIS_SHIFT))&CTU_CR_CTU_ODIS_MASK)
#define CTU_CR_CTU_ADC_R_MASK                    0x80u
#define CTU_CR_CTU_ADC_R_SHIFT                   7u
#define CTU_CR_CTU_ADC_R_WIDTH                   1u
#define CTU_CR_CTU_ADC_R(x)                      (((uint16_t)(((uint16_t)(x))<<CTU_CR_CTU_ADC_R_SHIFT))&CTU_CR_CTU_ADC_R_MASK)
#define CTU_CR_T0_SG_MASK                        0x100u
#define CTU_CR_T0_SG_SHIFT                       8u
#define CTU_CR_T0_SG_WIDTH                       1u
#define CTU_CR_T0_SG(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_CR_T0_SG_SHIFT))&CTU_CR_T0_SG_MASK)
#define CTU_CR_T1_SG_MASK                        0x200u
#define CTU_CR_T1_SG_SHIFT                       9u
#define CTU_CR_T1_SG_WIDTH                       1u
#define CTU_CR_T1_SG(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_CR_T1_SG_SHIFT))&CTU_CR_T1_SG_MASK)
#define CTU_CR_T2_SG_MASK                        0x400u
#define CTU_CR_T2_SG_SHIFT                       10u
#define CTU_CR_T2_SG_WIDTH                       1u
#define CTU_CR_T2_SG(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_CR_T2_SG_SHIFT))&CTU_CR_T2_SG_MASK)
#define CTU_CR_T3_SG_MASK                        0x800u
#define CTU_CR_T3_SG_SHIFT                       11u
#define CTU_CR_T3_SG_WIDTH                       1u
#define CTU_CR_T3_SG(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_CR_T3_SG_SHIFT))&CTU_CR_T3_SG_MASK)
#define CTU_CR_T4_SG_MASK                        0x1000u
#define CTU_CR_T4_SG_SHIFT                       12u
#define CTU_CR_T4_SG_WIDTH                       1u
#define CTU_CR_T4_SG(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_CR_T4_SG_SHIFT))&CTU_CR_T4_SG_MASK)
#define CTU_CR_T5_SG_MASK                        0x2000u
#define CTU_CR_T5_SG_SHIFT                       13u
#define CTU_CR_T5_SG_WIDTH                       1u
#define CTU_CR_T5_SG(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_CR_T5_SG_SHIFT))&CTU_CR_T5_SG_MASK)
#define CTU_CR_T6_SG_MASK                        0x4000u
#define CTU_CR_T6_SG_SHIFT                       14u
#define CTU_CR_T6_SG_WIDTH                       1u
#define CTU_CR_T6_SG(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_CR_T6_SG_SHIFT))&CTU_CR_T6_SG_MASK)
#define CTU_CR_T7_SG_MASK                        0x8000u
#define CTU_CR_T7_SG_SHIFT                       15u
#define CTU_CR_T7_SG_WIDTH                       1u
#define CTU_CR_T7_SG(x)                          (((uint16_t)(((uint16_t)(x))<<CTU_CR_T7_SG_SHIFT))&CTU_CR_T7_SG_MASK)
/* DFR Bit Fields */
#define CTU_DFR_FILTER_N_MASK                    0xFFu
#define CTU_DFR_FILTER_N_SHIFT                   0u
#define CTU_DFR_FILTER_N_WIDTH                   8u
#define CTU_DFR_FILTER_N(x)                      (((uint16_t)(((uint16_t)(x))<<CTU_DFR_FILTER_N_SHIFT))&CTU_DFR_FILTER_N_MASK)
/* EXPAR Bit Fields */
#define CTU_EXPAR_EXPA_MASK                      0xFFFFu
#define CTU_EXPAR_EXPA_SHIFT                     0u
#define CTU_EXPAR_EXPA_WIDTH                     16u
#define CTU_EXPAR_EXPA(x)                        (((uint16_t)(((uint16_t)(x))<<CTU_EXPAR_EXPA_SHIFT))&CTU_EXPAR_EXPA_MASK)
/* EXPBR Bit Fields */
#define CTU_EXPBR_EXPB_MASK                      0xFFFFu
#define CTU_EXPBR_EXPB_SHIFT                     0u
#define CTU_EXPBR_EXPB_WIDTH                     16u
#define CTU_EXPBR_EXPB(x)                        (((uint16_t)(((uint16_t)(x))<<CTU_EXPBR_EXPB_SHIFT))&CTU_EXPBR_EXPB_MASK)
/* CNTRNGR Bit Fields */
#define CTU_CNTRNGR_CNTRNG_MASK                  0xFFu
#define CTU_CNTRNGR_CNTRNG_SHIFT                 0u
#define CTU_CNTRNGR_CNTRNG_WIDTH                 8u
#define CTU_CNTRNGR_CNTRNG(x)                    (((uint16_t)(((uint16_t)(x))<<CTU_CNTRNGR_CNTRNG_SHIFT))&CTU_CNTRNGR_CNTRNG_MASK)
/* LISTCSR Bit Fields */
#define CTU_LISTCSR_PAR_LIST_MASK                0x1u
#define CTU_LISTCSR_PAR_LIST_SHIFT               0u
#define CTU_LISTCSR_PAR_LIST_WIDTH               1u
#define CTU_LISTCSR_PAR_LIST(x)                  (((uint32_t)(((uint32_t)(x))<<CTU_LISTCSR_PAR_LIST_SHIFT))&CTU_LISTCSR_PAR_LIST_MASK)
#define CTU_LISTCSR_LIST0_ADDR_MASK              0x1F0000u
#define CTU_LISTCSR_LIST0_ADDR_SHIFT             16u
#define CTU_LISTCSR_LIST0_ADDR_WIDTH             5u
#define CTU_LISTCSR_LIST0_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<CTU_LISTCSR_LIST0_ADDR_SHIFT))&CTU_LISTCSR_LIST0_ADDR_MASK)
#define CTU_LISTCSR_LIST0_BLK_MASK               0x800000u
#define CTU_LISTCSR_LIST0_BLK_SHIFT              23u
#define CTU_LISTCSR_LIST0_BLK_WIDTH              1u
#define CTU_LISTCSR_LIST0_BLK(x)                 (((uint32_t)(((uint32_t)(x))<<CTU_LISTCSR_LIST0_BLK_SHIFT))&CTU_LISTCSR_LIST0_BLK_MASK)
#define CTU_LISTCSR_LIST1_ADDR_MASK              0x1F000000u
#define CTU_LISTCSR_LIST1_ADDR_SHIFT             24u
#define CTU_LISTCSR_LIST1_ADDR_WIDTH             5u
#define CTU_LISTCSR_LIST1_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<CTU_LISTCSR_LIST1_ADDR_SHIFT))&CTU_LISTCSR_LIST1_ADDR_MASK)
#define CTU_LISTCSR_LIST1_BLK_MASK               0x80000000u
#define CTU_LISTCSR_LIST1_BLK_SHIFT              31u
#define CTU_LISTCSR_LIST1_BLK_WIDTH              1u
#define CTU_LISTCSR_LIST1_BLK(x)                 (((uint32_t)(((uint32_t)(x))<<CTU_LISTCSR_LIST1_BLK_SHIFT))&CTU_LISTCSR_LIST1_BLK_MASK)

/*!
 * @}
 */ /* end of group CTU_Register_Masks */


/*!
 * @}
 */ /* end of group CTU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DCL Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DCL_Peripheral_Access_Layer DCL Peripheral Access Layer
 * @{
 */


/** DCL - Size of Registers Arrays */

/** DCL - Register Layout Typedef */
typedef struct {
  __IO uint32_t IPS0;                              /**< Different Clock register, offset: 0x0 */
} DCL_Type, *DCL_MemMapPtr;

 /** Number of instances of the DCL module. */
#define DCL_INSTANCE_COUNT                       (1u)


/* DCL - Peripheral instance base addresses */
/** Peripheral DCL base address */
#define DCL_BASE                                 (0xFFC00104u)
/** Peripheral DCL base pointer */
#define DCL                                      ((DCL_Type *)DCL_BASE)
/** Array initializer of DCL peripheral base addresses */
#define DCL_BASE_ADDRS                           { DCL_BASE }
/** Array initializer of DCL peripheral base pointers */
#define DCL_BASE_PTRS                            { DCL }

/* ----------------------------------------------------------------------------
   -- DCL Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DCL_Register_Masks DCL Register Masks
 * @{
 */

/* IPS0 Bit Fields */
#define DCL_IPS0_DCL_IPS_MASK                    0xFFFFFFFFu
#define DCL_IPS0_DCL_IPS_SHIFT                   0u
#define DCL_IPS0_DCL_IPS_WIDTH                   32u
#define DCL_IPS0_DCL_IPS(x)                      (((uint32_t)(((uint32_t)(x))<<DCL_IPS0_DCL_IPS_SHIFT))&DCL_IPS0_DCL_IPS_MASK)

/*!
 * @}
 */ /* end of group DCL_Register_Masks */


/*!
 * @}
 */ /* end of group DCL_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DMA Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMA_Peripheral_Access_Layer DMA Peripheral Access Layer
 * @{
 */


/** DMA - Size of Registers Arrays */
#define DMA_DCHPRI_COUNT                         32u
#define DMA_DCHMID_COUNT                         32u
#define DMA_TCD_COUNT                            32u

/** DMA - Register Layout Typedef */
typedef struct {
  __IO uint32_t CR;                                /**< Control Register, offset: 0x0 */
  __I  uint32_t ES;                                /**< Error Status Register, offset: 0x4 */
       uint8_t RESERVED_0[4];
  __IO uint32_t ERQ;                               /**< Enable Request Register, offset: 0xC */
       uint8_t RESERVED_1[4];
  __IO uint32_t EEI;                               /**< Enable Error Interrupt Register, offset: 0x14 */
  __O  uint8_t SERQ;                               /**< Set Enable Request Register, offset: 0x18 */
  __O  uint8_t CERQ;                               /**< Clear Enable Request Register, offset: 0x19 */
  __O  uint8_t SEEI;                               /**< Set Enable Error Interrupt Register, offset: 0x1A */
  __O  uint8_t CEEI;                               /**< Clear Enable Error Interrupt Register, offset: 0x1B */
  __O  uint8_t CINT;                               /**< Clear Interrupt Request Register, offset: 0x1C */
  __O  uint8_t CERR;                               /**< Clear Error Register, offset: 0x1D */
  __O  uint8_t SSRT;                               /**< Set START Bit Register, offset: 0x1E */
  __O  uint8_t CDNE;                               /**< Clear DONE Status Bit Register, offset: 0x1F */
       uint8_t RESERVED_2[4];
  __IO uint32_t INT;                               /**< Interrupt Request Register, offset: 0x24 */
       uint8_t RESERVED_3[4];
  __IO uint32_t ERR;                               /**< Error Register, offset: 0x2C */
       uint8_t RESERVED_4[4];
  __I  uint32_t HRS;                               /**< Hardware Request Status Register, offset: 0x34 */
       uint8_t RESERVED_5[200];
  __IO uint8_t DCHPRI[DMA_DCHPRI_COUNT];           /**< Channel n Priority Register, array offset: 0x100, array step: 0x1 */
       uint8_t RESERVED_6[32];
  __IO uint8_t DCHMID[DMA_DCHMID_COUNT];           /**< Channel n Master ID Register, array offset: 0x140, array step: 0x1 */
       uint8_t RESERVED_7[3744];
  struct {                                         /* offset: 0x1000, array step: 0x20 */
    __IO uint32_t SADDR;                             /**< TCD Source Address, array offset: 0x1000, array step: 0x20 */
    __IO uint16_t ATTR;                              /**< TCD Transfer Attributes, array offset: 0x1004, array step: 0x20 */
    __IO uint16_t SOFF;                              /**< TCD Signed Source Address Offset, array offset: 0x1006, array step: 0x20 */
    union {                                          /* offset: 0x1008, array step: 0x20 */
      __IO uint32_t MLNO;                              /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), array offset: 0x1008, array step: 0x20 */
      __IO uint32_t MLOFFNO;                           /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), array offset: 0x1008, array step: 0x20 */
      __IO uint32_t MLOFFYES;                          /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), array offset: 0x1008, array step: 0x20 */
    } NBYTES;
    __IO uint32_t SLAST;                             /**< TCD Last Source Address Adjustment, array offset: 0x100C, array step: 0x20 */
    __IO uint32_t DADDR;                             /**< TCD Destination Address, array offset: 0x1010, array step: 0x20 */
    union {                                          /* offset: 0x1014, array step: 0x20 */
      __IO uint16_t ELINKNO;                           /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), array offset: 0x1014, array step: 0x20 */
      __IO uint16_t ELINKYES;                          /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), array offset: 0x1014, array step: 0x20 */
    } CITER;
    __IO uint16_t DOFF;                              /**< TCD Signed Destination Address Offset, array offset: 0x1016, array step: 0x20 */
    __IO uint32_t DLASTSGA;                          /**< TCD Last Destination Address Adjustment/Scatter Gather Address, array offset: 0x1018, array step: 0x20 */
    union {                                          /* offset: 0x101C, array step: 0x20 */
      __IO uint16_t ELINKNO;                           /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), array offset: 0x101C, array step: 0x20 */
      __IO uint16_t ELINKYES;                          /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), array offset: 0x101C, array step: 0x20 */
    } BITER;
    __IO uint16_t CSR;                               /**< TCD Control and Status, array offset: 0x101E, array step: 0x20 */
  } TCD[DMA_TCD_COUNT];
} DMA_Type, *DMA_MemMapPtr;

 /** Number of instances of the DMA module. */
#define DMA_INSTANCE_COUNT                       (1u)


/* DMA - Peripheral instance base addresses */
/** Peripheral DMA base address */
#define DMA_BASE                                 (0xFC0A0000u)
/** Peripheral DMA base pointer */
#define DMA                                      ((DMA_Type *)DMA_BASE)
/** Array initializer of DMA peripheral base addresses */
#define DMA_BASE_ADDRS                           { DMA_BASE }
/** Array initializer of DMA peripheral base pointers */
#define DMA_BASE_PTRS                            { DMA }
 /** Number of interrupt vector arrays for the DMA module. */
#define DMA_IRQS_ARR_COUNT                       (2u)
 /** Number of interrupt channels for the CHN type of DMA module. */
#define DMA_CHN_IRQS_CH_COUNT                    (32u)
 /** Number of interrupt channels for the ERROR type of DMA module. */
#define DMA_ERROR_IRQS_CH_COUNT                  (1u)
/** Interrupt vectors for the DMA peripheral type */
#define DMA_CHN_IRQS                             { DMA0_IRQn, DMA1_IRQn, DMA2_IRQn, DMA3_IRQn, DMA4_IRQn, DMA5_IRQn, DMA6_IRQn, DMA7_IRQn, DMA8_IRQn, DMA9_IRQn, DMA10_IRQn, DMA11_IRQn, DMA12_IRQn, DMA13_IRQn, DMA14_IRQn, DMA15_IRQn, DMA16_IRQn, DMA17_IRQn, DMA18_IRQn, DMA19_IRQn, DMA20_IRQn, DMA21_IRQn, DMA22_IRQn, DMA23_IRQn, DMA24_IRQn, DMA25_IRQn, DMA26_IRQn, DMA27_IRQn, DMA28_IRQn, DMA29_IRQn, DMA30_IRQn, DMA31_IRQn }
#define DMA_ERROR_IRQS                           { DMA_Error_IRQn }

/* ----------------------------------------------------------------------------
   -- DMA Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMA_Register_Masks DMA Register Masks
 * @{
 */

/* CR Bit Fields */
#define DMA_CR_EDBG_MASK                         0x2u
#define DMA_CR_EDBG_SHIFT                        1u
#define DMA_CR_EDBG_WIDTH                        1u
#define DMA_CR_EDBG(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_EDBG_SHIFT))&DMA_CR_EDBG_MASK)
#define DMA_CR_ERCA_MASK                         0x4u
#define DMA_CR_ERCA_SHIFT                        2u
#define DMA_CR_ERCA_WIDTH                        1u
#define DMA_CR_ERCA(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_ERCA_SHIFT))&DMA_CR_ERCA_MASK)
#define DMA_CR_ERGA_MASK                         0x8u
#define DMA_CR_ERGA_SHIFT                        3u
#define DMA_CR_ERGA_WIDTH                        1u
#define DMA_CR_ERGA(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_ERGA_SHIFT))&DMA_CR_ERGA_MASK)
#define DMA_CR_HOE_MASK                          0x10u
#define DMA_CR_HOE_SHIFT                         4u
#define DMA_CR_HOE_WIDTH                         1u
#define DMA_CR_HOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_HOE_SHIFT))&DMA_CR_HOE_MASK)
#define DMA_CR_HALT_MASK                         0x20u
#define DMA_CR_HALT_SHIFT                        5u
#define DMA_CR_HALT_WIDTH                        1u
#define DMA_CR_HALT(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_HALT_SHIFT))&DMA_CR_HALT_MASK)
#define DMA_CR_CLM_MASK                          0x40u
#define DMA_CR_CLM_SHIFT                         6u
#define DMA_CR_CLM_WIDTH                         1u
#define DMA_CR_CLM(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_CLM_SHIFT))&DMA_CR_CLM_MASK)
#define DMA_CR_EMLM_MASK                         0x80u
#define DMA_CR_EMLM_SHIFT                        7u
#define DMA_CR_EMLM_WIDTH                        1u
#define DMA_CR_EMLM(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_EMLM_SHIFT))&DMA_CR_EMLM_MASK)
#define DMA_CR_GRP0PRI_MASK                      0x100u
#define DMA_CR_GRP0PRI_SHIFT                     8u
#define DMA_CR_GRP0PRI_WIDTH                     1u
#define DMA_CR_GRP0PRI(x)                        (((uint32_t)(((uint32_t)(x))<<DMA_CR_GRP0PRI_SHIFT))&DMA_CR_GRP0PRI_MASK)
#define DMA_CR_GRP1PRI_MASK                      0x400u
#define DMA_CR_GRP1PRI_SHIFT                     10u
#define DMA_CR_GRP1PRI_WIDTH                     1u
#define DMA_CR_GRP1PRI(x)                        (((uint32_t)(((uint32_t)(x))<<DMA_CR_GRP1PRI_SHIFT))&DMA_CR_GRP1PRI_MASK)
#define DMA_CR_ECX_MASK                          0x10000u
#define DMA_CR_ECX_SHIFT                         16u
#define DMA_CR_ECX_WIDTH                         1u
#define DMA_CR_ECX(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_ECX_SHIFT))&DMA_CR_ECX_MASK)
#define DMA_CR_CX_MASK                           0x20000u
#define DMA_CR_CX_SHIFT                          17u
#define DMA_CR_CX_WIDTH                          1u
#define DMA_CR_CX(x)                             (((uint32_t)(((uint32_t)(x))<<DMA_CR_CX_SHIFT))&DMA_CR_CX_MASK)
/* ES Bit Fields */
#define DMA_ES_DBE_MASK                          0x1u
#define DMA_ES_DBE_SHIFT                         0u
#define DMA_ES_DBE_WIDTH                         1u
#define DMA_ES_DBE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DBE_SHIFT))&DMA_ES_DBE_MASK)
#define DMA_ES_SBE_MASK                          0x2u
#define DMA_ES_SBE_SHIFT                         1u
#define DMA_ES_SBE_WIDTH                         1u
#define DMA_ES_SBE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SBE_SHIFT))&DMA_ES_SBE_MASK)
#define DMA_ES_SGE_MASK                          0x4u
#define DMA_ES_SGE_SHIFT                         2u
#define DMA_ES_SGE_WIDTH                         1u
#define DMA_ES_SGE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SGE_SHIFT))&DMA_ES_SGE_MASK)
#define DMA_ES_NCE_MASK                          0x8u
#define DMA_ES_NCE_SHIFT                         3u
#define DMA_ES_NCE_WIDTH                         1u
#define DMA_ES_NCE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_NCE_SHIFT))&DMA_ES_NCE_MASK)
#define DMA_ES_DOE_MASK                          0x10u
#define DMA_ES_DOE_SHIFT                         4u
#define DMA_ES_DOE_WIDTH                         1u
#define DMA_ES_DOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DOE_SHIFT))&DMA_ES_DOE_MASK)
#define DMA_ES_DAE_MASK                          0x20u
#define DMA_ES_DAE_SHIFT                         5u
#define DMA_ES_DAE_WIDTH                         1u
#define DMA_ES_DAE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DAE_SHIFT))&DMA_ES_DAE_MASK)
#define DMA_ES_SOE_MASK                          0x40u
#define DMA_ES_SOE_SHIFT                         6u
#define DMA_ES_SOE_WIDTH                         1u
#define DMA_ES_SOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SOE_SHIFT))&DMA_ES_SOE_MASK)
#define DMA_ES_SAE_MASK                          0x80u
#define DMA_ES_SAE_SHIFT                         7u
#define DMA_ES_SAE_WIDTH                         1u
#define DMA_ES_SAE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SAE_SHIFT))&DMA_ES_SAE_MASK)
#define DMA_ES_ERRCHN_MASK                       0x1F00u
#define DMA_ES_ERRCHN_SHIFT                      8u
#define DMA_ES_ERRCHN_WIDTH                      5u
#define DMA_ES_ERRCHN(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ES_ERRCHN_SHIFT))&DMA_ES_ERRCHN_MASK)
#define DMA_ES_CPE_MASK                          0x4000u
#define DMA_ES_CPE_SHIFT                         14u
#define DMA_ES_CPE_WIDTH                         1u
#define DMA_ES_CPE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_CPE_SHIFT))&DMA_ES_CPE_MASK)
#define DMA_ES_GPE_MASK                          0x8000u
#define DMA_ES_GPE_SHIFT                         15u
#define DMA_ES_GPE_WIDTH                         1u
#define DMA_ES_GPE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_GPE_SHIFT))&DMA_ES_GPE_MASK)
#define DMA_ES_ECX_MASK                          0x10000u
#define DMA_ES_ECX_SHIFT                         16u
#define DMA_ES_ECX_WIDTH                         1u
#define DMA_ES_ECX(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_ECX_SHIFT))&DMA_ES_ECX_MASK)
#define DMA_ES_UCE_MASK                          0x20000u
#define DMA_ES_UCE_SHIFT                         17u
#define DMA_ES_UCE_WIDTH                         1u
#define DMA_ES_UCE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_UCE_SHIFT))&DMA_ES_UCE_MASK)
#define DMA_ES_VLD_MASK                          0x80000000u
#define DMA_ES_VLD_SHIFT                         31u
#define DMA_ES_VLD_WIDTH                         1u
#define DMA_ES_VLD(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_VLD_SHIFT))&DMA_ES_VLD_MASK)
/* ERQ Bit Fields */
#define DMA_ERQ_ERQ0_MASK                        0x1u
#define DMA_ERQ_ERQ0_SHIFT                       0u
#define DMA_ERQ_ERQ0_WIDTH                       1u
#define DMA_ERQ_ERQ0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ0_SHIFT))&DMA_ERQ_ERQ0_MASK)
#define DMA_ERQ_ERQ1_MASK                        0x2u
#define DMA_ERQ_ERQ1_SHIFT                       1u
#define DMA_ERQ_ERQ1_WIDTH                       1u
#define DMA_ERQ_ERQ1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ1_SHIFT))&DMA_ERQ_ERQ1_MASK)
#define DMA_ERQ_ERQ2_MASK                        0x4u
#define DMA_ERQ_ERQ2_SHIFT                       2u
#define DMA_ERQ_ERQ2_WIDTH                       1u
#define DMA_ERQ_ERQ2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ2_SHIFT))&DMA_ERQ_ERQ2_MASK)
#define DMA_ERQ_ERQ3_MASK                        0x8u
#define DMA_ERQ_ERQ3_SHIFT                       3u
#define DMA_ERQ_ERQ3_WIDTH                       1u
#define DMA_ERQ_ERQ3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ3_SHIFT))&DMA_ERQ_ERQ3_MASK)
#define DMA_ERQ_ERQ4_MASK                        0x10u
#define DMA_ERQ_ERQ4_SHIFT                       4u
#define DMA_ERQ_ERQ4_WIDTH                       1u
#define DMA_ERQ_ERQ4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ4_SHIFT))&DMA_ERQ_ERQ4_MASK)
#define DMA_ERQ_ERQ5_MASK                        0x20u
#define DMA_ERQ_ERQ5_SHIFT                       5u
#define DMA_ERQ_ERQ5_WIDTH                       1u
#define DMA_ERQ_ERQ5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ5_SHIFT))&DMA_ERQ_ERQ5_MASK)
#define DMA_ERQ_ERQ6_MASK                        0x40u
#define DMA_ERQ_ERQ6_SHIFT                       6u
#define DMA_ERQ_ERQ6_WIDTH                       1u
#define DMA_ERQ_ERQ6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ6_SHIFT))&DMA_ERQ_ERQ6_MASK)
#define DMA_ERQ_ERQ7_MASK                        0x80u
#define DMA_ERQ_ERQ7_SHIFT                       7u
#define DMA_ERQ_ERQ7_WIDTH                       1u
#define DMA_ERQ_ERQ7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ7_SHIFT))&DMA_ERQ_ERQ7_MASK)
#define DMA_ERQ_ERQ8_MASK                        0x100u
#define DMA_ERQ_ERQ8_SHIFT                       8u
#define DMA_ERQ_ERQ8_WIDTH                       1u
#define DMA_ERQ_ERQ8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ8_SHIFT))&DMA_ERQ_ERQ8_MASK)
#define DMA_ERQ_ERQ9_MASK                        0x200u
#define DMA_ERQ_ERQ9_SHIFT                       9u
#define DMA_ERQ_ERQ9_WIDTH                       1u
#define DMA_ERQ_ERQ9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ9_SHIFT))&DMA_ERQ_ERQ9_MASK)
#define DMA_ERQ_ERQ10_MASK                       0x400u
#define DMA_ERQ_ERQ10_SHIFT                      10u
#define DMA_ERQ_ERQ10_WIDTH                      1u
#define DMA_ERQ_ERQ10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ10_SHIFT))&DMA_ERQ_ERQ10_MASK)
#define DMA_ERQ_ERQ11_MASK                       0x800u
#define DMA_ERQ_ERQ11_SHIFT                      11u
#define DMA_ERQ_ERQ11_WIDTH                      1u
#define DMA_ERQ_ERQ11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ11_SHIFT))&DMA_ERQ_ERQ11_MASK)
#define DMA_ERQ_ERQ12_MASK                       0x1000u
#define DMA_ERQ_ERQ12_SHIFT                      12u
#define DMA_ERQ_ERQ12_WIDTH                      1u
#define DMA_ERQ_ERQ12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ12_SHIFT))&DMA_ERQ_ERQ12_MASK)
#define DMA_ERQ_ERQ13_MASK                       0x2000u
#define DMA_ERQ_ERQ13_SHIFT                      13u
#define DMA_ERQ_ERQ13_WIDTH                      1u
#define DMA_ERQ_ERQ13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ13_SHIFT))&DMA_ERQ_ERQ13_MASK)
#define DMA_ERQ_ERQ14_MASK                       0x4000u
#define DMA_ERQ_ERQ14_SHIFT                      14u
#define DMA_ERQ_ERQ14_WIDTH                      1u
#define DMA_ERQ_ERQ14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ14_SHIFT))&DMA_ERQ_ERQ14_MASK)
#define DMA_ERQ_ERQ15_MASK                       0x8000u
#define DMA_ERQ_ERQ15_SHIFT                      15u
#define DMA_ERQ_ERQ15_WIDTH                      1u
#define DMA_ERQ_ERQ15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ15_SHIFT))&DMA_ERQ_ERQ15_MASK)
#define DMA_ERQ_ERQ16_MASK                       0x10000u
#define DMA_ERQ_ERQ16_SHIFT                      16u
#define DMA_ERQ_ERQ16_WIDTH                      1u
#define DMA_ERQ_ERQ16(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ16_SHIFT))&DMA_ERQ_ERQ16_MASK)
#define DMA_ERQ_ERQ17_MASK                       0x20000u
#define DMA_ERQ_ERQ17_SHIFT                      17u
#define DMA_ERQ_ERQ17_WIDTH                      1u
#define DMA_ERQ_ERQ17(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ17_SHIFT))&DMA_ERQ_ERQ17_MASK)
#define DMA_ERQ_ERQ18_MASK                       0x40000u
#define DMA_ERQ_ERQ18_SHIFT                      18u
#define DMA_ERQ_ERQ18_WIDTH                      1u
#define DMA_ERQ_ERQ18(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ18_SHIFT))&DMA_ERQ_ERQ18_MASK)
#define DMA_ERQ_ERQ19_MASK                       0x80000u
#define DMA_ERQ_ERQ19_SHIFT                      19u
#define DMA_ERQ_ERQ19_WIDTH                      1u
#define DMA_ERQ_ERQ19(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ19_SHIFT))&DMA_ERQ_ERQ19_MASK)
#define DMA_ERQ_ERQ20_MASK                       0x100000u
#define DMA_ERQ_ERQ20_SHIFT                      20u
#define DMA_ERQ_ERQ20_WIDTH                      1u
#define DMA_ERQ_ERQ20(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ20_SHIFT))&DMA_ERQ_ERQ20_MASK)
#define DMA_ERQ_ERQ21_MASK                       0x200000u
#define DMA_ERQ_ERQ21_SHIFT                      21u
#define DMA_ERQ_ERQ21_WIDTH                      1u
#define DMA_ERQ_ERQ21(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ21_SHIFT))&DMA_ERQ_ERQ21_MASK)
#define DMA_ERQ_ERQ22_MASK                       0x400000u
#define DMA_ERQ_ERQ22_SHIFT                      22u
#define DMA_ERQ_ERQ22_WIDTH                      1u
#define DMA_ERQ_ERQ22(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ22_SHIFT))&DMA_ERQ_ERQ22_MASK)
#define DMA_ERQ_ERQ23_MASK                       0x800000u
#define DMA_ERQ_ERQ23_SHIFT                      23u
#define DMA_ERQ_ERQ23_WIDTH                      1u
#define DMA_ERQ_ERQ23(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ23_SHIFT))&DMA_ERQ_ERQ23_MASK)
#define DMA_ERQ_ERQ24_MASK                       0x1000000u
#define DMA_ERQ_ERQ24_SHIFT                      24u
#define DMA_ERQ_ERQ24_WIDTH                      1u
#define DMA_ERQ_ERQ24(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ24_SHIFT))&DMA_ERQ_ERQ24_MASK)
#define DMA_ERQ_ERQ25_MASK                       0x2000000u
#define DMA_ERQ_ERQ25_SHIFT                      25u
#define DMA_ERQ_ERQ25_WIDTH                      1u
#define DMA_ERQ_ERQ25(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ25_SHIFT))&DMA_ERQ_ERQ25_MASK)
#define DMA_ERQ_ERQ26_MASK                       0x4000000u
#define DMA_ERQ_ERQ26_SHIFT                      26u
#define DMA_ERQ_ERQ26_WIDTH                      1u
#define DMA_ERQ_ERQ26(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ26_SHIFT))&DMA_ERQ_ERQ26_MASK)
#define DMA_ERQ_ERQ27_MASK                       0x8000000u
#define DMA_ERQ_ERQ27_SHIFT                      27u
#define DMA_ERQ_ERQ27_WIDTH                      1u
#define DMA_ERQ_ERQ27(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ27_SHIFT))&DMA_ERQ_ERQ27_MASK)
#define DMA_ERQ_ERQ28_MASK                       0x10000000u
#define DMA_ERQ_ERQ28_SHIFT                      28u
#define DMA_ERQ_ERQ28_WIDTH                      1u
#define DMA_ERQ_ERQ28(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ28_SHIFT))&DMA_ERQ_ERQ28_MASK)
#define DMA_ERQ_ERQ29_MASK                       0x20000000u
#define DMA_ERQ_ERQ29_SHIFT                      29u
#define DMA_ERQ_ERQ29_WIDTH                      1u
#define DMA_ERQ_ERQ29(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ29_SHIFT))&DMA_ERQ_ERQ29_MASK)
#define DMA_ERQ_ERQ30_MASK                       0x40000000u
#define DMA_ERQ_ERQ30_SHIFT                      30u
#define DMA_ERQ_ERQ30_WIDTH                      1u
#define DMA_ERQ_ERQ30(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ30_SHIFT))&DMA_ERQ_ERQ30_MASK)
#define DMA_ERQ_ERQ31_MASK                       0x80000000u
#define DMA_ERQ_ERQ31_SHIFT                      31u
#define DMA_ERQ_ERQ31_WIDTH                      1u
#define DMA_ERQ_ERQ31(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ31_SHIFT))&DMA_ERQ_ERQ31_MASK)
/* EEI Bit Fields */
#define DMA_EEI_EEI0_MASK                        0x1u
#define DMA_EEI_EEI0_SHIFT                       0u
#define DMA_EEI_EEI0_WIDTH                       1u
#define DMA_EEI_EEI0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI0_SHIFT))&DMA_EEI_EEI0_MASK)
#define DMA_EEI_EEI1_MASK                        0x2u
#define DMA_EEI_EEI1_SHIFT                       1u
#define DMA_EEI_EEI1_WIDTH                       1u
#define DMA_EEI_EEI1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI1_SHIFT))&DMA_EEI_EEI1_MASK)
#define DMA_EEI_EEI2_MASK                        0x4u
#define DMA_EEI_EEI2_SHIFT                       2u
#define DMA_EEI_EEI2_WIDTH                       1u
#define DMA_EEI_EEI2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI2_SHIFT))&DMA_EEI_EEI2_MASK)
#define DMA_EEI_EEI3_MASK                        0x8u
#define DMA_EEI_EEI3_SHIFT                       3u
#define DMA_EEI_EEI3_WIDTH                       1u
#define DMA_EEI_EEI3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI3_SHIFT))&DMA_EEI_EEI3_MASK)
#define DMA_EEI_EEI4_MASK                        0x10u
#define DMA_EEI_EEI4_SHIFT                       4u
#define DMA_EEI_EEI4_WIDTH                       1u
#define DMA_EEI_EEI4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI4_SHIFT))&DMA_EEI_EEI4_MASK)
#define DMA_EEI_EEI5_MASK                        0x20u
#define DMA_EEI_EEI5_SHIFT                       5u
#define DMA_EEI_EEI5_WIDTH                       1u
#define DMA_EEI_EEI5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI5_SHIFT))&DMA_EEI_EEI5_MASK)
#define DMA_EEI_EEI6_MASK                        0x40u
#define DMA_EEI_EEI6_SHIFT                       6u
#define DMA_EEI_EEI6_WIDTH                       1u
#define DMA_EEI_EEI6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI6_SHIFT))&DMA_EEI_EEI6_MASK)
#define DMA_EEI_EEI7_MASK                        0x80u
#define DMA_EEI_EEI7_SHIFT                       7u
#define DMA_EEI_EEI7_WIDTH                       1u
#define DMA_EEI_EEI7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI7_SHIFT))&DMA_EEI_EEI7_MASK)
#define DMA_EEI_EEI8_MASK                        0x100u
#define DMA_EEI_EEI8_SHIFT                       8u
#define DMA_EEI_EEI8_WIDTH                       1u
#define DMA_EEI_EEI8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI8_SHIFT))&DMA_EEI_EEI8_MASK)
#define DMA_EEI_EEI9_MASK                        0x200u
#define DMA_EEI_EEI9_SHIFT                       9u
#define DMA_EEI_EEI9_WIDTH                       1u
#define DMA_EEI_EEI9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI9_SHIFT))&DMA_EEI_EEI9_MASK)
#define DMA_EEI_EEI10_MASK                       0x400u
#define DMA_EEI_EEI10_SHIFT                      10u
#define DMA_EEI_EEI10_WIDTH                      1u
#define DMA_EEI_EEI10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI10_SHIFT))&DMA_EEI_EEI10_MASK)
#define DMA_EEI_EEI11_MASK                       0x800u
#define DMA_EEI_EEI11_SHIFT                      11u
#define DMA_EEI_EEI11_WIDTH                      1u
#define DMA_EEI_EEI11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI11_SHIFT))&DMA_EEI_EEI11_MASK)
#define DMA_EEI_EEI12_MASK                       0x1000u
#define DMA_EEI_EEI12_SHIFT                      12u
#define DMA_EEI_EEI12_WIDTH                      1u
#define DMA_EEI_EEI12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI12_SHIFT))&DMA_EEI_EEI12_MASK)
#define DMA_EEI_EEI13_MASK                       0x2000u
#define DMA_EEI_EEI13_SHIFT                      13u
#define DMA_EEI_EEI13_WIDTH                      1u
#define DMA_EEI_EEI13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI13_SHIFT))&DMA_EEI_EEI13_MASK)
#define DMA_EEI_EEI14_MASK                       0x4000u
#define DMA_EEI_EEI14_SHIFT                      14u
#define DMA_EEI_EEI14_WIDTH                      1u
#define DMA_EEI_EEI14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI14_SHIFT))&DMA_EEI_EEI14_MASK)
#define DMA_EEI_EEI15_MASK                       0x8000u
#define DMA_EEI_EEI15_SHIFT                      15u
#define DMA_EEI_EEI15_WIDTH                      1u
#define DMA_EEI_EEI15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI15_SHIFT))&DMA_EEI_EEI15_MASK)
#define DMA_EEI_EEI16_MASK                       0x10000u
#define DMA_EEI_EEI16_SHIFT                      16u
#define DMA_EEI_EEI16_WIDTH                      1u
#define DMA_EEI_EEI16(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI16_SHIFT))&DMA_EEI_EEI16_MASK)
#define DMA_EEI_EEI17_MASK                       0x20000u
#define DMA_EEI_EEI17_SHIFT                      17u
#define DMA_EEI_EEI17_WIDTH                      1u
#define DMA_EEI_EEI17(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI17_SHIFT))&DMA_EEI_EEI17_MASK)
#define DMA_EEI_EEI18_MASK                       0x40000u
#define DMA_EEI_EEI18_SHIFT                      18u
#define DMA_EEI_EEI18_WIDTH                      1u
#define DMA_EEI_EEI18(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI18_SHIFT))&DMA_EEI_EEI18_MASK)
#define DMA_EEI_EEI19_MASK                       0x80000u
#define DMA_EEI_EEI19_SHIFT                      19u
#define DMA_EEI_EEI19_WIDTH                      1u
#define DMA_EEI_EEI19(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI19_SHIFT))&DMA_EEI_EEI19_MASK)
#define DMA_EEI_EEI20_MASK                       0x100000u
#define DMA_EEI_EEI20_SHIFT                      20u
#define DMA_EEI_EEI20_WIDTH                      1u
#define DMA_EEI_EEI20(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI20_SHIFT))&DMA_EEI_EEI20_MASK)
#define DMA_EEI_EEI21_MASK                       0x200000u
#define DMA_EEI_EEI21_SHIFT                      21u
#define DMA_EEI_EEI21_WIDTH                      1u
#define DMA_EEI_EEI21(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI21_SHIFT))&DMA_EEI_EEI21_MASK)
#define DMA_EEI_EEI22_MASK                       0x400000u
#define DMA_EEI_EEI22_SHIFT                      22u
#define DMA_EEI_EEI22_WIDTH                      1u
#define DMA_EEI_EEI22(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI22_SHIFT))&DMA_EEI_EEI22_MASK)
#define DMA_EEI_EEI23_MASK                       0x800000u
#define DMA_EEI_EEI23_SHIFT                      23u
#define DMA_EEI_EEI23_WIDTH                      1u
#define DMA_EEI_EEI23(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI23_SHIFT))&DMA_EEI_EEI23_MASK)
#define DMA_EEI_EEI24_MASK                       0x1000000u
#define DMA_EEI_EEI24_SHIFT                      24u
#define DMA_EEI_EEI24_WIDTH                      1u
#define DMA_EEI_EEI24(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI24_SHIFT))&DMA_EEI_EEI24_MASK)
#define DMA_EEI_EEI25_MASK                       0x2000000u
#define DMA_EEI_EEI25_SHIFT                      25u
#define DMA_EEI_EEI25_WIDTH                      1u
#define DMA_EEI_EEI25(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI25_SHIFT))&DMA_EEI_EEI25_MASK)
#define DMA_EEI_EEI26_MASK                       0x4000000u
#define DMA_EEI_EEI26_SHIFT                      26u
#define DMA_EEI_EEI26_WIDTH                      1u
#define DMA_EEI_EEI26(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI26_SHIFT))&DMA_EEI_EEI26_MASK)
#define DMA_EEI_EEI27_MASK                       0x8000000u
#define DMA_EEI_EEI27_SHIFT                      27u
#define DMA_EEI_EEI27_WIDTH                      1u
#define DMA_EEI_EEI27(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI27_SHIFT))&DMA_EEI_EEI27_MASK)
#define DMA_EEI_EEI28_MASK                       0x10000000u
#define DMA_EEI_EEI28_SHIFT                      28u
#define DMA_EEI_EEI28_WIDTH                      1u
#define DMA_EEI_EEI28(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI28_SHIFT))&DMA_EEI_EEI28_MASK)
#define DMA_EEI_EEI29_MASK                       0x20000000u
#define DMA_EEI_EEI29_SHIFT                      29u
#define DMA_EEI_EEI29_WIDTH                      1u
#define DMA_EEI_EEI29(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI29_SHIFT))&DMA_EEI_EEI29_MASK)
#define DMA_EEI_EEI30_MASK                       0x40000000u
#define DMA_EEI_EEI30_SHIFT                      30u
#define DMA_EEI_EEI30_WIDTH                      1u
#define DMA_EEI_EEI30(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI30_SHIFT))&DMA_EEI_EEI30_MASK)
#define DMA_EEI_EEI31_MASK                       0x80000000u
#define DMA_EEI_EEI31_SHIFT                      31u
#define DMA_EEI_EEI31_WIDTH                      1u
#define DMA_EEI_EEI31(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI31_SHIFT))&DMA_EEI_EEI31_MASK)
/* SERQ Bit Fields */
#define DMA_SERQ_SERQ_MASK                       0x1Fu
#define DMA_SERQ_SERQ_SHIFT                      0u
#define DMA_SERQ_SERQ_WIDTH                      5u
#define DMA_SERQ_SERQ(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_SERQ_SHIFT))&DMA_SERQ_SERQ_MASK)
#define DMA_SERQ_SAER_MASK                       0x40u
#define DMA_SERQ_SAER_SHIFT                      6u
#define DMA_SERQ_SAER_WIDTH                      1u
#define DMA_SERQ_SAER(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_SAER_SHIFT))&DMA_SERQ_SAER_MASK)
#define DMA_SERQ_NOP_MASK                        0x80u
#define DMA_SERQ_NOP_SHIFT                       7u
#define DMA_SERQ_NOP_WIDTH                       1u
#define DMA_SERQ_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_NOP_SHIFT))&DMA_SERQ_NOP_MASK)
/* CERQ Bit Fields */
#define DMA_CERQ_CERQ_MASK                       0x1Fu
#define DMA_CERQ_CERQ_SHIFT                      0u
#define DMA_CERQ_CERQ_WIDTH                      5u
#define DMA_CERQ_CERQ(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_CERQ_SHIFT))&DMA_CERQ_CERQ_MASK)
#define DMA_CERQ_CAER_MASK                       0x40u
#define DMA_CERQ_CAER_SHIFT                      6u
#define DMA_CERQ_CAER_WIDTH                      1u
#define DMA_CERQ_CAER(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_CAER_SHIFT))&DMA_CERQ_CAER_MASK)
#define DMA_CERQ_NOP_MASK                        0x80u
#define DMA_CERQ_NOP_SHIFT                       7u
#define DMA_CERQ_NOP_WIDTH                       1u
#define DMA_CERQ_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_NOP_SHIFT))&DMA_CERQ_NOP_MASK)
/* SEEI Bit Fields */
#define DMA_SEEI_SEEI_MASK                       0x1Fu
#define DMA_SEEI_SEEI_SHIFT                      0u
#define DMA_SEEI_SEEI_WIDTH                      5u
#define DMA_SEEI_SEEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_SEEI_SHIFT))&DMA_SEEI_SEEI_MASK)
#define DMA_SEEI_SAEE_MASK                       0x40u
#define DMA_SEEI_SAEE_SHIFT                      6u
#define DMA_SEEI_SAEE_WIDTH                      1u
#define DMA_SEEI_SAEE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_SAEE_SHIFT))&DMA_SEEI_SAEE_MASK)
#define DMA_SEEI_NOP_MASK                        0x80u
#define DMA_SEEI_NOP_SHIFT                       7u
#define DMA_SEEI_NOP_WIDTH                       1u
#define DMA_SEEI_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_NOP_SHIFT))&DMA_SEEI_NOP_MASK)
/* CEEI Bit Fields */
#define DMA_CEEI_CEEI_MASK                       0x1Fu
#define DMA_CEEI_CEEI_SHIFT                      0u
#define DMA_CEEI_CEEI_WIDTH                      5u
#define DMA_CEEI_CEEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_CEEI_SHIFT))&DMA_CEEI_CEEI_MASK)
#define DMA_CEEI_CAEE_MASK                       0x40u
#define DMA_CEEI_CAEE_SHIFT                      6u
#define DMA_CEEI_CAEE_WIDTH                      1u
#define DMA_CEEI_CAEE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_CAEE_SHIFT))&DMA_CEEI_CAEE_MASK)
#define DMA_CEEI_NOP_MASK                        0x80u
#define DMA_CEEI_NOP_SHIFT                       7u
#define DMA_CEEI_NOP_WIDTH                       1u
#define DMA_CEEI_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_NOP_SHIFT))&DMA_CEEI_NOP_MASK)
/* CINT Bit Fields */
#define DMA_CINT_CINT_MASK                       0x1Fu
#define DMA_CINT_CINT_SHIFT                      0u
#define DMA_CINT_CINT_WIDTH                      5u
#define DMA_CINT_CINT(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CINT_CINT_SHIFT))&DMA_CINT_CINT_MASK)
#define DMA_CINT_CAIR_MASK                       0x40u
#define DMA_CINT_CAIR_SHIFT                      6u
#define DMA_CINT_CAIR_WIDTH                      1u
#define DMA_CINT_CAIR(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CINT_CAIR_SHIFT))&DMA_CINT_CAIR_MASK)
#define DMA_CINT_NOP_MASK                        0x80u
#define DMA_CINT_NOP_SHIFT                       7u
#define DMA_CINT_NOP_WIDTH                       1u
#define DMA_CINT_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CINT_NOP_SHIFT))&DMA_CINT_NOP_MASK)
/* CERR Bit Fields */
#define DMA_CERR_CERR_MASK                       0x1Fu
#define DMA_CERR_CERR_SHIFT                      0u
#define DMA_CERR_CERR_WIDTH                      5u
#define DMA_CERR_CERR(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERR_CERR_SHIFT))&DMA_CERR_CERR_MASK)
#define DMA_CERR_CAEI_MASK                       0x40u
#define DMA_CERR_CAEI_SHIFT                      6u
#define DMA_CERR_CAEI_WIDTH                      1u
#define DMA_CERR_CAEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERR_CAEI_SHIFT))&DMA_CERR_CAEI_MASK)
#define DMA_CERR_NOP_MASK                        0x80u
#define DMA_CERR_NOP_SHIFT                       7u
#define DMA_CERR_NOP_WIDTH                       1u
#define DMA_CERR_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CERR_NOP_SHIFT))&DMA_CERR_NOP_MASK)
/* SSRT Bit Fields */
#define DMA_SSRT_SSRT_MASK                       0x1Fu
#define DMA_SSRT_SSRT_SHIFT                      0u
#define DMA_SSRT_SSRT_WIDTH                      5u
#define DMA_SSRT_SSRT(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_SSRT_SHIFT))&DMA_SSRT_SSRT_MASK)
#define DMA_SSRT_SAST_MASK                       0x40u
#define DMA_SSRT_SAST_SHIFT                      6u
#define DMA_SSRT_SAST_WIDTH                      1u
#define DMA_SSRT_SAST(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_SAST_SHIFT))&DMA_SSRT_SAST_MASK)
#define DMA_SSRT_NOP_MASK                        0x80u
#define DMA_SSRT_NOP_SHIFT                       7u
#define DMA_SSRT_NOP_WIDTH                       1u
#define DMA_SSRT_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_NOP_SHIFT))&DMA_SSRT_NOP_MASK)
/* CDNE Bit Fields */
#define DMA_CDNE_CDNE_MASK                       0x1Fu
#define DMA_CDNE_CDNE_SHIFT                      0u
#define DMA_CDNE_CDNE_WIDTH                      5u
#define DMA_CDNE_CDNE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_CDNE_SHIFT))&DMA_CDNE_CDNE_MASK)
#define DMA_CDNE_CADN_MASK                       0x40u
#define DMA_CDNE_CADN_SHIFT                      6u
#define DMA_CDNE_CADN_WIDTH                      1u
#define DMA_CDNE_CADN(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_CADN_SHIFT))&DMA_CDNE_CADN_MASK)
#define DMA_CDNE_NOP_MASK                        0x80u
#define DMA_CDNE_NOP_SHIFT                       7u
#define DMA_CDNE_NOP_WIDTH                       1u
#define DMA_CDNE_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_NOP_SHIFT))&DMA_CDNE_NOP_MASK)
/* INT Bit Fields */
#define DMA_INT_INT0_MASK                        0x1u
#define DMA_INT_INT0_SHIFT                       0u
#define DMA_INT_INT0_WIDTH                       1u
#define DMA_INT_INT0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT0_SHIFT))&DMA_INT_INT0_MASK)
#define DMA_INT_INT1_MASK                        0x2u
#define DMA_INT_INT1_SHIFT                       1u
#define DMA_INT_INT1_WIDTH                       1u
#define DMA_INT_INT1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT1_SHIFT))&DMA_INT_INT1_MASK)
#define DMA_INT_INT2_MASK                        0x4u
#define DMA_INT_INT2_SHIFT                       2u
#define DMA_INT_INT2_WIDTH                       1u
#define DMA_INT_INT2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT2_SHIFT))&DMA_INT_INT2_MASK)
#define DMA_INT_INT3_MASK                        0x8u
#define DMA_INT_INT3_SHIFT                       3u
#define DMA_INT_INT3_WIDTH                       1u
#define DMA_INT_INT3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT3_SHIFT))&DMA_INT_INT3_MASK)
#define DMA_INT_INT4_MASK                        0x10u
#define DMA_INT_INT4_SHIFT                       4u
#define DMA_INT_INT4_WIDTH                       1u
#define DMA_INT_INT4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT4_SHIFT))&DMA_INT_INT4_MASK)
#define DMA_INT_INT5_MASK                        0x20u
#define DMA_INT_INT5_SHIFT                       5u
#define DMA_INT_INT5_WIDTH                       1u
#define DMA_INT_INT5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT5_SHIFT))&DMA_INT_INT5_MASK)
#define DMA_INT_INT6_MASK                        0x40u
#define DMA_INT_INT6_SHIFT                       6u
#define DMA_INT_INT6_WIDTH                       1u
#define DMA_INT_INT6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT6_SHIFT))&DMA_INT_INT6_MASK)
#define DMA_INT_INT7_MASK                        0x80u
#define DMA_INT_INT7_SHIFT                       7u
#define DMA_INT_INT7_WIDTH                       1u
#define DMA_INT_INT7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT7_SHIFT))&DMA_INT_INT7_MASK)
#define DMA_INT_INT8_MASK                        0x100u
#define DMA_INT_INT8_SHIFT                       8u
#define DMA_INT_INT8_WIDTH                       1u
#define DMA_INT_INT8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT8_SHIFT))&DMA_INT_INT8_MASK)
#define DMA_INT_INT9_MASK                        0x200u
#define DMA_INT_INT9_SHIFT                       9u
#define DMA_INT_INT9_WIDTH                       1u
#define DMA_INT_INT9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT9_SHIFT))&DMA_INT_INT9_MASK)
#define DMA_INT_INT10_MASK                       0x400u
#define DMA_INT_INT10_SHIFT                      10u
#define DMA_INT_INT10_WIDTH                      1u
#define DMA_INT_INT10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT10_SHIFT))&DMA_INT_INT10_MASK)
#define DMA_INT_INT11_MASK                       0x800u
#define DMA_INT_INT11_SHIFT                      11u
#define DMA_INT_INT11_WIDTH                      1u
#define DMA_INT_INT11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT11_SHIFT))&DMA_INT_INT11_MASK)
#define DMA_INT_INT12_MASK                       0x1000u
#define DMA_INT_INT12_SHIFT                      12u
#define DMA_INT_INT12_WIDTH                      1u
#define DMA_INT_INT12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT12_SHIFT))&DMA_INT_INT12_MASK)
#define DMA_INT_INT13_MASK                       0x2000u
#define DMA_INT_INT13_SHIFT                      13u
#define DMA_INT_INT13_WIDTH                      1u
#define DMA_INT_INT13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT13_SHIFT))&DMA_INT_INT13_MASK)
#define DMA_INT_INT14_MASK                       0x4000u
#define DMA_INT_INT14_SHIFT                      14u
#define DMA_INT_INT14_WIDTH                      1u
#define DMA_INT_INT14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT14_SHIFT))&DMA_INT_INT14_MASK)
#define DMA_INT_INT15_MASK                       0x8000u
#define DMA_INT_INT15_SHIFT                      15u
#define DMA_INT_INT15_WIDTH                      1u
#define DMA_INT_INT15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT15_SHIFT))&DMA_INT_INT15_MASK)
#define DMA_INT_INT16_MASK                       0x10000u
#define DMA_INT_INT16_SHIFT                      16u
#define DMA_INT_INT16_WIDTH                      1u
#define DMA_INT_INT16(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT16_SHIFT))&DMA_INT_INT16_MASK)
#define DMA_INT_INT17_MASK                       0x20000u
#define DMA_INT_INT17_SHIFT                      17u
#define DMA_INT_INT17_WIDTH                      1u
#define DMA_INT_INT17(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT17_SHIFT))&DMA_INT_INT17_MASK)
#define DMA_INT_INT18_MASK                       0x40000u
#define DMA_INT_INT18_SHIFT                      18u
#define DMA_INT_INT18_WIDTH                      1u
#define DMA_INT_INT18(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT18_SHIFT))&DMA_INT_INT18_MASK)
#define DMA_INT_INT19_MASK                       0x80000u
#define DMA_INT_INT19_SHIFT                      19u
#define DMA_INT_INT19_WIDTH                      1u
#define DMA_INT_INT19(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT19_SHIFT))&DMA_INT_INT19_MASK)
#define DMA_INT_INT20_MASK                       0x100000u
#define DMA_INT_INT20_SHIFT                      20u
#define DMA_INT_INT20_WIDTH                      1u
#define DMA_INT_INT20(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT20_SHIFT))&DMA_INT_INT20_MASK)
#define DMA_INT_INT21_MASK                       0x200000u
#define DMA_INT_INT21_SHIFT                      21u
#define DMA_INT_INT21_WIDTH                      1u
#define DMA_INT_INT21(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT21_SHIFT))&DMA_INT_INT21_MASK)
#define DMA_INT_INT22_MASK                       0x400000u
#define DMA_INT_INT22_SHIFT                      22u
#define DMA_INT_INT22_WIDTH                      1u
#define DMA_INT_INT22(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT22_SHIFT))&DMA_INT_INT22_MASK)
#define DMA_INT_INT23_MASK                       0x800000u
#define DMA_INT_INT23_SHIFT                      23u
#define DMA_INT_INT23_WIDTH                      1u
#define DMA_INT_INT23(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT23_SHIFT))&DMA_INT_INT23_MASK)
#define DMA_INT_INT24_MASK                       0x1000000u
#define DMA_INT_INT24_SHIFT                      24u
#define DMA_INT_INT24_WIDTH                      1u
#define DMA_INT_INT24(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT24_SHIFT))&DMA_INT_INT24_MASK)
#define DMA_INT_INT25_MASK                       0x2000000u
#define DMA_INT_INT25_SHIFT                      25u
#define DMA_INT_INT25_WIDTH                      1u
#define DMA_INT_INT25(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT25_SHIFT))&DMA_INT_INT25_MASK)
#define DMA_INT_INT26_MASK                       0x4000000u
#define DMA_INT_INT26_SHIFT                      26u
#define DMA_INT_INT26_WIDTH                      1u
#define DMA_INT_INT26(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT26_SHIFT))&DMA_INT_INT26_MASK)
#define DMA_INT_INT27_MASK                       0x8000000u
#define DMA_INT_INT27_SHIFT                      27u
#define DMA_INT_INT27_WIDTH                      1u
#define DMA_INT_INT27(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT27_SHIFT))&DMA_INT_INT27_MASK)
#define DMA_INT_INT28_MASK                       0x10000000u
#define DMA_INT_INT28_SHIFT                      28u
#define DMA_INT_INT28_WIDTH                      1u
#define DMA_INT_INT28(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT28_SHIFT))&DMA_INT_INT28_MASK)
#define DMA_INT_INT29_MASK                       0x20000000u
#define DMA_INT_INT29_SHIFT                      29u
#define DMA_INT_INT29_WIDTH                      1u
#define DMA_INT_INT29(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT29_SHIFT))&DMA_INT_INT29_MASK)
#define DMA_INT_INT30_MASK                       0x40000000u
#define DMA_INT_INT30_SHIFT                      30u
#define DMA_INT_INT30_WIDTH                      1u
#define DMA_INT_INT30(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT30_SHIFT))&DMA_INT_INT30_MASK)
#define DMA_INT_INT31_MASK                       0x80000000u
#define DMA_INT_INT31_SHIFT                      31u
#define DMA_INT_INT31_WIDTH                      1u
#define DMA_INT_INT31(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT31_SHIFT))&DMA_INT_INT31_MASK)
/* ERR Bit Fields */
#define DMA_ERR_ERR0_MASK                        0x1u
#define DMA_ERR_ERR0_SHIFT                       0u
#define DMA_ERR_ERR0_WIDTH                       1u
#define DMA_ERR_ERR0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR0_SHIFT))&DMA_ERR_ERR0_MASK)
#define DMA_ERR_ERR1_MASK                        0x2u
#define DMA_ERR_ERR1_SHIFT                       1u
#define DMA_ERR_ERR1_WIDTH                       1u
#define DMA_ERR_ERR1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR1_SHIFT))&DMA_ERR_ERR1_MASK)
#define DMA_ERR_ERR2_MASK                        0x4u
#define DMA_ERR_ERR2_SHIFT                       2u
#define DMA_ERR_ERR2_WIDTH                       1u
#define DMA_ERR_ERR2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR2_SHIFT))&DMA_ERR_ERR2_MASK)
#define DMA_ERR_ERR3_MASK                        0x8u
#define DMA_ERR_ERR3_SHIFT                       3u
#define DMA_ERR_ERR3_WIDTH                       1u
#define DMA_ERR_ERR3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR3_SHIFT))&DMA_ERR_ERR3_MASK)
#define DMA_ERR_ERR4_MASK                        0x10u
#define DMA_ERR_ERR4_SHIFT                       4u
#define DMA_ERR_ERR4_WIDTH                       1u
#define DMA_ERR_ERR4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR4_SHIFT))&DMA_ERR_ERR4_MASK)
#define DMA_ERR_ERR5_MASK                        0x20u
#define DMA_ERR_ERR5_SHIFT                       5u
#define DMA_ERR_ERR5_WIDTH                       1u
#define DMA_ERR_ERR5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR5_SHIFT))&DMA_ERR_ERR5_MASK)
#define DMA_ERR_ERR6_MASK                        0x40u
#define DMA_ERR_ERR6_SHIFT                       6u
#define DMA_ERR_ERR6_WIDTH                       1u
#define DMA_ERR_ERR6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR6_SHIFT))&DMA_ERR_ERR6_MASK)
#define DMA_ERR_ERR7_MASK                        0x80u
#define DMA_ERR_ERR7_SHIFT                       7u
#define DMA_ERR_ERR7_WIDTH                       1u
#define DMA_ERR_ERR7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR7_SHIFT))&DMA_ERR_ERR7_MASK)
#define DMA_ERR_ERR8_MASK                        0x100u
#define DMA_ERR_ERR8_SHIFT                       8u
#define DMA_ERR_ERR8_WIDTH                       1u
#define DMA_ERR_ERR8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR8_SHIFT))&DMA_ERR_ERR8_MASK)
#define DMA_ERR_ERR9_MASK                        0x200u
#define DMA_ERR_ERR9_SHIFT                       9u
#define DMA_ERR_ERR9_WIDTH                       1u
#define DMA_ERR_ERR9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR9_SHIFT))&DMA_ERR_ERR9_MASK)
#define DMA_ERR_ERR10_MASK                       0x400u
#define DMA_ERR_ERR10_SHIFT                      10u
#define DMA_ERR_ERR10_WIDTH                      1u
#define DMA_ERR_ERR10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR10_SHIFT))&DMA_ERR_ERR10_MASK)
#define DMA_ERR_ERR11_MASK                       0x800u
#define DMA_ERR_ERR11_SHIFT                      11u
#define DMA_ERR_ERR11_WIDTH                      1u
#define DMA_ERR_ERR11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR11_SHIFT))&DMA_ERR_ERR11_MASK)
#define DMA_ERR_ERR12_MASK                       0x1000u
#define DMA_ERR_ERR12_SHIFT                      12u
#define DMA_ERR_ERR12_WIDTH                      1u
#define DMA_ERR_ERR12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR12_SHIFT))&DMA_ERR_ERR12_MASK)
#define DMA_ERR_ERR13_MASK                       0x2000u
#define DMA_ERR_ERR13_SHIFT                      13u
#define DMA_ERR_ERR13_WIDTH                      1u
#define DMA_ERR_ERR13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR13_SHIFT))&DMA_ERR_ERR13_MASK)
#define DMA_ERR_ERR14_MASK                       0x4000u
#define DMA_ERR_ERR14_SHIFT                      14u
#define DMA_ERR_ERR14_WIDTH                      1u
#define DMA_ERR_ERR14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR14_SHIFT))&DMA_ERR_ERR14_MASK)
#define DMA_ERR_ERR15_MASK                       0x8000u
#define DMA_ERR_ERR15_SHIFT                      15u
#define DMA_ERR_ERR15_WIDTH                      1u
#define DMA_ERR_ERR15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR15_SHIFT))&DMA_ERR_ERR15_MASK)
#define DMA_ERR_ERR16_MASK                       0x10000u
#define DMA_ERR_ERR16_SHIFT                      16u
#define DMA_ERR_ERR16_WIDTH                      1u
#define DMA_ERR_ERR16(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR16_SHIFT))&DMA_ERR_ERR16_MASK)
#define DMA_ERR_ERR17_MASK                       0x20000u
#define DMA_ERR_ERR17_SHIFT                      17u
#define DMA_ERR_ERR17_WIDTH                      1u
#define DMA_ERR_ERR17(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR17_SHIFT))&DMA_ERR_ERR17_MASK)
#define DMA_ERR_ERR18_MASK                       0x40000u
#define DMA_ERR_ERR18_SHIFT                      18u
#define DMA_ERR_ERR18_WIDTH                      1u
#define DMA_ERR_ERR18(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR18_SHIFT))&DMA_ERR_ERR18_MASK)
#define DMA_ERR_ERR19_MASK                       0x80000u
#define DMA_ERR_ERR19_SHIFT                      19u
#define DMA_ERR_ERR19_WIDTH                      1u
#define DMA_ERR_ERR19(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR19_SHIFT))&DMA_ERR_ERR19_MASK)
#define DMA_ERR_ERR20_MASK                       0x100000u
#define DMA_ERR_ERR20_SHIFT                      20u
#define DMA_ERR_ERR20_WIDTH                      1u
#define DMA_ERR_ERR20(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR20_SHIFT))&DMA_ERR_ERR20_MASK)
#define DMA_ERR_ERR21_MASK                       0x200000u
#define DMA_ERR_ERR21_SHIFT                      21u
#define DMA_ERR_ERR21_WIDTH                      1u
#define DMA_ERR_ERR21(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR21_SHIFT))&DMA_ERR_ERR21_MASK)
#define DMA_ERR_ERR22_MASK                       0x400000u
#define DMA_ERR_ERR22_SHIFT                      22u
#define DMA_ERR_ERR22_WIDTH                      1u
#define DMA_ERR_ERR22(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR22_SHIFT))&DMA_ERR_ERR22_MASK)
#define DMA_ERR_ERR23_MASK                       0x800000u
#define DMA_ERR_ERR23_SHIFT                      23u
#define DMA_ERR_ERR23_WIDTH                      1u
#define DMA_ERR_ERR23(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR23_SHIFT))&DMA_ERR_ERR23_MASK)
#define DMA_ERR_ERR24_MASK                       0x1000000u
#define DMA_ERR_ERR24_SHIFT                      24u
#define DMA_ERR_ERR24_WIDTH                      1u
#define DMA_ERR_ERR24(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR24_SHIFT))&DMA_ERR_ERR24_MASK)
#define DMA_ERR_ERR25_MASK                       0x2000000u
#define DMA_ERR_ERR25_SHIFT                      25u
#define DMA_ERR_ERR25_WIDTH                      1u
#define DMA_ERR_ERR25(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR25_SHIFT))&DMA_ERR_ERR25_MASK)
#define DMA_ERR_ERR26_MASK                       0x4000000u
#define DMA_ERR_ERR26_SHIFT                      26u
#define DMA_ERR_ERR26_WIDTH                      1u
#define DMA_ERR_ERR26(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR26_SHIFT))&DMA_ERR_ERR26_MASK)
#define DMA_ERR_ERR27_MASK                       0x8000000u
#define DMA_ERR_ERR27_SHIFT                      27u
#define DMA_ERR_ERR27_WIDTH                      1u
#define DMA_ERR_ERR27(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR27_SHIFT))&DMA_ERR_ERR27_MASK)
#define DMA_ERR_ERR28_MASK                       0x10000000u
#define DMA_ERR_ERR28_SHIFT                      28u
#define DMA_ERR_ERR28_WIDTH                      1u
#define DMA_ERR_ERR28(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR28_SHIFT))&DMA_ERR_ERR28_MASK)
#define DMA_ERR_ERR29_MASK                       0x20000000u
#define DMA_ERR_ERR29_SHIFT                      29u
#define DMA_ERR_ERR29_WIDTH                      1u
#define DMA_ERR_ERR29(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR29_SHIFT))&DMA_ERR_ERR29_MASK)
#define DMA_ERR_ERR30_MASK                       0x40000000u
#define DMA_ERR_ERR30_SHIFT                      30u
#define DMA_ERR_ERR30_WIDTH                      1u
#define DMA_ERR_ERR30(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR30_SHIFT))&DMA_ERR_ERR30_MASK)
#define DMA_ERR_ERR31_MASK                       0x80000000u
#define DMA_ERR_ERR31_SHIFT                      31u
#define DMA_ERR_ERR31_WIDTH                      1u
#define DMA_ERR_ERR31(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR31_SHIFT))&DMA_ERR_ERR31_MASK)
/* HRS Bit Fields */
#define DMA_HRS_HRS0_MASK                        0x1u
#define DMA_HRS_HRS0_SHIFT                       0u
#define DMA_HRS_HRS0_WIDTH                       1u
#define DMA_HRS_HRS0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS0_SHIFT))&DMA_HRS_HRS0_MASK)
#define DMA_HRS_HRS1_MASK                        0x2u
#define DMA_HRS_HRS1_SHIFT                       1u
#define DMA_HRS_HRS1_WIDTH                       1u
#define DMA_HRS_HRS1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS1_SHIFT))&DMA_HRS_HRS1_MASK)
#define DMA_HRS_HRS2_MASK                        0x4u
#define DMA_HRS_HRS2_SHIFT                       2u
#define DMA_HRS_HRS2_WIDTH                       1u
#define DMA_HRS_HRS2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS2_SHIFT))&DMA_HRS_HRS2_MASK)
#define DMA_HRS_HRS3_MASK                        0x8u
#define DMA_HRS_HRS3_SHIFT                       3u
#define DMA_HRS_HRS3_WIDTH                       1u
#define DMA_HRS_HRS3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS3_SHIFT))&DMA_HRS_HRS3_MASK)
#define DMA_HRS_HRS4_MASK                        0x10u
#define DMA_HRS_HRS4_SHIFT                       4u
#define DMA_HRS_HRS4_WIDTH                       1u
#define DMA_HRS_HRS4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS4_SHIFT))&DMA_HRS_HRS4_MASK)
#define DMA_HRS_HRS5_MASK                        0x20u
#define DMA_HRS_HRS5_SHIFT                       5u
#define DMA_HRS_HRS5_WIDTH                       1u
#define DMA_HRS_HRS5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS5_SHIFT))&DMA_HRS_HRS5_MASK)
#define DMA_HRS_HRS6_MASK                        0x40u
#define DMA_HRS_HRS6_SHIFT                       6u
#define DMA_HRS_HRS6_WIDTH                       1u
#define DMA_HRS_HRS6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS6_SHIFT))&DMA_HRS_HRS6_MASK)
#define DMA_HRS_HRS7_MASK                        0x80u
#define DMA_HRS_HRS7_SHIFT                       7u
#define DMA_HRS_HRS7_WIDTH                       1u
#define DMA_HRS_HRS7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS7_SHIFT))&DMA_HRS_HRS7_MASK)
#define DMA_HRS_HRS8_MASK                        0x100u
#define DMA_HRS_HRS8_SHIFT                       8u
#define DMA_HRS_HRS8_WIDTH                       1u
#define DMA_HRS_HRS8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS8_SHIFT))&DMA_HRS_HRS8_MASK)
#define DMA_HRS_HRS9_MASK                        0x200u
#define DMA_HRS_HRS9_SHIFT                       9u
#define DMA_HRS_HRS9_WIDTH                       1u
#define DMA_HRS_HRS9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS9_SHIFT))&DMA_HRS_HRS9_MASK)
#define DMA_HRS_HRS10_MASK                       0x400u
#define DMA_HRS_HRS10_SHIFT                      10u
#define DMA_HRS_HRS10_WIDTH                      1u
#define DMA_HRS_HRS10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS10_SHIFT))&DMA_HRS_HRS10_MASK)
#define DMA_HRS_HRS11_MASK                       0x800u
#define DMA_HRS_HRS11_SHIFT                      11u
#define DMA_HRS_HRS11_WIDTH                      1u
#define DMA_HRS_HRS11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS11_SHIFT))&DMA_HRS_HRS11_MASK)
#define DMA_HRS_HRS12_MASK                       0x1000u
#define DMA_HRS_HRS12_SHIFT                      12u
#define DMA_HRS_HRS12_WIDTH                      1u
#define DMA_HRS_HRS12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS12_SHIFT))&DMA_HRS_HRS12_MASK)
#define DMA_HRS_HRS13_MASK                       0x2000u
#define DMA_HRS_HRS13_SHIFT                      13u
#define DMA_HRS_HRS13_WIDTH                      1u
#define DMA_HRS_HRS13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS13_SHIFT))&DMA_HRS_HRS13_MASK)
#define DMA_HRS_HRS14_MASK                       0x4000u
#define DMA_HRS_HRS14_SHIFT                      14u
#define DMA_HRS_HRS14_WIDTH                      1u
#define DMA_HRS_HRS14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS14_SHIFT))&DMA_HRS_HRS14_MASK)
#define DMA_HRS_HRS15_MASK                       0x8000u
#define DMA_HRS_HRS15_SHIFT                      15u
#define DMA_HRS_HRS15_WIDTH                      1u
#define DMA_HRS_HRS15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS15_SHIFT))&DMA_HRS_HRS15_MASK)
#define DMA_HRS_HRS16_MASK                       0x10000u
#define DMA_HRS_HRS16_SHIFT                      16u
#define DMA_HRS_HRS16_WIDTH                      1u
#define DMA_HRS_HRS16(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS16_SHIFT))&DMA_HRS_HRS16_MASK)
#define DMA_HRS_HRS17_MASK                       0x20000u
#define DMA_HRS_HRS17_SHIFT                      17u
#define DMA_HRS_HRS17_WIDTH                      1u
#define DMA_HRS_HRS17(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS17_SHIFT))&DMA_HRS_HRS17_MASK)
#define DMA_HRS_HRS18_MASK                       0x40000u
#define DMA_HRS_HRS18_SHIFT                      18u
#define DMA_HRS_HRS18_WIDTH                      1u
#define DMA_HRS_HRS18(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS18_SHIFT))&DMA_HRS_HRS18_MASK)
#define DMA_HRS_HRS19_MASK                       0x80000u
#define DMA_HRS_HRS19_SHIFT                      19u
#define DMA_HRS_HRS19_WIDTH                      1u
#define DMA_HRS_HRS19(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS19_SHIFT))&DMA_HRS_HRS19_MASK)
#define DMA_HRS_HRS20_MASK                       0x100000u
#define DMA_HRS_HRS20_SHIFT                      20u
#define DMA_HRS_HRS20_WIDTH                      1u
#define DMA_HRS_HRS20(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS20_SHIFT))&DMA_HRS_HRS20_MASK)
#define DMA_HRS_HRS21_MASK                       0x200000u
#define DMA_HRS_HRS21_SHIFT                      21u
#define DMA_HRS_HRS21_WIDTH                      1u
#define DMA_HRS_HRS21(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS21_SHIFT))&DMA_HRS_HRS21_MASK)
#define DMA_HRS_HRS22_MASK                       0x400000u
#define DMA_HRS_HRS22_SHIFT                      22u
#define DMA_HRS_HRS22_WIDTH                      1u
#define DMA_HRS_HRS22(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS22_SHIFT))&DMA_HRS_HRS22_MASK)
#define DMA_HRS_HRS23_MASK                       0x800000u
#define DMA_HRS_HRS23_SHIFT                      23u
#define DMA_HRS_HRS23_WIDTH                      1u
#define DMA_HRS_HRS23(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS23_SHIFT))&DMA_HRS_HRS23_MASK)
#define DMA_HRS_HRS24_MASK                       0x1000000u
#define DMA_HRS_HRS24_SHIFT                      24u
#define DMA_HRS_HRS24_WIDTH                      1u
#define DMA_HRS_HRS24(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS24_SHIFT))&DMA_HRS_HRS24_MASK)
#define DMA_HRS_HRS25_MASK                       0x2000000u
#define DMA_HRS_HRS25_SHIFT                      25u
#define DMA_HRS_HRS25_WIDTH                      1u
#define DMA_HRS_HRS25(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS25_SHIFT))&DMA_HRS_HRS25_MASK)
#define DMA_HRS_HRS26_MASK                       0x4000000u
#define DMA_HRS_HRS26_SHIFT                      26u
#define DMA_HRS_HRS26_WIDTH                      1u
#define DMA_HRS_HRS26(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS26_SHIFT))&DMA_HRS_HRS26_MASK)
#define DMA_HRS_HRS27_MASK                       0x8000000u
#define DMA_HRS_HRS27_SHIFT                      27u
#define DMA_HRS_HRS27_WIDTH                      1u
#define DMA_HRS_HRS27(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS27_SHIFT))&DMA_HRS_HRS27_MASK)
#define DMA_HRS_HRS28_MASK                       0x10000000u
#define DMA_HRS_HRS28_SHIFT                      28u
#define DMA_HRS_HRS28_WIDTH                      1u
#define DMA_HRS_HRS28(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS28_SHIFT))&DMA_HRS_HRS28_MASK)
#define DMA_HRS_HRS29_MASK                       0x20000000u
#define DMA_HRS_HRS29_SHIFT                      29u
#define DMA_HRS_HRS29_WIDTH                      1u
#define DMA_HRS_HRS29(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS29_SHIFT))&DMA_HRS_HRS29_MASK)
#define DMA_HRS_HRS30_MASK                       0x40000000u
#define DMA_HRS_HRS30_SHIFT                      30u
#define DMA_HRS_HRS30_WIDTH                      1u
#define DMA_HRS_HRS30(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS30_SHIFT))&DMA_HRS_HRS30_MASK)
#define DMA_HRS_HRS31_MASK                       0x80000000u
#define DMA_HRS_HRS31_SHIFT                      31u
#define DMA_HRS_HRS31_WIDTH                      1u
#define DMA_HRS_HRS31(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS31_SHIFT))&DMA_HRS_HRS31_MASK)
/* DCHPRI Bit Fields */
#define DMA_DCHPRI_CHPRI_MASK                    0xFu
#define DMA_DCHPRI_CHPRI_SHIFT                   0u
#define DMA_DCHPRI_CHPRI_WIDTH                   4u
#define DMA_DCHPRI_CHPRI(x)                      (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_CHPRI_SHIFT))&DMA_DCHPRI_CHPRI_MASK)
#define DMA_DCHPRI_GRPPRI_MASK                   0x30u
#define DMA_DCHPRI_GRPPRI_SHIFT                  4u
#define DMA_DCHPRI_GRPPRI_WIDTH                  2u
#define DMA_DCHPRI_GRPPRI(x)                     (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_GRPPRI_SHIFT))&DMA_DCHPRI_GRPPRI_MASK)
#define DMA_DCHPRI_DPA_MASK                      0x40u
#define DMA_DCHPRI_DPA_SHIFT                     6u
#define DMA_DCHPRI_DPA_WIDTH                     1u
#define DMA_DCHPRI_DPA(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_DPA_SHIFT))&DMA_DCHPRI_DPA_MASK)
#define DMA_DCHPRI_ECP_MASK                      0x80u
#define DMA_DCHPRI_ECP_SHIFT                     7u
#define DMA_DCHPRI_ECP_WIDTH                     1u
#define DMA_DCHPRI_ECP(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_ECP_SHIFT))&DMA_DCHPRI_ECP_MASK)
/* DCHMID Bit Fields */
#define DMA_DCHMID_MID_MASK                      0xFu
#define DMA_DCHMID_MID_SHIFT                     0u
#define DMA_DCHMID_MID_WIDTH                     4u
#define DMA_DCHMID_MID(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHMID_MID_SHIFT))&DMA_DCHMID_MID_MASK)
#define DMA_DCHMID_PAL_MASK                      0x40u
#define DMA_DCHMID_PAL_SHIFT                     6u
#define DMA_DCHMID_PAL_WIDTH                     1u
#define DMA_DCHMID_PAL(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHMID_PAL_SHIFT))&DMA_DCHMID_PAL_MASK)
#define DMA_DCHMID_EMI_MASK                      0x80u
#define DMA_DCHMID_EMI_SHIFT                     7u
#define DMA_DCHMID_EMI_WIDTH                     1u
#define DMA_DCHMID_EMI(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHMID_EMI_SHIFT))&DMA_DCHMID_EMI_MASK)
/* TCD_SADDR Bit Fields */
#define DMA_TCD_SADDR_SADDR_MASK                 0xFFFFFFFFu
#define DMA_TCD_SADDR_SADDR_SHIFT                0u
#define DMA_TCD_SADDR_SADDR_WIDTH                32u
#define DMA_TCD_SADDR_SADDR(x)                   (((uint32_t)(((uint32_t)(x))<<DMA_TCD_SADDR_SADDR_SHIFT))&DMA_TCD_SADDR_SADDR_MASK)
/* TCD_ATTR Bit Fields */
#define DMA_TCD_ATTR_DSIZE_MASK                  0x7u
#define DMA_TCD_ATTR_DSIZE_SHIFT                 0u
#define DMA_TCD_ATTR_DSIZE_WIDTH                 3u
#define DMA_TCD_ATTR_DSIZE(x)                    (((uint16_t)(((uint16_t)(x))<<DMA_TCD_ATTR_DSIZE_SHIFT))&DMA_TCD_ATTR_DSIZE_MASK)
#define DMA_TCD_ATTR_DMOD_MASK                   0xF8u
#define DMA_TCD_ATTR_DMOD_SHIFT                  3u
#define DMA_TCD_ATTR_DMOD_WIDTH                  5u
#define DMA_TCD_ATTR_DMOD(x)                     (((uint16_t)(((uint16_t)(x))<<DMA_TCD_ATTR_DMOD_SHIFT))&DMA_TCD_ATTR_DMOD_MASK)
#define DMA_TCD_ATTR_SSIZE_MASK                  0x700u
#define DMA_TCD_ATTR_SSIZE_SHIFT                 8u
#define DMA_TCD_ATTR_SSIZE_WIDTH                 3u
#define DMA_TCD_ATTR_SSIZE(x)                    (((uint16_t)(((uint16_t)(x))<<DMA_TCD_ATTR_SSIZE_SHIFT))&DMA_TCD_ATTR_SSIZE_MASK)
#define DMA_TCD_ATTR_SMOD_MASK                   0xF800u
#define DMA_TCD_ATTR_SMOD_SHIFT                  11u
#define DMA_TCD_ATTR_SMOD_WIDTH                  5u
#define DMA_TCD_ATTR_SMOD(x)                     (((uint16_t)(((uint16_t)(x))<<DMA_TCD_ATTR_SMOD_SHIFT))&DMA_TCD_ATTR_SMOD_MASK)
/* TCD_SOFF Bit Fields */
#define DMA_TCD_SOFF_SOFF_MASK                   0xFFFFu
#define DMA_TCD_SOFF_SOFF_SHIFT                  0u
#define DMA_TCD_SOFF_SOFF_WIDTH                  16u
#define DMA_TCD_SOFF_SOFF(x)                     (((uint16_t)(((uint16_t)(x))<<DMA_TCD_SOFF_SOFF_SHIFT))&DMA_TCD_SOFF_SOFF_MASK)
/* TCD_NBYTES_MLNO Bit Fields */
#define DMA_TCD_NBYTES_MLNO_NBYTES_MASK          0xFFFFFFFFu
#define DMA_TCD_NBYTES_MLNO_NBYTES_SHIFT         0u
#define DMA_TCD_NBYTES_MLNO_NBYTES_WIDTH         32u
#define DMA_TCD_NBYTES_MLNO_NBYTES(x)            (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD_NBYTES_MLNO_NBYTES_MASK)
/* TCD_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD_NBYTES_MLOFFNO_NBYTES_MASK       0x3FFFFFFFu
#define DMA_TCD_NBYTES_MLOFFNO_NBYTES_SHIFT      0u
#define DMA_TCD_NBYTES_MLOFFNO_NBYTES_WIDTH      30u
#define DMA_TCD_NBYTES_MLOFFNO_NBYTES(x)         (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD_NBYTES_MLOFFNO_DMLOE_MASK        0x40000000u
#define DMA_TCD_NBYTES_MLOFFNO_DMLOE_SHIFT       30u
#define DMA_TCD_NBYTES_MLOFFNO_DMLOE_WIDTH       1u
#define DMA_TCD_NBYTES_MLOFFNO_DMLOE(x)          (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD_NBYTES_MLOFFNO_SMLOE_MASK        0x80000000u
#define DMA_TCD_NBYTES_MLOFFNO_SMLOE_SHIFT       31u
#define DMA_TCD_NBYTES_MLOFFNO_SMLOE_WIDTH       1u
#define DMA_TCD_NBYTES_MLOFFNO_SMLOE(x)          (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD_NBYTES_MLOFFYES_NBYTES_MASK      0x3FFu
#define DMA_TCD_NBYTES_MLOFFYES_NBYTES_SHIFT     0u
#define DMA_TCD_NBYTES_MLOFFYES_NBYTES_WIDTH     10u
#define DMA_TCD_NBYTES_MLOFFYES_NBYTES(x)        (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD_NBYTES_MLOFFYES_MLOFF_MASK       0x3FFFFC00u
#define DMA_TCD_NBYTES_MLOFFYES_MLOFF_SHIFT      10u
#define DMA_TCD_NBYTES_MLOFFYES_MLOFF_WIDTH      20u
#define DMA_TCD_NBYTES_MLOFFYES_MLOFF(x)         (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD_NBYTES_MLOFFYES_DMLOE_MASK       0x40000000u
#define DMA_TCD_NBYTES_MLOFFYES_DMLOE_SHIFT      30u
#define DMA_TCD_NBYTES_MLOFFYES_DMLOE_WIDTH      1u
#define DMA_TCD_NBYTES_MLOFFYES_DMLOE(x)         (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD_NBYTES_MLOFFYES_SMLOE_MASK       0x80000000u
#define DMA_TCD_NBYTES_MLOFFYES_SMLOE_SHIFT      31u
#define DMA_TCD_NBYTES_MLOFFYES_SMLOE_WIDTH      1u
#define DMA_TCD_NBYTES_MLOFFYES_SMLOE(x)         (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD_SLAST Bit Fields */
#define DMA_TCD_SLAST_SLAST_MASK                 0xFFFFFFFFu
#define DMA_TCD_SLAST_SLAST_SHIFT                0u
#define DMA_TCD_SLAST_SLAST_WIDTH                32u
#define DMA_TCD_SLAST_SLAST(x)                   (((uint32_t)(((uint32_t)(x))<<DMA_TCD_SLAST_SLAST_SHIFT))&DMA_TCD_SLAST_SLAST_MASK)
/* TCD_DADDR Bit Fields */
#define DMA_TCD_DADDR_DADDR_MASK                 0xFFFFFFFFu
#define DMA_TCD_DADDR_DADDR_SHIFT                0u
#define DMA_TCD_DADDR_DADDR_WIDTH                32u
#define DMA_TCD_DADDR_DADDR(x)                   (((uint32_t)(((uint32_t)(x))<<DMA_TCD_DADDR_DADDR_SHIFT))&DMA_TCD_DADDR_DADDR_MASK)
/* TCD_CITER_ELINKNO Bit Fields */
#define DMA_TCD_CITER_ELINKNO_CITER_MASK         0x7FFFu
#define DMA_TCD_CITER_ELINKNO_CITER_SHIFT        0u
#define DMA_TCD_CITER_ELINKNO_CITER_WIDTH        15u
#define DMA_TCD_CITER_ELINKNO_CITER(x)           (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD_CITER_ELINKNO_ELINK_MASK         0x8000u
#define DMA_TCD_CITER_ELINKNO_ELINK_SHIFT        15u
#define DMA_TCD_CITER_ELINKNO_ELINK_WIDTH        1u
#define DMA_TCD_CITER_ELINKNO_ELINK(x)           (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD_CITER_ELINKNO_ELINK_MASK)
/* TCD_CITER_ELINKYES Bit Fields */
#define DMA_TCD_CITER_ELINKYES_CITER_MASK        0x1FFu
#define DMA_TCD_CITER_ELINKYES_CITER_SHIFT       0u
#define DMA_TCD_CITER_ELINKYES_CITER_WIDTH       9u
#define DMA_TCD_CITER_ELINKYES_CITER(x)          (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD_CITER_ELINKYES_LINKCH_MASK       0x3E00u
#define DMA_TCD_CITER_ELINKYES_LINKCH_SHIFT      9u
#define DMA_TCD_CITER_ELINKYES_LINKCH_WIDTH      5u
#define DMA_TCD_CITER_ELINKYES_LINKCH(x)         (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD_CITER_ELINKYES_ELINK_MASK        0x8000u
#define DMA_TCD_CITER_ELINKYES_ELINK_SHIFT       15u
#define DMA_TCD_CITER_ELINKYES_ELINK_WIDTH       1u
#define DMA_TCD_CITER_ELINKYES_ELINK(x)          (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD_CITER_ELINKYES_ELINK_MASK)
/* TCD_DOFF Bit Fields */
#define DMA_TCD_DOFF_DOFF_MASK                   0xFFFFu
#define DMA_TCD_DOFF_DOFF_SHIFT                  0u
#define DMA_TCD_DOFF_DOFF_WIDTH                  16u
#define DMA_TCD_DOFF_DOFF(x)                     (((uint16_t)(((uint16_t)(x))<<DMA_TCD_DOFF_DOFF_SHIFT))&DMA_TCD_DOFF_DOFF_MASK)
/* TCD_DLASTSGA Bit Fields */
#define DMA_TCD_DLASTSGA_DLASTSGA_MASK           0xFFFFFFFFu
#define DMA_TCD_DLASTSGA_DLASTSGA_SHIFT          0u
#define DMA_TCD_DLASTSGA_DLASTSGA_WIDTH          32u
#define DMA_TCD_DLASTSGA_DLASTSGA(x)             (((uint32_t)(((uint32_t)(x))<<DMA_TCD_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD_DLASTSGA_DLASTSGA_MASK)
/* TCD_BITER_ELINKNO Bit Fields */
#define DMA_TCD_BITER_ELINKNO_BITER_MASK         0x7FFFu
#define DMA_TCD_BITER_ELINKNO_BITER_SHIFT        0u
#define DMA_TCD_BITER_ELINKNO_BITER_WIDTH        15u
#define DMA_TCD_BITER_ELINKNO_BITER(x)           (((uint16_t)(((uint16_t)(x))<<DMA_TCD_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD_BITER_ELINKNO_ELINK_MASK         0x8000u
#define DMA_TCD_BITER_ELINKNO_ELINK_SHIFT        15u
#define DMA_TCD_BITER_ELINKNO_ELINK_WIDTH        1u
#define DMA_TCD_BITER_ELINKNO_ELINK(x)           (((uint16_t)(((uint16_t)(x))<<DMA_TCD_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD_BITER_ELINKNO_ELINK_MASK)
/* TCD_BITER_ELINKYES Bit Fields */
#define DMA_TCD_BITER_ELINKYES_BITER_MASK        0x1FFu
#define DMA_TCD_BITER_ELINKYES_BITER_SHIFT       0u
#define DMA_TCD_BITER_ELINKYES_BITER_WIDTH       9u
#define DMA_TCD_BITER_ELINKYES_BITER(x)          (((uint16_t)(((uint16_t)(x))<<DMA_TCD_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD_BITER_ELINKYES_LINKCH_MASK       0x3E00u
#define DMA_TCD_BITER_ELINKYES_LINKCH_SHIFT      9u
#define DMA_TCD_BITER_ELINKYES_LINKCH_WIDTH      5u
#define DMA_TCD_BITER_ELINKYES_LINKCH(x)         (((uint16_t)(((uint16_t)(x))<<DMA_TCD_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD_BITER_ELINKYES_ELINK_MASK        0x8000u
#define DMA_TCD_BITER_ELINKYES_ELINK_SHIFT       15u
#define DMA_TCD_BITER_ELINKYES_ELINK_WIDTH       1u
#define DMA_TCD_BITER_ELINKYES_ELINK(x)          (((uint16_t)(((uint16_t)(x))<<DMA_TCD_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD_BITER_ELINKYES_ELINK_MASK)
/* TCD_CSR Bit Fields */
#define DMA_TCD_CSR_START_MASK                   0x1u
#define DMA_TCD_CSR_START_SHIFT                  0u
#define DMA_TCD_CSR_START_WIDTH                  1u
#define DMA_TCD_CSR_START(x)                     (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_START_SHIFT))&DMA_TCD_CSR_START_MASK)
#define DMA_TCD_CSR_INTMAJOR_MASK                0x2u
#define DMA_TCD_CSR_INTMAJOR_SHIFT               1u
#define DMA_TCD_CSR_INTMAJOR_WIDTH               1u
#define DMA_TCD_CSR_INTMAJOR(x)                  (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_INTMAJOR_SHIFT))&DMA_TCD_CSR_INTMAJOR_MASK)
#define DMA_TCD_CSR_INTHALF_MASK                 0x4u
#define DMA_TCD_CSR_INTHALF_SHIFT                2u
#define DMA_TCD_CSR_INTHALF_WIDTH                1u
#define DMA_TCD_CSR_INTHALF(x)                   (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_INTHALF_SHIFT))&DMA_TCD_CSR_INTHALF_MASK)
#define DMA_TCD_CSR_DREQ_MASK                    0x8u
#define DMA_TCD_CSR_DREQ_SHIFT                   3u
#define DMA_TCD_CSR_DREQ_WIDTH                   1u
#define DMA_TCD_CSR_DREQ(x)                      (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_DREQ_SHIFT))&DMA_TCD_CSR_DREQ_MASK)
#define DMA_TCD_CSR_ESG_MASK                     0x10u
#define DMA_TCD_CSR_ESG_SHIFT                    4u
#define DMA_TCD_CSR_ESG_WIDTH                    1u
#define DMA_TCD_CSR_ESG(x)                       (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_ESG_SHIFT))&DMA_TCD_CSR_ESG_MASK)
#define DMA_TCD_CSR_MAJORELINK_MASK              0x20u
#define DMA_TCD_CSR_MAJORELINK_SHIFT             5u
#define DMA_TCD_CSR_MAJORELINK_WIDTH             1u
#define DMA_TCD_CSR_MAJORELINK(x)                (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_MAJORELINK_SHIFT))&DMA_TCD_CSR_MAJORELINK_MASK)
#define DMA_TCD_CSR_ACTIVE_MASK                  0x40u
#define DMA_TCD_CSR_ACTIVE_SHIFT                 6u
#define DMA_TCD_CSR_ACTIVE_WIDTH                 1u
#define DMA_TCD_CSR_ACTIVE(x)                    (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_ACTIVE_SHIFT))&DMA_TCD_CSR_ACTIVE_MASK)
#define DMA_TCD_CSR_DONE_MASK                    0x80u
#define DMA_TCD_CSR_DONE_SHIFT                   7u
#define DMA_TCD_CSR_DONE_WIDTH                   1u
#define DMA_TCD_CSR_DONE(x)                      (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_DONE_SHIFT))&DMA_TCD_CSR_DONE_MASK)
#define DMA_TCD_CSR_MAJORLINKCH_MASK             0x1F00u
#define DMA_TCD_CSR_MAJORLINKCH_SHIFT            8u
#define DMA_TCD_CSR_MAJORLINKCH_WIDTH            5u
#define DMA_TCD_CSR_MAJORLINKCH(x)               (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_MAJORLINKCH_SHIFT))&DMA_TCD_CSR_MAJORLINKCH_MASK)
#define DMA_TCD_CSR_BWC_MASK                     0xC000u
#define DMA_TCD_CSR_BWC_SHIFT                    14u
#define DMA_TCD_CSR_BWC_WIDTH                    2u
#define DMA_TCD_CSR_BWC(x)                       (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_BWC_SHIFT))&DMA_TCD_CSR_BWC_MASK)

/*!
 * @}
 */ /* end of group DMA_Register_Masks */


/*!
 * @}
 */ /* end of group DMA_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DMAMUX Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMAMUX_Peripheral_Access_Layer DMAMUX Peripheral Access Layer
 * @{
 */


/** DMAMUX - Size of Registers Arrays */
#define DMAMUX_CHCFG_COUNT                       16u

/** DMAMUX - Register Layout Typedef */
typedef struct {
  __IO uint8_t CHCFG[DMAMUX_CHCFG_COUNT];          /**< Channel Configuration register, array offset: 0x0, array step: 0x1 */
} DMAMUX_Type, *DMAMUX_MemMapPtr;

 /** Number of instances of the DMAMUX module. */
#define DMAMUX_INSTANCE_COUNT                    (2u)


/* DMAMUX - Peripheral instance base addresses */
/** Peripheral DMAMUX_0 base address */
#define DMAMUX_0_BASE                            (0xFFF6C000u)
/** Peripheral DMAMUX_0 base pointer */
#define DMAMUX_0                                 ((DMAMUX_Type *)DMAMUX_0_BASE)
/** Peripheral DMAMUX_1 base address */
#define DMAMUX_1_BASE                            (0xFBF6C000u)
/** Peripheral DMAMUX_1 base pointer */
#define DMAMUX_1                                 ((DMAMUX_Type *)DMAMUX_1_BASE)
/** Array initializer of DMAMUX peripheral base addresses */
#define DMAMUX_BASE_ADDRS                        { DMAMUX_0_BASE, DMAMUX_1_BASE }
/** Array initializer of DMAMUX peripheral base pointers */
#define DMAMUX_BASE_PTRS                         { DMAMUX_0, DMAMUX_1 }

/* ----------------------------------------------------------------------------
   -- DMAMUX Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMAMUX_Register_Masks DMAMUX Register Masks
 * @{
 */

/* CHCFG Bit Fields */
#define DMAMUX_CHCFG_SOURCE_MASK                 0x3Fu
#define DMAMUX_CHCFG_SOURCE_SHIFT                0u
#define DMAMUX_CHCFG_SOURCE_WIDTH                6u
#define DMAMUX_CHCFG_SOURCE(x)                   (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_SOURCE_SHIFT))&DMAMUX_CHCFG_SOURCE_MASK)
#define DMAMUX_CHCFG_TRIG_MASK                   0x40u
#define DMAMUX_CHCFG_TRIG_SHIFT                  6u
#define DMAMUX_CHCFG_TRIG_WIDTH                  1u
#define DMAMUX_CHCFG_TRIG(x)                     (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_TRIG_SHIFT))&DMAMUX_CHCFG_TRIG_MASK)
#define DMAMUX_CHCFG_ENBL_MASK                   0x80u
#define DMAMUX_CHCFG_ENBL_SHIFT                  7u
#define DMAMUX_CHCFG_ENBL_WIDTH                  1u
#define DMAMUX_CHCFG_ENBL(x)                     (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_ENBL_SHIFT))&DMAMUX_CHCFG_ENBL_MASK)

/*!
 * @}
 */ /* end of group DMAMUX_Register_Masks */


/*!
 * @}
 */ /* end of group DMAMUX_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- EIM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup EIM_Peripheral_Access_Layer EIM Peripheral Access Layer
 * @{
 */


/** EIM - Size of Registers Arrays */
#define EIM_EICHD_WORD0_COUNT                    1u
#define EIM_EICHD_WORD1_COUNT                    1u
#define EIM_EICHD_WORD2_COUNT                    1u

/** EIM - Register Layout Typedef */
typedef struct {
  __IO uint32_t EIMCR;                             /**< Error Injection Module Configuration Register, offset: 0x0 */
  __IO uint32_t EICHEN;                            /**< Error Injection Channel Enable register, offset: 0x4 */
       uint8_t RESERVED_0[248];
  __IO uint32_t EICHD_WORD0[EIM_EICHD_WORD0_COUNT]; /**< Error Injection Channel Descriptor, Word0, array offset: 0x100, array step: 0x4 */
  __IO uint32_t EICHD_WORD1[EIM_EICHD_WORD1_COUNT]; /**< Error Injection Channel Descriptor, Word1, array offset: 0x104, array step: 0x4 */
  __IO uint32_t EICHD_WORD2[EIM_EICHD_WORD2_COUNT]; /**< Error Injection Channel Descriptor, Word2, array offset: 0x108, array step: 0x4 */
} EIM_Type, *EIM_MemMapPtr;

 /** Number of instances of the EIM module. */
#define EIM_INSTANCE_COUNT                       (1u)


/* EIM - Peripheral instance base addresses */
/** Peripheral EIM base address */
#define EIM_BASE                                 (0xFC07C000u)
/** Peripheral EIM base pointer */
#define EIM                                      ((EIM_Type *)EIM_BASE)
/** Array initializer of EIM peripheral base addresses */
#define EIM_BASE_ADDRS                           { EIM_BASE }
/** Array initializer of EIM peripheral base pointers */
#define EIM_BASE_PTRS                            { EIM }

/* ----------------------------------------------------------------------------
   -- EIM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup EIM_Register_Masks EIM Register Masks
 * @{
 */

/* EIMCR Bit Fields */
#define EIM_EIMCR_GEIEN_MASK                     0x1u
#define EIM_EIMCR_GEIEN_SHIFT                    0u
#define EIM_EIMCR_GEIEN_WIDTH                    1u
#define EIM_EIMCR_GEIEN(x)                       (((uint32_t)(((uint32_t)(x))<<EIM_EIMCR_GEIEN_SHIFT))&EIM_EIMCR_GEIEN_MASK)
/* EICHEN Bit Fields */
#define EIM_EICHEN_EICH0EN_MASK                  0x80000000u
#define EIM_EICHEN_EICH0EN_SHIFT                 31u
#define EIM_EICHEN_EICH0EN_WIDTH                 1u
#define EIM_EICHEN_EICH0EN(x)                    (((uint32_t)(((uint32_t)(x))<<EIM_EICHEN_EICH0EN_SHIFT))&EIM_EICHEN_EICH0EN_MASK)
/* EICHD_WORD0 Bit Fields */
#define EIM_EICHD_WORD0_CHKBIT_MASK_MASK         0xFF000000u
#define EIM_EICHD_WORD0_CHKBIT_MASK_SHIFT        24u
#define EIM_EICHD_WORD0_CHKBIT_MASK_WIDTH        8u
#define EIM_EICHD_WORD0_CHKBIT_MASK(x)           (((uint32_t)(((uint32_t)(x))<<EIM_EICHD_WORD0_CHKBIT_MASK_SHIFT))&EIM_EICHD_WORD0_CHKBIT_MASK_MASK)
/* EICHD_WORD1 Bit Fields */
#define EIM_EICHD_WORD1_B0_3DATA_MASK_MASK       0xFFFFFFFFu
#define EIM_EICHD_WORD1_B0_3DATA_MASK_SHIFT      0u
#define EIM_EICHD_WORD1_B0_3DATA_MASK_WIDTH      32u
#define EIM_EICHD_WORD1_B0_3DATA_MASK(x)         (((uint32_t)(((uint32_t)(x))<<EIM_EICHD_WORD1_B0_3DATA_MASK_SHIFT))&EIM_EICHD_WORD1_B0_3DATA_MASK_MASK)
/* EICHD_WORD2 Bit Fields */
#define EIM_EICHD_WORD2_B4_7DATA_MASK_MASK       0xFFFFFFFFu
#define EIM_EICHD_WORD2_B4_7DATA_MASK_SHIFT      0u
#define EIM_EICHD_WORD2_B4_7DATA_MASK_WIDTH      32u
#define EIM_EICHD_WORD2_B4_7DATA_MASK(x)         (((uint32_t)(((uint32_t)(x))<<EIM_EICHD_WORD2_B4_7DATA_MASK_SHIFT))&EIM_EICHD_WORD2_B4_7DATA_MASK_MASK)

/*!
 * @}
 */ /* end of group EIM_Register_Masks */


/*!
 * @}
 */ /* end of group EIM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- ENET Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ENET_Peripheral_Access_Layer ENET Peripheral Access Layer
 * @{
 */


/** ENET - Size of Registers Arrays */
#define ENET_CHANNEL_COUNT                       4u

/** ENET - Register Layout Typedef */
typedef struct {
       uint8_t RESERVED_0[4];
  __IO uint32_t EIR;                               /**< Interrupt Event Register, offset: 0x4 */
  __IO uint32_t EIMR;                              /**< Interrupt Mask Register, offset: 0x8 */
       uint8_t RESERVED_1[4];
  __IO uint32_t RDAR;                              /**< Receive Descriptor Active Register, offset: 0x10 */
  __IO uint32_t TDAR;                              /**< Transmit Descriptor Active Register, offset: 0x14 */
       uint8_t RESERVED_2[12];
  __IO uint32_t ECR;                               /**< Ethernet Control Register, offset: 0x24 */
       uint8_t RESERVED_3[24];
  __IO uint32_t MMFR;                              /**< MII Management Frame Register, offset: 0x40 */
  __IO uint32_t MSCR;                              /**< MII Speed Control Register, offset: 0x44 */
       uint8_t RESERVED_4[28];
  __IO uint32_t MIBC;                              /**< MIB Control Register, offset: 0x64 */
       uint8_t RESERVED_5[28];
  __IO uint32_t RCR;                               /**< Receive Control Register, offset: 0x84 */
       uint8_t RESERVED_6[60];
  __IO uint32_t TCR;                               /**< Transmit Control Register, offset: 0xC4 */
       uint8_t RESERVED_7[28];
  __IO uint32_t PALR;                              /**< Physical Address Lower Register, offset: 0xE4 */
  __IO uint32_t PAUR;                              /**< Physical Address Upper Register, offset: 0xE8 */
  __IO uint32_t OPD;                               /**< Opcode/Pause Duration Register, offset: 0xEC */
       uint8_t RESERVED_8[40];
  __IO uint32_t IAUR;                              /**< Descriptor Individual Upper Address Register, offset: 0x118 */
  __IO uint32_t IALR;                              /**< Descriptor Individual Lower Address Register, offset: 0x11C */
  __IO uint32_t GAUR;                              /**< Descriptor Group Upper Address Register, offset: 0x120 */
  __IO uint32_t GALR;                              /**< Descriptor Group Lower Address Register, offset: 0x124 */
       uint8_t RESERVED_9[28];
  __IO uint32_t TFWR;                              /**< Transmit FIFO Watermark Register, offset: 0x144 */
       uint8_t RESERVED_10[56];
  __IO uint32_t RDSR;                              /**< Receive Descriptor Ring Start Register, offset: 0x180 */
  __IO uint32_t TDSR;                              /**< Transmit Buffer Descriptor Ring Start Register, offset: 0x184 */
  __IO uint32_t MRBR;                              /**< Maximum Receive Buffer Size Register, offset: 0x188 */
       uint8_t RESERVED_11[4];
  __IO uint32_t RSFL;                              /**< Receive FIFO Section Full Threshold, offset: 0x190 */
  __IO uint32_t RSEM;                              /**< Receive FIFO Section Empty Threshold, offset: 0x194 */
  __IO uint32_t RAEM;                              /**< Receive FIFO Almost Empty Threshold, offset: 0x198 */
  __IO uint32_t RAFL;                              /**< Receive FIFO Almost Full Threshold, offset: 0x19C */
  __IO uint32_t TSEM;                              /**< Transmit FIFO Section Empty Threshold, offset: 0x1A0 */
  __IO uint32_t TAEM;                              /**< Transmit FIFO Almost Empty Threshold, offset: 0x1A4 */
  __IO uint32_t TAFL;                              /**< Transmit FIFO Almost Full Threshold, offset: 0x1A8 */
  __IO uint32_t TIPG;                              /**< Transmit Inter-Packet Gap, offset: 0x1AC */
  __IO uint32_t FTRL;                              /**< Frame Truncation Length, offset: 0x1B0 */
       uint8_t RESERVED_12[12];
  __IO uint32_t TACC;                              /**< Transmit Accelerator Function Configuration, offset: 0x1C0 */
  __IO uint32_t RACC;                              /**< Receive Accelerator Function Configuration, offset: 0x1C4 */
       uint8_t RESERVED_13[56];
  __I  uint32_t RMON_T_DROP;                       /**< Reserved Statistic Register, offset: 0x200 */
  __I  uint32_t RMON_T_PACKETS;                    /**< Tx Packet Count Statistic Register, offset: 0x204 */
  __I  uint32_t RMON_T_BC_PKT;                     /**< Tx Broadcast Packets Statistic Register, offset: 0x208 */
  __I  uint32_t RMON_T_MC_PKT;                     /**< Tx Multicast Packets Statistic Register, offset: 0x20C */
  __I  uint32_t RMON_T_CRC_ALIGN;                  /**< Tx Packets with CRC/Align Error Statistic Register, offset: 0x210 */
  __I  uint32_t RMON_T_UNDERSIZE;                  /**< Tx Packets Less Than Bytes and Good CRC Statistic Register, offset: 0x214 */
  __I  uint32_t RMON_T_OVERSIZE;                   /**< Tx Packets GT MAX_FL bytes and Good CRC Statistic Register, offset: 0x218 */
  __I  uint32_t RMON_T_FRAG;                       /**< Tx Packets Less Than 64 Bytes and Bad CRC Statistic Register, offset: 0x21C */
  __I  uint32_t RMON_T_JAB;                        /**< Tx Packets Greater Than MAX_FL bytes and Bad CRC Statistic Register, offset: 0x220 */
  __I  uint32_t RMON_T_COL;                        /**< Tx Collision Count Statistic Register, offset: 0x224 */
  __I  uint32_t RMON_T_P64;                        /**< Tx 64-Byte Packets Statistic Register, offset: 0x228 */
  __I  uint32_t RMON_T_P65TO127;                   /**< Tx 65- to 127-byte Packets Statistic Register, offset: 0x22C */
  __I  uint32_t RMON_T_P128TO255;                  /**< Tx 128- to 255-byte Packets Statistic Register, offset: 0x230 */
  __I  uint32_t RMON_T_P256TO511;                  /**< Tx 256- to 511-byte Packets Statistic Register, offset: 0x234 */
  __I  uint32_t RMON_T_P512TO1023;                 /**< Tx 512- to 1023-byte Packets Statistic Register, offset: 0x238 */
  __I  uint32_t RMON_T_P1024TO2047;                /**< Tx 1024- to 2047-byte Packets Statistic Register, offset: 0x23C */
  __I  uint32_t RMON_T_P_GTE2048;                  /**< Tx Packets Greater Than 2048 Bytes Statistic Register, offset: 0x240 */
  __I  uint32_t RMON_T_OCTETS;                     /**< Tx Octets Statistic Register, offset: 0x244 */
  __I  uint32_t IEEE_T_DROP;                       /**< IEEE_T_DROP Reserved Statistic Register, offset: 0x248 */
  __I  uint32_t IEEE_T_FRAME_OK;                   /**< Frames Transmitted OK Statistic Register, offset: 0x24C */
  __I  uint32_t IEEE_T_1COL;                       /**< Frames Transmitted with Single Collision Statistic Register, offset: 0x250 */
  __I  uint32_t IEEE_T_MCOL;                       /**< Frames Transmitted with Multiple Collisions Statistic Register, offset: 0x254 */
  __I  uint32_t IEEE_T_DEF;                        /**< Frames Transmitted after Deferral Delay Statistic Register, offset: 0x258 */
  __I  uint32_t IEEE_T_LCOL;                       /**< Frames Transmitted with Late Collision Statistic Register, offset: 0x25C */
  __I  uint32_t IEEE_T_EXCOL;                      /**< Frames Transmitted with Excessive Collisions Statistic Register, offset: 0x260 */
  __I  uint32_t IEEE_T_MACERR;                     /**< Frames Transmitted with Tx FIFO Underrun Statistic Register, offset: 0x264 */
  __I  uint32_t IEEE_T_CSERR;                      /**< Frames Transmitted with Carrier Sense Error Statistic Register, offset: 0x268 */
  __I  uint32_t IEEE_T_SQE;                        /**< , offset: 0x26C */
  __I  uint32_t IEEE_T_FDXFC;                      /**< Flow Control Pause Frames Transmitted Statistic Register, offset: 0x270 */
  __I  uint32_t IEEE_T_OCTETS_OK;                  /**< Octet Count for Frames Transmitted w/o Error Statistic Register, offset: 0x274 */
       uint8_t RESERVED_14[12];
  __I  uint32_t RMON_R_PACKETS;                    /**< Rx Packet Count Statistic Register, offset: 0x284 */
  __I  uint32_t RMON_R_BC_PKT;                     /**< Rx Broadcast Packets Statistic Register, offset: 0x288 */
  __I  uint32_t RMON_R_MC_PKT;                     /**< Rx Multicast Packets Statistic Register, offset: 0x28C */
  __I  uint32_t RMON_R_CRC_ALIGN;                  /**< Rx Packets with CRC/Align Error Statistic Register, offset: 0x290 */
  __I  uint32_t RMON_R_UNDERSIZE;                  /**< Rx Packets with Less Than 64 Bytes and Good CRC Statistic Register, offset: 0x294 */
  __I  uint32_t RMON_R_OVERSIZE;                   /**< Rx Packets Greater Than MAX_FL and Good CRC Statistic Register, offset: 0x298 */
  __I  uint32_t RMON_R_FRAG;                       /**< Rx Packets Less Than 64 Bytes and Bad CRC Statistic Register, offset: 0x29C */
  __I  uint32_t RMON_R_JAB;                        /**< Rx Packets Greater Than MAX_FL Bytes and Bad CRC Statistic Register, offset: 0x2A0 */
  __I  uint32_t RMON_R_RESVD_0;                    /**< Reserved Statistic Register, offset: 0x2A4 */
  __I  uint32_t RMON_R_P64;                        /**< Rx 64-Byte Packets Statistic Register, offset: 0x2A8 */
  __I  uint32_t RMON_R_P65TO127;                   /**< Rx 65- to 127-Byte Packets Statistic Register, offset: 0x2AC */
  __I  uint32_t RMON_R_P128TO255;                  /**< Rx 128- to 255-Byte Packets Statistic Register, offset: 0x2B0 */
  __I  uint32_t RMON_R_P256TO511;                  /**< Rx 256- to 511-Byte Packets Statistic Register, offset: 0x2B4 */
  __I  uint32_t RMON_R_P512TO1023;                 /**< Rx 512- to 1023-Byte Packets Statistic Register, offset: 0x2B8 */
  __I  uint32_t RMON_R_P1024TO2047;                /**< Rx 1024- to 2047-Byte Packets Statistic Register, offset: 0x2BC */
  __I  uint32_t RMON_R_P_GTE2048;                  /**< Rx Packets Greater than 2048 Bytes Statistic Register, offset: 0x2C0 */
  __I  uint32_t RMON_R_OCTETS;                     /**< Rx Octets Statistic Register, offset: 0x2C4 */
  __I  uint32_t IEEE_R_DROP;                       /**< Frames not Counted Correctly Statistic Register, offset: 0x2C8 */
  __I  uint32_t IEEE_R_FRAME_OK;                   /**< Frames Received OK Statistic Register, offset: 0x2CC */
  __I  uint32_t IEEE_R_CRC;                        /**< Frames Received with CRC Error Statistic Register, offset: 0x2D0 */
  __I  uint32_t IEEE_R_ALIGN;                      /**< Frames Received with Alignment Error Statistic Register, offset: 0x2D4 */
  __I  uint32_t IEEE_R_MACERR;                     /**< Receive FIFO Overflow Count Statistic Register, offset: 0x2D8 */
  __I  uint32_t IEEE_R_FDXFC;                      /**< Flow Control Pause Frames Received Statistic Register, offset: 0x2DC */
  __I  uint32_t IEEE_R_OCTETS_OK;                  /**< Octet Count for Frames Received without Error Statistic Register, offset: 0x2E0 */
       uint8_t RESERVED_15[284];
  __IO uint32_t ATCR;                              /**< Adjustable Timer Control Register, offset: 0x400 */
  __IO uint32_t ATVR;                              /**< Timer Value Register, offset: 0x404 */
  __IO uint32_t ATOFF;                             /**< Timer Offset Register, offset: 0x408 */
  __IO uint32_t ATPER;                             /**< Timer Period Register, offset: 0x40C */
  __IO uint32_t ATCOR;                             /**< Timer Correction Register, offset: 0x410 */
  __IO uint32_t ATINC;                             /**< Time-Stamping Clock Period Register, offset: 0x414 */
  __I  uint32_t ATSTMP;                            /**< Timestamp of Last Transmitted Frame, offset: 0x418 */
       uint8_t RESERVED_16[488];
  __IO uint32_t TGSR;                              /**< Timer Global Status Register, offset: 0x604 */
  struct {                                         /* offset: 0x608, array step: 0x8 */
    __IO uint32_t TCSR;                              /**< Timer Control Status Register, array offset: 0x608, array step: 0x8 */
    __IO uint32_t TCCR;                              /**< Timer Compare Capture Register, array offset: 0x60C, array step: 0x8 */
  } CHANNEL[ENET_CHANNEL_COUNT];
} ENET_Type, *ENET_MemMapPtr;

 /** Number of instances of the ENET module. */
#define ENET_INSTANCE_COUNT                      (1u)


/* ENET - Peripheral instance base addresses */
/** Peripheral ENET_0 base address */
#define ENET_0_BASE                              (0xFC0B0000u)
/** Peripheral ENET_0 base pointer */
#define ENET_0                                   ((ENET_Type *)ENET_0_BASE)
/** Array initializer of ENET peripheral base addresses */
#define ENET_BASE_ADDRS                          { ENET_0_BASE }
/** Array initializer of ENET peripheral base pointers */
#define ENET_BASE_PTRS                           { ENET_0 }
 /** Number of interrupt vector arrays for the ENET module. */
#define ENET_IRQS_ARR_COUNT                      (4u)
 /** Number of interrupt channels for the TIMER type of ENET module. */
#define ENET_TIMER_IRQS_CH_COUNT                 (1u)
 /** Number of interrupt channels for the TX type of ENET module. */
#define ENET_TX_IRQS_CH_COUNT                    (1u)
 /** Number of interrupt channels for the RX type of ENET module. */
#define ENET_RX_IRQS_CH_COUNT                    (1u)
 /** Number of interrupt channels for the ERR type of ENET module. */
#define ENET_ERR_IRQS_CH_COUNT                   (1u)
/** Interrupt vectors for the ENET peripheral type */
#define ENET_TIMER_IRQS                          { ENET0_Timer_IRQn }
#define ENET_TX_IRQS                             { ENET0_Tx_IRQn }
#define ENET_RX_IRQS                             { ENET0_Rx_IRQn }
#define ENET_ERR_IRQS                            { ENET0_Err_IRQn }

/* ----------------------------------------------------------------------------
   -- ENET Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ENET_Register_Masks ENET Register Masks
 * @{
 */

/* EIR Bit Fields */
#define ENET_EIR_TS_TIMER_MASK                   0x8000u
#define ENET_EIR_TS_TIMER_SHIFT                  15u
#define ENET_EIR_TS_TIMER_WIDTH                  1u
#define ENET_EIR_TS_TIMER(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TS_TIMER_SHIFT))&ENET_EIR_TS_TIMER_MASK)
#define ENET_EIR_TS_AVAIL_MASK                   0x10000u
#define ENET_EIR_TS_AVAIL_SHIFT                  16u
#define ENET_EIR_TS_AVAIL_WIDTH                  1u
#define ENET_EIR_TS_AVAIL(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TS_AVAIL_SHIFT))&ENET_EIR_TS_AVAIL_MASK)
#define ENET_EIR_WAKEUP_MASK                     0x20000u
#define ENET_EIR_WAKEUP_SHIFT                    17u
#define ENET_EIR_WAKEUP_WIDTH                    1u
#define ENET_EIR_WAKEUP(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_EIR_WAKEUP_SHIFT))&ENET_EIR_WAKEUP_MASK)
#define ENET_EIR_PLR_MASK                        0x40000u
#define ENET_EIR_PLR_SHIFT                       18u
#define ENET_EIR_PLR_WIDTH                       1u
#define ENET_EIR_PLR(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_PLR_SHIFT))&ENET_EIR_PLR_MASK)
#define ENET_EIR_UN_MASK                         0x80000u
#define ENET_EIR_UN_SHIFT                        19u
#define ENET_EIR_UN_WIDTH                        1u
#define ENET_EIR_UN(x)                           (((uint32_t)(((uint32_t)(x))<<ENET_EIR_UN_SHIFT))&ENET_EIR_UN_MASK)
#define ENET_EIR_RL_MASK                         0x100000u
#define ENET_EIR_RL_SHIFT                        20u
#define ENET_EIR_RL_WIDTH                        1u
#define ENET_EIR_RL(x)                           (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RL_SHIFT))&ENET_EIR_RL_MASK)
#define ENET_EIR_LC_MASK                         0x200000u
#define ENET_EIR_LC_SHIFT                        21u
#define ENET_EIR_LC_WIDTH                        1u
#define ENET_EIR_LC(x)                           (((uint32_t)(((uint32_t)(x))<<ENET_EIR_LC_SHIFT))&ENET_EIR_LC_MASK)
#define ENET_EIR_EBERR_MASK                      0x400000u
#define ENET_EIR_EBERR_SHIFT                     22u
#define ENET_EIR_EBERR_WIDTH                     1u
#define ENET_EIR_EBERR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIR_EBERR_SHIFT))&ENET_EIR_EBERR_MASK)
#define ENET_EIR_MII_MASK                        0x800000u
#define ENET_EIR_MII_SHIFT                       23u
#define ENET_EIR_MII_WIDTH                       1u
#define ENET_EIR_MII(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_MII_SHIFT))&ENET_EIR_MII_MASK)
#define ENET_EIR_RXB_MASK                        0x1000000u
#define ENET_EIR_RXB_SHIFT                       24u
#define ENET_EIR_RXB_WIDTH                       1u
#define ENET_EIR_RXB(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RXB_SHIFT))&ENET_EIR_RXB_MASK)
#define ENET_EIR_RXF_MASK                        0x2000000u
#define ENET_EIR_RXF_SHIFT                       25u
#define ENET_EIR_RXF_WIDTH                       1u
#define ENET_EIR_RXF(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RXF_SHIFT))&ENET_EIR_RXF_MASK)
#define ENET_EIR_TXB_MASK                        0x4000000u
#define ENET_EIR_TXB_SHIFT                       26u
#define ENET_EIR_TXB_WIDTH                       1u
#define ENET_EIR_TXB(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TXB_SHIFT))&ENET_EIR_TXB_MASK)
#define ENET_EIR_TXF_MASK                        0x8000000u
#define ENET_EIR_TXF_SHIFT                       27u
#define ENET_EIR_TXF_WIDTH                       1u
#define ENET_EIR_TXF(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TXF_SHIFT))&ENET_EIR_TXF_MASK)
#define ENET_EIR_GRA_MASK                        0x10000000u
#define ENET_EIR_GRA_SHIFT                       28u
#define ENET_EIR_GRA_WIDTH                       1u
#define ENET_EIR_GRA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_GRA_SHIFT))&ENET_EIR_GRA_MASK)
#define ENET_EIR_BABT_MASK                       0x20000000u
#define ENET_EIR_BABT_SHIFT                      29u
#define ENET_EIR_BABT_WIDTH                      1u
#define ENET_EIR_BABT(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIR_BABT_SHIFT))&ENET_EIR_BABT_MASK)
#define ENET_EIR_BABR_MASK                       0x40000000u
#define ENET_EIR_BABR_SHIFT                      30u
#define ENET_EIR_BABR_WIDTH                      1u
#define ENET_EIR_BABR(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIR_BABR_SHIFT))&ENET_EIR_BABR_MASK)
/* EIMR Bit Fields */
#define ENET_EIMR_TS_TIMER_MASK                  0x8000u
#define ENET_EIMR_TS_TIMER_SHIFT                 15u
#define ENET_EIMR_TS_TIMER_WIDTH                 1u
#define ENET_EIMR_TS_TIMER(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TS_TIMER_SHIFT))&ENET_EIMR_TS_TIMER_MASK)
#define ENET_EIMR_TS_AVAIL_MASK                  0x10000u
#define ENET_EIMR_TS_AVAIL_SHIFT                 16u
#define ENET_EIMR_TS_AVAIL_WIDTH                 1u
#define ENET_EIMR_TS_AVAIL(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TS_AVAIL_SHIFT))&ENET_EIMR_TS_AVAIL_MASK)
#define ENET_EIMR_WAKEUP_MASK                    0x20000u
#define ENET_EIMR_WAKEUP_SHIFT                   17u
#define ENET_EIMR_WAKEUP_WIDTH                   1u
#define ENET_EIMR_WAKEUP(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_WAKEUP_SHIFT))&ENET_EIMR_WAKEUP_MASK)
#define ENET_EIMR_PLR_MASK                       0x40000u
#define ENET_EIMR_PLR_SHIFT                      18u
#define ENET_EIMR_PLR_WIDTH                      1u
#define ENET_EIMR_PLR(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_PLR_SHIFT))&ENET_EIMR_PLR_MASK)
#define ENET_EIMR_UN_MASK                        0x80000u
#define ENET_EIMR_UN_SHIFT                       19u
#define ENET_EIMR_UN_WIDTH                       1u
#define ENET_EIMR_UN(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_UN_SHIFT))&ENET_EIMR_UN_MASK)
#define ENET_EIMR_RL_MASK                        0x100000u
#define ENET_EIMR_RL_SHIFT                       20u
#define ENET_EIMR_RL_WIDTH                       1u
#define ENET_EIMR_RL(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RL_SHIFT))&ENET_EIMR_RL_MASK)
#define ENET_EIMR_LC_MASK                        0x200000u
#define ENET_EIMR_LC_SHIFT                       21u
#define ENET_EIMR_LC_WIDTH                       1u
#define ENET_EIMR_LC(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_LC_SHIFT))&ENET_EIMR_LC_MASK)
#define ENET_EIMR_EBERR_MASK                     0x400000u
#define ENET_EIMR_EBERR_SHIFT                    22u
#define ENET_EIMR_EBERR_WIDTH                    1u
#define ENET_EIMR_EBERR(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_EBERR_SHIFT))&ENET_EIMR_EBERR_MASK)
#define ENET_EIMR_MII_MASK                       0x800000u
#define ENET_EIMR_MII_SHIFT                      23u
#define ENET_EIMR_MII_WIDTH                      1u
#define ENET_EIMR_MII(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_MII_SHIFT))&ENET_EIMR_MII_MASK)
#define ENET_EIMR_RXB_MASK                       0x1000000u
#define ENET_EIMR_RXB_SHIFT                      24u
#define ENET_EIMR_RXB_WIDTH                      1u
#define ENET_EIMR_RXB(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RXB_SHIFT))&ENET_EIMR_RXB_MASK)
#define ENET_EIMR_RXF_MASK                       0x2000000u
#define ENET_EIMR_RXF_SHIFT                      25u
#define ENET_EIMR_RXF_WIDTH                      1u
#define ENET_EIMR_RXF(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RXF_SHIFT))&ENET_EIMR_RXF_MASK)
#define ENET_EIMR_TXB_MASK                       0x4000000u
#define ENET_EIMR_TXB_SHIFT                      26u
#define ENET_EIMR_TXB_WIDTH                      1u
#define ENET_EIMR_TXB(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TXB_SHIFT))&ENET_EIMR_TXB_MASK)
#define ENET_EIMR_TXF_MASK                       0x8000000u
#define ENET_EIMR_TXF_SHIFT                      27u
#define ENET_EIMR_TXF_WIDTH                      1u
#define ENET_EIMR_TXF(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TXF_SHIFT))&ENET_EIMR_TXF_MASK)
#define ENET_EIMR_GRA_MASK                       0x10000000u
#define ENET_EIMR_GRA_SHIFT                      28u
#define ENET_EIMR_GRA_WIDTH                      1u
#define ENET_EIMR_GRA(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_GRA_SHIFT))&ENET_EIMR_GRA_MASK)
#define ENET_EIMR_BABT_MASK                      0x20000000u
#define ENET_EIMR_BABT_SHIFT                     29u
#define ENET_EIMR_BABT_WIDTH                     1u
#define ENET_EIMR_BABT(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_BABT_SHIFT))&ENET_EIMR_BABT_MASK)
#define ENET_EIMR_BABR_MASK                      0x40000000u
#define ENET_EIMR_BABR_SHIFT                     30u
#define ENET_EIMR_BABR_WIDTH                     1u
#define ENET_EIMR_BABR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_BABR_SHIFT))&ENET_EIMR_BABR_MASK)
/* RDAR Bit Fields */
#define ENET_RDAR_RDAR_MASK                      0x1000000u
#define ENET_RDAR_RDAR_SHIFT                     24u
#define ENET_RDAR_RDAR_WIDTH                     1u
#define ENET_RDAR_RDAR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_RDAR_RDAR_SHIFT))&ENET_RDAR_RDAR_MASK)
/* TDAR Bit Fields */
#define ENET_TDAR_TDAR_MASK                      0x1000000u
#define ENET_TDAR_TDAR_SHIFT                     24u
#define ENET_TDAR_TDAR_WIDTH                     1u
#define ENET_TDAR_TDAR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TDAR_TDAR_SHIFT))&ENET_TDAR_TDAR_MASK)
/* ECR Bit Fields */
#define ENET_ECR_RESET_MASK                      0x1u
#define ENET_ECR_RESET_SHIFT                     0u
#define ENET_ECR_RESET_WIDTH                     1u
#define ENET_ECR_RESET(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ECR_RESET_SHIFT))&ENET_ECR_RESET_MASK)
#define ENET_ECR_ETHEREN_MASK                    0x2u
#define ENET_ECR_ETHEREN_SHIFT                   1u
#define ENET_ECR_ETHEREN_WIDTH                   1u
#define ENET_ECR_ETHEREN(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_ECR_ETHEREN_SHIFT))&ENET_ECR_ETHEREN_MASK)
#define ENET_ECR_MAGICEN_MASK                    0x4u
#define ENET_ECR_MAGICEN_SHIFT                   2u
#define ENET_ECR_MAGICEN_WIDTH                   1u
#define ENET_ECR_MAGICEN(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_ECR_MAGICEN_SHIFT))&ENET_ECR_MAGICEN_MASK)
#define ENET_ECR_SLEEP_MASK                      0x8u
#define ENET_ECR_SLEEP_SHIFT                     3u
#define ENET_ECR_SLEEP_WIDTH                     1u
#define ENET_ECR_SLEEP(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ECR_SLEEP_SHIFT))&ENET_ECR_SLEEP_MASK)
#define ENET_ECR_EN1588_MASK                     0x10u
#define ENET_ECR_EN1588_SHIFT                    4u
#define ENET_ECR_EN1588_WIDTH                    1u
#define ENET_ECR_EN1588(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ECR_EN1588_SHIFT))&ENET_ECR_EN1588_MASK)
#define ENET_ECR_DBGEN_MASK                      0x40u
#define ENET_ECR_DBGEN_SHIFT                     6u
#define ENET_ECR_DBGEN_WIDTH                     1u
#define ENET_ECR_DBGEN(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ECR_DBGEN_SHIFT))&ENET_ECR_DBGEN_MASK)
#define ENET_ECR_STOPEN_MASK                     0x80u
#define ENET_ECR_STOPEN_SHIFT                    7u
#define ENET_ECR_STOPEN_WIDTH                    1u
#define ENET_ECR_STOPEN(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ECR_STOPEN_SHIFT))&ENET_ECR_STOPEN_MASK)
#define ENET_ECR_DBSWP_MASK                      0x100u
#define ENET_ECR_DBSWP_SHIFT                     8u
#define ENET_ECR_DBSWP_WIDTH                     1u
#define ENET_ECR_DBSWP(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ECR_DBSWP_SHIFT))&ENET_ECR_DBSWP_MASK)
/* MMFR Bit Fields */
#define ENET_MMFR_DATA_MASK                      0xFFFFu
#define ENET_MMFR_DATA_SHIFT                     0u
#define ENET_MMFR_DATA_WIDTH                     16u
#define ENET_MMFR_DATA(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_DATA_SHIFT))&ENET_MMFR_DATA_MASK)
#define ENET_MMFR_TA_MASK                        0x30000u
#define ENET_MMFR_TA_SHIFT                       16u
#define ENET_MMFR_TA_WIDTH                       2u
#define ENET_MMFR_TA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_TA_SHIFT))&ENET_MMFR_TA_MASK)
#define ENET_MMFR_RA_MASK                        0x7C0000u
#define ENET_MMFR_RA_SHIFT                       18u
#define ENET_MMFR_RA_WIDTH                       5u
#define ENET_MMFR_RA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_RA_SHIFT))&ENET_MMFR_RA_MASK)
#define ENET_MMFR_PA_MASK                        0xF800000u
#define ENET_MMFR_PA_SHIFT                       23u
#define ENET_MMFR_PA_WIDTH                       5u
#define ENET_MMFR_PA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_PA_SHIFT))&ENET_MMFR_PA_MASK)
#define ENET_MMFR_OP_MASK                        0x30000000u
#define ENET_MMFR_OP_SHIFT                       28u
#define ENET_MMFR_OP_WIDTH                       2u
#define ENET_MMFR_OP(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_OP_SHIFT))&ENET_MMFR_OP_MASK)
#define ENET_MMFR_ST_MASK                        0xC0000000u
#define ENET_MMFR_ST_SHIFT                       30u
#define ENET_MMFR_ST_WIDTH                       2u
#define ENET_MMFR_ST(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_ST_SHIFT))&ENET_MMFR_ST_MASK)
/* MSCR Bit Fields */
#define ENET_MSCR_MII_SPEED_MASK                 0x7Eu
#define ENET_MSCR_MII_SPEED_SHIFT                1u
#define ENET_MSCR_MII_SPEED_WIDTH                6u
#define ENET_MSCR_MII_SPEED(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_MSCR_MII_SPEED_SHIFT))&ENET_MSCR_MII_SPEED_MASK)
#define ENET_MSCR_DIS_PRE_MASK                   0x80u
#define ENET_MSCR_DIS_PRE_SHIFT                  7u
#define ENET_MSCR_DIS_PRE_WIDTH                  1u
#define ENET_MSCR_DIS_PRE(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_MSCR_DIS_PRE_SHIFT))&ENET_MSCR_DIS_PRE_MASK)
#define ENET_MSCR_HOLDTIME_MASK                  0x700u
#define ENET_MSCR_HOLDTIME_SHIFT                 8u
#define ENET_MSCR_HOLDTIME_WIDTH                 3u
#define ENET_MSCR_HOLDTIME(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_MSCR_HOLDTIME_SHIFT))&ENET_MSCR_HOLDTIME_MASK)
/* MIBC Bit Fields */
#define ENET_MIBC_MIB_CLEAR_MASK                 0x20000000u
#define ENET_MIBC_MIB_CLEAR_SHIFT                29u
#define ENET_MIBC_MIB_CLEAR_WIDTH                1u
#define ENET_MIBC_MIB_CLEAR(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_MIBC_MIB_CLEAR_SHIFT))&ENET_MIBC_MIB_CLEAR_MASK)
#define ENET_MIBC_MIB_IDLE_MASK                  0x40000000u
#define ENET_MIBC_MIB_IDLE_SHIFT                 30u
#define ENET_MIBC_MIB_IDLE_WIDTH                 1u
#define ENET_MIBC_MIB_IDLE(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_MIBC_MIB_IDLE_SHIFT))&ENET_MIBC_MIB_IDLE_MASK)
#define ENET_MIBC_MIB_DIS_MASK                   0x80000000u
#define ENET_MIBC_MIB_DIS_SHIFT                  31u
#define ENET_MIBC_MIB_DIS_WIDTH                  1u
#define ENET_MIBC_MIB_DIS(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_MIBC_MIB_DIS_SHIFT))&ENET_MIBC_MIB_DIS_MASK)
/* RCR Bit Fields */
#define ENET_RCR_LOOP_MASK                       0x1u
#define ENET_RCR_LOOP_SHIFT                      0u
#define ENET_RCR_LOOP_WIDTH                      1u
#define ENET_RCR_LOOP(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_RCR_LOOP_SHIFT))&ENET_RCR_LOOP_MASK)
#define ENET_RCR_DRT_MASK                        0x2u
#define ENET_RCR_DRT_SHIFT                       1u
#define ENET_RCR_DRT_WIDTH                       1u
#define ENET_RCR_DRT(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_RCR_DRT_SHIFT))&ENET_RCR_DRT_MASK)
#define ENET_RCR_MII_MODE_MASK                   0x4u
#define ENET_RCR_MII_MODE_SHIFT                  2u
#define ENET_RCR_MII_MODE_WIDTH                  1u
#define ENET_RCR_MII_MODE(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_RCR_MII_MODE_SHIFT))&ENET_RCR_MII_MODE_MASK)
#define ENET_RCR_PROM_MASK                       0x8u
#define ENET_RCR_PROM_SHIFT                      3u
#define ENET_RCR_PROM_WIDTH                      1u
#define ENET_RCR_PROM(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_RCR_PROM_SHIFT))&ENET_RCR_PROM_MASK)
#define ENET_RCR_BC_REJ_MASK                     0x10u
#define ENET_RCR_BC_REJ_SHIFT                    4u
#define ENET_RCR_BC_REJ_WIDTH                    1u
#define ENET_RCR_BC_REJ(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RCR_BC_REJ_SHIFT))&ENET_RCR_BC_REJ_MASK)
#define ENET_RCR_FCE_MASK                        0x20u
#define ENET_RCR_FCE_SHIFT                       5u
#define ENET_RCR_FCE_WIDTH                       1u
#define ENET_RCR_FCE(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_RCR_FCE_SHIFT))&ENET_RCR_FCE_MASK)
#define ENET_RCR_RMII_MODE_MASK                  0x100u
#define ENET_RCR_RMII_MODE_SHIFT                 8u
#define ENET_RCR_RMII_MODE_WIDTH                 1u
#define ENET_RCR_RMII_MODE(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_RCR_RMII_MODE_SHIFT))&ENET_RCR_RMII_MODE_MASK)
#define ENET_RCR_RMII_10T_MASK                   0x200u
#define ENET_RCR_RMII_10T_SHIFT                  9u
#define ENET_RCR_RMII_10T_WIDTH                  1u
#define ENET_RCR_RMII_10T(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_RCR_RMII_10T_SHIFT))&ENET_RCR_RMII_10T_MASK)
#define ENET_RCR_PADEN_MASK                      0x1000u
#define ENET_RCR_PADEN_SHIFT                     12u
#define ENET_RCR_PADEN_WIDTH                     1u
#define ENET_RCR_PADEN(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_RCR_PADEN_SHIFT))&ENET_RCR_PADEN_MASK)
#define ENET_RCR_PAUFWD_MASK                     0x2000u
#define ENET_RCR_PAUFWD_SHIFT                    13u
#define ENET_RCR_PAUFWD_WIDTH                    1u
#define ENET_RCR_PAUFWD(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RCR_PAUFWD_SHIFT))&ENET_RCR_PAUFWD_MASK)
#define ENET_RCR_CRCFWD_MASK                     0x4000u
#define ENET_RCR_CRCFWD_SHIFT                    14u
#define ENET_RCR_CRCFWD_WIDTH                    1u
#define ENET_RCR_CRCFWD(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RCR_CRCFWD_SHIFT))&ENET_RCR_CRCFWD_MASK)
#define ENET_RCR_CFEN_MASK                       0x8000u
#define ENET_RCR_CFEN_SHIFT                      15u
#define ENET_RCR_CFEN_WIDTH                      1u
#define ENET_RCR_CFEN(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_RCR_CFEN_SHIFT))&ENET_RCR_CFEN_MASK)
#define ENET_RCR_MAX_FL_MASK                     0x3FFF0000u
#define ENET_RCR_MAX_FL_SHIFT                    16u
#define ENET_RCR_MAX_FL_WIDTH                    14u
#define ENET_RCR_MAX_FL(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RCR_MAX_FL_SHIFT))&ENET_RCR_MAX_FL_MASK)
#define ENET_RCR_NLC_MASK                        0x40000000u
#define ENET_RCR_NLC_SHIFT                       30u
#define ENET_RCR_NLC_WIDTH                       1u
#define ENET_RCR_NLC(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_RCR_NLC_SHIFT))&ENET_RCR_NLC_MASK)
#define ENET_RCR_GRS_MASK                        0x80000000u
#define ENET_RCR_GRS_SHIFT                       31u
#define ENET_RCR_GRS_WIDTH                       1u
#define ENET_RCR_GRS(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_RCR_GRS_SHIFT))&ENET_RCR_GRS_MASK)
/* TCR Bit Fields */
#define ENET_TCR_GTS_MASK                        0x1u
#define ENET_TCR_GTS_SHIFT                       0u
#define ENET_TCR_GTS_WIDTH                       1u
#define ENET_TCR_GTS(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_TCR_GTS_SHIFT))&ENET_TCR_GTS_MASK)
#define ENET_TCR_FDEN_MASK                       0x4u
#define ENET_TCR_FDEN_SHIFT                      2u
#define ENET_TCR_FDEN_WIDTH                      1u
#define ENET_TCR_FDEN(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TCR_FDEN_SHIFT))&ENET_TCR_FDEN_MASK)
#define ENET_TCR_TFC_PAUSE_MASK                  0x8u
#define ENET_TCR_TFC_PAUSE_SHIFT                 3u
#define ENET_TCR_TFC_PAUSE_WIDTH                 1u
#define ENET_TCR_TFC_PAUSE(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_TCR_TFC_PAUSE_SHIFT))&ENET_TCR_TFC_PAUSE_MASK)
#define ENET_TCR_RFC_PAUSE_MASK                  0x10u
#define ENET_TCR_RFC_PAUSE_SHIFT                 4u
#define ENET_TCR_RFC_PAUSE_WIDTH                 1u
#define ENET_TCR_RFC_PAUSE(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_TCR_RFC_PAUSE_SHIFT))&ENET_TCR_RFC_PAUSE_MASK)
#define ENET_TCR_ADDSEL_MASK                     0xE0u
#define ENET_TCR_ADDSEL_SHIFT                    5u
#define ENET_TCR_ADDSEL_WIDTH                    3u
#define ENET_TCR_ADDSEL(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCR_ADDSEL_SHIFT))&ENET_TCR_ADDSEL_MASK)
#define ENET_TCR_ADDINS_MASK                     0x100u
#define ENET_TCR_ADDINS_SHIFT                    8u
#define ENET_TCR_ADDINS_WIDTH                    1u
#define ENET_TCR_ADDINS(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCR_ADDINS_SHIFT))&ENET_TCR_ADDINS_MASK)
#define ENET_TCR_CRCFWD_MASK                     0x200u
#define ENET_TCR_CRCFWD_SHIFT                    9u
#define ENET_TCR_CRCFWD_WIDTH                    1u
#define ENET_TCR_CRCFWD(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCR_CRCFWD_SHIFT))&ENET_TCR_CRCFWD_MASK)
/* PALR Bit Fields */
#define ENET_PALR_PADDR1_MASK                    0xFFFFFFFFu
#define ENET_PALR_PADDR1_SHIFT                   0u
#define ENET_PALR_PADDR1_WIDTH                   32u
#define ENET_PALR_PADDR1(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_PALR_PADDR1_SHIFT))&ENET_PALR_PADDR1_MASK)
/* PAUR Bit Fields */
#define ENET_PAUR_TYPE_MASK                      0xFFFFu
#define ENET_PAUR_TYPE_SHIFT                     0u
#define ENET_PAUR_TYPE_WIDTH                     16u
#define ENET_PAUR_TYPE(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_PAUR_TYPE_SHIFT))&ENET_PAUR_TYPE_MASK)
#define ENET_PAUR_PADDR2_MASK                    0xFFFF0000u
#define ENET_PAUR_PADDR2_SHIFT                   16u
#define ENET_PAUR_PADDR2_WIDTH                   16u
#define ENET_PAUR_PADDR2(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_PAUR_PADDR2_SHIFT))&ENET_PAUR_PADDR2_MASK)
/* OPD Bit Fields */
#define ENET_OPD_PAUSE_DUR_MASK                  0xFFFFu
#define ENET_OPD_PAUSE_DUR_SHIFT                 0u
#define ENET_OPD_PAUSE_DUR_WIDTH                 16u
#define ENET_OPD_PAUSE_DUR(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_OPD_PAUSE_DUR_SHIFT))&ENET_OPD_PAUSE_DUR_MASK)
#define ENET_OPD_OPCODE_MASK                     0xFFFF0000u
#define ENET_OPD_OPCODE_SHIFT                    16u
#define ENET_OPD_OPCODE_WIDTH                    16u
#define ENET_OPD_OPCODE(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_OPD_OPCODE_SHIFT))&ENET_OPD_OPCODE_MASK)
/* IAUR Bit Fields */
#define ENET_IAUR_IADDR1_MASK                    0xFFFFFFFFu
#define ENET_IAUR_IADDR1_SHIFT                   0u
#define ENET_IAUR_IADDR1_WIDTH                   32u
#define ENET_IAUR_IADDR1(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_IAUR_IADDR1_SHIFT))&ENET_IAUR_IADDR1_MASK)
/* IALR Bit Fields */
#define ENET_IALR_IADDR2_MASK                    0xFFFFFFFFu
#define ENET_IALR_IADDR2_SHIFT                   0u
#define ENET_IALR_IADDR2_WIDTH                   32u
#define ENET_IALR_IADDR2(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_IALR_IADDR2_SHIFT))&ENET_IALR_IADDR2_MASK)
/* GAUR Bit Fields */
#define ENET_GAUR_GADDR1_MASK                    0xFFFFFFFFu
#define ENET_GAUR_GADDR1_SHIFT                   0u
#define ENET_GAUR_GADDR1_WIDTH                   32u
#define ENET_GAUR_GADDR1(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_GAUR_GADDR1_SHIFT))&ENET_GAUR_GADDR1_MASK)
/* GALR Bit Fields */
#define ENET_GALR_GADDR2_MASK                    0xFFFFFFFFu
#define ENET_GALR_GADDR2_SHIFT                   0u
#define ENET_GALR_GADDR2_WIDTH                   32u
#define ENET_GALR_GADDR2(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_GALR_GADDR2_SHIFT))&ENET_GALR_GADDR2_MASK)
/* TFWR Bit Fields */
#define ENET_TFWR_TFWR_MASK                      0x3Fu
#define ENET_TFWR_TFWR_SHIFT                     0u
#define ENET_TFWR_TFWR_WIDTH                     6u
#define ENET_TFWR_TFWR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TFWR_TFWR_SHIFT))&ENET_TFWR_TFWR_MASK)
#define ENET_TFWR_STRFWD_MASK                    0x100u
#define ENET_TFWR_STRFWD_SHIFT                   8u
#define ENET_TFWR_STRFWD_WIDTH                   1u
#define ENET_TFWR_STRFWD(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_TFWR_STRFWD_SHIFT))&ENET_TFWR_STRFWD_MASK)
/* RDSR Bit Fields */
#define ENET_RDSR_R_DES_START_MASK               0xFFFFFFF8u
#define ENET_RDSR_R_DES_START_SHIFT              3u
#define ENET_RDSR_R_DES_START_WIDTH              29u
#define ENET_RDSR_R_DES_START(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_RDSR_R_DES_START_SHIFT))&ENET_RDSR_R_DES_START_MASK)
/* TDSR Bit Fields */
#define ENET_TDSR_X_DES_START_MASK               0xFFFFFFF8u
#define ENET_TDSR_X_DES_START_SHIFT              3u
#define ENET_TDSR_X_DES_START_WIDTH              29u
#define ENET_TDSR_X_DES_START(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_TDSR_X_DES_START_SHIFT))&ENET_TDSR_X_DES_START_MASK)
/* MRBR Bit Fields */
#define ENET_MRBR_R_BUF_SIZE_MASK                0x7F0u
#define ENET_MRBR_R_BUF_SIZE_SHIFT               4u
#define ENET_MRBR_R_BUF_SIZE_WIDTH               7u
#define ENET_MRBR_R_BUF_SIZE(x)                  (((uint32_t)(((uint32_t)(x))<<ENET_MRBR_R_BUF_SIZE_SHIFT))&ENET_MRBR_R_BUF_SIZE_MASK)
/* RSFL Bit Fields */
#define ENET_RSFL_RX_SECTION_FULL_MASK           0xFFu
#define ENET_RSFL_RX_SECTION_FULL_SHIFT          0u
#define ENET_RSFL_RX_SECTION_FULL_WIDTH          8u
#define ENET_RSFL_RX_SECTION_FULL(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RSFL_RX_SECTION_FULL_SHIFT))&ENET_RSFL_RX_SECTION_FULL_MASK)
/* RSEM Bit Fields */
#define ENET_RSEM_RX_SECTION_EMPTY_MASK          0xFFu
#define ENET_RSEM_RX_SECTION_EMPTY_SHIFT         0u
#define ENET_RSEM_RX_SECTION_EMPTY_WIDTH         8u
#define ENET_RSEM_RX_SECTION_EMPTY(x)            (((uint32_t)(((uint32_t)(x))<<ENET_RSEM_RX_SECTION_EMPTY_SHIFT))&ENET_RSEM_RX_SECTION_EMPTY_MASK)
#define ENET_RSEM_STAT_SECTION_EMPTY_MASK        0x1F0000u
#define ENET_RSEM_STAT_SECTION_EMPTY_SHIFT       16u
#define ENET_RSEM_STAT_SECTION_EMPTY_WIDTH       5u
#define ENET_RSEM_STAT_SECTION_EMPTY(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RSEM_STAT_SECTION_EMPTY_SHIFT))&ENET_RSEM_STAT_SECTION_EMPTY_MASK)
/* RAEM Bit Fields */
#define ENET_RAEM_RX_ALMOST_EMPTY_MASK           0xFFu
#define ENET_RAEM_RX_ALMOST_EMPTY_SHIFT          0u
#define ENET_RAEM_RX_ALMOST_EMPTY_WIDTH          8u
#define ENET_RAEM_RX_ALMOST_EMPTY(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RAEM_RX_ALMOST_EMPTY_SHIFT))&ENET_RAEM_RX_ALMOST_EMPTY_MASK)
/* RAFL Bit Fields */
#define ENET_RAFL_RX_ALMOST_FULL_MASK            0xFFu
#define ENET_RAFL_RX_ALMOST_FULL_SHIFT           0u
#define ENET_RAFL_RX_ALMOST_FULL_WIDTH           8u
#define ENET_RAFL_RX_ALMOST_FULL(x)              (((uint32_t)(((uint32_t)(x))<<ENET_RAFL_RX_ALMOST_FULL_SHIFT))&ENET_RAFL_RX_ALMOST_FULL_MASK)
/* TSEM Bit Fields */
#define ENET_TSEM_TX_SECTION_EMPTY_MASK          0xFFu
#define ENET_TSEM_TX_SECTION_EMPTY_SHIFT         0u
#define ENET_TSEM_TX_SECTION_EMPTY_WIDTH         8u
#define ENET_TSEM_TX_SECTION_EMPTY(x)            (((uint32_t)(((uint32_t)(x))<<ENET_TSEM_TX_SECTION_EMPTY_SHIFT))&ENET_TSEM_TX_SECTION_EMPTY_MASK)
/* TAEM Bit Fields */
#define ENET_TAEM_TX_ALMOST_EMPTY_MASK           0xFFu
#define ENET_TAEM_TX_ALMOST_EMPTY_SHIFT          0u
#define ENET_TAEM_TX_ALMOST_EMPTY_WIDTH          8u
#define ENET_TAEM_TX_ALMOST_EMPTY(x)             (((uint32_t)(((uint32_t)(x))<<ENET_TAEM_TX_ALMOST_EMPTY_SHIFT))&ENET_TAEM_TX_ALMOST_EMPTY_MASK)
/* TAFL Bit Fields */
#define ENET_TAFL_TX_ALMOST_FULL_MASK            0xFFu
#define ENET_TAFL_TX_ALMOST_FULL_SHIFT           0u
#define ENET_TAFL_TX_ALMOST_FULL_WIDTH           8u
#define ENET_TAFL_TX_ALMOST_FULL(x)              (((uint32_t)(((uint32_t)(x))<<ENET_TAFL_TX_ALMOST_FULL_SHIFT))&ENET_TAFL_TX_ALMOST_FULL_MASK)
/* TIPG Bit Fields */
#define ENET_TIPG_IPG_MASK                       0x1Fu
#define ENET_TIPG_IPG_SHIFT                      0u
#define ENET_TIPG_IPG_WIDTH                      5u
#define ENET_TIPG_IPG(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TIPG_IPG_SHIFT))&ENET_TIPG_IPG_MASK)
/* FTRL Bit Fields */
#define ENET_FTRL_TRUNC_FL_MASK                  0x3FFFu
#define ENET_FTRL_TRUNC_FL_SHIFT                 0u
#define ENET_FTRL_TRUNC_FL_WIDTH                 14u
#define ENET_FTRL_TRUNC_FL(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_FTRL_TRUNC_FL_SHIFT))&ENET_FTRL_TRUNC_FL_MASK)
/* TACC Bit Fields */
#define ENET_TACC_SHIFT16_MASK                   0x1u
#define ENET_TACC_SHIFT16_SHIFT                  0u
#define ENET_TACC_SHIFT16_WIDTH                  1u
#define ENET_TACC_SHIFT16(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_TACC_SHIFT16_SHIFT))&ENET_TACC_SHIFT16_MASK)
#define ENET_TACC_IPCHK_MASK                     0x8u
#define ENET_TACC_IPCHK_SHIFT                    3u
#define ENET_TACC_IPCHK_WIDTH                    1u
#define ENET_TACC_IPCHK(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TACC_IPCHK_SHIFT))&ENET_TACC_IPCHK_MASK)
#define ENET_TACC_PROCHK_MASK                    0x10u
#define ENET_TACC_PROCHK_SHIFT                   4u
#define ENET_TACC_PROCHK_WIDTH                   1u
#define ENET_TACC_PROCHK(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_TACC_PROCHK_SHIFT))&ENET_TACC_PROCHK_MASK)
/* RACC Bit Fields */
#define ENET_RACC_PADREM_MASK                    0x1u
#define ENET_RACC_PADREM_SHIFT                   0u
#define ENET_RACC_PADREM_WIDTH                   1u
#define ENET_RACC_PADREM(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_RACC_PADREM_SHIFT))&ENET_RACC_PADREM_MASK)
#define ENET_RACC_IPDIS_MASK                     0x2u
#define ENET_RACC_IPDIS_SHIFT                    1u
#define ENET_RACC_IPDIS_WIDTH                    1u
#define ENET_RACC_IPDIS(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RACC_IPDIS_SHIFT))&ENET_RACC_IPDIS_MASK)
#define ENET_RACC_PRODIS_MASK                    0x4u
#define ENET_RACC_PRODIS_SHIFT                   2u
#define ENET_RACC_PRODIS_WIDTH                   1u
#define ENET_RACC_PRODIS(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_RACC_PRODIS_SHIFT))&ENET_RACC_PRODIS_MASK)
#define ENET_RACC_LINEDIS_MASK                   0x40u
#define ENET_RACC_LINEDIS_SHIFT                  6u
#define ENET_RACC_LINEDIS_WIDTH                  1u
#define ENET_RACC_LINEDIS(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_RACC_LINEDIS_SHIFT))&ENET_RACC_LINEDIS_MASK)
#define ENET_RACC_SHIFT16_MASK                   0x80u
#define ENET_RACC_SHIFT16_SHIFT                  7u
#define ENET_RACC_SHIFT16_WIDTH                  1u
#define ENET_RACC_SHIFT16(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_RACC_SHIFT16_SHIFT))&ENET_RACC_SHIFT16_MASK)
/* RMON_T_PACKETS Bit Fields */
#define ENET_RMON_T_PACKETS_TXPKTS_MASK          0xFFFFu
#define ENET_RMON_T_PACKETS_TXPKTS_SHIFT         0u
#define ENET_RMON_T_PACKETS_TXPKTS_WIDTH         16u
#define ENET_RMON_T_PACKETS_TXPKTS(x)            (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_PACKETS_TXPKTS_SHIFT))&ENET_RMON_T_PACKETS_TXPKTS_MASK)
/* RMON_T_BC_PKT Bit Fields */
#define ENET_RMON_T_BC_PKT_TXPKTS_MASK           0xFFFFu
#define ENET_RMON_T_BC_PKT_TXPKTS_SHIFT          0u
#define ENET_RMON_T_BC_PKT_TXPKTS_WIDTH          16u
#define ENET_RMON_T_BC_PKT_TXPKTS(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_BC_PKT_TXPKTS_SHIFT))&ENET_RMON_T_BC_PKT_TXPKTS_MASK)
/* RMON_T_MC_PKT Bit Fields */
#define ENET_RMON_T_MC_PKT_TXPKTS_MASK           0xFFFFu
#define ENET_RMON_T_MC_PKT_TXPKTS_SHIFT          0u
#define ENET_RMON_T_MC_PKT_TXPKTS_WIDTH          16u
#define ENET_RMON_T_MC_PKT_TXPKTS(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_MC_PKT_TXPKTS_SHIFT))&ENET_RMON_T_MC_PKT_TXPKTS_MASK)
/* RMON_T_CRC_ALIGN Bit Fields */
#define ENET_RMON_T_CRC_ALIGN_TXPKTS_MASK        0xFFFFu
#define ENET_RMON_T_CRC_ALIGN_TXPKTS_SHIFT       0u
#define ENET_RMON_T_CRC_ALIGN_TXPKTS_WIDTH       16u
#define ENET_RMON_T_CRC_ALIGN_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_CRC_ALIGN_TXPKTS_SHIFT))&ENET_RMON_T_CRC_ALIGN_TXPKTS_MASK)
/* RMON_T_UNDERSIZE Bit Fields */
#define ENET_RMON_T_UNDERSIZE_TXPKTS_MASK        0xFFFFu
#define ENET_RMON_T_UNDERSIZE_TXPKTS_SHIFT       0u
#define ENET_RMON_T_UNDERSIZE_TXPKTS_WIDTH       16u
#define ENET_RMON_T_UNDERSIZE_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_UNDERSIZE_TXPKTS_SHIFT))&ENET_RMON_T_UNDERSIZE_TXPKTS_MASK)
/* RMON_T_OVERSIZE Bit Fields */
#define ENET_RMON_T_OVERSIZE_TXPKTS_MASK         0xFFFFu
#define ENET_RMON_T_OVERSIZE_TXPKTS_SHIFT        0u
#define ENET_RMON_T_OVERSIZE_TXPKTS_WIDTH        16u
#define ENET_RMON_T_OVERSIZE_TXPKTS(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_OVERSIZE_TXPKTS_SHIFT))&ENET_RMON_T_OVERSIZE_TXPKTS_MASK)
/* RMON_T_FRAG Bit Fields */
#define ENET_RMON_T_FRAG_TXPKTS_MASK             0xFFFFu
#define ENET_RMON_T_FRAG_TXPKTS_SHIFT            0u
#define ENET_RMON_T_FRAG_TXPKTS_WIDTH            16u
#define ENET_RMON_T_FRAG_TXPKTS(x)               (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_FRAG_TXPKTS_SHIFT))&ENET_RMON_T_FRAG_TXPKTS_MASK)
/* RMON_T_JAB Bit Fields */
#define ENET_RMON_T_JAB_TXPKTS_MASK              0xFFFFu
#define ENET_RMON_T_JAB_TXPKTS_SHIFT             0u
#define ENET_RMON_T_JAB_TXPKTS_WIDTH             16u
#define ENET_RMON_T_JAB_TXPKTS(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_JAB_TXPKTS_SHIFT))&ENET_RMON_T_JAB_TXPKTS_MASK)
/* RMON_T_COL Bit Fields */
#define ENET_RMON_T_COL_TXPKTS_MASK              0xFFFFu
#define ENET_RMON_T_COL_TXPKTS_SHIFT             0u
#define ENET_RMON_T_COL_TXPKTS_WIDTH             16u
#define ENET_RMON_T_COL_TXPKTS(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_COL_TXPKTS_SHIFT))&ENET_RMON_T_COL_TXPKTS_MASK)
/* RMON_T_P64 Bit Fields */
#define ENET_RMON_T_P64_TXPKTS_MASK              0xFFFFu
#define ENET_RMON_T_P64_TXPKTS_SHIFT             0u
#define ENET_RMON_T_P64_TXPKTS_WIDTH             16u
#define ENET_RMON_T_P64_TXPKTS(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P64_TXPKTS_SHIFT))&ENET_RMON_T_P64_TXPKTS_MASK)
/* RMON_T_P65TO127 Bit Fields */
#define ENET_RMON_T_P65TO127_TXPKTS_MASK         0xFFFFu
#define ENET_RMON_T_P65TO127_TXPKTS_SHIFT        0u
#define ENET_RMON_T_P65TO127_TXPKTS_WIDTH        16u
#define ENET_RMON_T_P65TO127_TXPKTS(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P65TO127_TXPKTS_SHIFT))&ENET_RMON_T_P65TO127_TXPKTS_MASK)
/* RMON_T_P128TO255 Bit Fields */
#define ENET_RMON_T_P128TO255_TXPKTS_MASK        0xFFFFu
#define ENET_RMON_T_P128TO255_TXPKTS_SHIFT       0u
#define ENET_RMON_T_P128TO255_TXPKTS_WIDTH       16u
#define ENET_RMON_T_P128TO255_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P128TO255_TXPKTS_SHIFT))&ENET_RMON_T_P128TO255_TXPKTS_MASK)
/* RMON_T_P256TO511 Bit Fields */
#define ENET_RMON_T_P256TO511_TXPKTS_MASK        0xFFFFu
#define ENET_RMON_T_P256TO511_TXPKTS_SHIFT       0u
#define ENET_RMON_T_P256TO511_TXPKTS_WIDTH       16u
#define ENET_RMON_T_P256TO511_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P256TO511_TXPKTS_SHIFT))&ENET_RMON_T_P256TO511_TXPKTS_MASK)
/* RMON_T_P512TO1023 Bit Fields */
#define ENET_RMON_T_P512TO1023_TXPKTS_MASK       0xFFFFu
#define ENET_RMON_T_P512TO1023_TXPKTS_SHIFT      0u
#define ENET_RMON_T_P512TO1023_TXPKTS_WIDTH      16u
#define ENET_RMON_T_P512TO1023_TXPKTS(x)         (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P512TO1023_TXPKTS_SHIFT))&ENET_RMON_T_P512TO1023_TXPKTS_MASK)
/* RMON_T_P1024TO2047 Bit Fields */
#define ENET_RMON_T_P1024TO2047_TXPKTS_MASK      0xFFFFu
#define ENET_RMON_T_P1024TO2047_TXPKTS_SHIFT     0u
#define ENET_RMON_T_P1024TO2047_TXPKTS_WIDTH     16u
#define ENET_RMON_T_P1024TO2047_TXPKTS(x)        (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P1024TO2047_TXPKTS_SHIFT))&ENET_RMON_T_P1024TO2047_TXPKTS_MASK)
/* RMON_T_P_GTE2048 Bit Fields */
#define ENET_RMON_T_P_GTE2048_TXPKTS_MASK        0xFFFFu
#define ENET_RMON_T_P_GTE2048_TXPKTS_SHIFT       0u
#define ENET_RMON_T_P_GTE2048_TXPKTS_WIDTH       16u
#define ENET_RMON_T_P_GTE2048_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P_GTE2048_TXPKTS_SHIFT))&ENET_RMON_T_P_GTE2048_TXPKTS_MASK)
/* RMON_T_OCTETS Bit Fields */
#define ENET_RMON_T_OCTETS_TXOCTS_MASK           0xFFFFFFFFu
#define ENET_RMON_T_OCTETS_TXOCTS_SHIFT          0u
#define ENET_RMON_T_OCTETS_TXOCTS_WIDTH          32u
#define ENET_RMON_T_OCTETS_TXOCTS(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_OCTETS_TXOCTS_SHIFT))&ENET_RMON_T_OCTETS_TXOCTS_MASK)
/* IEEE_T_FRAME_OK Bit Fields */
#define ENET_IEEE_T_FRAME_OK_COUNT_MASK          0xFFFFu
#define ENET_IEEE_T_FRAME_OK_COUNT_SHIFT         0u
#define ENET_IEEE_T_FRAME_OK_COUNT_WIDTH         16u
#define ENET_IEEE_T_FRAME_OK_COUNT(x)            (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_FRAME_OK_COUNT_SHIFT))&ENET_IEEE_T_FRAME_OK_COUNT_MASK)
/* IEEE_T_1COL Bit Fields */
#define ENET_IEEE_T_1COL_COUNT_MASK              0xFFFFu
#define ENET_IEEE_T_1COL_COUNT_SHIFT             0u
#define ENET_IEEE_T_1COL_COUNT_WIDTH             16u
#define ENET_IEEE_T_1COL_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_1COL_COUNT_SHIFT))&ENET_IEEE_T_1COL_COUNT_MASK)
/* IEEE_T_MCOL Bit Fields */
#define ENET_IEEE_T_MCOL_COUNT_MASK              0xFFFFu
#define ENET_IEEE_T_MCOL_COUNT_SHIFT             0u
#define ENET_IEEE_T_MCOL_COUNT_WIDTH             16u
#define ENET_IEEE_T_MCOL_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_MCOL_COUNT_SHIFT))&ENET_IEEE_T_MCOL_COUNT_MASK)
/* IEEE_T_DEF Bit Fields */
#define ENET_IEEE_T_DEF_COUNT_MASK               0xFFFFu
#define ENET_IEEE_T_DEF_COUNT_SHIFT              0u
#define ENET_IEEE_T_DEF_COUNT_WIDTH              16u
#define ENET_IEEE_T_DEF_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_DEF_COUNT_SHIFT))&ENET_IEEE_T_DEF_COUNT_MASK)
/* IEEE_T_LCOL Bit Fields */
#define ENET_IEEE_T_LCOL_COUNT_MASK              0xFFFFu
#define ENET_IEEE_T_LCOL_COUNT_SHIFT             0u
#define ENET_IEEE_T_LCOL_COUNT_WIDTH             16u
#define ENET_IEEE_T_LCOL_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_LCOL_COUNT_SHIFT))&ENET_IEEE_T_LCOL_COUNT_MASK)
/* IEEE_T_EXCOL Bit Fields */
#define ENET_IEEE_T_EXCOL_COUNT_MASK             0xFFFFu
#define ENET_IEEE_T_EXCOL_COUNT_SHIFT            0u
#define ENET_IEEE_T_EXCOL_COUNT_WIDTH            16u
#define ENET_IEEE_T_EXCOL_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_EXCOL_COUNT_SHIFT))&ENET_IEEE_T_EXCOL_COUNT_MASK)
/* IEEE_T_MACERR Bit Fields */
#define ENET_IEEE_T_MACERR_COUNT_MASK            0xFFFFu
#define ENET_IEEE_T_MACERR_COUNT_SHIFT           0u
#define ENET_IEEE_T_MACERR_COUNT_WIDTH           16u
#define ENET_IEEE_T_MACERR_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_MACERR_COUNT_SHIFT))&ENET_IEEE_T_MACERR_COUNT_MASK)
/* IEEE_T_CSERR Bit Fields */
#define ENET_IEEE_T_CSERR_COUNT_MASK             0xFFFFu
#define ENET_IEEE_T_CSERR_COUNT_SHIFT            0u
#define ENET_IEEE_T_CSERR_COUNT_WIDTH            16u
#define ENET_IEEE_T_CSERR_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_CSERR_COUNT_SHIFT))&ENET_IEEE_T_CSERR_COUNT_MASK)
/* IEEE_T_SQE Bit Fields */
#define ENET_IEEE_T_SQE_COUNT_MASK               0xFFFFu
#define ENET_IEEE_T_SQE_COUNT_SHIFT              0u
#define ENET_IEEE_T_SQE_COUNT_WIDTH              16u
#define ENET_IEEE_T_SQE_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_SQE_COUNT_SHIFT))&ENET_IEEE_T_SQE_COUNT_MASK)
/* IEEE_T_FDXFC Bit Fields */
#define ENET_IEEE_T_FDXFC_COUNT_MASK             0xFFFFu
#define ENET_IEEE_T_FDXFC_COUNT_SHIFT            0u
#define ENET_IEEE_T_FDXFC_COUNT_WIDTH            16u
#define ENET_IEEE_T_FDXFC_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_FDXFC_COUNT_SHIFT))&ENET_IEEE_T_FDXFC_COUNT_MASK)
/* IEEE_T_OCTETS_OK Bit Fields */
#define ENET_IEEE_T_OCTETS_OK_COUNT_MASK         0xFFFFFFFFu
#define ENET_IEEE_T_OCTETS_OK_COUNT_SHIFT        0u
#define ENET_IEEE_T_OCTETS_OK_COUNT_WIDTH        32u
#define ENET_IEEE_T_OCTETS_OK_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_OCTETS_OK_COUNT_SHIFT))&ENET_IEEE_T_OCTETS_OK_COUNT_MASK)
/* RMON_R_PACKETS Bit Fields */
#define ENET_RMON_R_PACKETS_COUNT_MASK           0xFFFFu
#define ENET_RMON_R_PACKETS_COUNT_SHIFT          0u
#define ENET_RMON_R_PACKETS_COUNT_WIDTH          16u
#define ENET_RMON_R_PACKETS_COUNT(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_PACKETS_COUNT_SHIFT))&ENET_RMON_R_PACKETS_COUNT_MASK)
/* RMON_R_BC_PKT Bit Fields */
#define ENET_RMON_R_BC_PKT_COUNT_MASK            0xFFFFu
#define ENET_RMON_R_BC_PKT_COUNT_SHIFT           0u
#define ENET_RMON_R_BC_PKT_COUNT_WIDTH           16u
#define ENET_RMON_R_BC_PKT_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_BC_PKT_COUNT_SHIFT))&ENET_RMON_R_BC_PKT_COUNT_MASK)
/* RMON_R_MC_PKT Bit Fields */
#define ENET_RMON_R_MC_PKT_COUNT_MASK            0xFFFFu
#define ENET_RMON_R_MC_PKT_COUNT_SHIFT           0u
#define ENET_RMON_R_MC_PKT_COUNT_WIDTH           16u
#define ENET_RMON_R_MC_PKT_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_MC_PKT_COUNT_SHIFT))&ENET_RMON_R_MC_PKT_COUNT_MASK)
/* RMON_R_CRC_ALIGN Bit Fields */
#define ENET_RMON_R_CRC_ALIGN_COUNT_MASK         0xFFFFu
#define ENET_RMON_R_CRC_ALIGN_COUNT_SHIFT        0u
#define ENET_RMON_R_CRC_ALIGN_COUNT_WIDTH        16u
#define ENET_RMON_R_CRC_ALIGN_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_CRC_ALIGN_COUNT_SHIFT))&ENET_RMON_R_CRC_ALIGN_COUNT_MASK)
/* RMON_R_UNDERSIZE Bit Fields */
#define ENET_RMON_R_UNDERSIZE_COUNT_MASK         0xFFFFu
#define ENET_RMON_R_UNDERSIZE_COUNT_SHIFT        0u
#define ENET_RMON_R_UNDERSIZE_COUNT_WIDTH        16u
#define ENET_RMON_R_UNDERSIZE_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_UNDERSIZE_COUNT_SHIFT))&ENET_RMON_R_UNDERSIZE_COUNT_MASK)
/* RMON_R_OVERSIZE Bit Fields */
#define ENET_RMON_R_OVERSIZE_COUNT_MASK          0xFFFFu
#define ENET_RMON_R_OVERSIZE_COUNT_SHIFT         0u
#define ENET_RMON_R_OVERSIZE_COUNT_WIDTH         16u
#define ENET_RMON_R_OVERSIZE_COUNT(x)            (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_OVERSIZE_COUNT_SHIFT))&ENET_RMON_R_OVERSIZE_COUNT_MASK)
/* RMON_R_FRAG Bit Fields */
#define ENET_RMON_R_FRAG_COUNT_MASK              0xFFFFu
#define ENET_RMON_R_FRAG_COUNT_SHIFT             0u
#define ENET_RMON_R_FRAG_COUNT_WIDTH             16u
#define ENET_RMON_R_FRAG_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_FRAG_COUNT_SHIFT))&ENET_RMON_R_FRAG_COUNT_MASK)
/* RMON_R_JAB Bit Fields */
#define ENET_RMON_R_JAB_COUNT_MASK               0xFFFFu
#define ENET_RMON_R_JAB_COUNT_SHIFT              0u
#define ENET_RMON_R_JAB_COUNT_WIDTH              16u
#define ENET_RMON_R_JAB_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_JAB_COUNT_SHIFT))&ENET_RMON_R_JAB_COUNT_MASK)
/* RMON_R_P64 Bit Fields */
#define ENET_RMON_R_P64_COUNT_MASK               0xFFFFu
#define ENET_RMON_R_P64_COUNT_SHIFT              0u
#define ENET_RMON_R_P64_COUNT_WIDTH              16u
#define ENET_RMON_R_P64_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P64_COUNT_SHIFT))&ENET_RMON_R_P64_COUNT_MASK)
/* RMON_R_P65TO127 Bit Fields */
#define ENET_RMON_R_P65TO127_COUNT_MASK          0xFFFFu
#define ENET_RMON_R_P65TO127_COUNT_SHIFT         0u
#define ENET_RMON_R_P65TO127_COUNT_WIDTH         16u
#define ENET_RMON_R_P65TO127_COUNT(x)            (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P65TO127_COUNT_SHIFT))&ENET_RMON_R_P65TO127_COUNT_MASK)
/* RMON_R_P128TO255 Bit Fields */
#define ENET_RMON_R_P128TO255_COUNT_MASK         0xFFFFu
#define ENET_RMON_R_P128TO255_COUNT_SHIFT        0u
#define ENET_RMON_R_P128TO255_COUNT_WIDTH        16u
#define ENET_RMON_R_P128TO255_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P128TO255_COUNT_SHIFT))&ENET_RMON_R_P128TO255_COUNT_MASK)
/* RMON_R_P256TO511 Bit Fields */
#define ENET_RMON_R_P256TO511_COUNT_MASK         0xFFFFu
#define ENET_RMON_R_P256TO511_COUNT_SHIFT        0u
#define ENET_RMON_R_P256TO511_COUNT_WIDTH        16u
#define ENET_RMON_R_P256TO511_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P256TO511_COUNT_SHIFT))&ENET_RMON_R_P256TO511_COUNT_MASK)
/* RMON_R_P512TO1023 Bit Fields */
#define ENET_RMON_R_P512TO1023_COUNT_MASK        0xFFFFu
#define ENET_RMON_R_P512TO1023_COUNT_SHIFT       0u
#define ENET_RMON_R_P512TO1023_COUNT_WIDTH       16u
#define ENET_RMON_R_P512TO1023_COUNT(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P512TO1023_COUNT_SHIFT))&ENET_RMON_R_P512TO1023_COUNT_MASK)
/* RMON_R_P1024TO2047 Bit Fields */
#define ENET_RMON_R_P1024TO2047_COUNT_MASK       0xFFFFu
#define ENET_RMON_R_P1024TO2047_COUNT_SHIFT      0u
#define ENET_RMON_R_P1024TO2047_COUNT_WIDTH      16u
#define ENET_RMON_R_P1024TO2047_COUNT(x)         (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P1024TO2047_COUNT_SHIFT))&ENET_RMON_R_P1024TO2047_COUNT_MASK)
/* RMON_R_P_GTE2048 Bit Fields */
#define ENET_RMON_R_P_GTE2048_COUNT_MASK         0xFFFFu
#define ENET_RMON_R_P_GTE2048_COUNT_SHIFT        0u
#define ENET_RMON_R_P_GTE2048_COUNT_WIDTH        16u
#define ENET_RMON_R_P_GTE2048_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P_GTE2048_COUNT_SHIFT))&ENET_RMON_R_P_GTE2048_COUNT_MASK)
/* RMON_R_OCTETS Bit Fields */
#define ENET_RMON_R_OCTETS_COUNT_MASK            0xFFFFFFFFu
#define ENET_RMON_R_OCTETS_COUNT_SHIFT           0u
#define ENET_RMON_R_OCTETS_COUNT_WIDTH           32u
#define ENET_RMON_R_OCTETS_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_OCTETS_COUNT_SHIFT))&ENET_RMON_R_OCTETS_COUNT_MASK)
/* IEEE_R_DROP Bit Fields */
#define ENET_IEEE_R_DROP_COUNT_MASK              0xFFFFu
#define ENET_IEEE_R_DROP_COUNT_SHIFT             0u
#define ENET_IEEE_R_DROP_COUNT_WIDTH             16u
#define ENET_IEEE_R_DROP_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_DROP_COUNT_SHIFT))&ENET_IEEE_R_DROP_COUNT_MASK)
/* IEEE_R_FRAME_OK Bit Fields */
#define ENET_IEEE_R_FRAME_OK_COUNT_MASK          0xFFFFu
#define ENET_IEEE_R_FRAME_OK_COUNT_SHIFT         0u
#define ENET_IEEE_R_FRAME_OK_COUNT_WIDTH         16u
#define ENET_IEEE_R_FRAME_OK_COUNT(x)            (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_FRAME_OK_COUNT_SHIFT))&ENET_IEEE_R_FRAME_OK_COUNT_MASK)
/* IEEE_R_CRC Bit Fields */
#define ENET_IEEE_R_CRC_COUNT_MASK               0xFFFFu
#define ENET_IEEE_R_CRC_COUNT_SHIFT              0u
#define ENET_IEEE_R_CRC_COUNT_WIDTH              16u
#define ENET_IEEE_R_CRC_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_CRC_COUNT_SHIFT))&ENET_IEEE_R_CRC_COUNT_MASK)
/* IEEE_R_ALIGN Bit Fields */
#define ENET_IEEE_R_ALIGN_COUNT_MASK             0xFFFFu
#define ENET_IEEE_R_ALIGN_COUNT_SHIFT            0u
#define ENET_IEEE_R_ALIGN_COUNT_WIDTH            16u
#define ENET_IEEE_R_ALIGN_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_ALIGN_COUNT_SHIFT))&ENET_IEEE_R_ALIGN_COUNT_MASK)
/* IEEE_R_MACERR Bit Fields */
#define ENET_IEEE_R_MACERR_COUNT_MASK            0xFFFFu
#define ENET_IEEE_R_MACERR_COUNT_SHIFT           0u
#define ENET_IEEE_R_MACERR_COUNT_WIDTH           16u
#define ENET_IEEE_R_MACERR_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_MACERR_COUNT_SHIFT))&ENET_IEEE_R_MACERR_COUNT_MASK)
/* IEEE_R_FDXFC Bit Fields */
#define ENET_IEEE_R_FDXFC_COUNT_MASK             0xFFFFu
#define ENET_IEEE_R_FDXFC_COUNT_SHIFT            0u
#define ENET_IEEE_R_FDXFC_COUNT_WIDTH            16u
#define ENET_IEEE_R_FDXFC_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_FDXFC_COUNT_SHIFT))&ENET_IEEE_R_FDXFC_COUNT_MASK)
/* IEEE_R_OCTETS_OK Bit Fields */
#define ENET_IEEE_R_OCTETS_OK_COUNT_MASK         0xFFFFFFFFu
#define ENET_IEEE_R_OCTETS_OK_COUNT_SHIFT        0u
#define ENET_IEEE_R_OCTETS_OK_COUNT_WIDTH        32u
#define ENET_IEEE_R_OCTETS_OK_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_OCTETS_OK_COUNT_SHIFT))&ENET_IEEE_R_OCTETS_OK_COUNT_MASK)
/* ATCR Bit Fields */
#define ENET_ATCR_EN_MASK                        0x1u
#define ENET_ATCR_EN_SHIFT                       0u
#define ENET_ATCR_EN_WIDTH                       1u
#define ENET_ATCR_EN(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_EN_SHIFT))&ENET_ATCR_EN_MASK)
#define ENET_ATCR_OFFEN_MASK                     0x4u
#define ENET_ATCR_OFFEN_SHIFT                    2u
#define ENET_ATCR_OFFEN_WIDTH                    1u
#define ENET_ATCR_OFFEN(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_OFFEN_SHIFT))&ENET_ATCR_OFFEN_MASK)
#define ENET_ATCR_OFFRST_MASK                    0x8u
#define ENET_ATCR_OFFRST_SHIFT                   3u
#define ENET_ATCR_OFFRST_WIDTH                   1u
#define ENET_ATCR_OFFRST(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_OFFRST_SHIFT))&ENET_ATCR_OFFRST_MASK)
#define ENET_ATCR_PEREN_MASK                     0x10u
#define ENET_ATCR_PEREN_SHIFT                    4u
#define ENET_ATCR_PEREN_WIDTH                    1u
#define ENET_ATCR_PEREN(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_PEREN_SHIFT))&ENET_ATCR_PEREN_MASK)
#define ENET_ATCR_PINPER_MASK                    0x80u
#define ENET_ATCR_PINPER_SHIFT                   7u
#define ENET_ATCR_PINPER_WIDTH                   1u
#define ENET_ATCR_PINPER(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_PINPER_SHIFT))&ENET_ATCR_PINPER_MASK)
#define ENET_ATCR_RESTART_MASK                   0x200u
#define ENET_ATCR_RESTART_SHIFT                  9u
#define ENET_ATCR_RESTART_WIDTH                  1u
#define ENET_ATCR_RESTART(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_RESTART_SHIFT))&ENET_ATCR_RESTART_MASK)
#define ENET_ATCR_CAPTURE_MASK                   0x800u
#define ENET_ATCR_CAPTURE_SHIFT                  11u
#define ENET_ATCR_CAPTURE_WIDTH                  1u
#define ENET_ATCR_CAPTURE(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_CAPTURE_SHIFT))&ENET_ATCR_CAPTURE_MASK)
#define ENET_ATCR_SLAVE_MASK                     0x2000u
#define ENET_ATCR_SLAVE_SHIFT                    13u
#define ENET_ATCR_SLAVE_WIDTH                    1u
#define ENET_ATCR_SLAVE(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_SLAVE_SHIFT))&ENET_ATCR_SLAVE_MASK)
/* ATVR Bit Fields */
#define ENET_ATVR_ATIME_MASK                     0xFFFFFFFFu
#define ENET_ATVR_ATIME_SHIFT                    0u
#define ENET_ATVR_ATIME_WIDTH                    32u
#define ENET_ATVR_ATIME(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ATVR_ATIME_SHIFT))&ENET_ATVR_ATIME_MASK)
/* ATOFF Bit Fields */
#define ENET_ATOFF_OFFSET_MASK                   0xFFFFFFFFu
#define ENET_ATOFF_OFFSET_SHIFT                  0u
#define ENET_ATOFF_OFFSET_WIDTH                  32u
#define ENET_ATOFF_OFFSET(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ATOFF_OFFSET_SHIFT))&ENET_ATOFF_OFFSET_MASK)
/* ATPER Bit Fields */
#define ENET_ATPER_PERIOD_MASK                   0xFFFFFFFFu
#define ENET_ATPER_PERIOD_SHIFT                  0u
#define ENET_ATPER_PERIOD_WIDTH                  32u
#define ENET_ATPER_PERIOD(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ATPER_PERIOD_SHIFT))&ENET_ATPER_PERIOD_MASK)
/* ATCOR Bit Fields */
#define ENET_ATCOR_COR_MASK                      0x7FFFFFFFu
#define ENET_ATCOR_COR_SHIFT                     0u
#define ENET_ATCOR_COR_WIDTH                     31u
#define ENET_ATCOR_COR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ATCOR_COR_SHIFT))&ENET_ATCOR_COR_MASK)
/* ATINC Bit Fields */
#define ENET_ATINC_INC_MASK                      0x7Fu
#define ENET_ATINC_INC_SHIFT                     0u
#define ENET_ATINC_INC_WIDTH                     7u
#define ENET_ATINC_INC(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ATINC_INC_SHIFT))&ENET_ATINC_INC_MASK)
#define ENET_ATINC_INC_CORR_MASK                 0x7F00u
#define ENET_ATINC_INC_CORR_SHIFT                8u
#define ENET_ATINC_INC_CORR_WIDTH                7u
#define ENET_ATINC_INC_CORR(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_ATINC_INC_CORR_SHIFT))&ENET_ATINC_INC_CORR_MASK)
/* ATSTMP Bit Fields */
#define ENET_ATSTMP_TIMESTAMP_MASK               0xFFFFFFFFu
#define ENET_ATSTMP_TIMESTAMP_SHIFT              0u
#define ENET_ATSTMP_TIMESTAMP_WIDTH              32u
#define ENET_ATSTMP_TIMESTAMP(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_ATSTMP_TIMESTAMP_SHIFT))&ENET_ATSTMP_TIMESTAMP_MASK)
/* TGSR Bit Fields */
#define ENET_TGSR_TF0_MASK                       0x1u
#define ENET_TGSR_TF0_SHIFT                      0u
#define ENET_TGSR_TF0_WIDTH                      1u
#define ENET_TGSR_TF0(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TGSR_TF0_SHIFT))&ENET_TGSR_TF0_MASK)
#define ENET_TGSR_TF1_MASK                       0x2u
#define ENET_TGSR_TF1_SHIFT                      1u
#define ENET_TGSR_TF1_WIDTH                      1u
#define ENET_TGSR_TF1(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TGSR_TF1_SHIFT))&ENET_TGSR_TF1_MASK)
#define ENET_TGSR_TF2_MASK                       0x4u
#define ENET_TGSR_TF2_SHIFT                      2u
#define ENET_TGSR_TF2_WIDTH                      1u
#define ENET_TGSR_TF2(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TGSR_TF2_SHIFT))&ENET_TGSR_TF2_MASK)
#define ENET_TGSR_TF3_MASK                       0x8u
#define ENET_TGSR_TF3_SHIFT                      3u
#define ENET_TGSR_TF3_WIDTH                      1u
#define ENET_TGSR_TF3(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TGSR_TF3_SHIFT))&ENET_TGSR_TF3_MASK)
/* TCSR Bit Fields */
#define ENET_TCSR_TDRE_MASK                      0x1u
#define ENET_TCSR_TDRE_SHIFT                     0u
#define ENET_TCSR_TDRE_WIDTH                     1u
#define ENET_TCSR_TDRE(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TCSR_TDRE_SHIFT))&ENET_TCSR_TDRE_MASK)
#define ENET_TCSR_TMODE_MASK                     0x3Cu
#define ENET_TCSR_TMODE_SHIFT                    2u
#define ENET_TCSR_TMODE_WIDTH                    4u
#define ENET_TCSR_TMODE(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCSR_TMODE_SHIFT))&ENET_TCSR_TMODE_MASK)
#define ENET_TCSR_TIE_MASK                       0x40u
#define ENET_TCSR_TIE_SHIFT                      6u
#define ENET_TCSR_TIE_WIDTH                      1u
#define ENET_TCSR_TIE(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TCSR_TIE_SHIFT))&ENET_TCSR_TIE_MASK)
#define ENET_TCSR_TF_MASK                        0x80u
#define ENET_TCSR_TF_SHIFT                       7u
#define ENET_TCSR_TF_WIDTH                       1u
#define ENET_TCSR_TF(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_TCSR_TF_SHIFT))&ENET_TCSR_TF_MASK)
/* TCCR Bit Fields */
#define ENET_TCCR_TCC_MASK                       0xFFFFFFFFu
#define ENET_TCCR_TCC_SHIFT                      0u
#define ENET_TCCR_TCC_WIDTH                      32u
#define ENET_TCCR_TCC(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TCCR_TCC_SHIFT))&ENET_TCCR_TCC_MASK)

/*!
 * @}
 */ /* end of group ENET_Register_Masks */


/*!
 * @}
 */ /* end of group ENET_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- ETIMER Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ETIMER_Peripheral_Access_Layer ETIMER Peripheral Access Layer
 * @{
 */


/** ETIMER - Size of Registers Arrays */
#define ETIMER_CH_COUNT                          6u
#define ETIMER_DREQ_COUNT                        4u

/** ETIMER - Register Layout Typedef */
typedef struct {
  struct {                                         /* offset: 0x0, array step: 0x20 */
    __IO uint16_t COMP1;                             /**< Channel n Compare Register 1, array offset: 0x0, array step: 0x20 */
    __IO uint16_t COMP2;                             /**< Channel n Compare Register 2, array offset: 0x2, array step: 0x20 */
    __I  uint16_t CAPT1;                             /**< Channel n Capture Register 1, array offset: 0x4, array step: 0x20 */
    __I  uint16_t CAPT2;                             /**< Channel n Capture Register 2, array offset: 0x6, array step: 0x20 */
    __IO uint16_t LOAD;                              /**< Channel n Load Register, array offset: 0x8, array step: 0x20 */
    __I  uint16_t HOLD;                              /**< Channel n Hold Register, array offset: 0xA, array step: 0x20 */
    __IO uint16_t CNTR;                              /**< Channel n Counter Register, array offset: 0xC, array step: 0x20 */
    __IO uint16_t CTRL1;                             /**< Channel n Control Register 1, array offset: 0xE, array step: 0x20 */
    __IO uint16_t CTRL2;                             /**< Channel n Control Register 2, array offset: 0x10, array step: 0x20 */
    __IO uint16_t CTRL3;                             /**< Channel n Control Register 3, array offset: 0x12, array step: 0x20 */
    __IO uint16_t STS;                               /**< Channel n Status Register, array offset: 0x14, array step: 0x20 */
    __IO uint16_t INTDMA;                            /**< Channel n Interrupt and DMA Enable Register, array offset: 0x16, array step: 0x20 */
    __IO uint16_t CMPLD1;                            /**< Channel n Comparator Load Register 1, array offset: 0x18, array step: 0x20 */
    __IO uint16_t CMPLD2;                            /**< Channel n Comparator Load Register 2, array offset: 0x1A, array step: 0x20 */
    __IO uint16_t CCCTRL;                            /**< Channel n Compare and Capture Control Register, array offset: 0x1C, array step: 0x20 */
    __IO uint16_t FILT;                              /**< Channel n Input Filter Register, array offset: 0x1E, array step: 0x20 */
  } CH[ETIMER_CH_COUNT];
       uint8_t RESERVED_0[64];
  __IO uint16_t WDTOL;                             /**< Watchdog Time-out Low Word Register, offset: 0x100 */
  __IO uint16_t WDTOH;                             /**< Watchdog Time-out High Word Register, offset: 0x102 */
       uint8_t RESERVED_1[8];
  __IO uint16_t ENBL;                              /**< Channel Enable Register, offset: 0x10C */
       uint8_t RESERVED_2[2];
  __IO uint16_t DREQ[ETIMER_DREQ_COUNT];           /**< DMA Request 0 Select Register..DMA Request 3 Select Register, array offset: 0x110, array step: 0x2 */
} ETIMER_Type, *ETIMER_MemMapPtr;

 /** Number of instances of the ETIMER module. */
#define ETIMER_INSTANCE_COUNT                    (3u)


/* ETIMER - Peripheral instance base addresses */
/** Peripheral ETIMER_0 base address */
#define ETIMER_0_BASE                            (0xFBC20000u)
/** Peripheral ETIMER_0 base pointer */
#define ETIMER_0                                 ((ETIMER_Type *)ETIMER_0_BASE)
/** Peripheral ETIMER_1 base address */
#define ETIMER_1_BASE                            (0xFFC24000u)
/** Peripheral ETIMER_1 base pointer */
#define ETIMER_1                                 ((ETIMER_Type *)ETIMER_1_BASE)
/** Peripheral ETIMER_2 base address */
#define ETIMER_2_BASE                            (0xFBC28000u)
/** Peripheral ETIMER_2 base pointer */
#define ETIMER_2                                 ((ETIMER_Type *)ETIMER_2_BASE)
/** Array initializer of ETIMER peripheral base addresses */
#define ETIMER_BASE_ADDRS                        { ETIMER_0_BASE, ETIMER_1_BASE, ETIMER_2_BASE }
/** Array initializer of ETIMER peripheral base pointers */
#define ETIMER_BASE_PTRS                         { ETIMER_0, ETIMER_1, ETIMER_2 }
/** Interrupt vectors for each ETIMERn peripheral type */
#define ETIMER_CH_MAX_IRQS                       8u
#define ETIMER0_IRQS                             { eTimer_0_TC0IR_IRQn, eTimer_0_TC1IR_IRQn, eTimer_0_TC2IR_IRQn, eTimer_0_TC3IR_IRQn, eTimer_0_TC4IR_IRQn, eTimer_0_TC5IR_IRQn, eTimer_0_WTIF_IRQn, eTimer_0_RCF_IRQn }
#define ETIMER1_IRQS                             { eTimer_1_TC0IR_IRQn, eTimer_1_TC1IR_IRQn, eTimer_1_TC2IR_IRQn, eTimer_1_TC3IR_IRQn, eTimer_1_TC4IR_IRQn, eTimer_1_TC5IR_IRQn, NotAvail_IRQn,     eTimer_1_RCF_IRQn }
#define ETIMER2_IRQS                             { eTimer_2_TC0IR_IRQn, eTimer_2_TC1IR_IRQn, eTimer_2_TC2IR_IRQn, eTimer_2_TC3IR_IRQn, eTimer_2_TC4IR_IRQn, eTimer_2_TC5IR_IRQn, NotAvail_IRQn,     eTimer_2_RCF_IRQn }
/** Interrupt vectors for the ETIMER peripheral type */
#define ETIMER_IRQS                              { ETIMER0_IRQS, ETIMER1_IRQS, ETIMER2_IRQS }

/* ----------------------------------------------------------------------------
   -- ETIMER Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ETIMER_Register_Masks ETIMER Register Masks
 * @{
 */

/* COMP1 Bit Fields */
#define ETIMER_COMP1_COMP1_MASK                  0xFFFFu
#define ETIMER_COMP1_COMP1_SHIFT                 0u
#define ETIMER_COMP1_COMP1_WIDTH                 16u
#define ETIMER_COMP1_COMP1(x)                    (((uint16_t)(((uint16_t)(x))<<ETIMER_COMP1_COMP1_SHIFT))&ETIMER_COMP1_COMP1_MASK)
/* COMP2 Bit Fields */
#define ETIMER_COMP2_COMP2_MASK                  0xFFFFu
#define ETIMER_COMP2_COMP2_SHIFT                 0u
#define ETIMER_COMP2_COMP2_WIDTH                 16u
#define ETIMER_COMP2_COMP2(x)                    (((uint16_t)(((uint16_t)(x))<<ETIMER_COMP2_COMP2_SHIFT))&ETIMER_COMP2_COMP2_MASK)
/* CAPT1 Bit Fields */
#define ETIMER_CAPT1_CAPT1_MASK                  0xFFFFu
#define ETIMER_CAPT1_CAPT1_SHIFT                 0u
#define ETIMER_CAPT1_CAPT1_WIDTH                 16u
#define ETIMER_CAPT1_CAPT1(x)                    (((uint16_t)(((uint16_t)(x))<<ETIMER_CAPT1_CAPT1_SHIFT))&ETIMER_CAPT1_CAPT1_MASK)
/* CAPT2 Bit Fields */
#define ETIMER_CAPT2_CAPT2_MASK                  0xFFFFu
#define ETIMER_CAPT2_CAPT2_SHIFT                 0u
#define ETIMER_CAPT2_CAPT2_WIDTH                 16u
#define ETIMER_CAPT2_CAPT2(x)                    (((uint16_t)(((uint16_t)(x))<<ETIMER_CAPT2_CAPT2_SHIFT))&ETIMER_CAPT2_CAPT2_MASK)
/* LOAD Bit Fields */
#define ETIMER_LOAD_LOAD_MASK                    0xFFFFu
#define ETIMER_LOAD_LOAD_SHIFT                   0u
#define ETIMER_LOAD_LOAD_WIDTH                   16u
#define ETIMER_LOAD_LOAD(x)                      (((uint16_t)(((uint16_t)(x))<<ETIMER_LOAD_LOAD_SHIFT))&ETIMER_LOAD_LOAD_MASK)
/* HOLD Bit Fields */
#define ETIMER_HOLD_HOLD_MASK                    0xFFFFu
#define ETIMER_HOLD_HOLD_SHIFT                   0u
#define ETIMER_HOLD_HOLD_WIDTH                   16u
#define ETIMER_HOLD_HOLD(x)                      (((uint16_t)(((uint16_t)(x))<<ETIMER_HOLD_HOLD_SHIFT))&ETIMER_HOLD_HOLD_MASK)
/* CNTR Bit Fields */
#define ETIMER_CNTR_CNTR_MASK                    0xFFFFu
#define ETIMER_CNTR_CNTR_SHIFT                   0u
#define ETIMER_CNTR_CNTR_WIDTH                   16u
#define ETIMER_CNTR_CNTR(x)                      (((uint16_t)(((uint16_t)(x))<<ETIMER_CNTR_CNTR_SHIFT))&ETIMER_CNTR_CNTR_MASK)
/* CTRL1 Bit Fields */
#define ETIMER_CTRL1_SECSRC_MASK                 0x1Fu
#define ETIMER_CTRL1_SECSRC_SHIFT                0u
#define ETIMER_CTRL1_SECSRC_WIDTH                5u
#define ETIMER_CTRL1_SECSRC(x)                   (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL1_SECSRC_SHIFT))&ETIMER_CTRL1_SECSRC_MASK)
#define ETIMER_CTRL1_DIR_MASK                    0x20u
#define ETIMER_CTRL1_DIR_SHIFT                   5u
#define ETIMER_CTRL1_DIR_WIDTH                   1u
#define ETIMER_CTRL1_DIR(x)                      (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL1_DIR_SHIFT))&ETIMER_CTRL1_DIR_MASK)
#define ETIMER_CTRL1_LENGTH_MASK                 0x40u
#define ETIMER_CTRL1_LENGTH_SHIFT                6u
#define ETIMER_CTRL1_LENGTH_WIDTH                1u
#define ETIMER_CTRL1_LENGTH(x)                   (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL1_LENGTH_SHIFT))&ETIMER_CTRL1_LENGTH_MASK)
#define ETIMER_CTRL1_ONCE_MASK                   0x80u
#define ETIMER_CTRL1_ONCE_SHIFT                  7u
#define ETIMER_CTRL1_ONCE_WIDTH                  1u
#define ETIMER_CTRL1_ONCE(x)                     (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL1_ONCE_SHIFT))&ETIMER_CTRL1_ONCE_MASK)
#define ETIMER_CTRL1_PRISRC_MASK                 0x1F00u
#define ETIMER_CTRL1_PRISRC_SHIFT                8u
#define ETIMER_CTRL1_PRISRC_WIDTH                5u
#define ETIMER_CTRL1_PRISRC(x)                   (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL1_PRISRC_SHIFT))&ETIMER_CTRL1_PRISRC_MASK)
#define ETIMER_CTRL1_CNTMODE_MASK                0xE000u
#define ETIMER_CTRL1_CNTMODE_SHIFT               13u
#define ETIMER_CTRL1_CNTMODE_WIDTH               3u
#define ETIMER_CTRL1_CNTMODE(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL1_CNTMODE_SHIFT))&ETIMER_CTRL1_CNTMODE_MASK)
/* CTRL2 Bit Fields */
#define ETIMER_CTRL2_OUTMODE_MASK                0xFu
#define ETIMER_CTRL2_OUTMODE_SHIFT               0u
#define ETIMER_CTRL2_OUTMODE_WIDTH               4u
#define ETIMER_CTRL2_OUTMODE(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL2_OUTMODE_SHIFT))&ETIMER_CTRL2_OUTMODE_MASK)
#define ETIMER_CTRL2_MSTR_MASK                   0x10u
#define ETIMER_CTRL2_MSTR_SHIFT                  4u
#define ETIMER_CTRL2_MSTR_WIDTH                  1u
#define ETIMER_CTRL2_MSTR(x)                     (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL2_MSTR_SHIFT))&ETIMER_CTRL2_MSTR_MASK)
#define ETIMER_CTRL2_OPS_MASK                    0x20u
#define ETIMER_CTRL2_OPS_SHIFT                   5u
#define ETIMER_CTRL2_OPS_WIDTH                   1u
#define ETIMER_CTRL2_OPS(x)                      (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL2_OPS_SHIFT))&ETIMER_CTRL2_OPS_MASK)
#define ETIMER_CTRL2_PIPS_MASK                   0x40u
#define ETIMER_CTRL2_PIPS_SHIFT                  6u
#define ETIMER_CTRL2_PIPS_WIDTH                  1u
#define ETIMER_CTRL2_PIPS(x)                     (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL2_PIPS_SHIFT))&ETIMER_CTRL2_PIPS_MASK)
#define ETIMER_CTRL2_SIPS_MASK                   0x80u
#define ETIMER_CTRL2_SIPS_SHIFT                  7u
#define ETIMER_CTRL2_SIPS_WIDTH                  1u
#define ETIMER_CTRL2_SIPS(x)                     (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL2_SIPS_SHIFT))&ETIMER_CTRL2_SIPS_MASK)
#define ETIMER_CTRL2_COINIT_MASK                 0x300u
#define ETIMER_CTRL2_COINIT_SHIFT                8u
#define ETIMER_CTRL2_COINIT_WIDTH                2u
#define ETIMER_CTRL2_COINIT(x)                   (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL2_COINIT_SHIFT))&ETIMER_CTRL2_COINIT_MASK)
#define ETIMER_CTRL2_COFRC_MASK                  0x400u
#define ETIMER_CTRL2_COFRC_SHIFT                 10u
#define ETIMER_CTRL2_COFRC_WIDTH                 1u
#define ETIMER_CTRL2_COFRC(x)                    (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL2_COFRC_SHIFT))&ETIMER_CTRL2_COFRC_MASK)
#define ETIMER_CTRL2_FORCE_MASK                  0x800u
#define ETIMER_CTRL2_FORCE_SHIFT                 11u
#define ETIMER_CTRL2_FORCE_WIDTH                 1u
#define ETIMER_CTRL2_FORCE(x)                    (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL2_FORCE_SHIFT))&ETIMER_CTRL2_FORCE_MASK)
#define ETIMER_CTRL2_VAL_MASK                    0x1000u
#define ETIMER_CTRL2_VAL_SHIFT                   12u
#define ETIMER_CTRL2_VAL_WIDTH                   1u
#define ETIMER_CTRL2_VAL(x)                      (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL2_VAL_SHIFT))&ETIMER_CTRL2_VAL_MASK)
#define ETIMER_CTRL2_INPUT_MASK                  0x2000u
#define ETIMER_CTRL2_INPUT_SHIFT                 13u
#define ETIMER_CTRL2_INPUT_WIDTH                 1u
#define ETIMER_CTRL2_INPUT(x)                    (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL2_INPUT_SHIFT))&ETIMER_CTRL2_INPUT_MASK)
#define ETIMER_CTRL2_RDNT_MASK                   0x4000u
#define ETIMER_CTRL2_RDNT_SHIFT                  14u
#define ETIMER_CTRL2_RDNT_WIDTH                  1u
#define ETIMER_CTRL2_RDNT(x)                     (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL2_RDNT_SHIFT))&ETIMER_CTRL2_RDNT_MASK)
#define ETIMER_CTRL2_OEN_MASK                    0x8000u
#define ETIMER_CTRL2_OEN_SHIFT                   15u
#define ETIMER_CTRL2_OEN_WIDTH                   1u
#define ETIMER_CTRL2_OEN(x)                      (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL2_OEN_SHIFT))&ETIMER_CTRL2_OEN_MASK)
/* CTRL3 Bit Fields */
#define ETIMER_CTRL3_DBGEN_MASK                  0x3u
#define ETIMER_CTRL3_DBGEN_SHIFT                 0u
#define ETIMER_CTRL3_DBGEN_WIDTH                 2u
#define ETIMER_CTRL3_DBGEN(x)                    (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL3_DBGEN_SHIFT))&ETIMER_CTRL3_DBGEN_MASK)
#define ETIMER_CTRL3_C1FCNT_MASK                 0x1Cu
#define ETIMER_CTRL3_C1FCNT_SHIFT                2u
#define ETIMER_CTRL3_C1FCNT_WIDTH                3u
#define ETIMER_CTRL3_C1FCNT(x)                   (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL3_C1FCNT_SHIFT))&ETIMER_CTRL3_C1FCNT_MASK)
#define ETIMER_CTRL3_C2FCNT_MASK                 0xE0u
#define ETIMER_CTRL3_C2FCNT_SHIFT                5u
#define ETIMER_CTRL3_C2FCNT_WIDTH                3u
#define ETIMER_CTRL3_C2FCNT(x)                   (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL3_C2FCNT_SHIFT))&ETIMER_CTRL3_C2FCNT_MASK)
#define ETIMER_CTRL3_ROC_MASK                    0x6000u
#define ETIMER_CTRL3_ROC_SHIFT                   13u
#define ETIMER_CTRL3_ROC_WIDTH                   2u
#define ETIMER_CTRL3_ROC(x)                      (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL3_ROC_SHIFT))&ETIMER_CTRL3_ROC_MASK)
#define ETIMER_CTRL3_STPEN_MASK                  0x8000u
#define ETIMER_CTRL3_STPEN_SHIFT                 15u
#define ETIMER_CTRL3_STPEN_WIDTH                 1u
#define ETIMER_CTRL3_STPEN(x)                    (((uint16_t)(((uint16_t)(x))<<ETIMER_CTRL3_STPEN_SHIFT))&ETIMER_CTRL3_STPEN_MASK)
/* STS Bit Fields */
#define ETIMER_STS_TCF_MASK                      0x1u
#define ETIMER_STS_TCF_SHIFT                     0u
#define ETIMER_STS_TCF_WIDTH                     1u
#define ETIMER_STS_TCF(x)                        (((uint16_t)(((uint16_t)(x))<<ETIMER_STS_TCF_SHIFT))&ETIMER_STS_TCF_MASK)
#define ETIMER_STS_TCF1_MASK                     0x2u
#define ETIMER_STS_TCF1_SHIFT                    1u
#define ETIMER_STS_TCF1_WIDTH                    1u
#define ETIMER_STS_TCF1(x)                       (((uint16_t)(((uint16_t)(x))<<ETIMER_STS_TCF1_SHIFT))&ETIMER_STS_TCF1_MASK)
#define ETIMER_STS_TCF2_MASK                     0x4u
#define ETIMER_STS_TCF2_SHIFT                    2u
#define ETIMER_STS_TCF2_WIDTH                    1u
#define ETIMER_STS_TCF2(x)                       (((uint16_t)(((uint16_t)(x))<<ETIMER_STS_TCF2_SHIFT))&ETIMER_STS_TCF2_MASK)
#define ETIMER_STS_TOF_MASK                      0x8u
#define ETIMER_STS_TOF_SHIFT                     3u
#define ETIMER_STS_TOF_WIDTH                     1u
#define ETIMER_STS_TOF(x)                        (((uint16_t)(((uint16_t)(x))<<ETIMER_STS_TOF_SHIFT))&ETIMER_STS_TOF_MASK)
#define ETIMER_STS_IELF_MASK                     0x10u
#define ETIMER_STS_IELF_SHIFT                    4u
#define ETIMER_STS_IELF_WIDTH                    1u
#define ETIMER_STS_IELF(x)                       (((uint16_t)(((uint16_t)(x))<<ETIMER_STS_IELF_SHIFT))&ETIMER_STS_IELF_MASK)
#define ETIMER_STS_IEHF_MASK                     0x20u
#define ETIMER_STS_IEHF_SHIFT                    5u
#define ETIMER_STS_IEHF_WIDTH                    1u
#define ETIMER_STS_IEHF(x)                       (((uint16_t)(((uint16_t)(x))<<ETIMER_STS_IEHF_SHIFT))&ETIMER_STS_IEHF_MASK)
#define ETIMER_STS_ICF1_MASK                     0x40u
#define ETIMER_STS_ICF1_SHIFT                    6u
#define ETIMER_STS_ICF1_WIDTH                    1u
#define ETIMER_STS_ICF1(x)                       (((uint16_t)(((uint16_t)(x))<<ETIMER_STS_ICF1_SHIFT))&ETIMER_STS_ICF1_MASK)
#define ETIMER_STS_ICF2_MASK                     0x80u
#define ETIMER_STS_ICF2_SHIFT                    7u
#define ETIMER_STS_ICF2_WIDTH                    1u
#define ETIMER_STS_ICF2(x)                       (((uint16_t)(((uint16_t)(x))<<ETIMER_STS_ICF2_SHIFT))&ETIMER_STS_ICF2_MASK)
#define ETIMER_STS_RCF_MASK                      0x100u
#define ETIMER_STS_RCF_SHIFT                     8u
#define ETIMER_STS_RCF_WIDTH                     1u
#define ETIMER_STS_RCF(x)                        (((uint16_t)(((uint16_t)(x))<<ETIMER_STS_RCF_SHIFT))&ETIMER_STS_RCF_MASK)
#define ETIMER_STS_WDF_MASK                      0x200u
#define ETIMER_STS_WDF_SHIFT                     9u
#define ETIMER_STS_WDF_WIDTH                     1u
#define ETIMER_STS_WDF(x)                        (((uint16_t)(((uint16_t)(x))<<ETIMER_STS_WDF_SHIFT))&ETIMER_STS_WDF_MASK)
/* INTDMA Bit Fields */
#define ETIMER_INTDMA_TCFIE_MASK                 0x1u
#define ETIMER_INTDMA_TCFIE_SHIFT                0u
#define ETIMER_INTDMA_TCFIE_WIDTH                1u
#define ETIMER_INTDMA_TCFIE(x)                   (((uint16_t)(((uint16_t)(x))<<ETIMER_INTDMA_TCFIE_SHIFT))&ETIMER_INTDMA_TCFIE_MASK)
#define ETIMER_INTDMA_TCF1IE_MASK                0x2u
#define ETIMER_INTDMA_TCF1IE_SHIFT               1u
#define ETIMER_INTDMA_TCF1IE_WIDTH               1u
#define ETIMER_INTDMA_TCF1IE(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_INTDMA_TCF1IE_SHIFT))&ETIMER_INTDMA_TCF1IE_MASK)
#define ETIMER_INTDMA_TCF2IE_MASK                0x4u
#define ETIMER_INTDMA_TCF2IE_SHIFT               2u
#define ETIMER_INTDMA_TCF2IE_WIDTH               1u
#define ETIMER_INTDMA_TCF2IE(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_INTDMA_TCF2IE_SHIFT))&ETIMER_INTDMA_TCF2IE_MASK)
#define ETIMER_INTDMA_TOFIE_MASK                 0x8u
#define ETIMER_INTDMA_TOFIE_SHIFT                3u
#define ETIMER_INTDMA_TOFIE_WIDTH                1u
#define ETIMER_INTDMA_TOFIE(x)                   (((uint16_t)(((uint16_t)(x))<<ETIMER_INTDMA_TOFIE_SHIFT))&ETIMER_INTDMA_TOFIE_MASK)
#define ETIMER_INTDMA_IELFIE_MASK                0x10u
#define ETIMER_INTDMA_IELFIE_SHIFT               4u
#define ETIMER_INTDMA_IELFIE_WIDTH               1u
#define ETIMER_INTDMA_IELFIE(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_INTDMA_IELFIE_SHIFT))&ETIMER_INTDMA_IELFIE_MASK)
#define ETIMER_INTDMA_IEHFIE_MASK                0x20u
#define ETIMER_INTDMA_IEHFIE_SHIFT               5u
#define ETIMER_INTDMA_IEHFIE_WIDTH               1u
#define ETIMER_INTDMA_IEHFIE(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_INTDMA_IEHFIE_SHIFT))&ETIMER_INTDMA_IEHFIE_MASK)
#define ETIMER_INTDMA_ICF1IE_MASK                0x40u
#define ETIMER_INTDMA_ICF1IE_SHIFT               6u
#define ETIMER_INTDMA_ICF1IE_WIDTH               1u
#define ETIMER_INTDMA_ICF1IE(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_INTDMA_ICF1IE_SHIFT))&ETIMER_INTDMA_ICF1IE_MASK)
#define ETIMER_INTDMA_ICF2IE_MASK                0x80u
#define ETIMER_INTDMA_ICF2IE_SHIFT               7u
#define ETIMER_INTDMA_ICF2IE_WIDTH               1u
#define ETIMER_INTDMA_ICF2IE(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_INTDMA_ICF2IE_SHIFT))&ETIMER_INTDMA_ICF2IE_MASK)
#define ETIMER_INTDMA_RCFIE_MASK                 0x100u
#define ETIMER_INTDMA_RCFIE_SHIFT                8u
#define ETIMER_INTDMA_RCFIE_WIDTH                1u
#define ETIMER_INTDMA_RCFIE(x)                   (((uint16_t)(((uint16_t)(x))<<ETIMER_INTDMA_RCFIE_SHIFT))&ETIMER_INTDMA_RCFIE_MASK)
#define ETIMER_INTDMA_WDFIE_MASK                 0x200u
#define ETIMER_INTDMA_WDFIE_SHIFT                9u
#define ETIMER_INTDMA_WDFIE_WIDTH                1u
#define ETIMER_INTDMA_WDFIE(x)                   (((uint16_t)(((uint16_t)(x))<<ETIMER_INTDMA_WDFIE_SHIFT))&ETIMER_INTDMA_WDFIE_MASK)
#define ETIMER_INTDMA_CMPLD1DE_MASK              0x1000u
#define ETIMER_INTDMA_CMPLD1DE_SHIFT             12u
#define ETIMER_INTDMA_CMPLD1DE_WIDTH             1u
#define ETIMER_INTDMA_CMPLD1DE(x)                (((uint16_t)(((uint16_t)(x))<<ETIMER_INTDMA_CMPLD1DE_SHIFT))&ETIMER_INTDMA_CMPLD1DE_MASK)
#define ETIMER_INTDMA_CMPLD2DE_MASK              0x2000u
#define ETIMER_INTDMA_CMPLD2DE_SHIFT             13u
#define ETIMER_INTDMA_CMPLD2DE_WIDTH             1u
#define ETIMER_INTDMA_CMPLD2DE(x)                (((uint16_t)(((uint16_t)(x))<<ETIMER_INTDMA_CMPLD2DE_SHIFT))&ETIMER_INTDMA_CMPLD2DE_MASK)
#define ETIMER_INTDMA_ICF1DE_MASK                0x4000u
#define ETIMER_INTDMA_ICF1DE_SHIFT               14u
#define ETIMER_INTDMA_ICF1DE_WIDTH               1u
#define ETIMER_INTDMA_ICF1DE(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_INTDMA_ICF1DE_SHIFT))&ETIMER_INTDMA_ICF1DE_MASK)
#define ETIMER_INTDMA_ICF2DE_MASK                0x8000u
#define ETIMER_INTDMA_ICF2DE_SHIFT               15u
#define ETIMER_INTDMA_ICF2DE_WIDTH               1u
#define ETIMER_INTDMA_ICF2DE(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_INTDMA_ICF2DE_SHIFT))&ETIMER_INTDMA_ICF2DE_MASK)
/* CMPLD1 Bit Fields */
#define ETIMER_CMPLD1_CMPLD1_MASK                0xFFFFu
#define ETIMER_CMPLD1_CMPLD1_SHIFT               0u
#define ETIMER_CMPLD1_CMPLD1_WIDTH               16u
#define ETIMER_CMPLD1_CMPLD1(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_CMPLD1_CMPLD1_SHIFT))&ETIMER_CMPLD1_CMPLD1_MASK)
/* CMPLD2 Bit Fields */
#define ETIMER_CMPLD2_CMPLD2_MASK                0xFFFFu
#define ETIMER_CMPLD2_CMPLD2_SHIFT               0u
#define ETIMER_CMPLD2_CMPLD2_WIDTH               16u
#define ETIMER_CMPLD2_CMPLD2(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_CMPLD2_CMPLD2_SHIFT))&ETIMER_CMPLD2_CMPLD2_MASK)
/* CCCTRL Bit Fields */
#define ETIMER_CCCTRL_ARM_MASK                   0x1u
#define ETIMER_CCCTRL_ARM_SHIFT                  0u
#define ETIMER_CCCTRL_ARM_WIDTH                  1u
#define ETIMER_CCCTRL_ARM(x)                     (((uint16_t)(((uint16_t)(x))<<ETIMER_CCCTRL_ARM_SHIFT))&ETIMER_CCCTRL_ARM_MASK)
#define ETIMER_CCCTRL_ONESHOT_MASK               0x2u
#define ETIMER_CCCTRL_ONESHOT_SHIFT              1u
#define ETIMER_CCCTRL_ONESHOT_WIDTH              1u
#define ETIMER_CCCTRL_ONESHOT(x)                 (((uint16_t)(((uint16_t)(x))<<ETIMER_CCCTRL_ONESHOT_SHIFT))&ETIMER_CCCTRL_ONESHOT_MASK)
#define ETIMER_CCCTRL_CFWM_MASK                  0xCu
#define ETIMER_CCCTRL_CFWM_SHIFT                 2u
#define ETIMER_CCCTRL_CFWM_WIDTH                 2u
#define ETIMER_CCCTRL_CFWM(x)                    (((uint16_t)(((uint16_t)(x))<<ETIMER_CCCTRL_CFWM_SHIFT))&ETIMER_CCCTRL_CFWM_MASK)
#define ETIMER_CCCTRL_CPT1MODE_MASK              0x30u
#define ETIMER_CCCTRL_CPT1MODE_SHIFT             4u
#define ETIMER_CCCTRL_CPT1MODE_WIDTH             2u
#define ETIMER_CCCTRL_CPT1MODE(x)                (((uint16_t)(((uint16_t)(x))<<ETIMER_CCCTRL_CPT1MODE_SHIFT))&ETIMER_CCCTRL_CPT1MODE_MASK)
#define ETIMER_CCCTRL_CPT2MODE_MASK              0xC0u
#define ETIMER_CCCTRL_CPT2MODE_SHIFT             6u
#define ETIMER_CCCTRL_CPT2MODE_WIDTH             2u
#define ETIMER_CCCTRL_CPT2MODE(x)                (((uint16_t)(((uint16_t)(x))<<ETIMER_CCCTRL_CPT2MODE_SHIFT))&ETIMER_CCCTRL_CPT2MODE_MASK)
#define ETIMER_CCCTRL_CMPMODE_MASK               0x300u
#define ETIMER_CCCTRL_CMPMODE_SHIFT              8u
#define ETIMER_CCCTRL_CMPMODE_WIDTH              2u
#define ETIMER_CCCTRL_CMPMODE(x)                 (((uint16_t)(((uint16_t)(x))<<ETIMER_CCCTRL_CMPMODE_SHIFT))&ETIMER_CCCTRL_CMPMODE_MASK)
#define ETIMER_CCCTRL_CLC1_MASK                  0x1C00u
#define ETIMER_CCCTRL_CLC1_SHIFT                 10u
#define ETIMER_CCCTRL_CLC1_WIDTH                 3u
#define ETIMER_CCCTRL_CLC1(x)                    (((uint16_t)(((uint16_t)(x))<<ETIMER_CCCTRL_CLC1_SHIFT))&ETIMER_CCCTRL_CLC1_MASK)
#define ETIMER_CCCTRL_CLC2_MASK                  0xE000u
#define ETIMER_CCCTRL_CLC2_SHIFT                 13u
#define ETIMER_CCCTRL_CLC2_WIDTH                 3u
#define ETIMER_CCCTRL_CLC2(x)                    (((uint16_t)(((uint16_t)(x))<<ETIMER_CCCTRL_CLC2_SHIFT))&ETIMER_CCCTRL_CLC2_MASK)
/* FILT Bit Fields */
#define ETIMER_FILT_FILT_PER_MASK                0xFFu
#define ETIMER_FILT_FILT_PER_SHIFT               0u
#define ETIMER_FILT_FILT_PER_WIDTH               8u
#define ETIMER_FILT_FILT_PER(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_FILT_FILT_PER_SHIFT))&ETIMER_FILT_FILT_PER_MASK)
#define ETIMER_FILT_FILT_CNT_MASK                0x700u
#define ETIMER_FILT_FILT_CNT_SHIFT               8u
#define ETIMER_FILT_FILT_CNT_WIDTH               3u
#define ETIMER_FILT_FILT_CNT(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_FILT_FILT_CNT_SHIFT))&ETIMER_FILT_FILT_CNT_MASK)
/* WDTOL Bit Fields */
#define ETIMER_WDTOL_WDTOL_MASK                  0xFFFFu
#define ETIMER_WDTOL_WDTOL_SHIFT                 0u
#define ETIMER_WDTOL_WDTOL_WIDTH                 16u
#define ETIMER_WDTOL_WDTOL(x)                    (((uint16_t)(((uint16_t)(x))<<ETIMER_WDTOL_WDTOL_SHIFT))&ETIMER_WDTOL_WDTOL_MASK)
/* WDTOH Bit Fields */
#define ETIMER_WDTOH_WDTOH_MASK                  0xFFFFu
#define ETIMER_WDTOH_WDTOH_SHIFT                 0u
#define ETIMER_WDTOH_WDTOH_WIDTH                 16u
#define ETIMER_WDTOH_WDTOH(x)                    (((uint16_t)(((uint16_t)(x))<<ETIMER_WDTOH_WDTOH_SHIFT))&ETIMER_WDTOH_WDTOH_MASK)
/* ENBL Bit Fields */
#define ETIMER_ENBL_ENBL_MASK                    0x3Fu
#define ETIMER_ENBL_ENBL_SHIFT                   0u
#define ETIMER_ENBL_ENBL_WIDTH                   6u
#define ETIMER_ENBL_ENBL(x)                      (((uint16_t)(((uint16_t)(x))<<ETIMER_ENBL_ENBL_SHIFT))&ETIMER_ENBL_ENBL_MASK)
/* DREQ Bit Fields */
#define ETIMER_DREQ_DREQ0_MASK                   0x1Fu
#define ETIMER_DREQ_DREQ0_SHIFT                  0u
#define ETIMER_DREQ_DREQ0_WIDTH                  5u
#define ETIMER_DREQ_DREQ0(x)                     (((uint16_t)(((uint16_t)(x))<<ETIMER_DREQ_DREQ0_SHIFT))&ETIMER_DREQ_DREQ0_MASK)
#define ETIMER_DREQ_DREQ3_MASK                   0x1Fu
#define ETIMER_DREQ_DREQ3_SHIFT                  0u
#define ETIMER_DREQ_DREQ3_WIDTH                  5u
#define ETIMER_DREQ_DREQ3(x)                     (((uint16_t)(((uint16_t)(x))<<ETIMER_DREQ_DREQ3_SHIFT))&ETIMER_DREQ_DREQ3_MASK)
#define ETIMER_DREQ_DREQ1_MASK                   0x1Fu
#define ETIMER_DREQ_DREQ1_SHIFT                  0u
#define ETIMER_DREQ_DREQ1_WIDTH                  5u
#define ETIMER_DREQ_DREQ1(x)                     (((uint16_t)(((uint16_t)(x))<<ETIMER_DREQ_DREQ1_SHIFT))&ETIMER_DREQ_DREQ1_MASK)
#define ETIMER_DREQ_DREQ2_MASK                   0x1Fu
#define ETIMER_DREQ_DREQ2_SHIFT                  0u
#define ETIMER_DREQ_DREQ2_WIDTH                  5u
#define ETIMER_DREQ_DREQ2(x)                     (((uint16_t)(((uint16_t)(x))<<ETIMER_DREQ_DREQ2_SHIFT))&ETIMER_DREQ_DREQ2_MASK)
#define ETIMER_DREQ_DREQ1_EN_MASK                0x8000u
#define ETIMER_DREQ_DREQ1_EN_SHIFT               15u
#define ETIMER_DREQ_DREQ1_EN_WIDTH               1u
#define ETIMER_DREQ_DREQ1_EN(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_DREQ_DREQ1_EN_SHIFT))&ETIMER_DREQ_DREQ1_EN_MASK)
#define ETIMER_DREQ_DREQ2_EN_MASK                0x8000u
#define ETIMER_DREQ_DREQ2_EN_SHIFT               15u
#define ETIMER_DREQ_DREQ2_EN_WIDTH               1u
#define ETIMER_DREQ_DREQ2_EN(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_DREQ_DREQ2_EN_SHIFT))&ETIMER_DREQ_DREQ2_EN_MASK)
#define ETIMER_DREQ_DREQ0_EN_MASK                0x8000u
#define ETIMER_DREQ_DREQ0_EN_SHIFT               15u
#define ETIMER_DREQ_DREQ0_EN_WIDTH               1u
#define ETIMER_DREQ_DREQ0_EN(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_DREQ_DREQ0_EN_SHIFT))&ETIMER_DREQ_DREQ0_EN_MASK)
#define ETIMER_DREQ_DREQ3_EN_MASK                0x8000u
#define ETIMER_DREQ_DREQ3_EN_SHIFT               15u
#define ETIMER_DREQ_DREQ3_EN_WIDTH               1u
#define ETIMER_DREQ_DREQ3_EN(x)                  (((uint16_t)(((uint16_t)(x))<<ETIMER_DREQ_DREQ3_EN_SHIFT))&ETIMER_DREQ_DREQ3_EN_MASK)

/*!
 * @}
 */ /* end of group ETIMER_Register_Masks */


/*!
 * @}
 */ /* end of group ETIMER_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FCCU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FCCU_Peripheral_Access_Layer FCCU Peripheral Access Layer
 * @{
 */


/** FCCU - Size of Registers Arrays */
#define FCCU_NCF_CFG_COUNT                       3u
#define FCCU_NCFS_CFG_COUNT                      5u
#define FCCU_NCF_S_COUNT                         3u
#define FCCU_NCF_E_COUNT                         3u
#define FCCU_NCF_TOE_COUNT                       3u
#define FCCU_IRQ_ALARM_EN_COUNT                  3u
#define FCCU_NMI_EN_COUNT                        3u
#define FCCU_EOUT_SIG_EN_COUNT                   3u

/** FCCU - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTRL;                              /**< Control, offset: 0x0 */
  __O  uint32_t CTRLK;                             /**< Control Key, offset: 0x4 */
  __IO uint32_t CFG;                               /**< Configuration, offset: 0x8 */
       uint8_t RESERVED_0[16];
  __IO uint32_t NCF_CFG[FCCU_NCF_CFG_COUNT];       /**< Noncritical Fault Configuration, array offset: 0x1C, array step: 0x4 */
       uint8_t RESERVED_1[36];
  __IO uint32_t NCFS_CFG[FCCU_NCFS_CFG_COUNT];     /**< Noncritical Fault State Configuration, array offset: 0x4C, array step: 0x4 */
       uint8_t RESERVED_2[32];
  __IO uint32_t NCF_S[FCCU_NCF_S_COUNT];           /**< Noncritical Fault Status, array offset: 0x80, array step: 0x4 */
       uint8_t RESERVED_3[4];
  __O  uint32_t NCFK;                              /**< Noncritical Fault Key, offset: 0x90 */
  __IO uint32_t NCF_E[FCCU_NCF_E_COUNT];           /**< Noncritical Fault Enable, array offset: 0x94, array step: 0x4 */
       uint8_t RESERVED_4[4];
  __IO uint32_t NCF_TOE[FCCU_NCF_TOE_COUNT];       /**< Noncritical Fault Timeout Enable, array offset: 0xA4, array step: 0x4 */
       uint8_t RESERVED_5[4];
  __IO uint32_t NCF_TO;                            /**< Noncritical Fault Timeout, offset: 0xB4 */
  __IO uint32_t CFG_TO;                            /**< Configuration-State Timeout, offset: 0xB8 */
  __IO uint32_t EINOUT;                            /**< IO Control, offset: 0xBC */
  __I  uint32_t STAT;                              /**< Status, offset: 0xC0 */
  __I  uint32_t N2AF_STATUS;                       /**< NA Freeze Status, offset: 0xC4 */
  __IO uint32_t A2FF_STATUS;                       /**< AF Freeze Status, offset: 0xC8 */
  __IO uint32_t N2FF_STATUS;                       /**< NF Freeze Status, offset: 0xCC */
  __I  uint32_t F2A_STATUS;                        /**< FA Freeze Status, offset: 0xD0 */
       uint8_t RESERVED_6[8];
  __IO uint32_t NCFF;                              /**< Noncritical Fault Fake, offset: 0xDC */
  __IO uint32_t IRQ_STAT;                          /**< IRQ Status, offset: 0xE0 */
  __IO uint32_t IRQ_EN;                            /**< IRQ Enable, offset: 0xE4 */
  __I  uint32_t XTMR;                              /**< XTMR, offset: 0xE8 */
  __I  uint32_t MCS;                               /**< Mode Controller Status, offset: 0xEC */
  __IO uint32_t TRANS_LOCK;                        /**< Transient Configuration Lock, offset: 0xF0 */
  __IO uint32_t PERMNT_LOCK;                       /**< Permanent Configuration Lock, offset: 0xF4 */
  __IO uint32_t DELTA_T;                           /**< Delta T, offset: 0xF8 */
  __IO uint32_t IRQ_ALARM_EN[FCCU_IRQ_ALARM_EN_COUNT]; /**< IRQ Alarm Enable, array offset: 0xFC, array step: 0x4 */
       uint8_t RESERVED_7[4];
  __IO uint32_t NMI_EN[FCCU_NMI_EN_COUNT];         /**< NMI Enable, array offset: 0x10C, array step: 0x4 */
       uint8_t RESERVED_8[4];
  __IO uint32_t EOUT_SIG_EN[FCCU_EOUT_SIG_EN_COUNT]; /**< Bistable Fault-Output (EOUT) Mode Signaling Enable, array offset: 0x11C, array step: 0x4 */
} FCCU_Type, *FCCU_MemMapPtr;

 /** Number of instances of the FCCU module. */
#define FCCU_INSTANCE_COUNT                      (1u)


/* FCCU - Peripheral instance base addresses */
/** Peripheral FCCU base address */
#define FCCU_BASE                                (0xFBF58000u)
/** Peripheral FCCU base pointer */
#define FCCU                                     ((FCCU_Type *)FCCU_BASE)
/** Array initializer of FCCU peripheral base addresses */
#define FCCU_BASE_ADDRS                          { FCCU_BASE }
/** Array initializer of FCCU peripheral base pointers */
#define FCCU_BASE_PTRS                           { FCCU }

/* ----------------------------------------------------------------------------
   -- FCCU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FCCU_Register_Masks FCCU Register Masks
 * @{
 */

/* CTRL Bit Fields */
#define FCCU_CTRL_OPR_MASK                       0x1Fu
#define FCCU_CTRL_OPR_SHIFT                      0u
#define FCCU_CTRL_OPR_WIDTH                      5u
#define FCCU_CTRL_OPR(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_CTRL_OPR_SHIFT))&FCCU_CTRL_OPR_MASK)
#define FCCU_CTRL_OPS_MASK                       0xC0u
#define FCCU_CTRL_OPS_SHIFT                      6u
#define FCCU_CTRL_OPS_WIDTH                      2u
#define FCCU_CTRL_OPS(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_CTRL_OPS_SHIFT))&FCCU_CTRL_OPS_MASK)
#define FCCU_CTRL_DEBUG_MASK                     0x200u
#define FCCU_CTRL_DEBUG_SHIFT                    9u
#define FCCU_CTRL_DEBUG_WIDTH                    1u
#define FCCU_CTRL_DEBUG(x)                       (((uint32_t)(((uint32_t)(x))<<FCCU_CTRL_DEBUG_SHIFT))&FCCU_CTRL_DEBUG_MASK)
#define FCCU_CTRL_FILTER_WIDTH_MASK              0x60000000u
#define FCCU_CTRL_FILTER_WIDTH_SHIFT             29u
#define FCCU_CTRL_FILTER_WIDTH_WIDTH             2u
#define FCCU_CTRL_FILTER_WIDTH(x)                (((uint32_t)(((uint32_t)(x))<<FCCU_CTRL_FILTER_WIDTH_SHIFT))&FCCU_CTRL_FILTER_WIDTH_MASK)
#define FCCU_CTRL_FILTER_BYPASS_MASK             0x80000000u
#define FCCU_CTRL_FILTER_BYPASS_SHIFT            31u
#define FCCU_CTRL_FILTER_BYPASS_WIDTH            1u
#define FCCU_CTRL_FILTER_BYPASS(x)               (((uint32_t)(((uint32_t)(x))<<FCCU_CTRL_FILTER_BYPASS_SHIFT))&FCCU_CTRL_FILTER_BYPASS_MASK)
/* CTRLK Bit Fields */
#define FCCU_CTRLK_CTRLK_MASK                    0xFFFFFFFFu
#define FCCU_CTRLK_CTRLK_SHIFT                   0u
#define FCCU_CTRLK_CTRLK_WIDTH                   32u
#define FCCU_CTRLK_CTRLK(x)                      (((uint32_t)(((uint32_t)(x))<<FCCU_CTRLK_CTRLK_SHIFT))&FCCU_CTRLK_CTRLK_MASK)
/* CFG Bit Fields */
#define FCCU_CFG_FOP_MASK                        0x3Fu
#define FCCU_CFG_FOP_SHIFT                       0u
#define FCCU_CFG_FOP_WIDTH                       6u
#define FCCU_CFG_FOP(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_FOP_SHIFT))&FCCU_CFG_FOP_MASK)
#define FCCU_CFG_FOM_MASK                        0x1C0u
#define FCCU_CFG_FOM_SHIFT                       6u
#define FCCU_CFG_FOM_WIDTH                       3u
#define FCCU_CFG_FOM(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_FOM_SHIFT))&FCCU_CFG_FOM_MASK)
#define FCCU_CFG_PS_MASK                         0x200u
#define FCCU_CFG_PS_SHIFT                        9u
#define FCCU_CFG_PS_WIDTH                        1u
#define FCCU_CFG_PS(x)                           (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_PS_SHIFT))&FCCU_CFG_PS_MASK)
#define FCCU_CFG_SM_MASK                         0x400u
#define FCCU_CFG_SM_SHIFT                        10u
#define FCCU_CFG_SM_WIDTH                        1u
#define FCCU_CFG_SM(x)                           (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_SM_SHIFT))&FCCU_CFG_SM_MASK)
#define FCCU_CFG_FOPE_MASK                       0x8000u
#define FCCU_CFG_FOPE_SHIFT                      15u
#define FCCU_CFG_FOPE_WIDTH                      1u
#define FCCU_CFG_FOPE(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_FOPE_SHIFT))&FCCU_CFG_FOPE_MASK)
#define FCCU_CFG_FCCU_SET_CLEAR_MASK             0xC00000u
#define FCCU_CFG_FCCU_SET_CLEAR_SHIFT            22u
#define FCCU_CFG_FCCU_SET_CLEAR_WIDTH            2u
#define FCCU_CFG_FCCU_SET_CLEAR(x)               (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_FCCU_SET_CLEAR_SHIFT))&FCCU_CFG_FCCU_SET_CLEAR_MASK)
#define FCCU_CFG_FCCU_SET_AFTER_RESET_MASK       0x1000000u
#define FCCU_CFG_FCCU_SET_AFTER_RESET_SHIFT      24u
#define FCCU_CFG_FCCU_SET_AFTER_RESET_WIDTH      1u
#define FCCU_CFG_FCCU_SET_AFTER_RESET(x)         (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_FCCU_SET_AFTER_RESET_SHIFT))&FCCU_CFG_FCCU_SET_AFTER_RESET_MASK)
/* NCF_CFG Bit Fields */
#define FCCU_NCF_CFG_NCFCx_MASK                  0xFFFFFFFFu
#define FCCU_NCF_CFG_NCFCx_SHIFT                 0u
#define FCCU_NCF_CFG_NCFCx_WIDTH                 32u
#define FCCU_NCF_CFG_NCFCx(x)                    (((uint32_t)(((uint32_t)(x))<<FCCU_NCF_CFG_NCFCx_SHIFT))&FCCU_NCF_CFG_NCFCx_MASK)
/* NCFS_CFG Bit Fields */
#define FCCU_NCFS_CFG_NCFSCx_MASK                0xFFFFFFFFu
#define FCCU_NCFS_CFG_NCFSCx_SHIFT               0u
#define FCCU_NCFS_CFG_NCFSCx_WIDTH               32u
#define FCCU_NCFS_CFG_NCFSCx(x)                  (((uint32_t)(((uint32_t)(x))<<FCCU_NCFS_CFG_NCFSCx_SHIFT))&FCCU_NCFS_CFG_NCFSCx_MASK)
/* NCF_S Bit Fields */
#define FCCU_NCF_S_NCFSx_MASK                    0xFFFFFFFFu
#define FCCU_NCF_S_NCFSx_SHIFT                   0u
#define FCCU_NCF_S_NCFSx_WIDTH                   32u
#define FCCU_NCF_S_NCFSx(x)                      (((uint32_t)(((uint32_t)(x))<<FCCU_NCF_S_NCFSx_SHIFT))&FCCU_NCF_S_NCFSx_MASK)
/* NCFK Bit Fields */
#define FCCU_NCFK_NCFK_MASK                      0xFFFFFFFFu
#define FCCU_NCFK_NCFK_SHIFT                     0u
#define FCCU_NCFK_NCFK_WIDTH                     32u
#define FCCU_NCFK_NCFK(x)                        (((uint32_t)(((uint32_t)(x))<<FCCU_NCFK_NCFK_SHIFT))&FCCU_NCFK_NCFK_MASK)
/* NCF_E Bit Fields */
#define FCCU_NCF_E_NCFEx_MASK                    0xFFFFFFFFu
#define FCCU_NCF_E_NCFEx_SHIFT                   0u
#define FCCU_NCF_E_NCFEx_WIDTH                   32u
#define FCCU_NCF_E_NCFEx(x)                      (((uint32_t)(((uint32_t)(x))<<FCCU_NCF_E_NCFEx_SHIFT))&FCCU_NCF_E_NCFEx_MASK)
/* NCF_TOE Bit Fields */
#define FCCU_NCF_TOE_NCFTOEx_MASK                0xFFFFFFFFu
#define FCCU_NCF_TOE_NCFTOEx_SHIFT               0u
#define FCCU_NCF_TOE_NCFTOEx_WIDTH               32u
#define FCCU_NCF_TOE_NCFTOEx(x)                  (((uint32_t)(((uint32_t)(x))<<FCCU_NCF_TOE_NCFTOEx_SHIFT))&FCCU_NCF_TOE_NCFTOEx_MASK)
/* NCF_TO Bit Fields */
#define FCCU_NCF_TO_TO_MASK                      0xFFFFFFFFu
#define FCCU_NCF_TO_TO_SHIFT                     0u
#define FCCU_NCF_TO_TO_WIDTH                     32u
#define FCCU_NCF_TO_TO(x)                        (((uint32_t)(((uint32_t)(x))<<FCCU_NCF_TO_TO_SHIFT))&FCCU_NCF_TO_TO_MASK)
/* CFG_TO Bit Fields */
#define FCCU_CFG_TO_TO_MASK                      0x7u
#define FCCU_CFG_TO_TO_SHIFT                     0u
#define FCCU_CFG_TO_TO_WIDTH                     3u
#define FCCU_CFG_TO_TO(x)                        (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_TO_TO_SHIFT))&FCCU_CFG_TO_TO_MASK)
/* EINOUT Bit Fields */
#define FCCU_EINOUT_EOUT0_MASK                   0x1u
#define FCCU_EINOUT_EOUT0_SHIFT                  0u
#define FCCU_EINOUT_EOUT0_WIDTH                  1u
#define FCCU_EINOUT_EOUT0(x)                     (((uint32_t)(((uint32_t)(x))<<FCCU_EINOUT_EOUT0_SHIFT))&FCCU_EINOUT_EOUT0_MASK)
#define FCCU_EINOUT_EOUT1_MASK                   0x2u
#define FCCU_EINOUT_EOUT1_SHIFT                  1u
#define FCCU_EINOUT_EOUT1_WIDTH                  1u
#define FCCU_EINOUT_EOUT1(x)                     (((uint32_t)(((uint32_t)(x))<<FCCU_EINOUT_EOUT1_SHIFT))&FCCU_EINOUT_EOUT1_MASK)
#define FCCU_EINOUT_EIN0_MASK                    0x10u
#define FCCU_EINOUT_EIN0_SHIFT                   4u
#define FCCU_EINOUT_EIN0_WIDTH                   1u
#define FCCU_EINOUT_EIN0(x)                      (((uint32_t)(((uint32_t)(x))<<FCCU_EINOUT_EIN0_SHIFT))&FCCU_EINOUT_EIN0_MASK)
#define FCCU_EINOUT_EIN1_MASK                    0x20u
#define FCCU_EINOUT_EIN1_SHIFT                   5u
#define FCCU_EINOUT_EIN1_WIDTH                   1u
#define FCCU_EINOUT_EIN1(x)                      (((uint32_t)(((uint32_t)(x))<<FCCU_EINOUT_EIN1_SHIFT))&FCCU_EINOUT_EIN1_MASK)
/* STAT Bit Fields */
#define FCCU_STAT_STATUS_MASK                    0x7u
#define FCCU_STAT_STATUS_SHIFT                   0u
#define FCCU_STAT_STATUS_WIDTH                   3u
#define FCCU_STAT_STATUS(x)                      (((uint32_t)(((uint32_t)(x))<<FCCU_STAT_STATUS_SHIFT))&FCCU_STAT_STATUS_MASK)
#define FCCU_STAT_ESTAT_MASK                     0x8u
#define FCCU_STAT_ESTAT_SHIFT                    3u
#define FCCU_STAT_ESTAT_WIDTH                    1u
#define FCCU_STAT_ESTAT(x)                       (((uint32_t)(((uint32_t)(x))<<FCCU_STAT_ESTAT_SHIFT))&FCCU_STAT_ESTAT_MASK)
#define FCCU_STAT_PhysicErrorPin_MASK            0x30u
#define FCCU_STAT_PhysicErrorPin_SHIFT           4u
#define FCCU_STAT_PhysicErrorPin_WIDTH           2u
#define FCCU_STAT_PhysicErrorPin(x)              (((uint32_t)(((uint32_t)(x))<<FCCU_STAT_PhysicErrorPin_SHIFT))&FCCU_STAT_PhysicErrorPin_MASK)
/* N2AF_STATUS Bit Fields */
#define FCCU_N2AF_STATUS_NAFS_MASK               0xFFu
#define FCCU_N2AF_STATUS_NAFS_SHIFT              0u
#define FCCU_N2AF_STATUS_NAFS_WIDTH              8u
#define FCCU_N2AF_STATUS_NAFS(x)                 (((uint32_t)(((uint32_t)(x))<<FCCU_N2AF_STATUS_NAFS_SHIFT))&FCCU_N2AF_STATUS_NAFS_MASK)
/* A2FF_STATUS Bit Fields */
#define FCCU_A2FF_STATUS_AFFS_MASK               0xFFu
#define FCCU_A2FF_STATUS_AFFS_SHIFT              0u
#define FCCU_A2FF_STATUS_AFFS_WIDTH              8u
#define FCCU_A2FF_STATUS_AFFS(x)                 (((uint32_t)(((uint32_t)(x))<<FCCU_A2FF_STATUS_AFFS_SHIFT))&FCCU_A2FF_STATUS_AFFS_MASK)
#define FCCU_A2FF_STATUS_AF_SRC_MASK             0x300u
#define FCCU_A2FF_STATUS_AF_SRC_SHIFT            8u
#define FCCU_A2FF_STATUS_AF_SRC_WIDTH            2u
#define FCCU_A2FF_STATUS_AF_SRC(x)               (((uint32_t)(((uint32_t)(x))<<FCCU_A2FF_STATUS_AF_SRC_SHIFT))&FCCU_A2FF_STATUS_AF_SRC_MASK)
/* N2FF_STATUS Bit Fields */
#define FCCU_N2FF_STATUS_NFFS_MASK               0xFFu
#define FCCU_N2FF_STATUS_NFFS_SHIFT              0u
#define FCCU_N2FF_STATUS_NFFS_WIDTH              8u
#define FCCU_N2FF_STATUS_NFFS(x)                 (((uint32_t)(((uint32_t)(x))<<FCCU_N2FF_STATUS_NFFS_SHIFT))&FCCU_N2FF_STATUS_NFFS_MASK)
#define FCCU_N2FF_STATUS_NF_SRC_MASK             0x300u
#define FCCU_N2FF_STATUS_NF_SRC_SHIFT            8u
#define FCCU_N2FF_STATUS_NF_SRC_WIDTH            2u
#define FCCU_N2FF_STATUS_NF_SRC(x)               (((uint32_t)(((uint32_t)(x))<<FCCU_N2FF_STATUS_NF_SRC_SHIFT))&FCCU_N2FF_STATUS_NF_SRC_MASK)
/* F2A_STATUS Bit Fields */
#define FCCU_F2A_STATUS_FAFS_MASK                0x1FFu
#define FCCU_F2A_STATUS_FAFS_SHIFT               0u
#define FCCU_F2A_STATUS_FAFS_WIDTH               9u
#define FCCU_F2A_STATUS_FAFS(x)                  (((uint32_t)(((uint32_t)(x))<<FCCU_F2A_STATUS_FAFS_SHIFT))&FCCU_F2A_STATUS_FAFS_MASK)
/* NCFF Bit Fields */
#define FCCU_NCFF_FNCFC_MASK                     0x7Fu
#define FCCU_NCFF_FNCFC_SHIFT                    0u
#define FCCU_NCFF_FNCFC_WIDTH                    7u
#define FCCU_NCFF_FNCFC(x)                       (((uint32_t)(((uint32_t)(x))<<FCCU_NCFF_FNCFC_SHIFT))&FCCU_NCFF_FNCFC_MASK)
/* IRQ_STAT Bit Fields */
#define FCCU_IRQ_STAT_CFG_TO_STAT_MASK           0x1u
#define FCCU_IRQ_STAT_CFG_TO_STAT_SHIFT          0u
#define FCCU_IRQ_STAT_CFG_TO_STAT_WIDTH          1u
#define FCCU_IRQ_STAT_CFG_TO_STAT(x)             (((uint32_t)(((uint32_t)(x))<<FCCU_IRQ_STAT_CFG_TO_STAT_SHIFT))&FCCU_IRQ_STAT_CFG_TO_STAT_MASK)
#define FCCU_IRQ_STAT_ALRM_STAT_MASK             0x2u
#define FCCU_IRQ_STAT_ALRM_STAT_SHIFT            1u
#define FCCU_IRQ_STAT_ALRM_STAT_WIDTH            1u
#define FCCU_IRQ_STAT_ALRM_STAT(x)               (((uint32_t)(((uint32_t)(x))<<FCCU_IRQ_STAT_ALRM_STAT_SHIFT))&FCCU_IRQ_STAT_ALRM_STAT_MASK)
#define FCCU_IRQ_STAT_NMI_STAT_MASK              0x4u
#define FCCU_IRQ_STAT_NMI_STAT_SHIFT             2u
#define FCCU_IRQ_STAT_NMI_STAT_WIDTH             1u
#define FCCU_IRQ_STAT_NMI_STAT(x)                (((uint32_t)(((uint32_t)(x))<<FCCU_IRQ_STAT_NMI_STAT_SHIFT))&FCCU_IRQ_STAT_NMI_STAT_MASK)
/* IRQ_EN Bit Fields */
#define FCCU_IRQ_EN_CFG_TO_IEN_MASK              0x1u
#define FCCU_IRQ_EN_CFG_TO_IEN_SHIFT             0u
#define FCCU_IRQ_EN_CFG_TO_IEN_WIDTH             1u
#define FCCU_IRQ_EN_CFG_TO_IEN(x)                (((uint32_t)(((uint32_t)(x))<<FCCU_IRQ_EN_CFG_TO_IEN_SHIFT))&FCCU_IRQ_EN_CFG_TO_IEN_MASK)
/* XTMR Bit Fields */
#define FCCU_XTMR_XTMR_MASK                      0xFFFFFFFFu
#define FCCU_XTMR_XTMR_SHIFT                     0u
#define FCCU_XTMR_XTMR_WIDTH                     32u
#define FCCU_XTMR_XTMR(x)                        (((uint32_t)(((uint32_t)(x))<<FCCU_XTMR_XTMR_SHIFT))&FCCU_XTMR_XTMR_MASK)
/* MCS Bit Fields */
#define FCCU_MCS_MCS0_MASK                       0xFu
#define FCCU_MCS_MCS0_SHIFT                      0u
#define FCCU_MCS_MCS0_WIDTH                      4u
#define FCCU_MCS_MCS0(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_MCS0_SHIFT))&FCCU_MCS_MCS0_MASK)
#define FCCU_MCS_FS0_MASK                        0x40u
#define FCCU_MCS_FS0_SHIFT                       6u
#define FCCU_MCS_FS0_WIDTH                       1u
#define FCCU_MCS_FS0(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_FS0_SHIFT))&FCCU_MCS_FS0_MASK)
#define FCCU_MCS_VL0_MASK                        0x80u
#define FCCU_MCS_VL0_SHIFT                       7u
#define FCCU_MCS_VL0_WIDTH                       1u
#define FCCU_MCS_VL0(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_VL0_SHIFT))&FCCU_MCS_VL0_MASK)
#define FCCU_MCS_MCS1_MASK                       0xF00u
#define FCCU_MCS_MCS1_SHIFT                      8u
#define FCCU_MCS_MCS1_WIDTH                      4u
#define FCCU_MCS_MCS1(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_MCS1_SHIFT))&FCCU_MCS_MCS1_MASK)
#define FCCU_MCS_FS1_MASK                        0x4000u
#define FCCU_MCS_FS1_SHIFT                       14u
#define FCCU_MCS_FS1_WIDTH                       1u
#define FCCU_MCS_FS1(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_FS1_SHIFT))&FCCU_MCS_FS1_MASK)
#define FCCU_MCS_VL1_MASK                        0x8000u
#define FCCU_MCS_VL1_SHIFT                       15u
#define FCCU_MCS_VL1_WIDTH                       1u
#define FCCU_MCS_VL1(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_VL1_SHIFT))&FCCU_MCS_VL1_MASK)
#define FCCU_MCS_MCS2_MASK                       0xF0000u
#define FCCU_MCS_MCS2_SHIFT                      16u
#define FCCU_MCS_MCS2_WIDTH                      4u
#define FCCU_MCS_MCS2(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_MCS2_SHIFT))&FCCU_MCS_MCS2_MASK)
#define FCCU_MCS_FS2_MASK                        0x400000u
#define FCCU_MCS_FS2_SHIFT                       22u
#define FCCU_MCS_FS2_WIDTH                       1u
#define FCCU_MCS_FS2(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_FS2_SHIFT))&FCCU_MCS_FS2_MASK)
#define FCCU_MCS_VL2_MASK                        0x800000u
#define FCCU_MCS_VL2_SHIFT                       23u
#define FCCU_MCS_VL2_WIDTH                       1u
#define FCCU_MCS_VL2(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_VL2_SHIFT))&FCCU_MCS_VL2_MASK)
#define FCCU_MCS_MCS3_MASK                       0xF000000u
#define FCCU_MCS_MCS3_SHIFT                      24u
#define FCCU_MCS_MCS3_WIDTH                      4u
#define FCCU_MCS_MCS3(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_MCS3_SHIFT))&FCCU_MCS_MCS3_MASK)
#define FCCU_MCS_FS3_MASK                        0x40000000u
#define FCCU_MCS_FS3_SHIFT                       30u
#define FCCU_MCS_FS3_WIDTH                       1u
#define FCCU_MCS_FS3(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_FS3_SHIFT))&FCCU_MCS_FS3_MASK)
#define FCCU_MCS_VL3_MASK                        0x80000000u
#define FCCU_MCS_VL3_SHIFT                       31u
#define FCCU_MCS_VL3_WIDTH                       1u
#define FCCU_MCS_VL3(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_VL3_SHIFT))&FCCU_MCS_VL3_MASK)
/* TRANS_LOCK Bit Fields */
#define FCCU_TRANS_LOCK_TRANSKEY_MASK            0x1FFu
#define FCCU_TRANS_LOCK_TRANSKEY_SHIFT           0u
#define FCCU_TRANS_LOCK_TRANSKEY_WIDTH           9u
#define FCCU_TRANS_LOCK_TRANSKEY(x)              (((uint32_t)(((uint32_t)(x))<<FCCU_TRANS_LOCK_TRANSKEY_SHIFT))&FCCU_TRANS_LOCK_TRANSKEY_MASK)
/* PERMNT_LOCK Bit Fields */
#define FCCU_PERMNT_LOCK_PERMNTKEY_MASK          0x1FFu
#define FCCU_PERMNT_LOCK_PERMNTKEY_SHIFT         0u
#define FCCU_PERMNT_LOCK_PERMNTKEY_WIDTH         9u
#define FCCU_PERMNT_LOCK_PERMNTKEY(x)            (((uint32_t)(((uint32_t)(x))<<FCCU_PERMNT_LOCK_PERMNTKEY_SHIFT))&FCCU_PERMNT_LOCK_PERMNTKEY_MASK)
/* DELTA_T Bit Fields */
#define FCCU_DELTA_T_DELTA_T_MASK                0x3FFFu
#define FCCU_DELTA_T_DELTA_T_SHIFT               0u
#define FCCU_DELTA_T_DELTA_T_WIDTH               14u
#define FCCU_DELTA_T_DELTA_T(x)                  (((uint32_t)(((uint32_t)(x))<<FCCU_DELTA_T_DELTA_T_SHIFT))&FCCU_DELTA_T_DELTA_T_MASK)
/* IRQ_ALARM_EN Bit Fields */
#define FCCU_IRQ_ALARM_EN_IRQENx_MASK            0xFFFFFFFFu
#define FCCU_IRQ_ALARM_EN_IRQENx_SHIFT           0u
#define FCCU_IRQ_ALARM_EN_IRQENx_WIDTH           32u
#define FCCU_IRQ_ALARM_EN_IRQENx(x)              (((uint32_t)(((uint32_t)(x))<<FCCU_IRQ_ALARM_EN_IRQENx_SHIFT))&FCCU_IRQ_ALARM_EN_IRQENx_MASK)
/* NMI_EN Bit Fields */
#define FCCU_NMI_EN_NMIENx_MASK                  0xFFFFFFFFu
#define FCCU_NMI_EN_NMIENx_SHIFT                 0u
#define FCCU_NMI_EN_NMIENx_WIDTH                 32u
#define FCCU_NMI_EN_NMIENx(x)                    (((uint32_t)(((uint32_t)(x))<<FCCU_NMI_EN_NMIENx_SHIFT))&FCCU_NMI_EN_NMIENx_MASK)
/* EOUT_SIG_EN Bit Fields */
#define FCCU_EOUT_SIG_EN_EOUTENx_MASK            0xFFFFFFFFu
#define FCCU_EOUT_SIG_EN_EOUTENx_SHIFT           0u
#define FCCU_EOUT_SIG_EN_EOUTENx_WIDTH           32u
#define FCCU_EOUT_SIG_EN_EOUTENx(x)              (((uint32_t)(((uint32_t)(x))<<FCCU_EOUT_SIG_EN_EOUTENx_SHIFT))&FCCU_EOUT_SIG_EN_EOUTENx_MASK)

/*!
 * @}
 */ /* end of group FCCU_Register_Masks */


/*!
 * @}
 */ /* end of group FCCU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FR_Peripheral_Access_Layer FR Peripheral Access Layer
 * @{
 */


/** FR - Size of Registers Arrays */
#define FR_NMVR_COUNT                            6u
#define FR_SSR_COUNT                             8u
#define FR_SSCR_COUNT                            4u
#define FR_MB_COUNT                              64u
#define FR_MBDOR_COUNT                           68u
#define FR_LEETR_COUNT                           6u

/** FR - Register Layout Typedef */
typedef struct {
  __I  uint16_t MVR;                               /**< Module Version Register, offset: 0x0 */
  __IO uint16_t MCR;                               /**< Module Configuration Register, offset: 0x2 */
  __IO uint16_t SYMBADHR;                          /**< System Memory Base Address High Register, offset: 0x4 */
  __IO uint16_t SYMBADLR;                          /**< System Memory Base Address Low Register, offset: 0x6 */
  __IO uint16_t STBSCR;                            /**< Strobe Signal Control Register, offset: 0x8 */
       uint8_t RESERVED_0[2];
  __IO uint16_t MBDSR;                             /**< Message Buffer Data Size Register, offset: 0xC */
  __IO uint16_t MBSSUTR;                           /**< Message Buffer Segment Size and Utilization Register, offset: 0xE */
  __IO uint16_t PEDRAR;                            /**< PE DRAM Access Register, offset: 0x10 */
  __IO uint16_t PEDRDR;                            /**< PE DRAM Data Register, offset: 0x12 */
  __IO uint16_t POCR;                              /**< Protocol Operation Control Register, offset: 0x14 */
  __IO uint16_t GIFER;                             /**< Global Interrupt Flag and Enable Register, offset: 0x16 */
  __IO uint16_t PIFR0;                             /**< Protocol Interrupt Flag Register 0, offset: 0x18 */
  __IO uint16_t PIFR1;                             /**< Protocol Interrupt Flag Register 1, offset: 0x1A */
  __IO uint16_t PIER0;                             /**< Protocol Interrupt Enable Register 0, offset: 0x1C */
  __IO uint16_t PIER1;                             /**< Protocol Interrupt Enable Register 1, offset: 0x1E */
  __IO uint16_t CHIERFR;                           /**< CHI Error Flag Register, offset: 0x20 */
  __IO uint16_t MBIVEC;                            /**< Message Buffer Interrupt Vector Register, offset: 0x22 */
  __I  uint16_t CASERCR;                           /**< Channel A Status Error Counter Register, offset: 0x24 */
  __I  uint16_t CBSERCR;                           /**< Channel B Status Error Counter Register, offset: 0x26 */
  __I  uint16_t PSR0;                              /**< Protocol Status Register 0, offset: 0x28 */
  __IO uint16_t PSR1;                              /**< Protocol Status Register 1, offset: 0x2A */
  __I  uint16_t PSR2;                              /**< Protocol Status Register 2, offset: 0x2C */
  __IO uint16_t PSR3;                              /**< Protocol Status Register 3, offset: 0x2E */
  __I  uint16_t MTCTR;                             /**< Macrotick Counter Register, offset: 0x30 */
  __I  uint16_t CYCTR;                             /**< Cycle Counter Register, offset: 0x32 */
  __I  uint16_t SLTCTAR;                           /**< Slot Counter Channel A Register, offset: 0x34 */
  __I  uint16_t SLTCTBR;                           /**< Slot Counter Channel B Register, offset: 0x36 */
  __I  uint16_t RTCORVR;                           /**< Rate Correction Value Register, offset: 0x38 */
  __I  uint16_t OFCORVR;                           /**< Offset Correction Value Register, offset: 0x3A */
  __I  uint16_t CIFR;                              /**< Combined Interrupt Flag Register, offset: 0x3C */
  __IO uint16_t SYMATOR;                           /**< System Memory Access Time-Out Register, offset: 0x3E */
  __I  uint16_t SFCNTR;                            /**< Sync Frame Counter Register, offset: 0x40 */
  __IO uint16_t SFTOR;                             /**< Sync Frame Table Offset Register, offset: 0x42 */
  __IO uint16_t SFTCCSR;                           /**< Sync Frame Table Configuration, Control, Status Register, offset: 0x44 */
  __IO uint16_t SFIDRFR;                           /**< Sync Frame ID Rejection Filter Register, offset: 0x46 */
  __IO uint16_t SFIDAFVR;                          /**< Sync Frame ID Acceptance Filter Value Register, offset: 0x48 */
  __IO uint16_t SFIDAFMR;                          /**< Sync Frame ID Acceptance Filter Mask Register, offset: 0x4A */
  __I  uint16_t NMVR[FR_NMVR_COUNT];               /**< Network Management Vector Register, array offset: 0x4C, array step: 0x2 */
  __IO uint16_t NMVLR;                             /**< Network Management Vector Length Register, offset: 0x58 */
  __IO uint16_t TICCR;                             /**< Timer Configuration and Control Register, offset: 0x5A */
  __IO uint16_t TI1CYSR;                           /**< Timer 1 Cycle Set Register, offset: 0x5C */
  __IO uint16_t TI1MTOR;                           /**< Timer 1 Macrotick Offset Register, offset: 0x5E */
  union {                                          /* offset: 0x60 */
    __IO uint16_t ABS;                               /**< Timer 2 Configuration Register 0 (Absolute Timer Configuration), offset: 0x60 */
    __IO uint16_t REL;                               /**< Timer 2 Configuration Register 0 (Relative Timer Configuration), offset: 0x60 */
  } TI2CR0;
  union {                                          /* offset: 0x62 */
    __IO uint16_t ABS;                               /**< Timer 2 Configuration Register 1 (Absolute Timer Configuration), offset: 0x62 */
    __IO uint16_t REL;                               /**< Timer 2 Configuration Register 1 (Relative Timer Configuration), offset: 0x62 */
  } TI2CR1;
  __IO uint16_t SSSR;                              /**< Slot Status Selection Register, offset: 0x64 */
  __IO uint16_t SSCCR;                             /**< Slot Status Counter Condition Register, offset: 0x66 */
  __I  uint16_t SSR[FR_SSR_COUNT];                 /**< Slot Status Register, array offset: 0x68, array step: 0x2 */
  __I  uint16_t SSCR[FR_SSCR_COUNT];               /**< Slot Status Counter Register, array offset: 0x78, array step: 0x2 */
  __IO uint16_t MTSACFR;                           /**< MTS A Configuration Register, offset: 0x80 */
  __IO uint16_t MTSBCFR;                           /**< MTS B Configuration Register, offset: 0x82 */
  __IO uint16_t RSBIR;                             /**< Receive Shadow Buffer Index Register, offset: 0x84 */
  __IO uint16_t RFWMSR;                            /**< Receive FIFO Watermark and Selection Register, offset: 0x86 */
  __IO uint16_t RFSIR;                             /**< Receive FIFO Start Index Register, offset: 0x88 */
  __IO uint16_t RFDSR;                             /**< Receive FIFO Depth and Size Register, offset: 0x8A */
  __I  uint16_t RFARIR;                            /**< Receive FIFO A Read Index Register, offset: 0x8C */
  __I  uint16_t RFBRIR;                            /**< Receive FIFO B Read Index Register, offset: 0x8E */
  __IO uint16_t RFMIDAFVR;                         /**< Receive FIFO Message ID Acceptance Filter Value Register, offset: 0x90 */
  __IO uint16_t RFMIDAFMR;                         /**< Receive FIFO Message ID Acceptance Filter Mask Register, offset: 0x92 */
  __IO uint16_t RFFIDRFVR;                         /**< Receive FIFO Frame ID Rejection Filter Value Register, offset: 0x94 */
  __IO uint16_t RFFIDRFMR;                         /**< Receive FIFO Frame ID Rejection Filter Mask Register, offset: 0x96 */
  __IO uint16_t RFRFCFR;                           /**< Receive FIFO Range Filter Configuration Register, offset: 0x98 */
  __IO uint16_t RFRFCTR;                           /**< Receive FIFO Range Filter Control Register, offset: 0x9A */
  __I  uint16_t LDTXSLAR;                          /**< Last Dynamic Transmit Slot Channel A Register, offset: 0x9C */
  __I  uint16_t LDTXSLBR;                          /**< Last Dynamic Transmit Slot Channel B Register, offset: 0x9E */
  __IO uint16_t PCR0;                              /**< Protocol Configuration Register 0, offset: 0xA0 */
  __IO uint16_t PCR1;                              /**< Protocol Configuration Register 1, offset: 0xA2 */
  __IO uint16_t PCR2;                              /**< Protocol Configuration Register 2, offset: 0xA4 */
  __IO uint16_t PCR3;                              /**< Protocol Configuration Register 3, offset: 0xA6 */
  __IO uint16_t PCR4;                              /**< Protocol Configuration Register 4, offset: 0xA8 */
  __IO uint16_t PCR5;                              /**< Protocol Configuration Register 5, offset: 0xAA */
  __IO uint16_t PCR6;                              /**< Protocol Configuration Register 6, offset: 0xAC */
  __IO uint16_t PCR7;                              /**< Protocol Configuration Register 7, offset: 0xAE */
  __IO uint16_t PCR8;                              /**< Protocol Configuration Register 8, offset: 0xB0 */
  __IO uint16_t PCR9;                              /**< Protocol Configuration Register 9, offset: 0xB2 */
  __IO uint16_t PCR10;                             /**< Protocol Configuration Register 10, offset: 0xB4 */
  __IO uint16_t PCR11;                             /**< Protocol Configuration Register 11, offset: 0xB6 */
  __IO uint16_t PCR12;                             /**< Protocol Configuration Register 12, offset: 0xB8 */
  __IO uint16_t PCR13;                             /**< Protocol Configuration Register 13, offset: 0xBA */
  __IO uint16_t PCR14;                             /**< Protocol Configuration Register 14, offset: 0xBC */
  __IO uint16_t PCR15;                             /**< Protocol Configuration Register 15, offset: 0xBE */
  __IO uint16_t PCR16;                             /**< Protocol Configuration Register 16, offset: 0xC0 */
  __IO uint16_t PCR17;                             /**< Protocol Configuration Register 17, offset: 0xC2 */
  __IO uint16_t PCR18;                             /**< Protocol Configuration Register 18, offset: 0xC4 */
  __IO uint16_t PCR19;                             /**< Protocol Configuration Register 19, offset: 0xC6 */
  __IO uint16_t PCR20;                             /**< Protocol Configuration Register 20, offset: 0xC8 */
  __IO uint16_t PCR21;                             /**< Protocol Configuration Register 21, offset: 0xCA */
  __IO uint16_t PCR22;                             /**< Protocol Configuration Register 22, offset: 0xCC */
  __IO uint16_t PCR23;                             /**< Protocol Configuration Register 23, offset: 0xCE */
  __IO uint16_t PCR24;                             /**< Protocol Configuration Register 24, offset: 0xD0 */
  __IO uint16_t PCR25;                             /**< Protocol Configuration Register 25, offset: 0xD2 */
  __IO uint16_t PCR26;                             /**< Protocol Configuration Register 26, offset: 0xD4 */
  __IO uint16_t PCR27;                             /**< Protocol Configuration Register 27, offset: 0xD6 */
  __IO uint16_t PCR28;                             /**< Protocol Configuration Register 28, offset: 0xD8 */
  __IO uint16_t PCR29;                             /**< Protocol Configuration Register 29, offset: 0xDA */
  __IO uint16_t PCR30;                             /**< Protocol Configuration Register 30, offset: 0xDC */
       uint8_t RESERVED_1[4];
  __IO uint16_t PEOER;                             /**< Protocol Event Output Enable Register, offset: 0xE2 */
       uint8_t RESERVED_2[2];
  __IO uint16_t RFSDOR;                            /**< Receive FIFO Start Data Offset Register, offset: 0xE6 */
  __IO uint16_t RFSYMBADHR;                        /**< Receive FIFO System Memory Base Address High Register, offset: 0xE8 */
  __IO uint16_t RFSYMBADLR;                        /**< Receive FIFO System Memory Base Address Low Register, offset: 0xEA */
  __IO uint16_t RFPTR;                             /**< Receive FIFO Periodic Timer Register, offset: 0xEC */
  __IO uint16_t RFFLPCR;                           /**< Receive FIFO Fill Level and POP Count Register, offset: 0xEE */
  __IO uint16_t EEIFER;                            /**< ECC Error Interrupt Flag and Enable Register, offset: 0xF0 */
  __IO uint16_t EERICR;                            /**< ECC Error Report and Injection Control Register, offset: 0xF2 */
  __I  uint16_t EERAR;                             /**< ECC Error Report Address Register, offset: 0xF4 */
  __I  uint16_t EERDR;                             /**< ECC Error Report Data Register, offset: 0xF6 */
  __I  uint16_t EERCR;                             /**< ECC Error Report Code Register, offset: 0xF8 */
  __IO uint16_t EEIAR;                             /**< ECC Error Injection Address Register, offset: 0xFA */
  __IO uint16_t EEIDR;                             /**< ECC Error Injection Data Register, offset: 0xFC */
  __IO uint16_t EEICR;                             /**< ECC Error Injection Code Register, offset: 0xFE */
       uint8_t RESERVED_3[1792];
  struct {                                         /* offset: 0x800, array step: 0x8 */
    __IO uint16_t CCSR;                              /**< Message Buffer Configuration, Control, Status Register, array offset: 0x800, array step: 0x8 */
    __IO uint16_t CCFR;                              /**< Message Buffer Cycle Counter Filter Register, array offset: 0x802, array step: 0x8 */
    __IO uint16_t FIDR;                              /**< Message Buffer Frame ID Register, array offset: 0x804, array step: 0x8 */
    __IO uint16_t IDXR;                              /**< Message Buffer Index Register, array offset: 0x806, array step: 0x8 */
  } MB[FR_MB_COUNT];
       uint8_t RESERVED_4[1536];
  __IO uint16_t MBDOR[FR_MBDOR_COUNT];             /**< Message Buffer Data Field Offset Register, array offset: 0x1000, array step: 0x2 */
       uint8_t RESERVED_5[8];
  __IO uint16_t LEETR[FR_LEETR_COUNT];             /**< LRAM ECC Error Test Register, array offset: 0x1090, array step: 0x2 */
} FR_Type, *FR_MemMapPtr;

 /** Number of instances of the FR module. */
#define FR_INSTANCE_COUNT                        (1u)


/* FR - Peripheral instance base addresses */
/** Peripheral FR_0 base address */
#define FR_0_BASE                                (0xFFE50000u)
/** Peripheral FR_0 base pointer */
#define FR_0                                     ((FR_Type *)FR_0_BASE)
/** Array initializer of FR peripheral base addresses */
#define FR_BASE_ADDRS                            { FR_0_BASE }
/** Array initializer of FR peripheral base pointers */
#define FR_BASE_PTRS                             { FR_0 }

/* ----------------------------------------------------------------------------
   -- FR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FR_Register_Masks FR Register Masks
 * @{
 */

/* MVR Bit Fields */
#define FR_MVR_PEVER_MASK                        0xFFu
#define FR_MVR_PEVER_SHIFT                       0u
#define FR_MVR_PEVER_WIDTH                       8u
#define FR_MVR_PEVER(x)                          (((uint16_t)(((uint16_t)(x))<<FR_MVR_PEVER_SHIFT))&FR_MVR_PEVER_MASK)
#define FR_MVR_CHIVER_MASK                       0xFF00u
#define FR_MVR_CHIVER_SHIFT                      8u
#define FR_MVR_CHIVER_WIDTH                      8u
#define FR_MVR_CHIVER(x)                         (((uint16_t)(((uint16_t)(x))<<FR_MVR_CHIVER_SHIFT))&FR_MVR_CHIVER_MASK)
/* MCR Bit Fields */
#define FR_MCR_BITRATE_MASK                      0xEu
#define FR_MCR_BITRATE_SHIFT                     1u
#define FR_MCR_BITRATE_WIDTH                     3u
#define FR_MCR_BITRATE(x)                        (((uint16_t)(((uint16_t)(x))<<FR_MCR_BITRATE_SHIFT))&FR_MCR_BITRATE_MASK)
#define FR_MCR_CLKSEL_MASK                       0x10u
#define FR_MCR_CLKSEL_SHIFT                      4u
#define FR_MCR_CLKSEL_WIDTH                      1u
#define FR_MCR_CLKSEL(x)                         (((uint16_t)(((uint16_t)(x))<<FR_MCR_CLKSEL_SHIFT))&FR_MCR_CLKSEL_MASK)
#define FR_MCR_FAM_MASK                          0x40u
#define FR_MCR_FAM_SHIFT                         6u
#define FR_MCR_FAM_WIDTH                         1u
#define FR_MCR_FAM(x)                            (((uint16_t)(((uint16_t)(x))<<FR_MCR_FAM_SHIFT))&FR_MCR_FAM_MASK)
#define FR_MCR_FUM_MASK                          0x80u
#define FR_MCR_FUM_SHIFT                         7u
#define FR_MCR_FUM_WIDTH                         1u
#define FR_MCR_FUM(x)                            (((uint16_t)(((uint16_t)(x))<<FR_MCR_FUM_SHIFT))&FR_MCR_FUM_MASK)
#define FR_MCR_ECCE_MASK                         0x200u
#define FR_MCR_ECCE_SHIFT                        9u
#define FR_MCR_ECCE_WIDTH                        1u
#define FR_MCR_ECCE(x)                           (((uint16_t)(((uint16_t)(x))<<FR_MCR_ECCE_SHIFT))&FR_MCR_ECCE_MASK)
#define FR_MCR_SFFE_MASK                         0x400u
#define FR_MCR_SFFE_SHIFT                        10u
#define FR_MCR_SFFE_WIDTH                        1u
#define FR_MCR_SFFE(x)                           (((uint16_t)(((uint16_t)(x))<<FR_MCR_SFFE_SHIFT))&FR_MCR_SFFE_MASK)
#define FR_MCR_CHA_MASK                          0x800u
#define FR_MCR_CHA_SHIFT                         11u
#define FR_MCR_CHA_WIDTH                         1u
#define FR_MCR_CHA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_MCR_CHA_SHIFT))&FR_MCR_CHA_MASK)
#define FR_MCR_CHB_MASK                          0x1000u
#define FR_MCR_CHB_SHIFT                         12u
#define FR_MCR_CHB_WIDTH                         1u
#define FR_MCR_CHB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_MCR_CHB_SHIFT))&FR_MCR_CHB_MASK)
#define FR_MCR_SCM_MASK                          0x2000u
#define FR_MCR_SCM_SHIFT                         13u
#define FR_MCR_SCM_WIDTH                         1u
#define FR_MCR_SCM(x)                            (((uint16_t)(((uint16_t)(x))<<FR_MCR_SCM_SHIFT))&FR_MCR_SCM_MASK)
#define FR_MCR_SBFF_MASK                         0x4000u
#define FR_MCR_SBFF_SHIFT                        14u
#define FR_MCR_SBFF_WIDTH                        1u
#define FR_MCR_SBFF(x)                           (((uint16_t)(((uint16_t)(x))<<FR_MCR_SBFF_SHIFT))&FR_MCR_SBFF_MASK)
#define FR_MCR_MEN_MASK                          0x8000u
#define FR_MCR_MEN_SHIFT                         15u
#define FR_MCR_MEN_WIDTH                         1u
#define FR_MCR_MEN(x)                            (((uint16_t)(((uint16_t)(x))<<FR_MCR_MEN_SHIFT))&FR_MCR_MEN_MASK)
/* SYMBADHR Bit Fields */
#define FR_SYMBADHR_SMBA_MASK                    0xFFFFu
#define FR_SYMBADHR_SMBA_SHIFT                   0u
#define FR_SYMBADHR_SMBA_WIDTH                   16u
#define FR_SYMBADHR_SMBA(x)                      (((uint16_t)(((uint16_t)(x))<<FR_SYMBADHR_SMBA_SHIFT))&FR_SYMBADHR_SMBA_MASK)
/* SYMBADLR Bit Fields */
#define FR_SYMBADLR_SMBA_MASK                    0xFFF0u
#define FR_SYMBADLR_SMBA_SHIFT                   4u
#define FR_SYMBADLR_SMBA_WIDTH                   12u
#define FR_SYMBADLR_SMBA(x)                      (((uint16_t)(((uint16_t)(x))<<FR_SYMBADLR_SMBA_SHIFT))&FR_SYMBADLR_SMBA_MASK)
/* STBSCR Bit Fields */
#define FR_STBSCR_STBPSEL_MASK                   0x3u
#define FR_STBSCR_STBPSEL_SHIFT                  0u
#define FR_STBSCR_STBPSEL_WIDTH                  2u
#define FR_STBSCR_STBPSEL(x)                     (((uint16_t)(((uint16_t)(x))<<FR_STBSCR_STBPSEL_SHIFT))&FR_STBSCR_STBPSEL_MASK)
#define FR_STBSCR_ENB_MASK                       0x10u
#define FR_STBSCR_ENB_SHIFT                      4u
#define FR_STBSCR_ENB_WIDTH                      1u
#define FR_STBSCR_ENB(x)                         (((uint16_t)(((uint16_t)(x))<<FR_STBSCR_ENB_SHIFT))&FR_STBSCR_ENB_MASK)
#define FR_STBSCR_SEL_MASK                       0xF00u
#define FR_STBSCR_SEL_SHIFT                      8u
#define FR_STBSCR_SEL_WIDTH                      4u
#define FR_STBSCR_SEL(x)                         (((uint16_t)(((uint16_t)(x))<<FR_STBSCR_SEL_SHIFT))&FR_STBSCR_SEL_MASK)
#define FR_STBSCR_WMD_MASK                       0x8000u
#define FR_STBSCR_WMD_SHIFT                      15u
#define FR_STBSCR_WMD_WIDTH                      1u
#define FR_STBSCR_WMD(x)                         (((uint16_t)(((uint16_t)(x))<<FR_STBSCR_WMD_SHIFT))&FR_STBSCR_WMD_MASK)
/* MBDSR Bit Fields */
#define FR_MBDSR_MBSEG1DS_MASK                   0x7Fu
#define FR_MBDSR_MBSEG1DS_SHIFT                  0u
#define FR_MBDSR_MBSEG1DS_WIDTH                  7u
#define FR_MBDSR_MBSEG1DS(x)                     (((uint16_t)(((uint16_t)(x))<<FR_MBDSR_MBSEG1DS_SHIFT))&FR_MBDSR_MBSEG1DS_MASK)
#define FR_MBDSR_MBSEG2DS_MASK                   0x7F00u
#define FR_MBDSR_MBSEG2DS_SHIFT                  8u
#define FR_MBDSR_MBSEG2DS_WIDTH                  7u
#define FR_MBDSR_MBSEG2DS(x)                     (((uint16_t)(((uint16_t)(x))<<FR_MBDSR_MBSEG2DS_SHIFT))&FR_MBDSR_MBSEG2DS_MASK)
/* MBSSUTR Bit Fields */
#define FR_MBSSUTR_LAST_MB_UTIL_MASK             0x3Fu
#define FR_MBSSUTR_LAST_MB_UTIL_SHIFT            0u
#define FR_MBSSUTR_LAST_MB_UTIL_WIDTH            6u
#define FR_MBSSUTR_LAST_MB_UTIL(x)               (((uint16_t)(((uint16_t)(x))<<FR_MBSSUTR_LAST_MB_UTIL_SHIFT))&FR_MBSSUTR_LAST_MB_UTIL_MASK)
#define FR_MBSSUTR_LAST_MB_SEG1_MASK             0x3F00u
#define FR_MBSSUTR_LAST_MB_SEG1_SHIFT            8u
#define FR_MBSSUTR_LAST_MB_SEG1_WIDTH            6u
#define FR_MBSSUTR_LAST_MB_SEG1(x)               (((uint16_t)(((uint16_t)(x))<<FR_MBSSUTR_LAST_MB_SEG1_SHIFT))&FR_MBSSUTR_LAST_MB_SEG1_MASK)
/* PEDRAR Bit Fields */
#define FR_PEDRAR_DAD_MASK                       0x1u
#define FR_PEDRAR_DAD_SHIFT                      0u
#define FR_PEDRAR_DAD_WIDTH                      1u
#define FR_PEDRAR_DAD(x)                         (((uint16_t)(((uint16_t)(x))<<FR_PEDRAR_DAD_SHIFT))&FR_PEDRAR_DAD_MASK)
#define FR_PEDRAR_ADDR_MASK                      0xFFEu
#define FR_PEDRAR_ADDR_SHIFT                     1u
#define FR_PEDRAR_ADDR_WIDTH                     11u
#define FR_PEDRAR_ADDR(x)                        (((uint16_t)(((uint16_t)(x))<<FR_PEDRAR_ADDR_SHIFT))&FR_PEDRAR_ADDR_MASK)
#define FR_PEDRAR_INST_MASK                      0xF000u
#define FR_PEDRAR_INST_SHIFT                     12u
#define FR_PEDRAR_INST_WIDTH                     4u
#define FR_PEDRAR_INST(x)                        (((uint16_t)(((uint16_t)(x))<<FR_PEDRAR_INST_SHIFT))&FR_PEDRAR_INST_MASK)
/* PEDRDR Bit Fields */
#define FR_PEDRDR_DATA_MASK                      0xFFFFu
#define FR_PEDRDR_DATA_SHIFT                     0u
#define FR_PEDRDR_DATA_WIDTH                     16u
#define FR_PEDRDR_DATA(x)                        (((uint16_t)(((uint16_t)(x))<<FR_PEDRDR_DATA_SHIFT))&FR_PEDRDR_DATA_MASK)
/* POCR Bit Fields */
#define FR_POCR_POCCMD_MASK                      0xFu
#define FR_POCR_POCCMD_SHIFT                     0u
#define FR_POCR_POCCMD_WIDTH                     4u
#define FR_POCR_POCCMD(x)                        (((uint16_t)(((uint16_t)(x))<<FR_POCR_POCCMD_SHIFT))&FR_POCR_POCCMD_MASK)
#define FR_POCR_BSY_WMC_MASK                     0x80u
#define FR_POCR_BSY_WMC_SHIFT                    7u
#define FR_POCR_BSY_WMC_WIDTH                    1u
#define FR_POCR_BSY_WMC(x)                       (((uint16_t)(((uint16_t)(x))<<FR_POCR_BSY_WMC_SHIFT))&FR_POCR_BSY_WMC_MASK)
#define FR_POCR_ERC_AP_MASK                      0x300u
#define FR_POCR_ERC_AP_SHIFT                     8u
#define FR_POCR_ERC_AP_WIDTH                     2u
#define FR_POCR_ERC_AP(x)                        (((uint16_t)(((uint16_t)(x))<<FR_POCR_ERC_AP_SHIFT))&FR_POCR_ERC_AP_MASK)
#define FR_POCR_EOC_AP_MASK                      0xC00u
#define FR_POCR_EOC_AP_SHIFT                     10u
#define FR_POCR_EOC_AP_WIDTH                     2u
#define FR_POCR_EOC_AP(x)                        (((uint16_t)(((uint16_t)(x))<<FR_POCR_EOC_AP_SHIFT))&FR_POCR_EOC_AP_MASK)
#define FR_POCR_WME_MASK                         0x8000u
#define FR_POCR_WME_SHIFT                        15u
#define FR_POCR_WME_WIDTH                        1u
#define FR_POCR_WME(x)                           (((uint16_t)(((uint16_t)(x))<<FR_POCR_WME_SHIFT))&FR_POCR_WME_MASK)
/* GIFER Bit Fields */
#define FR_GIFER_TBIE_MASK                       0x1u
#define FR_GIFER_TBIE_SHIFT                      0u
#define FR_GIFER_TBIE_WIDTH                      1u
#define FR_GIFER_TBIE(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_TBIE_SHIFT))&FR_GIFER_TBIE_MASK)
#define FR_GIFER_RBIE_MASK                       0x2u
#define FR_GIFER_RBIE_SHIFT                      1u
#define FR_GIFER_RBIE_WIDTH                      1u
#define FR_GIFER_RBIE(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_RBIE_SHIFT))&FR_GIFER_RBIE_MASK)
#define FR_GIFER_FAFAIE_MASK                     0x4u
#define FR_GIFER_FAFAIE_SHIFT                    2u
#define FR_GIFER_FAFAIE_WIDTH                    1u
#define FR_GIFER_FAFAIE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_GIFER_FAFAIE_SHIFT))&FR_GIFER_FAFAIE_MASK)
#define FR_GIFER_FAFBIE_MASK                     0x8u
#define FR_GIFER_FAFBIE_SHIFT                    3u
#define FR_GIFER_FAFBIE_WIDTH                    1u
#define FR_GIFER_FAFBIE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_GIFER_FAFBIE_SHIFT))&FR_GIFER_FAFBIE_MASK)
#define FR_GIFER_WUPIE_MASK                      0x10u
#define FR_GIFER_WUPIE_SHIFT                     4u
#define FR_GIFER_WUPIE_WIDTH                     1u
#define FR_GIFER_WUPIE(x)                        (((uint16_t)(((uint16_t)(x))<<FR_GIFER_WUPIE_SHIFT))&FR_GIFER_WUPIE_MASK)
#define FR_GIFER_CHIE_MASK                       0x20u
#define FR_GIFER_CHIE_SHIFT                      5u
#define FR_GIFER_CHIE_WIDTH                      1u
#define FR_GIFER_CHIE(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_CHIE_SHIFT))&FR_GIFER_CHIE_MASK)
#define FR_GIFER_PRIE_MASK                       0x40u
#define FR_GIFER_PRIE_SHIFT                      6u
#define FR_GIFER_PRIE_WIDTH                      1u
#define FR_GIFER_PRIE(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_PRIE_SHIFT))&FR_GIFER_PRIE_MASK)
#define FR_GIFER_MIE_MASK                        0x80u
#define FR_GIFER_MIE_SHIFT                       7u
#define FR_GIFER_MIE_WIDTH                       1u
#define FR_GIFER_MIE(x)                          (((uint16_t)(((uint16_t)(x))<<FR_GIFER_MIE_SHIFT))&FR_GIFER_MIE_MASK)
#define FR_GIFER_TBIF_MASK                       0x100u
#define FR_GIFER_TBIF_SHIFT                      8u
#define FR_GIFER_TBIF_WIDTH                      1u
#define FR_GIFER_TBIF(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_TBIF_SHIFT))&FR_GIFER_TBIF_MASK)
#define FR_GIFER_RBIF_MASK                       0x200u
#define FR_GIFER_RBIF_SHIFT                      9u
#define FR_GIFER_RBIF_WIDTH                      1u
#define FR_GIFER_RBIF(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_RBIF_SHIFT))&FR_GIFER_RBIF_MASK)
#define FR_GIFER_FAFAIF_MASK                     0x400u
#define FR_GIFER_FAFAIF_SHIFT                    10u
#define FR_GIFER_FAFAIF_WIDTH                    1u
#define FR_GIFER_FAFAIF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_GIFER_FAFAIF_SHIFT))&FR_GIFER_FAFAIF_MASK)
#define FR_GIFER_FAFBIF_MASK                     0x800u
#define FR_GIFER_FAFBIF_SHIFT                    11u
#define FR_GIFER_FAFBIF_WIDTH                    1u
#define FR_GIFER_FAFBIF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_GIFER_FAFBIF_SHIFT))&FR_GIFER_FAFBIF_MASK)
#define FR_GIFER_WUPIF_MASK                      0x1000u
#define FR_GIFER_WUPIF_SHIFT                     12u
#define FR_GIFER_WUPIF_WIDTH                     1u
#define FR_GIFER_WUPIF(x)                        (((uint16_t)(((uint16_t)(x))<<FR_GIFER_WUPIF_SHIFT))&FR_GIFER_WUPIF_MASK)
#define FR_GIFER_CHIF_MASK                       0x2000u
#define FR_GIFER_CHIF_SHIFT                      13u
#define FR_GIFER_CHIF_WIDTH                      1u
#define FR_GIFER_CHIF(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_CHIF_SHIFT))&FR_GIFER_CHIF_MASK)
#define FR_GIFER_PRIF_MASK                       0x4000u
#define FR_GIFER_PRIF_SHIFT                      14u
#define FR_GIFER_PRIF_WIDTH                      1u
#define FR_GIFER_PRIF(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_PRIF_SHIFT))&FR_GIFER_PRIF_MASK)
#define FR_GIFER_MIF_MASK                        0x8000u
#define FR_GIFER_MIF_SHIFT                       15u
#define FR_GIFER_MIF_WIDTH                       1u
#define FR_GIFER_MIF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_GIFER_MIF_SHIFT))&FR_GIFER_MIF_MASK)
/* PIFR0 Bit Fields */
#define FR_PIFR0_CYS_IF_MASK                     0x1u
#define FR_PIFR0_CYS_IF_SHIFT                    0u
#define FR_PIFR0_CYS_IF_WIDTH                    1u
#define FR_PIFR0_CYS_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_CYS_IF_SHIFT))&FR_PIFR0_CYS_IF_MASK)
#define FR_PIFR0_TI1_IF_MASK                     0x2u
#define FR_PIFR0_TI1_IF_SHIFT                    1u
#define FR_PIFR0_TI1_IF_WIDTH                    1u
#define FR_PIFR0_TI1_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_TI1_IF_SHIFT))&FR_PIFR0_TI1_IF_MASK)
#define FR_PIFR0_TI2_IF_MASK                     0x4u
#define FR_PIFR0_TI2_IF_SHIFT                    2u
#define FR_PIFR0_TI2_IF_WIDTH                    1u
#define FR_PIFR0_TI2_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_TI2_IF_SHIFT))&FR_PIFR0_TI2_IF_MASK)
#define FR_PIFR0_TBVA_IF_MASK                    0x8u
#define FR_PIFR0_TBVA_IF_SHIFT                   3u
#define FR_PIFR0_TBVA_IF_WIDTH                   1u
#define FR_PIFR0_TBVA_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_TBVA_IF_SHIFT))&FR_PIFR0_TBVA_IF_MASK)
#define FR_PIFR0_TBVB_IF_MASK                    0x10u
#define FR_PIFR0_TBVB_IF_SHIFT                   4u
#define FR_PIFR0_TBVB_IF_WIDTH                   1u
#define FR_PIFR0_TBVB_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_TBVB_IF_SHIFT))&FR_PIFR0_TBVB_IF_MASK)
#define FR_PIFR0_LTXA_IF_MASK                    0x20u
#define FR_PIFR0_LTXA_IF_SHIFT                   5u
#define FR_PIFR0_LTXA_IF_WIDTH                   1u
#define FR_PIFR0_LTXA_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_LTXA_IF_SHIFT))&FR_PIFR0_LTXA_IF_MASK)
#define FR_PIFR0_LTXB_IF_MASK                    0x40u
#define FR_PIFR0_LTXB_IF_SHIFT                   6u
#define FR_PIFR0_LTXB_IF_WIDTH                   1u
#define FR_PIFR0_LTXB_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_LTXB_IF_SHIFT))&FR_PIFR0_LTXB_IF_MASK)
#define FR_PIFR0_MTX_IF_MASK                     0x80u
#define FR_PIFR0_MTX_IF_SHIFT                    7u
#define FR_PIFR0_MTX_IF_WIDTH                    1u
#define FR_PIFR0_MTX_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_MTX_IF_SHIFT))&FR_PIFR0_MTX_IF_MASK)
#define FR_PIFR0_MXS_IF_MASK                     0x100u
#define FR_PIFR0_MXS_IF_SHIFT                    8u
#define FR_PIFR0_MXS_IF_WIDTH                    1u
#define FR_PIFR0_MXS_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_MXS_IF_SHIFT))&FR_PIFR0_MXS_IF_MASK)
#define FR_PIFR0_CCL_IF_MASK                     0x200u
#define FR_PIFR0_CCL_IF_SHIFT                    9u
#define FR_PIFR0_CCL_IF_WIDTH                    1u
#define FR_PIFR0_CCL_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_CCL_IF_SHIFT))&FR_PIFR0_CCL_IF_MASK)
#define FR_PIFR0_MOC_IF_MASK                     0x400u
#define FR_PIFR0_MOC_IF_SHIFT                    10u
#define FR_PIFR0_MOC_IF_WIDTH                    1u
#define FR_PIFR0_MOC_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_MOC_IF_SHIFT))&FR_PIFR0_MOC_IF_MASK)
#define FR_PIFR0_MRC_IF_MASK                     0x800u
#define FR_PIFR0_MRC_IF_SHIFT                    11u
#define FR_PIFR0_MRC_IF_WIDTH                    1u
#define FR_PIFR0_MRC_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_MRC_IF_SHIFT))&FR_PIFR0_MRC_IF_MASK)
#define FR_PIFR0_CSA_IF_MASK                     0x1000u
#define FR_PIFR0_CSA_IF_SHIFT                    12u
#define FR_PIFR0_CSA_IF_WIDTH                    1u
#define FR_PIFR0_CSA_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_CSA_IF_SHIFT))&FR_PIFR0_CSA_IF_MASK)
#define FR_PIFR0_ILCF_IF_MASK                    0x2000u
#define FR_PIFR0_ILCF_IF_SHIFT                   13u
#define FR_PIFR0_ILCF_IF_WIDTH                   1u
#define FR_PIFR0_ILCF_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_ILCF_IF_SHIFT))&FR_PIFR0_ILCF_IF_MASK)
#define FR_PIFR0_INTL_IF_MASK                    0x4000u
#define FR_PIFR0_INTL_IF_SHIFT                   14u
#define FR_PIFR0_INTL_IF_WIDTH                   1u
#define FR_PIFR0_INTL_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_INTL_IF_SHIFT))&FR_PIFR0_INTL_IF_MASK)
#define FR_PIFR0_FATL_IF_MASK                    0x8000u
#define FR_PIFR0_FATL_IF_SHIFT                   15u
#define FR_PIFR0_FATL_IF_WIDTH                   1u
#define FR_PIFR0_FATL_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_FATL_IF_SHIFT))&FR_PIFR0_FATL_IF_MASK)
/* PIFR1 Bit Fields */
#define FR_PIFR1_ODT_IF_MASK                     0x10u
#define FR_PIFR1_ODT_IF_SHIFT                    4u
#define FR_PIFR1_ODT_IF_WIDTH                    1u
#define FR_PIFR1_ODT_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_ODT_IF_SHIFT))&FR_PIFR1_ODT_IF_MASK)
#define FR_PIFR1_EVT_IF_MASK                     0x20u
#define FR_PIFR1_EVT_IF_SHIFT                    5u
#define FR_PIFR1_EVT_IF_WIDTH                    1u
#define FR_PIFR1_EVT_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_EVT_IF_SHIFT))&FR_PIFR1_EVT_IF_MASK)
#define FR_PIFR1_SSI0_IF_MASK                    0x100u
#define FR_PIFR1_SSI0_IF_SHIFT                   8u
#define FR_PIFR1_SSI0_IF_WIDTH                   1u
#define FR_PIFR1_SSI0_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_SSI0_IF_SHIFT))&FR_PIFR1_SSI0_IF_MASK)
#define FR_PIFR1_SSI1_IF_MASK                    0x200u
#define FR_PIFR1_SSI1_IF_SHIFT                   9u
#define FR_PIFR1_SSI1_IF_WIDTH                   1u
#define FR_PIFR1_SSI1_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_SSI1_IF_SHIFT))&FR_PIFR1_SSI1_IF_MASK)
#define FR_PIFR1_SSI2_IF_MASK                    0x400u
#define FR_PIFR1_SSI2_IF_SHIFT                   10u
#define FR_PIFR1_SSI2_IF_WIDTH                   1u
#define FR_PIFR1_SSI2_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_SSI2_IF_SHIFT))&FR_PIFR1_SSI2_IF_MASK)
#define FR_PIFR1_SSI3_IF_MASK                    0x800u
#define FR_PIFR1_SSI3_IF_SHIFT                   11u
#define FR_PIFR1_SSI3_IF_WIDTH                   1u
#define FR_PIFR1_SSI3_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_SSI3_IF_SHIFT))&FR_PIFR1_SSI3_IF_MASK)
#define FR_PIFR1_PSC_IF_MASK                     0x1000u
#define FR_PIFR1_PSC_IF_SHIFT                    12u
#define FR_PIFR1_PSC_IF_WIDTH                    1u
#define FR_PIFR1_PSC_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_PSC_IF_SHIFT))&FR_PIFR1_PSC_IF_MASK)
#define FR_PIFR1_PECF_IF_MASK                    0x2000u
#define FR_PIFR1_PECF_IF_SHIFT                   13u
#define FR_PIFR1_PECF_IF_WIDTH                   1u
#define FR_PIFR1_PECF_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_PECF_IF_SHIFT))&FR_PIFR1_PECF_IF_MASK)
#define FR_PIFR1_IPC_IF_MASK                     0x4000u
#define FR_PIFR1_IPC_IF_SHIFT                    14u
#define FR_PIFR1_IPC_IF_WIDTH                    1u
#define FR_PIFR1_IPC_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_IPC_IF_SHIFT))&FR_PIFR1_IPC_IF_MASK)
#define FR_PIFR1_EMC_IF_MASK                     0x8000u
#define FR_PIFR1_EMC_IF_SHIFT                    15u
#define FR_PIFR1_EMC_IF_WIDTH                    1u
#define FR_PIFR1_EMC_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_EMC_IF_SHIFT))&FR_PIFR1_EMC_IF_MASK)
/* PIER0 Bit Fields */
#define FR_PIER0_CYS_IE_MASK                     0x1u
#define FR_PIER0_CYS_IE_SHIFT                    0u
#define FR_PIER0_CYS_IE_WIDTH                    1u
#define FR_PIER0_CYS_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_CYS_IE_SHIFT))&FR_PIER0_CYS_IE_MASK)
#define FR_PIER0_TI1_IE_MASK                     0x2u
#define FR_PIER0_TI1_IE_SHIFT                    1u
#define FR_PIER0_TI1_IE_WIDTH                    1u
#define FR_PIER0_TI1_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_TI1_IE_SHIFT))&FR_PIER0_TI1_IE_MASK)
#define FR_PIER0_TI2_IE_MASK                     0x4u
#define FR_PIER0_TI2_IE_SHIFT                    2u
#define FR_PIER0_TI2_IE_WIDTH                    1u
#define FR_PIER0_TI2_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_TI2_IE_SHIFT))&FR_PIER0_TI2_IE_MASK)
#define FR_PIER0_TBVA_IE_MASK                    0x8u
#define FR_PIER0_TBVA_IE_SHIFT                   3u
#define FR_PIER0_TBVA_IE_WIDTH                   1u
#define FR_PIER0_TBVA_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER0_TBVA_IE_SHIFT))&FR_PIER0_TBVA_IE_MASK)
#define FR_PIER0_TBVB_IE_MASK                    0x10u
#define FR_PIER0_TBVB_IE_SHIFT                   4u
#define FR_PIER0_TBVB_IE_WIDTH                   1u
#define FR_PIER0_TBVB_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER0_TBVB_IE_SHIFT))&FR_PIER0_TBVB_IE_MASK)
#define FR_PIER0_LTXA_IE_MASK                    0x20u
#define FR_PIER0_LTXA_IE_SHIFT                   5u
#define FR_PIER0_LTXA_IE_WIDTH                   1u
#define FR_PIER0_LTXA_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER0_LTXA_IE_SHIFT))&FR_PIER0_LTXA_IE_MASK)
#define FR_PIER0_LTXB_IE_MASK                    0x40u
#define FR_PIER0_LTXB_IE_SHIFT                   6u
#define FR_PIER0_LTXB_IE_WIDTH                   1u
#define FR_PIER0_LTXB_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER0_LTXB_IE_SHIFT))&FR_PIER0_LTXB_IE_MASK)
#define FR_PIER0_MTX_IE_MASK                     0x80u
#define FR_PIER0_MTX_IE_SHIFT                    7u
#define FR_PIER0_MTX_IE_WIDTH                    1u
#define FR_PIER0_MTX_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_MTX_IE_SHIFT))&FR_PIER0_MTX_IE_MASK)
#define FR_PIER0_MXS_IE_MASK                     0x100u
#define FR_PIER0_MXS_IE_SHIFT                    8u
#define FR_PIER0_MXS_IE_WIDTH                    1u
#define FR_PIER0_MXS_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_MXS_IE_SHIFT))&FR_PIER0_MXS_IE_MASK)
#define FR_PIER0_CCL_IE_MASK                     0x200u
#define FR_PIER0_CCL_IE_SHIFT                    9u
#define FR_PIER0_CCL_IE_WIDTH                    1u
#define FR_PIER0_CCL_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_CCL_IE_SHIFT))&FR_PIER0_CCL_IE_MASK)
#define FR_PIER0_MOC_IE_MASK                     0x400u
#define FR_PIER0_MOC_IE_SHIFT                    10u
#define FR_PIER0_MOC_IE_WIDTH                    1u
#define FR_PIER0_MOC_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_MOC_IE_SHIFT))&FR_PIER0_MOC_IE_MASK)
#define FR_PIER0_MRC_IE_MASK                     0x800u
#define FR_PIER0_MRC_IE_SHIFT                    11u
#define FR_PIER0_MRC_IE_WIDTH                    1u
#define FR_PIER0_MRC_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_MRC_IE_SHIFT))&FR_PIER0_MRC_IE_MASK)
#define FR_PIER0_CSA_IE_MASK                     0x1000u
#define FR_PIER0_CSA_IE_SHIFT                    12u
#define FR_PIER0_CSA_IE_WIDTH                    1u
#define FR_PIER0_CSA_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_CSA_IE_SHIFT))&FR_PIER0_CSA_IE_MASK)
#define FR_PIER0_ILCF_IE_MASK                    0x2000u
#define FR_PIER0_ILCF_IE_SHIFT                   13u
#define FR_PIER0_ILCF_IE_WIDTH                   1u
#define FR_PIER0_ILCF_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER0_ILCF_IE_SHIFT))&FR_PIER0_ILCF_IE_MASK)
#define FR_PIER0_INTL_IE_MASK                    0x4000u
#define FR_PIER0_INTL_IE_SHIFT                   14u
#define FR_PIER0_INTL_IE_WIDTH                   1u
#define FR_PIER0_INTL_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER0_INTL_IE_SHIFT))&FR_PIER0_INTL_IE_MASK)
#define FR_PIER0_FATL_IE_MASK                    0x8000u
#define FR_PIER0_FATL_IE_SHIFT                   15u
#define FR_PIER0_FATL_IE_WIDTH                   1u
#define FR_PIER0_FATL_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER0_FATL_IE_SHIFT))&FR_PIER0_FATL_IE_MASK)
/* PIER1 Bit Fields */
#define FR_PIER1_ODT_IE_MASK                     0x10u
#define FR_PIER1_ODT_IE_SHIFT                    4u
#define FR_PIER1_ODT_IE_WIDTH                    1u
#define FR_PIER1_ODT_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER1_ODT_IE_SHIFT))&FR_PIER1_ODT_IE_MASK)
#define FR_PIER1_EVT_IE_MASK                     0x20u
#define FR_PIER1_EVT_IE_SHIFT                    5u
#define FR_PIER1_EVT_IE_WIDTH                    1u
#define FR_PIER1_EVT_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER1_EVT_IE_SHIFT))&FR_PIER1_EVT_IE_MASK)
#define FR_PIER1_SSI0_IE_MASK                    0x100u
#define FR_PIER1_SSI0_IE_SHIFT                   8u
#define FR_PIER1_SSI0_IE_WIDTH                   1u
#define FR_PIER1_SSI0_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER1_SSI0_IE_SHIFT))&FR_PIER1_SSI0_IE_MASK)
#define FR_PIER1_SSI1_IE_MASK                    0x200u
#define FR_PIER1_SSI1_IE_SHIFT                   9u
#define FR_PIER1_SSI1_IE_WIDTH                   1u
#define FR_PIER1_SSI1_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER1_SSI1_IE_SHIFT))&FR_PIER1_SSI1_IE_MASK)
#define FR_PIER1_SSI2_IE_MASK                    0x400u
#define FR_PIER1_SSI2_IE_SHIFT                   10u
#define FR_PIER1_SSI2_IE_WIDTH                   1u
#define FR_PIER1_SSI2_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER1_SSI2_IE_SHIFT))&FR_PIER1_SSI2_IE_MASK)
#define FR_PIER1_SSI3_IE_MASK                    0x800u
#define FR_PIER1_SSI3_IE_SHIFT                   11u
#define FR_PIER1_SSI3_IE_WIDTH                   1u
#define FR_PIER1_SSI3_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER1_SSI3_IE_SHIFT))&FR_PIER1_SSI3_IE_MASK)
#define FR_PIER1_PSC_IE_MASK                     0x1000u
#define FR_PIER1_PSC_IE_SHIFT                    12u
#define FR_PIER1_PSC_IE_WIDTH                    1u
#define FR_PIER1_PSC_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER1_PSC_IE_SHIFT))&FR_PIER1_PSC_IE_MASK)
#define FR_PIER1_PECF_IE_MASK                    0x2000u
#define FR_PIER1_PECF_IE_SHIFT                   13u
#define FR_PIER1_PECF_IE_WIDTH                   1u
#define FR_PIER1_PECF_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER1_PECF_IE_SHIFT))&FR_PIER1_PECF_IE_MASK)
#define FR_PIER1_IPC_IE_MASK                     0x4000u
#define FR_PIER1_IPC_IE_SHIFT                    14u
#define FR_PIER1_IPC_IE_WIDTH                    1u
#define FR_PIER1_IPC_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER1_IPC_IE_SHIFT))&FR_PIER1_IPC_IE_MASK)
#define FR_PIER1_EMC_IE_MASK                     0x8000u
#define FR_PIER1_EMC_IE_SHIFT                    15u
#define FR_PIER1_EMC_IE_WIDTH                    1u
#define FR_PIER1_EMC_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER1_EMC_IE_SHIFT))&FR_PIER1_EMC_IE_MASK)
/* CHIERFR Bit Fields */
#define FR_CHIERFR_ILSA_EF_MASK                  0x1u
#define FR_CHIERFR_ILSA_EF_SHIFT                 0u
#define FR_CHIERFR_ILSA_EF_WIDTH                 1u
#define FR_CHIERFR_ILSA_EF(x)                    (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_ILSA_EF_SHIFT))&FR_CHIERFR_ILSA_EF_MASK)
#define FR_CHIERFR_NMF_EF_MASK                   0x2u
#define FR_CHIERFR_NMF_EF_SHIFT                  1u
#define FR_CHIERFR_NMF_EF_WIDTH                  1u
#define FR_CHIERFR_NMF_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_NMF_EF_SHIFT))&FR_CHIERFR_NMF_EF_MASK)
#define FR_CHIERFR_NML_EF_MASK                   0x4u
#define FR_CHIERFR_NML_EF_SHIFT                  2u
#define FR_CHIERFR_NML_EF_WIDTH                  1u
#define FR_CHIERFR_NML_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_NML_EF_SHIFT))&FR_CHIERFR_NML_EF_MASK)
#define FR_CHIERFR_SPL_EF_MASK                   0x8u
#define FR_CHIERFR_SPL_EF_SHIFT                  3u
#define FR_CHIERFR_SPL_EF_WIDTH                  1u
#define FR_CHIERFR_SPL_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_SPL_EF_SHIFT))&FR_CHIERFR_SPL_EF_MASK)
#define FR_CHIERFR_DPL_EF_MASK                   0x10u
#define FR_CHIERFR_DPL_EF_SHIFT                  4u
#define FR_CHIERFR_DPL_EF_WIDTH                  1u
#define FR_CHIERFR_DPL_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_DPL_EF_SHIFT))&FR_CHIERFR_DPL_EF_MASK)
#define FR_CHIERFR_FID_EF_MASK                   0x20u
#define FR_CHIERFR_FID_EF_SHIFT                  5u
#define FR_CHIERFR_FID_EF_WIDTH                  1u
#define FR_CHIERFR_FID_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_FID_EF_SHIFT))&FR_CHIERFR_FID_EF_MASK)
#define FR_CHIERFR_SBCF_EF_MASK                  0x40u
#define FR_CHIERFR_SBCF_EF_SHIFT                 6u
#define FR_CHIERFR_SBCF_EF_WIDTH                 1u
#define FR_CHIERFR_SBCF_EF(x)                    (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_SBCF_EF_SHIFT))&FR_CHIERFR_SBCF_EF_MASK)
#define FR_CHIERFR_LCK_EF_MASK                   0x100u
#define FR_CHIERFR_LCK_EF_SHIFT                  8u
#define FR_CHIERFR_LCK_EF_WIDTH                  1u
#define FR_CHIERFR_LCK_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_LCK_EF_SHIFT))&FR_CHIERFR_LCK_EF_MASK)
#define FR_CHIERFR_MBU_EF_MASK                   0x200u
#define FR_CHIERFR_MBU_EF_SHIFT                  9u
#define FR_CHIERFR_MBU_EF_WIDTH                  1u
#define FR_CHIERFR_MBU_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_MBU_EF_SHIFT))&FR_CHIERFR_MBU_EF_MASK)
#define FR_CHIERFR_MBS_EF_MASK                   0x400u
#define FR_CHIERFR_MBS_EF_SHIFT                  10u
#define FR_CHIERFR_MBS_EF_WIDTH                  1u
#define FR_CHIERFR_MBS_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_MBS_EF_SHIFT))&FR_CHIERFR_MBS_EF_MASK)
#define FR_CHIERFR_FOVA_EF_MASK                  0x800u
#define FR_CHIERFR_FOVA_EF_SHIFT                 11u
#define FR_CHIERFR_FOVA_EF_WIDTH                 1u
#define FR_CHIERFR_FOVA_EF(x)                    (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_FOVA_EF_SHIFT))&FR_CHIERFR_FOVA_EF_MASK)
#define FR_CHIERFR_FOVB_EF_MASK                  0x1000u
#define FR_CHIERFR_FOVB_EF_SHIFT                 12u
#define FR_CHIERFR_FOVB_EF_WIDTH                 1u
#define FR_CHIERFR_FOVB_EF(x)                    (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_FOVB_EF_SHIFT))&FR_CHIERFR_FOVB_EF_MASK)
#define FR_CHIERFR_PCMI_EF_MASK                  0x2000u
#define FR_CHIERFR_PCMI_EF_SHIFT                 13u
#define FR_CHIERFR_PCMI_EF_WIDTH                 1u
#define FR_CHIERFR_PCMI_EF(x)                    (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_PCMI_EF_SHIFT))&FR_CHIERFR_PCMI_EF_MASK)
#define FR_CHIERFR_FRLA_EF_MASK                  0x4000u
#define FR_CHIERFR_FRLA_EF_SHIFT                 14u
#define FR_CHIERFR_FRLA_EF_WIDTH                 1u
#define FR_CHIERFR_FRLA_EF(x)                    (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_FRLA_EF_SHIFT))&FR_CHIERFR_FRLA_EF_MASK)
#define FR_CHIERFR_FRLB_EF_MASK                  0x8000u
#define FR_CHIERFR_FRLB_EF_SHIFT                 15u
#define FR_CHIERFR_FRLB_EF_WIDTH                 1u
#define FR_CHIERFR_FRLB_EF(x)                    (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_FRLB_EF_SHIFT))&FR_CHIERFR_FRLB_EF_MASK)
/* MBIVEC Bit Fields */
#define FR_MBIVEC_RBIVEC_MASK                    0x3Fu
#define FR_MBIVEC_RBIVEC_SHIFT                   0u
#define FR_MBIVEC_RBIVEC_WIDTH                   6u
#define FR_MBIVEC_RBIVEC(x)                      (((uint16_t)(((uint16_t)(x))<<FR_MBIVEC_RBIVEC_SHIFT))&FR_MBIVEC_RBIVEC_MASK)
#define FR_MBIVEC_TBIVEC_MASK                    0x3F00u
#define FR_MBIVEC_TBIVEC_SHIFT                   8u
#define FR_MBIVEC_TBIVEC_WIDTH                   6u
#define FR_MBIVEC_TBIVEC(x)                      (((uint16_t)(((uint16_t)(x))<<FR_MBIVEC_TBIVEC_SHIFT))&FR_MBIVEC_TBIVEC_MASK)
/* CASERCR Bit Fields */
#define FR_CASERCR_CHAERSCNT_MASK                0xFFFFu
#define FR_CASERCR_CHAERSCNT_SHIFT               0u
#define FR_CASERCR_CHAERSCNT_WIDTH               16u
#define FR_CASERCR_CHAERSCNT(x)                  (((uint16_t)(((uint16_t)(x))<<FR_CASERCR_CHAERSCNT_SHIFT))&FR_CASERCR_CHAERSCNT_MASK)
/* CBSERCR Bit Fields */
#define FR_CBSERCR_CHBERSCNT_MASK                0xFFFFu
#define FR_CBSERCR_CHBERSCNT_SHIFT               0u
#define FR_CBSERCR_CHBERSCNT_WIDTH               16u
#define FR_CBSERCR_CHBERSCNT(x)                  (((uint16_t)(((uint16_t)(x))<<FR_CBSERCR_CHBERSCNT_SHIFT))&FR_CBSERCR_CHBERSCNT_MASK)
/* PSR0 Bit Fields */
#define FR_PSR0_WAKEUPSTATUS_MASK                0x7u
#define FR_PSR0_WAKEUPSTATUS_SHIFT               0u
#define FR_PSR0_WAKEUPSTATUS_WIDTH               3u
#define FR_PSR0_WAKEUPSTATUS(x)                  (((uint16_t)(((uint16_t)(x))<<FR_PSR0_WAKEUPSTATUS_SHIFT))&FR_PSR0_WAKEUPSTATUS_MASK)
#define FR_PSR0_STARTUPSTATE_MASK                0xF0u
#define FR_PSR0_STARTUPSTATE_SHIFT               4u
#define FR_PSR0_STARTUPSTATE_WIDTH               4u
#define FR_PSR0_STARTUPSTATE(x)                  (((uint16_t)(((uint16_t)(x))<<FR_PSR0_STARTUPSTATE_SHIFT))&FR_PSR0_STARTUPSTATE_MASK)
#define FR_PSR0_PROTSTATE_MASK                   0x700u
#define FR_PSR0_PROTSTATE_SHIFT                  8u
#define FR_PSR0_PROTSTATE_WIDTH                  3u
#define FR_PSR0_PROTSTATE(x)                     (((uint16_t)(((uint16_t)(x))<<FR_PSR0_PROTSTATE_SHIFT))&FR_PSR0_PROTSTATE_MASK)
#define FR_PSR0_SLOTMODE_MASK                    0x3000u
#define FR_PSR0_SLOTMODE_SHIFT                   12u
#define FR_PSR0_SLOTMODE_WIDTH                   2u
#define FR_PSR0_SLOTMODE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PSR0_SLOTMODE_SHIFT))&FR_PSR0_SLOTMODE_MASK)
#define FR_PSR0_ERRMODE_MASK                     0xC000u
#define FR_PSR0_ERRMODE_SHIFT                    14u
#define FR_PSR0_ERRMODE_WIDTH                    2u
#define FR_PSR0_ERRMODE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PSR0_ERRMODE_SHIFT))&FR_PSR0_ERRMODE_MASK)
/* PSR1 Bit Fields */
#define FR_PSR1_APTAC_MASK                       0x1Fu
#define FR_PSR1_APTAC_SHIFT                      0u
#define FR_PSR1_APTAC_WIDTH                      5u
#define FR_PSR1_APTAC(x)                         (((uint16_t)(((uint16_t)(x))<<FR_PSR1_APTAC_SHIFT))&FR_PSR1_APTAC_MASK)
#define FR_PSR1_FRZ_MASK                         0x20u
#define FR_PSR1_FRZ_SHIFT                        5u
#define FR_PSR1_FRZ_WIDTH                        1u
#define FR_PSR1_FRZ(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR1_FRZ_SHIFT))&FR_PSR1_FRZ_MASK)
#define FR_PSR1_HHR_MASK                         0x40u
#define FR_PSR1_HHR_SHIFT                        6u
#define FR_PSR1_HHR_WIDTH                        1u
#define FR_PSR1_HHR(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR1_HHR_SHIFT))&FR_PSR1_HHR_MASK)
#define FR_PSR1_CPN_MASK                         0x80u
#define FR_PSR1_CPN_SHIFT                        7u
#define FR_PSR1_CPN_WIDTH                        1u
#define FR_PSR1_CPN(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR1_CPN_SHIFT))&FR_PSR1_CPN_MASK)
#define FR_PSR1_REMCSAT_MASK                     0x1F00u
#define FR_PSR1_REMCSAT_SHIFT                    8u
#define FR_PSR1_REMCSAT_WIDTH                    5u
#define FR_PSR1_REMCSAT(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PSR1_REMCSAT_SHIFT))&FR_PSR1_REMCSAT_MASK)
#define FR_PSR1_CSP_MASK                         0x4000u
#define FR_PSR1_CSP_SHIFT                        14u
#define FR_PSR1_CSP_WIDTH                        1u
#define FR_PSR1_CSP(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR1_CSP_SHIFT))&FR_PSR1_CSP_MASK)
#define FR_PSR1_CSAA_MASK                        0x8000u
#define FR_PSR1_CSAA_SHIFT                       15u
#define FR_PSR1_CSAA_WIDTH                       1u
#define FR_PSR1_CSAA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR1_CSAA_SHIFT))&FR_PSR1_CSAA_MASK)
/* PSR2 Bit Fields */
#define FR_PSR2_CKCORFCNT_MASK                   0xFu
#define FR_PSR2_CKCORFCNT_SHIFT                  0u
#define FR_PSR2_CKCORFCNT_WIDTH                  4u
#define FR_PSR2_CKCORFCNT(x)                     (((uint16_t)(((uint16_t)(x))<<FR_PSR2_CKCORFCNT_SHIFT))&FR_PSR2_CKCORFCNT_MASK)
#define FR_PSR2_MTA_MASK                         0x10u
#define FR_PSR2_MTA_SHIFT                        4u
#define FR_PSR2_MTA_WIDTH                        1u
#define FR_PSR2_MTA(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR2_MTA_SHIFT))&FR_PSR2_MTA_MASK)
#define FR_PSR2_SSEA_MASK                        0x20u
#define FR_PSR2_SSEA_SHIFT                       5u
#define FR_PSR2_SSEA_WIDTH                       1u
#define FR_PSR2_SSEA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_SSEA_SHIFT))&FR_PSR2_SSEA_MASK)
#define FR_PSR2_SBVA_MASK                        0x40u
#define FR_PSR2_SBVA_SHIFT                       6u
#define FR_PSR2_SBVA_WIDTH                       1u
#define FR_PSR2_SBVA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_SBVA_SHIFT))&FR_PSR2_SBVA_MASK)
#define FR_PSR2_STCA_MASK                        0x80u
#define FR_PSR2_STCA_SHIFT                       7u
#define FR_PSR2_STCA_WIDTH                       1u
#define FR_PSR2_STCA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_STCA_SHIFT))&FR_PSR2_STCA_MASK)
#define FR_PSR2_NSEA_MASK                        0x100u
#define FR_PSR2_NSEA_SHIFT                       8u
#define FR_PSR2_NSEA_WIDTH                       1u
#define FR_PSR2_NSEA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_NSEA_SHIFT))&FR_PSR2_NSEA_MASK)
#define FR_PSR2_NBVA_MASK                        0x200u
#define FR_PSR2_NBVA_SHIFT                       9u
#define FR_PSR2_NBVA_WIDTH                       1u
#define FR_PSR2_NBVA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_NBVA_SHIFT))&FR_PSR2_NBVA_MASK)
#define FR_PSR2_MTB_MASK                         0x400u
#define FR_PSR2_MTB_SHIFT                        10u
#define FR_PSR2_MTB_WIDTH                        1u
#define FR_PSR2_MTB(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR2_MTB_SHIFT))&FR_PSR2_MTB_MASK)
#define FR_PSR2_SSEB_MASK                        0x800u
#define FR_PSR2_SSEB_SHIFT                       11u
#define FR_PSR2_SSEB_WIDTH                       1u
#define FR_PSR2_SSEB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_SSEB_SHIFT))&FR_PSR2_SSEB_MASK)
#define FR_PSR2_SBVB_MASK                        0x1000u
#define FR_PSR2_SBVB_SHIFT                       12u
#define FR_PSR2_SBVB_WIDTH                       1u
#define FR_PSR2_SBVB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_SBVB_SHIFT))&FR_PSR2_SBVB_MASK)
#define FR_PSR2_STCB_MASK                        0x2000u
#define FR_PSR2_STCB_SHIFT                       13u
#define FR_PSR2_STCB_WIDTH                       1u
#define FR_PSR2_STCB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_STCB_SHIFT))&FR_PSR2_STCB_MASK)
#define FR_PSR2_NSEB_MASK                        0x4000u
#define FR_PSR2_NSEB_SHIFT                       14u
#define FR_PSR2_NSEB_WIDTH                       1u
#define FR_PSR2_NSEB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_NSEB_SHIFT))&FR_PSR2_NSEB_MASK)
#define FR_PSR2_NBVB_MASK                        0x8000u
#define FR_PSR2_NBVB_SHIFT                       15u
#define FR_PSR2_NBVB_WIDTH                       1u
#define FR_PSR2_NBVB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_NBVB_SHIFT))&FR_PSR2_NBVB_MASK)
/* PSR3 Bit Fields */
#define FR_PSR3_AVFA_MASK                        0x1u
#define FR_PSR3_AVFA_SHIFT                       0u
#define FR_PSR3_AVFA_WIDTH                       1u
#define FR_PSR3_AVFA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_AVFA_SHIFT))&FR_PSR3_AVFA_MASK)
#define FR_PSR3_ASEA_MASK                        0x2u
#define FR_PSR3_ASEA_SHIFT                       1u
#define FR_PSR3_ASEA_WIDTH                       1u
#define FR_PSR3_ASEA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_ASEA_SHIFT))&FR_PSR3_ASEA_MASK)
#define FR_PSR3_ACEA_MASK                        0x4u
#define FR_PSR3_ACEA_SHIFT                       2u
#define FR_PSR3_ACEA_WIDTH                       1u
#define FR_PSR3_ACEA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_ACEA_SHIFT))&FR_PSR3_ACEA_MASK)
#define FR_PSR3_AACA_MASK                        0x8u
#define FR_PSR3_AACA_SHIFT                       3u
#define FR_PSR3_AACA_WIDTH                       1u
#define FR_PSR3_AACA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_AACA_SHIFT))&FR_PSR3_AACA_MASK)
#define FR_PSR3_ABVA_MASK                        0x10u
#define FR_PSR3_ABVA_SHIFT                       4u
#define FR_PSR3_ABVA_WIDTH                       1u
#define FR_PSR3_ABVA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_ABVA_SHIFT))&FR_PSR3_ABVA_MASK)
#define FR_PSR3_WUA_MASK                         0x20u
#define FR_PSR3_WUA_SHIFT                        5u
#define FR_PSR3_WUA_WIDTH                        1u
#define FR_PSR3_WUA(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR3_WUA_SHIFT))&FR_PSR3_WUA_MASK)
#define FR_PSR3_AVFB_MASK                        0x100u
#define FR_PSR3_AVFB_SHIFT                       8u
#define FR_PSR3_AVFB_WIDTH                       1u
#define FR_PSR3_AVFB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_AVFB_SHIFT))&FR_PSR3_AVFB_MASK)
#define FR_PSR3_ASEB_MASK                        0x200u
#define FR_PSR3_ASEB_SHIFT                       9u
#define FR_PSR3_ASEB_WIDTH                       1u
#define FR_PSR3_ASEB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_ASEB_SHIFT))&FR_PSR3_ASEB_MASK)
#define FR_PSR3_ACEB_MASK                        0x400u
#define FR_PSR3_ACEB_SHIFT                       10u
#define FR_PSR3_ACEB_WIDTH                       1u
#define FR_PSR3_ACEB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_ACEB_SHIFT))&FR_PSR3_ACEB_MASK)
#define FR_PSR3_AACB_MASK                        0x800u
#define FR_PSR3_AACB_SHIFT                       11u
#define FR_PSR3_AACB_WIDTH                       1u
#define FR_PSR3_AACB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_AACB_SHIFT))&FR_PSR3_AACB_MASK)
#define FR_PSR3_ABVB_MASK                        0x1000u
#define FR_PSR3_ABVB_SHIFT                       12u
#define FR_PSR3_ABVB_WIDTH                       1u
#define FR_PSR3_ABVB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_ABVB_SHIFT))&FR_PSR3_ABVB_MASK)
#define FR_PSR3_WUB_MASK                         0x2000u
#define FR_PSR3_WUB_SHIFT                        13u
#define FR_PSR3_WUB_WIDTH                        1u
#define FR_PSR3_WUB(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR3_WUB_SHIFT))&FR_PSR3_WUB_MASK)
/* MTCTR Bit Fields */
#define FR_MTCTR_MTCT_MASK                       0x3FFFu
#define FR_MTCTR_MTCT_SHIFT                      0u
#define FR_MTCTR_MTCT_WIDTH                      14u
#define FR_MTCTR_MTCT(x)                         (((uint16_t)(((uint16_t)(x))<<FR_MTCTR_MTCT_SHIFT))&FR_MTCTR_MTCT_MASK)
/* CYCTR Bit Fields */
#define FR_CYCTR_CYCCNT_MASK                     0x3Fu
#define FR_CYCTR_CYCCNT_SHIFT                    0u
#define FR_CYCTR_CYCCNT_WIDTH                    6u
#define FR_CYCTR_CYCCNT(x)                       (((uint16_t)(((uint16_t)(x))<<FR_CYCTR_CYCCNT_SHIFT))&FR_CYCTR_CYCCNT_MASK)
/* SLTCTAR Bit Fields */
#define FR_SLTCTAR_SLOTCNTA_MASK                 0x7FFu
#define FR_SLTCTAR_SLOTCNTA_SHIFT                0u
#define FR_SLTCTAR_SLOTCNTA_WIDTH                11u
#define FR_SLTCTAR_SLOTCNTA(x)                   (((uint16_t)(((uint16_t)(x))<<FR_SLTCTAR_SLOTCNTA_SHIFT))&FR_SLTCTAR_SLOTCNTA_MASK)
/* SLTCTBR Bit Fields */
#define FR_SLTCTBR_SLOTCNTB_MASK                 0x7FFu
#define FR_SLTCTBR_SLOTCNTB_SHIFT                0u
#define FR_SLTCTBR_SLOTCNTB_WIDTH                11u
#define FR_SLTCTBR_SLOTCNTB(x)                   (((uint16_t)(((uint16_t)(x))<<FR_SLTCTBR_SLOTCNTB_SHIFT))&FR_SLTCTBR_SLOTCNTB_MASK)
/* RTCORVR Bit Fields */
#define FR_RTCORVR_RATECORR_MASK                 0xFFFFu
#define FR_RTCORVR_RATECORR_SHIFT                0u
#define FR_RTCORVR_RATECORR_WIDTH                16u
#define FR_RTCORVR_RATECORR(x)                   (((uint16_t)(((uint16_t)(x))<<FR_RTCORVR_RATECORR_SHIFT))&FR_RTCORVR_RATECORR_MASK)
/* OFCORVR Bit Fields */
#define FR_OFCORVR_OFFSETCORR_MASK               0xFFFFu
#define FR_OFCORVR_OFFSETCORR_SHIFT              0u
#define FR_OFCORVR_OFFSETCORR_WIDTH              16u
#define FR_OFCORVR_OFFSETCORR(x)                 (((uint16_t)(((uint16_t)(x))<<FR_OFCORVR_OFFSETCORR_SHIFT))&FR_OFCORVR_OFFSETCORR_MASK)
/* CIFR Bit Fields */
#define FR_CIFR_TBIF_MASK                        0x1u
#define FR_CIFR_TBIF_SHIFT                       0u
#define FR_CIFR_TBIF_WIDTH                       1u
#define FR_CIFR_TBIF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CIFR_TBIF_SHIFT))&FR_CIFR_TBIF_MASK)
#define FR_CIFR_RBIF_MASK                        0x2u
#define FR_CIFR_RBIF_SHIFT                       1u
#define FR_CIFR_RBIF_WIDTH                       1u
#define FR_CIFR_RBIF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CIFR_RBIF_SHIFT))&FR_CIFR_RBIF_MASK)
#define FR_CIFR_FAFAIF_MASK                      0x4u
#define FR_CIFR_FAFAIF_SHIFT                     2u
#define FR_CIFR_FAFAIF_WIDTH                     1u
#define FR_CIFR_FAFAIF(x)                        (((uint16_t)(((uint16_t)(x))<<FR_CIFR_FAFAIF_SHIFT))&FR_CIFR_FAFAIF_MASK)
#define FR_CIFR_FAFBIF_MASK                      0x8u
#define FR_CIFR_FAFBIF_SHIFT                     3u
#define FR_CIFR_FAFBIF_WIDTH                     1u
#define FR_CIFR_FAFBIF(x)                        (((uint16_t)(((uint16_t)(x))<<FR_CIFR_FAFBIF_SHIFT))&FR_CIFR_FAFBIF_MASK)
#define FR_CIFR_WUPIF_MASK                       0x10u
#define FR_CIFR_WUPIF_SHIFT                      4u
#define FR_CIFR_WUPIF_WIDTH                      1u
#define FR_CIFR_WUPIF(x)                         (((uint16_t)(((uint16_t)(x))<<FR_CIFR_WUPIF_SHIFT))&FR_CIFR_WUPIF_MASK)
#define FR_CIFR_CHIF_MASK                        0x20u
#define FR_CIFR_CHIF_SHIFT                       5u
#define FR_CIFR_CHIF_WIDTH                       1u
#define FR_CIFR_CHIF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CIFR_CHIF_SHIFT))&FR_CIFR_CHIF_MASK)
#define FR_CIFR_PRIF_MASK                        0x40u
#define FR_CIFR_PRIF_SHIFT                       6u
#define FR_CIFR_PRIF_WIDTH                       1u
#define FR_CIFR_PRIF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CIFR_PRIF_SHIFT))&FR_CIFR_PRIF_MASK)
#define FR_CIFR_MIF_MASK                         0x80u
#define FR_CIFR_MIF_SHIFT                        7u
#define FR_CIFR_MIF_WIDTH                        1u
#define FR_CIFR_MIF(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CIFR_MIF_SHIFT))&FR_CIFR_MIF_MASK)
/* SYMATOR Bit Fields */
#define FR_SYMATOR_TIMEOUT_MASK                  0xFFu
#define FR_SYMATOR_TIMEOUT_SHIFT                 0u
#define FR_SYMATOR_TIMEOUT_WIDTH                 8u
#define FR_SYMATOR_TIMEOUT(x)                    (((uint16_t)(((uint16_t)(x))<<FR_SYMATOR_TIMEOUT_SHIFT))&FR_SYMATOR_TIMEOUT_MASK)
/* SFCNTR Bit Fields */
#define FR_SFCNTR_SFODA_MASK                     0xFu
#define FR_SFCNTR_SFODA_SHIFT                    0u
#define FR_SFCNTR_SFODA_WIDTH                    4u
#define FR_SFCNTR_SFODA(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFCNTR_SFODA_SHIFT))&FR_SFCNTR_SFODA_MASK)
#define FR_SFCNTR_SFODB_MASK                     0xF0u
#define FR_SFCNTR_SFODB_SHIFT                    4u
#define FR_SFCNTR_SFODB_WIDTH                    4u
#define FR_SFCNTR_SFODB(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFCNTR_SFODB_SHIFT))&FR_SFCNTR_SFODB_MASK)
#define FR_SFCNTR_SFEVA_MASK                     0xF00u
#define FR_SFCNTR_SFEVA_SHIFT                    8u
#define FR_SFCNTR_SFEVA_WIDTH                    4u
#define FR_SFCNTR_SFEVA(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFCNTR_SFEVA_SHIFT))&FR_SFCNTR_SFEVA_MASK)
#define FR_SFCNTR_SFEVB_MASK                     0xF000u
#define FR_SFCNTR_SFEVB_SHIFT                    12u
#define FR_SFCNTR_SFEVB_WIDTH                    4u
#define FR_SFCNTR_SFEVB(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFCNTR_SFEVB_SHIFT))&FR_SFCNTR_SFEVB_MASK)
/* SFTOR Bit Fields */
#define FR_SFTOR_SFT_OFFSET_MASK                 0xFFFEu
#define FR_SFTOR_SFT_OFFSET_SHIFT                1u
#define FR_SFTOR_SFT_OFFSET_WIDTH                15u
#define FR_SFTOR_SFT_OFFSET(x)                   (((uint16_t)(((uint16_t)(x))<<FR_SFTOR_SFT_OFFSET_SHIFT))&FR_SFTOR_SFT_OFFSET_MASK)
/* SFTCCSR Bit Fields */
#define FR_SFTCCSR_SIDEN_MASK                    0x1u
#define FR_SFTCCSR_SIDEN_SHIFT                   0u
#define FR_SFTCCSR_SIDEN_WIDTH                   1u
#define FR_SFTCCSR_SIDEN(x)                      (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_SIDEN_SHIFT))&FR_SFTCCSR_SIDEN_MASK)
#define FR_SFTCCSR_SDVEN_MASK                    0x2u
#define FR_SFTCCSR_SDVEN_SHIFT                   1u
#define FR_SFTCCSR_SDVEN_WIDTH                   1u
#define FR_SFTCCSR_SDVEN(x)                      (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_SDVEN_SHIFT))&FR_SFTCCSR_SDVEN_MASK)
#define FR_SFTCCSR_OPT_MASK                      0x4u
#define FR_SFTCCSR_OPT_SHIFT                     2u
#define FR_SFTCCSR_OPT_WIDTH                     1u
#define FR_SFTCCSR_OPT(x)                        (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_OPT_SHIFT))&FR_SFTCCSR_OPT_MASK)
#define FR_SFTCCSR_OVAL_MASK                     0x10u
#define FR_SFTCCSR_OVAL_SHIFT                    4u
#define FR_SFTCCSR_OVAL_WIDTH                    1u
#define FR_SFTCCSR_OVAL(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_OVAL_SHIFT))&FR_SFTCCSR_OVAL_MASK)
#define FR_SFTCCSR_EVAL_MASK                     0x20u
#define FR_SFTCCSR_EVAL_SHIFT                    5u
#define FR_SFTCCSR_EVAL_WIDTH                    1u
#define FR_SFTCCSR_EVAL(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_EVAL_SHIFT))&FR_SFTCCSR_EVAL_MASK)
#define FR_SFTCCSR_OLKS_MASK                     0x40u
#define FR_SFTCCSR_OLKS_SHIFT                    6u
#define FR_SFTCCSR_OLKS_WIDTH                    1u
#define FR_SFTCCSR_OLKS(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_OLKS_SHIFT))&FR_SFTCCSR_OLKS_MASK)
#define FR_SFTCCSR_ELKS_MASK                     0x80u
#define FR_SFTCCSR_ELKS_SHIFT                    7u
#define FR_SFTCCSR_ELKS_WIDTH                    1u
#define FR_SFTCCSR_ELKS(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_ELKS_SHIFT))&FR_SFTCCSR_ELKS_MASK)
#define FR_SFTCCSR_CYCNUM_MASK                   0x3F00u
#define FR_SFTCCSR_CYCNUM_SHIFT                  8u
#define FR_SFTCCSR_CYCNUM_WIDTH                  6u
#define FR_SFTCCSR_CYCNUM(x)                     (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_CYCNUM_SHIFT))&FR_SFTCCSR_CYCNUM_MASK)
#define FR_SFTCCSR_OLKT_MASK                     0x4000u
#define FR_SFTCCSR_OLKT_SHIFT                    14u
#define FR_SFTCCSR_OLKT_WIDTH                    1u
#define FR_SFTCCSR_OLKT(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_OLKT_SHIFT))&FR_SFTCCSR_OLKT_MASK)
#define FR_SFTCCSR_ELKT_MASK                     0x8000u
#define FR_SFTCCSR_ELKT_SHIFT                    15u
#define FR_SFTCCSR_ELKT_WIDTH                    1u
#define FR_SFTCCSR_ELKT(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_ELKT_SHIFT))&FR_SFTCCSR_ELKT_MASK)
/* SFIDRFR Bit Fields */
#define FR_SFIDRFR_SYNFRID_MASK                  0x3FFu
#define FR_SFIDRFR_SYNFRID_SHIFT                 0u
#define FR_SFIDRFR_SYNFRID_WIDTH                 10u
#define FR_SFIDRFR_SYNFRID(x)                    (((uint16_t)(((uint16_t)(x))<<FR_SFIDRFR_SYNFRID_SHIFT))&FR_SFIDRFR_SYNFRID_MASK)
/* SFIDAFVR Bit Fields */
#define FR_SFIDAFVR_FVAL_MASK                    0x3FFu
#define FR_SFIDAFVR_FVAL_SHIFT                   0u
#define FR_SFIDAFVR_FVAL_WIDTH                   10u
#define FR_SFIDAFVR_FVAL(x)                      (((uint16_t)(((uint16_t)(x))<<FR_SFIDAFVR_FVAL_SHIFT))&FR_SFIDAFVR_FVAL_MASK)
/* SFIDAFMR Bit Fields */
#define FR_SFIDAFMR_FMSK_MASK                    0x3FFu
#define FR_SFIDAFMR_FMSK_SHIFT                   0u
#define FR_SFIDAFMR_FMSK_WIDTH                   10u
#define FR_SFIDAFMR_FMSK(x)                      (((uint16_t)(((uint16_t)(x))<<FR_SFIDAFMR_FMSK_SHIFT))&FR_SFIDAFMR_FMSK_MASK)
/* NMVR Bit Fields */
#define FR_NMVR_NMVP_MASK                        0xFFFFu
#define FR_NMVR_NMVP_SHIFT                       0u
#define FR_NMVR_NMVP_WIDTH                       16u
#define FR_NMVR_NMVP(x)                          (((uint16_t)(((uint16_t)(x))<<FR_NMVR_NMVP_SHIFT))&FR_NMVR_NMVP_MASK)
/* NMVLR Bit Fields */
#define FR_NMVLR_NMVL_MASK                       0xFu
#define FR_NMVLR_NMVL_SHIFT                      0u
#define FR_NMVLR_NMVL_WIDTH                      4u
#define FR_NMVLR_NMVL(x)                         (((uint16_t)(((uint16_t)(x))<<FR_NMVLR_NMVL_SHIFT))&FR_NMVLR_NMVL_MASK)
/* TICCR Bit Fields */
#define FR_TICCR_T1ST_MASK                       0x1u
#define FR_TICCR_T1ST_SHIFT                      0u
#define FR_TICCR_T1ST_WIDTH                      1u
#define FR_TICCR_T1ST(x)                         (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T1ST_SHIFT))&FR_TICCR_T1ST_MASK)
#define FR_TICCR_T1TR_MASK                       0x2u
#define FR_TICCR_T1TR_SHIFT                      1u
#define FR_TICCR_T1TR_WIDTH                      1u
#define FR_TICCR_T1TR(x)                         (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T1TR_SHIFT))&FR_TICCR_T1TR_MASK)
#define FR_TICCR_T1SP_MASK                       0x4u
#define FR_TICCR_T1SP_SHIFT                      2u
#define FR_TICCR_T1SP_WIDTH                      1u
#define FR_TICCR_T1SP(x)                         (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T1SP_SHIFT))&FR_TICCR_T1SP_MASK)
#define FR_TICCR_T1_REP_MASK                     0x10u
#define FR_TICCR_T1_REP_SHIFT                    4u
#define FR_TICCR_T1_REP_WIDTH                    1u
#define FR_TICCR_T1_REP(x)                       (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T1_REP_SHIFT))&FR_TICCR_T1_REP_MASK)
#define FR_TICCR_T2ST_MASK                       0x100u
#define FR_TICCR_T2ST_SHIFT                      8u
#define FR_TICCR_T2ST_WIDTH                      1u
#define FR_TICCR_T2ST(x)                         (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T2ST_SHIFT))&FR_TICCR_T2ST_MASK)
#define FR_TICCR_T2TR_MASK                       0x200u
#define FR_TICCR_T2TR_SHIFT                      9u
#define FR_TICCR_T2TR_WIDTH                      1u
#define FR_TICCR_T2TR(x)                         (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T2TR_SHIFT))&FR_TICCR_T2TR_MASK)
#define FR_TICCR_T2SP_MASK                       0x400u
#define FR_TICCR_T2SP_SHIFT                      10u
#define FR_TICCR_T2SP_WIDTH                      1u
#define FR_TICCR_T2SP(x)                         (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T2SP_SHIFT))&FR_TICCR_T2SP_MASK)
#define FR_TICCR_T2_REP_MASK                     0x1000u
#define FR_TICCR_T2_REP_SHIFT                    12u
#define FR_TICCR_T2_REP_WIDTH                    1u
#define FR_TICCR_T2_REP(x)                       (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T2_REP_SHIFT))&FR_TICCR_T2_REP_MASK)
#define FR_TICCR_T2_CFG_MASK                     0x2000u
#define FR_TICCR_T2_CFG_SHIFT                    13u
#define FR_TICCR_T2_CFG_WIDTH                    1u
#define FR_TICCR_T2_CFG(x)                       (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T2_CFG_SHIFT))&FR_TICCR_T2_CFG_MASK)
/* TI1CYSR Bit Fields */
#define FR_TI1CYSR_T1_CYC_MSK_MASK               0x3Fu
#define FR_TI1CYSR_T1_CYC_MSK_SHIFT              0u
#define FR_TI1CYSR_T1_CYC_MSK_WIDTH              6u
#define FR_TI1CYSR_T1_CYC_MSK(x)                 (((uint16_t)(((uint16_t)(x))<<FR_TI1CYSR_T1_CYC_MSK_SHIFT))&FR_TI1CYSR_T1_CYC_MSK_MASK)
#define FR_TI1CYSR_T1_CYC_VAL_MASK               0x3F00u
#define FR_TI1CYSR_T1_CYC_VAL_SHIFT              8u
#define FR_TI1CYSR_T1_CYC_VAL_WIDTH              6u
#define FR_TI1CYSR_T1_CYC_VAL(x)                 (((uint16_t)(((uint16_t)(x))<<FR_TI1CYSR_T1_CYC_VAL_SHIFT))&FR_TI1CYSR_T1_CYC_VAL_MASK)
/* TI1MTOR Bit Fields */
#define FR_TI1MTOR_T1_MTOFFSET_MASK              0x3FFFu
#define FR_TI1MTOR_T1_MTOFFSET_SHIFT             0u
#define FR_TI1MTOR_T1_MTOFFSET_WIDTH             14u
#define FR_TI1MTOR_T1_MTOFFSET(x)                (((uint16_t)(((uint16_t)(x))<<FR_TI1MTOR_T1_MTOFFSET_SHIFT))&FR_TI1MTOR_T1_MTOFFSET_MASK)
/* TI2CR0_ABS Bit Fields */
#define FR_TI2CR0_ABS_T2CYCMSK_MASK              0x3Fu
#define FR_TI2CR0_ABS_T2CYCMSK_SHIFT             0u
#define FR_TI2CR0_ABS_T2CYCMSK_WIDTH             6u
#define FR_TI2CR0_ABS_T2CYCMSK(x)                (((uint16_t)(((uint16_t)(x))<<FR_TI2CR0_ABS_T2CYCMSK_SHIFT))&FR_TI2CR0_ABS_T2CYCMSK_MASK)
#define FR_TI2CR0_ABS_T2CYCVAL_MASK              0x3F00u
#define FR_TI2CR0_ABS_T2CYCVAL_SHIFT             8u
#define FR_TI2CR0_ABS_T2CYCVAL_WIDTH             6u
#define FR_TI2CR0_ABS_T2CYCVAL(x)                (((uint16_t)(((uint16_t)(x))<<FR_TI2CR0_ABS_T2CYCVAL_SHIFT))&FR_TI2CR0_ABS_T2CYCVAL_MASK)
/* TI2CR0_REL Bit Fields */
#define FR_TI2CR0_REL_T2MTCNT_MASK               0xFFFFu
#define FR_TI2CR0_REL_T2MTCNT_SHIFT              0u
#define FR_TI2CR0_REL_T2MTCNT_WIDTH              16u
#define FR_TI2CR0_REL_T2MTCNT(x)                 (((uint16_t)(((uint16_t)(x))<<FR_TI2CR0_REL_T2MTCNT_SHIFT))&FR_TI2CR0_REL_T2MTCNT_MASK)
/* TI2CR1_ABS Bit Fields */
#define FR_TI2CR1_ABS_T2MOFF_MASK                0x3FFFu
#define FR_TI2CR1_ABS_T2MOFF_SHIFT               0u
#define FR_TI2CR1_ABS_T2MOFF_WIDTH               14u
#define FR_TI2CR1_ABS_T2MOFF(x)                  (((uint16_t)(((uint16_t)(x))<<FR_TI2CR1_ABS_T2MOFF_SHIFT))&FR_TI2CR1_ABS_T2MOFF_MASK)
/* TI2CR1_REL Bit Fields */
#define FR_TI2CR1_REL_T2MTCNT_MASK               0xFFFFu
#define FR_TI2CR1_REL_T2MTCNT_SHIFT              0u
#define FR_TI2CR1_REL_T2MTCNT_WIDTH              16u
#define FR_TI2CR1_REL_T2MTCNT(x)                 (((uint16_t)(((uint16_t)(x))<<FR_TI2CR1_REL_T2MTCNT_SHIFT))&FR_TI2CR1_REL_T2MTCNT_MASK)
/* SSSR Bit Fields */
#define FR_SSSR_SLOTNUMBER_MASK                  0x7FFu
#define FR_SSSR_SLOTNUMBER_SHIFT                 0u
#define FR_SSSR_SLOTNUMBER_WIDTH                 11u
#define FR_SSSR_SLOTNUMBER(x)                    (((uint16_t)(((uint16_t)(x))<<FR_SSSR_SLOTNUMBER_SHIFT))&FR_SSSR_SLOTNUMBER_MASK)
#define FR_SSSR_SEL_MASK                         0x3000u
#define FR_SSSR_SEL_SHIFT                        12u
#define FR_SSSR_SEL_WIDTH                        2u
#define FR_SSSR_SEL(x)                           (((uint16_t)(((uint16_t)(x))<<FR_SSSR_SEL_SHIFT))&FR_SSSR_SEL_MASK)
#define FR_SSSR_WMD_MASK                         0x8000u
#define FR_SSSR_WMD_SHIFT                        15u
#define FR_SSSR_WMD_WIDTH                        1u
#define FR_SSSR_WMD(x)                           (((uint16_t)(((uint16_t)(x))<<FR_SSSR_WMD_SHIFT))&FR_SSSR_WMD_MASK)
/* SSCCR Bit Fields */
#define FR_SSCCR_STATUSMASK_MASK                 0xFu
#define FR_SSCCR_STATUSMASK_SHIFT                0u
#define FR_SSCCR_STATUSMASK_WIDTH                4u
#define FR_SSCCR_STATUSMASK(x)                   (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_STATUSMASK_SHIFT))&FR_SSCCR_STATUSMASK_MASK)
#define FR_SSCCR_SUF_MASK                        0x10u
#define FR_SSCCR_SUF_SHIFT                       4u
#define FR_SSCCR_SUF_WIDTH                       1u
#define FR_SSCCR_SUF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_SUF_SHIFT))&FR_SSCCR_SUF_MASK)
#define FR_SSCCR_NUF_MASK                        0x20u
#define FR_SSCCR_NUF_SHIFT                       5u
#define FR_SSCCR_NUF_WIDTH                       1u
#define FR_SSCCR_NUF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_NUF_SHIFT))&FR_SSCCR_NUF_MASK)
#define FR_SSCCR_SYF_MASK                        0x40u
#define FR_SSCCR_SYF_SHIFT                       6u
#define FR_SSCCR_SYF_WIDTH                       1u
#define FR_SSCCR_SYF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_SYF_SHIFT))&FR_SSCCR_SYF_MASK)
#define FR_SSCCR_VFR_MASK                        0x80u
#define FR_SSCCR_VFR_SHIFT                       7u
#define FR_SSCCR_VFR_WIDTH                       1u
#define FR_SSCCR_VFR(x)                          (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_VFR_SHIFT))&FR_SSCCR_VFR_MASK)
#define FR_SSCCR_MCY_MASK                        0x100u
#define FR_SSCCR_MCY_SHIFT                       8u
#define FR_SSCCR_MCY_WIDTH                       1u
#define FR_SSCCR_MCY(x)                          (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_MCY_SHIFT))&FR_SSCCR_MCY_MASK)
#define FR_SSCCR_CNTCFG_MASK                     0x600u
#define FR_SSCCR_CNTCFG_SHIFT                    9u
#define FR_SSCCR_CNTCFG_WIDTH                    2u
#define FR_SSCCR_CNTCFG(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_CNTCFG_SHIFT))&FR_SSCCR_CNTCFG_MASK)
#define FR_SSCCR_SEL_MASK                        0x3000u
#define FR_SSCCR_SEL_SHIFT                       12u
#define FR_SSCCR_SEL_WIDTH                       2u
#define FR_SSCCR_SEL(x)                          (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_SEL_SHIFT))&FR_SSCCR_SEL_MASK)
#define FR_SSCCR_WMD_MASK                        0x8000u
#define FR_SSCCR_WMD_SHIFT                       15u
#define FR_SSCCR_WMD_WIDTH                       1u
#define FR_SSCCR_WMD(x)                          (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_WMD_SHIFT))&FR_SSCCR_WMD_MASK)
/* SSR Bit Fields */
#define FR_SSR_TCA_MASK                          0x1u
#define FR_SSR_TCA_SHIFT                         0u
#define FR_SSR_TCA_WIDTH                         1u
#define FR_SSR_TCA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_TCA_SHIFT))&FR_SSR_TCA_MASK)
#define FR_SSR_BVA_MASK                          0x2u
#define FR_SSR_BVA_SHIFT                         1u
#define FR_SSR_BVA_WIDTH                         1u
#define FR_SSR_BVA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_BVA_SHIFT))&FR_SSR_BVA_MASK)
#define FR_SSR_CEA_MASK                          0x4u
#define FR_SSR_CEA_SHIFT                         2u
#define FR_SSR_CEA_WIDTH                         1u
#define FR_SSR_CEA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_CEA_SHIFT))&FR_SSR_CEA_MASK)
#define FR_SSR_SEA_MASK                          0x8u
#define FR_SSR_SEA_SHIFT                         3u
#define FR_SSR_SEA_WIDTH                         1u
#define FR_SSR_SEA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_SEA_SHIFT))&FR_SSR_SEA_MASK)
#define FR_SSR_SUA_MASK                          0x10u
#define FR_SSR_SUA_SHIFT                         4u
#define FR_SSR_SUA_WIDTH                         1u
#define FR_SSR_SUA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_SUA_SHIFT))&FR_SSR_SUA_MASK)
#define FR_SSR_NFA_MASK                          0x20u
#define FR_SSR_NFA_SHIFT                         5u
#define FR_SSR_NFA_WIDTH                         1u
#define FR_SSR_NFA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_NFA_SHIFT))&FR_SSR_NFA_MASK)
#define FR_SSR_SYA_MASK                          0x40u
#define FR_SSR_SYA_SHIFT                         6u
#define FR_SSR_SYA_WIDTH                         1u
#define FR_SSR_SYA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_SYA_SHIFT))&FR_SSR_SYA_MASK)
#define FR_SSR_VFA_MASK                          0x80u
#define FR_SSR_VFA_SHIFT                         7u
#define FR_SSR_VFA_WIDTH                         1u
#define FR_SSR_VFA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_VFA_SHIFT))&FR_SSR_VFA_MASK)
#define FR_SSR_TCB_MASK                          0x100u
#define FR_SSR_TCB_SHIFT                         8u
#define FR_SSR_TCB_WIDTH                         1u
#define FR_SSR_TCB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_TCB_SHIFT))&FR_SSR_TCB_MASK)
#define FR_SSR_BVB_MASK                          0x200u
#define FR_SSR_BVB_SHIFT                         9u
#define FR_SSR_BVB_WIDTH                         1u
#define FR_SSR_BVB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_BVB_SHIFT))&FR_SSR_BVB_MASK)
#define FR_SSR_CEB_MASK                          0x400u
#define FR_SSR_CEB_SHIFT                         10u
#define FR_SSR_CEB_WIDTH                         1u
#define FR_SSR_CEB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_CEB_SHIFT))&FR_SSR_CEB_MASK)
#define FR_SSR_SEB_MASK                          0x800u
#define FR_SSR_SEB_SHIFT                         11u
#define FR_SSR_SEB_WIDTH                         1u
#define FR_SSR_SEB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_SEB_SHIFT))&FR_SSR_SEB_MASK)
#define FR_SSR_SUB_MASK                          0x1000u
#define FR_SSR_SUB_SHIFT                         12u
#define FR_SSR_SUB_WIDTH                         1u
#define FR_SSR_SUB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_SUB_SHIFT))&FR_SSR_SUB_MASK)
#define FR_SSR_NFB_MASK                          0x2000u
#define FR_SSR_NFB_SHIFT                         13u
#define FR_SSR_NFB_WIDTH                         1u
#define FR_SSR_NFB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_NFB_SHIFT))&FR_SSR_NFB_MASK)
#define FR_SSR_SYB_MASK                          0x4000u
#define FR_SSR_SYB_SHIFT                         14u
#define FR_SSR_SYB_WIDTH                         1u
#define FR_SSR_SYB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_SYB_SHIFT))&FR_SSR_SYB_MASK)
#define FR_SSR_VFB_MASK                          0x8000u
#define FR_SSR_VFB_SHIFT                         15u
#define FR_SSR_VFB_WIDTH                         1u
#define FR_SSR_VFB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_VFB_SHIFT))&FR_SSR_VFB_MASK)
/* SSCR Bit Fields */
#define FR_SSCR_SLOTSTATUSCNT_MASK               0xFFFFu
#define FR_SSCR_SLOTSTATUSCNT_SHIFT              0u
#define FR_SSCR_SLOTSTATUSCNT_WIDTH              16u
#define FR_SSCR_SLOTSTATUSCNT(x)                 (((uint16_t)(((uint16_t)(x))<<FR_SSCR_SLOTSTATUSCNT_SHIFT))&FR_SSCR_SLOTSTATUSCNT_MASK)
/* MTSACFR Bit Fields */
#define FR_MTSACFR_CYCCNTVAL_MASK                0x3Fu
#define FR_MTSACFR_CYCCNTVAL_SHIFT               0u
#define FR_MTSACFR_CYCCNTVAL_WIDTH               6u
#define FR_MTSACFR_CYCCNTVAL(x)                  (((uint16_t)(((uint16_t)(x))<<FR_MTSACFR_CYCCNTVAL_SHIFT))&FR_MTSACFR_CYCCNTVAL_MASK)
#define FR_MTSACFR_CYCCNTMSK_MASK                0x3F00u
#define FR_MTSACFR_CYCCNTMSK_SHIFT               8u
#define FR_MTSACFR_CYCCNTMSK_WIDTH               6u
#define FR_MTSACFR_CYCCNTMSK(x)                  (((uint16_t)(((uint16_t)(x))<<FR_MTSACFR_CYCCNTMSK_SHIFT))&FR_MTSACFR_CYCCNTMSK_MASK)
#define FR_MTSACFR_MTE_MASK                      0x8000u
#define FR_MTSACFR_MTE_SHIFT                     15u
#define FR_MTSACFR_MTE_WIDTH                     1u
#define FR_MTSACFR_MTE(x)                        (((uint16_t)(((uint16_t)(x))<<FR_MTSACFR_MTE_SHIFT))&FR_MTSACFR_MTE_MASK)
/* MTSBCFR Bit Fields */
#define FR_MTSBCFR_CYCCNTVAL_MASK                0x3Fu
#define FR_MTSBCFR_CYCCNTVAL_SHIFT               0u
#define FR_MTSBCFR_CYCCNTVAL_WIDTH               6u
#define FR_MTSBCFR_CYCCNTVAL(x)                  (((uint16_t)(((uint16_t)(x))<<FR_MTSBCFR_CYCCNTVAL_SHIFT))&FR_MTSBCFR_CYCCNTVAL_MASK)
#define FR_MTSBCFR_CYCCNTMSK_MASK                0x3F00u
#define FR_MTSBCFR_CYCCNTMSK_SHIFT               8u
#define FR_MTSBCFR_CYCCNTMSK_WIDTH               6u
#define FR_MTSBCFR_CYCCNTMSK(x)                  (((uint16_t)(((uint16_t)(x))<<FR_MTSBCFR_CYCCNTMSK_SHIFT))&FR_MTSBCFR_CYCCNTMSK_MASK)
#define FR_MTSBCFR_MTE_MASK                      0x8000u
#define FR_MTSBCFR_MTE_SHIFT                     15u
#define FR_MTSBCFR_MTE_WIDTH                     1u
#define FR_MTSBCFR_MTE(x)                        (((uint16_t)(((uint16_t)(x))<<FR_MTSBCFR_MTE_SHIFT))&FR_MTSBCFR_MTE_MASK)
/* RSBIR Bit Fields */
#define FR_RSBIR_RSBIDX_MASK                     0x7Fu
#define FR_RSBIR_RSBIDX_SHIFT                    0u
#define FR_RSBIR_RSBIDX_WIDTH                    7u
#define FR_RSBIR_RSBIDX(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RSBIR_RSBIDX_SHIFT))&FR_RSBIR_RSBIDX_MASK)
#define FR_RSBIR_SEL_MASK                        0x3000u
#define FR_RSBIR_SEL_SHIFT                       12u
#define FR_RSBIR_SEL_WIDTH                       2u
#define FR_RSBIR_SEL(x)                          (((uint16_t)(((uint16_t)(x))<<FR_RSBIR_SEL_SHIFT))&FR_RSBIR_SEL_MASK)
#define FR_RSBIR_WMD_MASK                        0x8000u
#define FR_RSBIR_WMD_SHIFT                       15u
#define FR_RSBIR_WMD_WIDTH                       1u
#define FR_RSBIR_WMD(x)                          (((uint16_t)(((uint16_t)(x))<<FR_RSBIR_WMD_SHIFT))&FR_RSBIR_WMD_MASK)
/* RFWMSR Bit Fields */
#define FR_RFWMSR_SEL_MASK                       0x1u
#define FR_RFWMSR_SEL_SHIFT                      0u
#define FR_RFWMSR_SEL_WIDTH                      1u
#define FR_RFWMSR_SEL(x)                         (((uint16_t)(((uint16_t)(x))<<FR_RFWMSR_SEL_SHIFT))&FR_RFWMSR_SEL_MASK)
#define FR_RFWMSR_WM_MASK                        0xFF00u
#define FR_RFWMSR_WM_SHIFT                       8u
#define FR_RFWMSR_WM_WIDTH                       8u
#define FR_RFWMSR_WM(x)                          (((uint16_t)(((uint16_t)(x))<<FR_RFWMSR_WM_SHIFT))&FR_RFWMSR_WM_MASK)
/* RFSIR Bit Fields */
#define FR_RFSIR_SIDX_MASK                       0x3FFu
#define FR_RFSIR_SIDX_SHIFT                      0u
#define FR_RFSIR_SIDX_WIDTH                      10u
#define FR_RFSIR_SIDX(x)                         (((uint16_t)(((uint16_t)(x))<<FR_RFSIR_SIDX_SHIFT))&FR_RFSIR_SIDX_MASK)
/* RFDSR Bit Fields */
#define FR_RFDSR_ENTRY_SIZE_MASK                 0x7Fu
#define FR_RFDSR_ENTRY_SIZE_SHIFT                0u
#define FR_RFDSR_ENTRY_SIZE_WIDTH                7u
#define FR_RFDSR_ENTRY_SIZE(x)                   (((uint16_t)(((uint16_t)(x))<<FR_RFDSR_ENTRY_SIZE_SHIFT))&FR_RFDSR_ENTRY_SIZE_MASK)
#define FR_RFDSR_FIFO_DEPTH_MASK                 0xFF00u
#define FR_RFDSR_FIFO_DEPTH_SHIFT                8u
#define FR_RFDSR_FIFO_DEPTH_WIDTH                8u
#define FR_RFDSR_FIFO_DEPTH(x)                   (((uint16_t)(((uint16_t)(x))<<FR_RFDSR_FIFO_DEPTH_SHIFT))&FR_RFDSR_FIFO_DEPTH_MASK)
/* RFARIR Bit Fields */
#define FR_RFARIR_RDIDX_MASK                     0x3FFu
#define FR_RFARIR_RDIDX_SHIFT                    0u
#define FR_RFARIR_RDIDX_WIDTH                    10u
#define FR_RFARIR_RDIDX(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFARIR_RDIDX_SHIFT))&FR_RFARIR_RDIDX_MASK)
/* RFBRIR Bit Fields */
#define FR_RFBRIR_RDIDX_MASK                     0x3FFu
#define FR_RFBRIR_RDIDX_SHIFT                    0u
#define FR_RFBRIR_RDIDX_WIDTH                    10u
#define FR_RFBRIR_RDIDX(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFBRIR_RDIDX_SHIFT))&FR_RFBRIR_RDIDX_MASK)
/* RFMIDAFVR Bit Fields */
#define FR_RFMIDAFVR_MIDAFVAL_MASK               0xFFFFu
#define FR_RFMIDAFVR_MIDAFVAL_SHIFT              0u
#define FR_RFMIDAFVR_MIDAFVAL_WIDTH              16u
#define FR_RFMIDAFVR_MIDAFVAL(x)                 (((uint16_t)(((uint16_t)(x))<<FR_RFMIDAFVR_MIDAFVAL_SHIFT))&FR_RFMIDAFVR_MIDAFVAL_MASK)
/* RFMIDAFMR Bit Fields */
#define FR_RFMIDAFMR_MIDAFMSK_MASK               0xFFFFu
#define FR_RFMIDAFMR_MIDAFMSK_SHIFT              0u
#define FR_RFMIDAFMR_MIDAFMSK_WIDTH              16u
#define FR_RFMIDAFMR_MIDAFMSK(x)                 (((uint16_t)(((uint16_t)(x))<<FR_RFMIDAFMR_MIDAFMSK_SHIFT))&FR_RFMIDAFMR_MIDAFMSK_MASK)
/* RFFIDRFVR Bit Fields */
#define FR_RFFIDRFVR_FIDRFVAL_MASK               0x7FFu
#define FR_RFFIDRFVR_FIDRFVAL_SHIFT              0u
#define FR_RFFIDRFVR_FIDRFVAL_WIDTH              11u
#define FR_RFFIDRFVR_FIDRFVAL(x)                 (((uint16_t)(((uint16_t)(x))<<FR_RFFIDRFVR_FIDRFVAL_SHIFT))&FR_RFFIDRFVR_FIDRFVAL_MASK)
/* RFFIDRFMR Bit Fields */
#define FR_RFFIDRFMR_FIDRFMSK_MASK               0x7FFu
#define FR_RFFIDRFMR_FIDRFMSK_SHIFT              0u
#define FR_RFFIDRFMR_FIDRFMSK_WIDTH              11u
#define FR_RFFIDRFMR_FIDRFMSK(x)                 (((uint16_t)(((uint16_t)(x))<<FR_RFFIDRFMR_FIDRFMSK_SHIFT))&FR_RFFIDRFMR_FIDRFMSK_MASK)
/* RFRFCFR Bit Fields */
#define FR_RFRFCFR_SID_MASK                      0x7FFu
#define FR_RFRFCFR_SID_SHIFT                     0u
#define FR_RFRFCFR_SID_WIDTH                     11u
#define FR_RFRFCFR_SID(x)                        (((uint16_t)(((uint16_t)(x))<<FR_RFRFCFR_SID_SHIFT))&FR_RFRFCFR_SID_MASK)
#define FR_RFRFCFR_SEL_MASK                      0x3000u
#define FR_RFRFCFR_SEL_SHIFT                     12u
#define FR_RFRFCFR_SEL_WIDTH                     2u
#define FR_RFRFCFR_SEL(x)                        (((uint16_t)(((uint16_t)(x))<<FR_RFRFCFR_SEL_SHIFT))&FR_RFRFCFR_SEL_MASK)
#define FR_RFRFCFR_IBD_MASK                      0x4000u
#define FR_RFRFCFR_IBD_SHIFT                     14u
#define FR_RFRFCFR_IBD_WIDTH                     1u
#define FR_RFRFCFR_IBD(x)                        (((uint16_t)(((uint16_t)(x))<<FR_RFRFCFR_IBD_SHIFT))&FR_RFRFCFR_IBD_MASK)
#define FR_RFRFCFR_WMD_MASK                      0x8000u
#define FR_RFRFCFR_WMD_SHIFT                     15u
#define FR_RFRFCFR_WMD_WIDTH                     1u
#define FR_RFRFCFR_WMD(x)                        (((uint16_t)(((uint16_t)(x))<<FR_RFRFCFR_WMD_SHIFT))&FR_RFRFCFR_WMD_MASK)
/* RFRFCTR Bit Fields */
#define FR_RFRFCTR_F0EN_MASK                     0x1u
#define FR_RFRFCTR_F0EN_SHIFT                    0u
#define FR_RFRFCTR_F0EN_WIDTH                    1u
#define FR_RFRFCTR_F0EN(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F0EN_SHIFT))&FR_RFRFCTR_F0EN_MASK)
#define FR_RFRFCTR_F1EN_MASK                     0x2u
#define FR_RFRFCTR_F1EN_SHIFT                    1u
#define FR_RFRFCTR_F1EN_WIDTH                    1u
#define FR_RFRFCTR_F1EN(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F1EN_SHIFT))&FR_RFRFCTR_F1EN_MASK)
#define FR_RFRFCTR_F2EN_MASK                     0x4u
#define FR_RFRFCTR_F2EN_SHIFT                    2u
#define FR_RFRFCTR_F2EN_WIDTH                    1u
#define FR_RFRFCTR_F2EN(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F2EN_SHIFT))&FR_RFRFCTR_F2EN_MASK)
#define FR_RFRFCTR_F3EN_MASK                     0x8u
#define FR_RFRFCTR_F3EN_SHIFT                    3u
#define FR_RFRFCTR_F3EN_WIDTH                    1u
#define FR_RFRFCTR_F3EN(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F3EN_SHIFT))&FR_RFRFCTR_F3EN_MASK)
#define FR_RFRFCTR_F0MD_MASK                     0x100u
#define FR_RFRFCTR_F0MD_SHIFT                    8u
#define FR_RFRFCTR_F0MD_WIDTH                    1u
#define FR_RFRFCTR_F0MD(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F0MD_SHIFT))&FR_RFRFCTR_F0MD_MASK)
#define FR_RFRFCTR_F1MD_MASK                     0x200u
#define FR_RFRFCTR_F1MD_SHIFT                    9u
#define FR_RFRFCTR_F1MD_WIDTH                    1u
#define FR_RFRFCTR_F1MD(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F1MD_SHIFT))&FR_RFRFCTR_F1MD_MASK)
#define FR_RFRFCTR_F2MD_MASK                     0x400u
#define FR_RFRFCTR_F2MD_SHIFT                    10u
#define FR_RFRFCTR_F2MD_WIDTH                    1u
#define FR_RFRFCTR_F2MD(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F2MD_SHIFT))&FR_RFRFCTR_F2MD_MASK)
#define FR_RFRFCTR_F3MD_MASK                     0x800u
#define FR_RFRFCTR_F3MD_SHIFT                    11u
#define FR_RFRFCTR_F3MD_WIDTH                    1u
#define FR_RFRFCTR_F3MD(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F3MD_SHIFT))&FR_RFRFCTR_F3MD_MASK)
/* LDTXSLAR Bit Fields */
#define FR_LDTXSLAR_LDYNTXSLOTA_MASK             0x7FFu
#define FR_LDTXSLAR_LDYNTXSLOTA_SHIFT            0u
#define FR_LDTXSLAR_LDYNTXSLOTA_WIDTH            11u
#define FR_LDTXSLAR_LDYNTXSLOTA(x)               (((uint16_t)(((uint16_t)(x))<<FR_LDTXSLAR_LDYNTXSLOTA_SHIFT))&FR_LDTXSLAR_LDYNTXSLOTA_MASK)
/* LDTXSLBR Bit Fields */
#define FR_LDTXSLBR_LDYNTXSLOTB_MASK             0x7FFu
#define FR_LDTXSLBR_LDYNTXSLOTB_SHIFT            0u
#define FR_LDTXSLBR_LDYNTXSLOTB_WIDTH            11u
#define FR_LDTXSLBR_LDYNTXSLOTB(x)               (((uint16_t)(((uint16_t)(x))<<FR_LDTXSLBR_LDYNTXSLOTB_SHIFT))&FR_LDTXSLBR_LDYNTXSLOTB_MASK)
/* PCR0 Bit Fields */
#define FR_PCR0_static_slot_length_MASK          0x3FFu
#define FR_PCR0_static_slot_length_SHIFT         0u
#define FR_PCR0_static_slot_length_WIDTH         10u
#define FR_PCR0_static_slot_length(x)            (((uint16_t)(((uint16_t)(x))<<FR_PCR0_static_slot_length_SHIFT))&FR_PCR0_static_slot_length_MASK)
#define FR_PCR0_action_point_offset_MASK         0xFC00u
#define FR_PCR0_action_point_offset_SHIFT        10u
#define FR_PCR0_action_point_offset_WIDTH        6u
#define FR_PCR0_action_point_offset(x)           (((uint16_t)(((uint16_t)(x))<<FR_PCR0_action_point_offset_SHIFT))&FR_PCR0_action_point_offset_MASK)
/* PCR1 Bit Fields */
#define FR_PCR1_macro_after_first_static_slot_MASK 0x3FFFu
#define FR_PCR1_macro_after_first_static_slot_SHIFT 0u
#define FR_PCR1_macro_after_first_static_slot_WIDTH 14u
#define FR_PCR1_macro_after_first_static_slot(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR1_macro_after_first_static_slot_SHIFT))&FR_PCR1_macro_after_first_static_slot_MASK)
/* PCR2 Bit Fields */
#define FR_PCR2_number_of_static_slots_MASK      0x3FFu
#define FR_PCR2_number_of_static_slots_SHIFT     0u
#define FR_PCR2_number_of_static_slots_WIDTH     10u
#define FR_PCR2_number_of_static_slots(x)        (((uint16_t)(((uint16_t)(x))<<FR_PCR2_number_of_static_slots_SHIFT))&FR_PCR2_number_of_static_slots_MASK)
#define FR_PCR2_minislot_after_action_point_MASK 0xFC00u
#define FR_PCR2_minislot_after_action_point_SHIFT 10u
#define FR_PCR2_minislot_after_action_point_WIDTH 6u
#define FR_PCR2_minislot_after_action_point(x)   (((uint16_t)(((uint16_t)(x))<<FR_PCR2_minislot_after_action_point_SHIFT))&FR_PCR2_minislot_after_action_point_MASK)
/* PCR3 Bit Fields */
#define FR_PCR3_coldstart_attempts_MASK          0x1Fu
#define FR_PCR3_coldstart_attempts_SHIFT         0u
#define FR_PCR3_coldstart_attempts_WIDTH         5u
#define FR_PCR3_coldstart_attempts(x)            (((uint16_t)(((uint16_t)(x))<<FR_PCR3_coldstart_attempts_SHIFT))&FR_PCR3_coldstart_attempts_MASK)
#define FR_PCR3_minislot_action_point_offset_MASK 0x3E0u
#define FR_PCR3_minislot_action_point_offset_SHIFT 5u
#define FR_PCR3_minislot_action_point_offset_WIDTH 5u
#define FR_PCR3_minislot_action_point_offset(x)  (((uint16_t)(((uint16_t)(x))<<FR_PCR3_minislot_action_point_offset_SHIFT))&FR_PCR3_minislot_action_point_offset_MASK)
#define FR_PCR3_wakeup_symbol_rx_low_MASK        0xFC00u
#define FR_PCR3_wakeup_symbol_rx_low_SHIFT       10u
#define FR_PCR3_wakeup_symbol_rx_low_WIDTH       6u
#define FR_PCR3_wakeup_symbol_rx_low(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR3_wakeup_symbol_rx_low_SHIFT))&FR_PCR3_wakeup_symbol_rx_low_MASK)
/* PCR4 Bit Fields */
#define FR_PCR4_wakeup_symbol_rx_window_MASK     0x1FFu
#define FR_PCR4_wakeup_symbol_rx_window_SHIFT    0u
#define FR_PCR4_wakeup_symbol_rx_window_WIDTH    9u
#define FR_PCR4_wakeup_symbol_rx_window(x)       (((uint16_t)(((uint16_t)(x))<<FR_PCR4_wakeup_symbol_rx_window_SHIFT))&FR_PCR4_wakeup_symbol_rx_window_MASK)
#define FR_PCR4_cas_rx_low_max_MASK              0xFE00u
#define FR_PCR4_cas_rx_low_max_SHIFT             9u
#define FR_PCR4_cas_rx_low_max_WIDTH             7u
#define FR_PCR4_cas_rx_low_max(x)                (((uint16_t)(((uint16_t)(x))<<FR_PCR4_cas_rx_low_max_SHIFT))&FR_PCR4_cas_rx_low_max_MASK)
/* PCR5 Bit Fields */
#define FR_PCR5_wakeup_symbol_rx_idle_MASK       0x3Fu
#define FR_PCR5_wakeup_symbol_rx_idle_SHIFT      0u
#define FR_PCR5_wakeup_symbol_rx_idle_WIDTH      6u
#define FR_PCR5_wakeup_symbol_rx_idle(x)         (((uint16_t)(((uint16_t)(x))<<FR_PCR5_wakeup_symbol_rx_idle_SHIFT))&FR_PCR5_wakeup_symbol_rx_idle_MASK)
#define FR_PCR5_wakeup_symbol_tx_low_MASK        0xFC0u
#define FR_PCR5_wakeup_symbol_tx_low_SHIFT       6u
#define FR_PCR5_wakeup_symbol_tx_low_WIDTH       6u
#define FR_PCR5_wakeup_symbol_tx_low(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR5_wakeup_symbol_tx_low_SHIFT))&FR_PCR5_wakeup_symbol_tx_low_MASK)
#define FR_PCR5_tss_transmitter_MASK             0xF000u
#define FR_PCR5_tss_transmitter_SHIFT            12u
#define FR_PCR5_tss_transmitter_WIDTH            4u
#define FR_PCR5_tss_transmitter(x)               (((uint16_t)(((uint16_t)(x))<<FR_PCR5_tss_transmitter_SHIFT))&FR_PCR5_tss_transmitter_MASK)
/* PCR6 Bit Fields */
#define FR_PCR6_macro_initial_offset_a_MASK      0x7Fu
#define FR_PCR6_macro_initial_offset_a_SHIFT     0u
#define FR_PCR6_macro_initial_offset_a_WIDTH     7u
#define FR_PCR6_macro_initial_offset_a(x)        (((uint16_t)(((uint16_t)(x))<<FR_PCR6_macro_initial_offset_a_SHIFT))&FR_PCR6_macro_initial_offset_a_MASK)
#define FR_PCR6_symbol_window_after_action_point_MASK 0x7F80u
#define FR_PCR6_symbol_window_after_action_point_SHIFT 7u
#define FR_PCR6_symbol_window_after_action_point_WIDTH 8u
#define FR_PCR6_symbol_window_after_action_point(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR6_symbol_window_after_action_point_SHIFT))&FR_PCR6_symbol_window_after_action_point_MASK)
/* PCR7 Bit Fields */
#define FR_PCR7_micro_per_macro_nom_half_MASK    0x7Fu
#define FR_PCR7_micro_per_macro_nom_half_SHIFT   0u
#define FR_PCR7_micro_per_macro_nom_half_WIDTH   7u
#define FR_PCR7_micro_per_macro_nom_half(x)      (((uint16_t)(((uint16_t)(x))<<FR_PCR7_micro_per_macro_nom_half_SHIFT))&FR_PCR7_micro_per_macro_nom_half_MASK)
#define FR_PCR7_decoding_correction_b_MASK       0xFF80u
#define FR_PCR7_decoding_correction_b_SHIFT      7u
#define FR_PCR7_decoding_correction_b_WIDTH      9u
#define FR_PCR7_decoding_correction_b(x)         (((uint16_t)(((uint16_t)(x))<<FR_PCR7_decoding_correction_b_SHIFT))&FR_PCR7_decoding_correction_b_MASK)
/* PCR8 Bit Fields */
#define FR_PCR8_wakeup_symbol_tx_idle_MASK       0xFFu
#define FR_PCR8_wakeup_symbol_tx_idle_SHIFT      0u
#define FR_PCR8_wakeup_symbol_tx_idle_WIDTH      8u
#define FR_PCR8_wakeup_symbol_tx_idle(x)         (((uint16_t)(((uint16_t)(x))<<FR_PCR8_wakeup_symbol_tx_idle_SHIFT))&FR_PCR8_wakeup_symbol_tx_idle_MASK)
#define FR_PCR8_max_without_clock_correction_passive_MASK 0xF00u
#define FR_PCR8_max_without_clock_correction_passive_SHIFT 8u
#define FR_PCR8_max_without_clock_correction_passive_WIDTH 4u
#define FR_PCR8_max_without_clock_correction_passive(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR8_max_without_clock_correction_passive_SHIFT))&FR_PCR8_max_without_clock_correction_passive_MASK)
#define FR_PCR8_max_without_clock_correction_fatal_MASK 0xF000u
#define FR_PCR8_max_without_clock_correction_fatal_SHIFT 12u
#define FR_PCR8_max_without_clock_correction_fatal_WIDTH 4u
#define FR_PCR8_max_without_clock_correction_fatal(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR8_max_without_clock_correction_fatal_SHIFT))&FR_PCR8_max_without_clock_correction_fatal_MASK)
/* PCR9 Bit Fields */
#define FR_PCR9_offset_correction_out_MASK       0x3FFFu
#define FR_PCR9_offset_correction_out_SHIFT      0u
#define FR_PCR9_offset_correction_out_WIDTH      14u
#define FR_PCR9_offset_correction_out(x)         (((uint16_t)(((uint16_t)(x))<<FR_PCR9_offset_correction_out_SHIFT))&FR_PCR9_offset_correction_out_MASK)
#define FR_PCR9_symbol_window_exists_MASK        0x4000u
#define FR_PCR9_symbol_window_exists_SHIFT       14u
#define FR_PCR9_symbol_window_exists_WIDTH       1u
#define FR_PCR9_symbol_window_exists(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR9_symbol_window_exists_SHIFT))&FR_PCR9_symbol_window_exists_MASK)
#define FR_PCR9_minislot_exists_MASK             0x8000u
#define FR_PCR9_minislot_exists_SHIFT            15u
#define FR_PCR9_minislot_exists_WIDTH            1u
#define FR_PCR9_minislot_exists(x)               (((uint16_t)(((uint16_t)(x))<<FR_PCR9_minislot_exists_SHIFT))&FR_PCR9_minislot_exists_MASK)
/* PCR10 Bit Fields */
#define FR_PCR10_macro_per_cycle_MASK            0x3FFFu
#define FR_PCR10_macro_per_cycle_SHIFT           0u
#define FR_PCR10_macro_per_cycle_WIDTH           14u
#define FR_PCR10_macro_per_cycle(x)              (((uint16_t)(((uint16_t)(x))<<FR_PCR10_macro_per_cycle_SHIFT))&FR_PCR10_macro_per_cycle_MASK)
#define FR_PCR10_wakeup_channel_MASK             0x4000u
#define FR_PCR10_wakeup_channel_SHIFT            14u
#define FR_PCR10_wakeup_channel_WIDTH            1u
#define FR_PCR10_wakeup_channel(x)               (((uint16_t)(((uint16_t)(x))<<FR_PCR10_wakeup_channel_SHIFT))&FR_PCR10_wakeup_channel_MASK)
#define FR_PCR10_single_slot_enabled_MASK        0x8000u
#define FR_PCR10_single_slot_enabled_SHIFT       15u
#define FR_PCR10_single_slot_enabled_WIDTH       1u
#define FR_PCR10_single_slot_enabled(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR10_single_slot_enabled_SHIFT))&FR_PCR10_single_slot_enabled_MASK)
/* PCR11 Bit Fields */
#define FR_PCR11_offset_correction_start_MASK    0x3FFFu
#define FR_PCR11_offset_correction_start_SHIFT   0u
#define FR_PCR11_offset_correction_start_WIDTH   14u
#define FR_PCR11_offset_correction_start(x)      (((uint16_t)(((uint16_t)(x))<<FR_PCR11_offset_correction_start_SHIFT))&FR_PCR11_offset_correction_start_MASK)
#define FR_PCR11_key_slot_used_for_sync_MASK     0x4000u
#define FR_PCR11_key_slot_used_for_sync_SHIFT    14u
#define FR_PCR11_key_slot_used_for_sync_WIDTH    1u
#define FR_PCR11_key_slot_used_for_sync(x)       (((uint16_t)(((uint16_t)(x))<<FR_PCR11_key_slot_used_for_sync_SHIFT))&FR_PCR11_key_slot_used_for_sync_MASK)
#define FR_PCR11_key_slot_used_for_startup_MASK  0x8000u
#define FR_PCR11_key_slot_used_for_startup_SHIFT 15u
#define FR_PCR11_key_slot_used_for_startup_WIDTH 1u
#define FR_PCR11_key_slot_used_for_startup(x)    (((uint16_t)(((uint16_t)(x))<<FR_PCR11_key_slot_used_for_startup_SHIFT))&FR_PCR11_key_slot_used_for_startup_MASK)
/* PCR12 Bit Fields */
#define FR_PCR12_key_slot_header_crc_MASK        0x7FFu
#define FR_PCR12_key_slot_header_crc_SHIFT       0u
#define FR_PCR12_key_slot_header_crc_WIDTH       11u
#define FR_PCR12_key_slot_header_crc(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR12_key_slot_header_crc_SHIFT))&FR_PCR12_key_slot_header_crc_MASK)
#define FR_PCR12_allow_passive_to_active_MASK    0xF800u
#define FR_PCR12_allow_passive_to_active_SHIFT   11u
#define FR_PCR12_allow_passive_to_active_WIDTH   5u
#define FR_PCR12_allow_passive_to_active(x)      (((uint16_t)(((uint16_t)(x))<<FR_PCR12_allow_passive_to_active_SHIFT))&FR_PCR12_allow_passive_to_active_MASK)
/* PCR13 Bit Fields */
#define FR_PCR13_static_slot_after_action_point_MASK 0x3FFu
#define FR_PCR13_static_slot_after_action_point_SHIFT 0u
#define FR_PCR13_static_slot_after_action_point_WIDTH 10u
#define FR_PCR13_static_slot_after_action_point(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR13_static_slot_after_action_point_SHIFT))&FR_PCR13_static_slot_after_action_point_MASK)
#define FR_PCR13_first_minislot_action_point_offset_MASK 0xFC00u
#define FR_PCR13_first_minislot_action_point_offset_SHIFT 10u
#define FR_PCR13_first_minislot_action_point_offset_WIDTH 6u
#define FR_PCR13_first_minislot_action_point_offset(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR13_first_minislot_action_point_offset_SHIFT))&FR_PCR13_first_minislot_action_point_offset_MASK)
/* PCR14 Bit Fields */
#define FR_PCR14_listen_timeout_MASK             0x1Fu
#define FR_PCR14_listen_timeout_SHIFT            0u
#define FR_PCR14_listen_timeout_WIDTH            5u
#define FR_PCR14_listen_timeout(x)               (((uint16_t)(((uint16_t)(x))<<FR_PCR14_listen_timeout_SHIFT))&FR_PCR14_listen_timeout_MASK)
#define FR_PCR14_rate_correction_out_MASK        0xFFE0u
#define FR_PCR14_rate_correction_out_SHIFT       5u
#define FR_PCR14_rate_correction_out_WIDTH       11u
#define FR_PCR14_rate_correction_out(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR14_rate_correction_out_SHIFT))&FR_PCR14_rate_correction_out_MASK)
/* PCR15 Bit Fields */
#define FR_PCR15_listen_timeout_MASK             0xFFFFu
#define FR_PCR15_listen_timeout_SHIFT            0u
#define FR_PCR15_listen_timeout_WIDTH            16u
#define FR_PCR15_listen_timeout(x)               (((uint16_t)(((uint16_t)(x))<<FR_PCR15_listen_timeout_SHIFT))&FR_PCR15_listen_timeout_MASK)
/* PCR16 Bit Fields */
#define FR_PCR16_noise_listen_timeout_MASK       0x1FFu
#define FR_PCR16_noise_listen_timeout_SHIFT      0u
#define FR_PCR16_noise_listen_timeout_WIDTH      9u
#define FR_PCR16_noise_listen_timeout(x)         (((uint16_t)(((uint16_t)(x))<<FR_PCR16_noise_listen_timeout_SHIFT))&FR_PCR16_noise_listen_timeout_MASK)
#define FR_PCR16_macro_initial_offset_b_MASK     0xFE00u
#define FR_PCR16_macro_initial_offset_b_SHIFT    9u
#define FR_PCR16_macro_initial_offset_b_WIDTH    7u
#define FR_PCR16_macro_initial_offset_b(x)       (((uint16_t)(((uint16_t)(x))<<FR_PCR16_macro_initial_offset_b_SHIFT))&FR_PCR16_macro_initial_offset_b_MASK)
/* PCR17 Bit Fields */
#define FR_PCR17_noise_listen_timeout_MASK       0xFFFFu
#define FR_PCR17_noise_listen_timeout_SHIFT      0u
#define FR_PCR17_noise_listen_timeout_WIDTH      16u
#define FR_PCR17_noise_listen_timeout(x)         (((uint16_t)(((uint16_t)(x))<<FR_PCR17_noise_listen_timeout_SHIFT))&FR_PCR17_noise_listen_timeout_MASK)
/* PCR18 Bit Fields */
#define FR_PCR18_key_slot_id_MASK                0x3FFu
#define FR_PCR18_key_slot_id_SHIFT               0u
#define FR_PCR18_key_slot_id_WIDTH               10u
#define FR_PCR18_key_slot_id(x)                  (((uint16_t)(((uint16_t)(x))<<FR_PCR18_key_slot_id_SHIFT))&FR_PCR18_key_slot_id_MASK)
#define FR_PCR18_wakeup_pattern_MASK             0xFC00u
#define FR_PCR18_wakeup_pattern_SHIFT            10u
#define FR_PCR18_wakeup_pattern_WIDTH            6u
#define FR_PCR18_wakeup_pattern(x)               (((uint16_t)(((uint16_t)(x))<<FR_PCR18_wakeup_pattern_SHIFT))&FR_PCR18_wakeup_pattern_MASK)
/* PCR19 Bit Fields */
#define FR_PCR19_payload_length_static_MASK      0x7Fu
#define FR_PCR19_payload_length_static_SHIFT     0u
#define FR_PCR19_payload_length_static_WIDTH     7u
#define FR_PCR19_payload_length_static(x)        (((uint16_t)(((uint16_t)(x))<<FR_PCR19_payload_length_static_SHIFT))&FR_PCR19_payload_length_static_MASK)
#define FR_PCR19_decoding_correction_a_MASK      0xFF80u
#define FR_PCR19_decoding_correction_a_SHIFT     7u
#define FR_PCR19_decoding_correction_a_WIDTH     9u
#define FR_PCR19_decoding_correction_a(x)        (((uint16_t)(((uint16_t)(x))<<FR_PCR19_decoding_correction_a_SHIFT))&FR_PCR19_decoding_correction_a_MASK)
/* PCR20 Bit Fields */
#define FR_PCR20_micro_initial_offset_a_MASK     0xFFu
#define FR_PCR20_micro_initial_offset_a_SHIFT    0u
#define FR_PCR20_micro_initial_offset_a_WIDTH    8u
#define FR_PCR20_micro_initial_offset_a(x)       (((uint16_t)(((uint16_t)(x))<<FR_PCR20_micro_initial_offset_a_SHIFT))&FR_PCR20_micro_initial_offset_a_MASK)
#define FR_PCR20_micro_initial_offset_b_MASK     0xFF00u
#define FR_PCR20_micro_initial_offset_b_SHIFT    8u
#define FR_PCR20_micro_initial_offset_b_WIDTH    8u
#define FR_PCR20_micro_initial_offset_b(x)       (((uint16_t)(((uint16_t)(x))<<FR_PCR20_micro_initial_offset_b_SHIFT))&FR_PCR20_micro_initial_offset_b_MASK)
/* PCR21 Bit Fields */
#define FR_PCR21_latest_tx_MASK                  0x1FFFu
#define FR_PCR21_latest_tx_SHIFT                 0u
#define FR_PCR21_latest_tx_WIDTH                 13u
#define FR_PCR21_latest_tx(x)                    (((uint16_t)(((uint16_t)(x))<<FR_PCR21_latest_tx_SHIFT))&FR_PCR21_latest_tx_MASK)
#define FR_PCR21_extern_rate_correction_MASK     0xE000u
#define FR_PCR21_extern_rate_correction_SHIFT    13u
#define FR_PCR21_extern_rate_correction_WIDTH    3u
#define FR_PCR21_extern_rate_correction(x)       (((uint16_t)(((uint16_t)(x))<<FR_PCR21_extern_rate_correction_SHIFT))&FR_PCR21_extern_rate_correction_MASK)
/* PCR22 Bit Fields */
#define FR_PCR22_micro_per_cycle_MASK            0xFu
#define FR_PCR22_micro_per_cycle_SHIFT           0u
#define FR_PCR22_micro_per_cycle_WIDTH           4u
#define FR_PCR22_micro_per_cycle(x)              (((uint16_t)(((uint16_t)(x))<<FR_PCR22_micro_per_cycle_SHIFT))&FR_PCR22_micro_per_cycle_MASK)
#define FR_PCR22_comp_accepted_startup_range_a_MASK 0x7FF0u
#define FR_PCR22_comp_accepted_startup_range_a_SHIFT 4u
#define FR_PCR22_comp_accepted_startup_range_a_WIDTH 11u
#define FR_PCR22_comp_accepted_startup_range_a(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR22_comp_accepted_startup_range_a_SHIFT))&FR_PCR22_comp_accepted_startup_range_a_MASK)
/* PCR23 Bit Fields */
#define FR_PCR23_micro_per_cycle_MASK            0xFFFFu
#define FR_PCR23_micro_per_cycle_SHIFT           0u
#define FR_PCR23_micro_per_cycle_WIDTH           16u
#define FR_PCR23_micro_per_cycle(x)              (((uint16_t)(((uint16_t)(x))<<FR_PCR23_micro_per_cycle_SHIFT))&FR_PCR23_micro_per_cycle_MASK)
/* PCR24 Bit Fields */
#define FR_PCR24_micro_per_cycle_min_MASK        0xFu
#define FR_PCR24_micro_per_cycle_min_SHIFT       0u
#define FR_PCR24_micro_per_cycle_min_WIDTH       4u
#define FR_PCR24_micro_per_cycle_min(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR24_micro_per_cycle_min_SHIFT))&FR_PCR24_micro_per_cycle_min_MASK)
#define FR_PCR24_max_payload_length_dynamic_MASK 0x7F0u
#define FR_PCR24_max_payload_length_dynamic_SHIFT 4u
#define FR_PCR24_max_payload_length_dynamic_WIDTH 7u
#define FR_PCR24_max_payload_length_dynamic(x)   (((uint16_t)(((uint16_t)(x))<<FR_PCR24_max_payload_length_dynamic_SHIFT))&FR_PCR24_max_payload_length_dynamic_MASK)
#define FR_PCR24_cluster_drift_damping_MASK      0xF800u
#define FR_PCR24_cluster_drift_damping_SHIFT     11u
#define FR_PCR24_cluster_drift_damping_WIDTH     5u
#define FR_PCR24_cluster_drift_damping(x)        (((uint16_t)(((uint16_t)(x))<<FR_PCR24_cluster_drift_damping_SHIFT))&FR_PCR24_cluster_drift_damping_MASK)
/* PCR25 Bit Fields */
#define FR_PCR25_micro_per_cycle_min_MASK        0xFFFFu
#define FR_PCR25_micro_per_cycle_min_SHIFT       0u
#define FR_PCR25_micro_per_cycle_min_WIDTH       16u
#define FR_PCR25_micro_per_cycle_min(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR25_micro_per_cycle_min_SHIFT))&FR_PCR25_micro_per_cycle_min_MASK)
/* PCR26 Bit Fields */
#define FR_PCR26_micro_per_cycle_max_MASK        0xFu
#define FR_PCR26_micro_per_cycle_max_SHIFT       0u
#define FR_PCR26_micro_per_cycle_max_WIDTH       4u
#define FR_PCR26_micro_per_cycle_max(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR26_micro_per_cycle_max_SHIFT))&FR_PCR26_micro_per_cycle_max_MASK)
#define FR_PCR26_comp_accepted_startup_range_b_MASK 0x7FF0u
#define FR_PCR26_comp_accepted_startup_range_b_SHIFT 4u
#define FR_PCR26_comp_accepted_startup_range_b_WIDTH 11u
#define FR_PCR26_comp_accepted_startup_range_b(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR26_comp_accepted_startup_range_b_SHIFT))&FR_PCR26_comp_accepted_startup_range_b_MASK)
#define FR_PCR26_allow_halt_due_to_clock_MASK    0x8000u
#define FR_PCR26_allow_halt_due_to_clock_SHIFT   15u
#define FR_PCR26_allow_halt_due_to_clock_WIDTH   1u
#define FR_PCR26_allow_halt_due_to_clock(x)      (((uint16_t)(((uint16_t)(x))<<FR_PCR26_allow_halt_due_to_clock_SHIFT))&FR_PCR26_allow_halt_due_to_clock_MASK)
/* PCR27 Bit Fields */
#define FR_PCR27_micro_per_cycle_max_MASK        0xFFFFu
#define FR_PCR27_micro_per_cycle_max_SHIFT       0u
#define FR_PCR27_micro_per_cycle_max_WIDTH       16u
#define FR_PCR27_micro_per_cycle_max(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR27_micro_per_cycle_max_SHIFT))&FR_PCR27_micro_per_cycle_max_MASK)
/* PCR28 Bit Fields */
#define FR_PCR28_macro_after_offset_correction_MASK 0x3FFFu
#define FR_PCR28_macro_after_offset_correction_SHIFT 0u
#define FR_PCR28_macro_after_offset_correction_WIDTH 14u
#define FR_PCR28_macro_after_offset_correction(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR28_macro_after_offset_correction_SHIFT))&FR_PCR28_macro_after_offset_correction_MASK)
#define FR_PCR28_dynamic_slot_idle_phase_MASK    0xC000u
#define FR_PCR28_dynamic_slot_idle_phase_SHIFT   14u
#define FR_PCR28_dynamic_slot_idle_phase_WIDTH   2u
#define FR_PCR28_dynamic_slot_idle_phase(x)      (((uint16_t)(((uint16_t)(x))<<FR_PCR28_dynamic_slot_idle_phase_SHIFT))&FR_PCR28_dynamic_slot_idle_phase_MASK)
/* PCR29 Bit Fields */
#define FR_PCR29_minislots_max_MASK              0x1FFFu
#define FR_PCR29_minislots_max_SHIFT             0u
#define FR_PCR29_minislots_max_WIDTH             13u
#define FR_PCR29_minislots_max(x)                (((uint16_t)(((uint16_t)(x))<<FR_PCR29_minislots_max_SHIFT))&FR_PCR29_minislots_max_MASK)
#define FR_PCR29_extern_offset_correction_MASK   0xE000u
#define FR_PCR29_extern_offset_correction_SHIFT  13u
#define FR_PCR29_extern_offset_correction_WIDTH  3u
#define FR_PCR29_extern_offset_correction(x)     (((uint16_t)(((uint16_t)(x))<<FR_PCR29_extern_offset_correction_SHIFT))&FR_PCR29_extern_offset_correction_MASK)
/* PCR30 Bit Fields */
#define FR_PCR30_sync_node_max_MASK              0xFu
#define FR_PCR30_sync_node_max_SHIFT             0u
#define FR_PCR30_sync_node_max_WIDTH             4u
#define FR_PCR30_sync_node_max(x)                (((uint16_t)(((uint16_t)(x))<<FR_PCR30_sync_node_max_SHIFT))&FR_PCR30_sync_node_max_MASK)
/* PEOER Bit Fields */
#define FR_PEOER_CYC_EE_MASK                     0x1u
#define FR_PEOER_CYC_EE_SHIFT                    0u
#define FR_PEOER_CYC_EE_WIDTH                    1u
#define FR_PEOER_CYC_EE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PEOER_CYC_EE_SHIFT))&FR_PEOER_CYC_EE_MASK)
#define FR_PEOER_TIM1_EE_MASK                    0x2u
#define FR_PEOER_TIM1_EE_SHIFT                   1u
#define FR_PEOER_TIM1_EE_WIDTH                   1u
#define FR_PEOER_TIM1_EE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PEOER_TIM1_EE_SHIFT))&FR_PEOER_TIM1_EE_MASK)
#define FR_PEOER_TIM2_EE_MASK                    0x4u
#define FR_PEOER_TIM2_EE_SHIFT                   2u
#define FR_PEOER_TIM2_EE_WIDTH                   1u
#define FR_PEOER_TIM2_EE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PEOER_TIM2_EE_SHIFT))&FR_PEOER_TIM2_EE_MASK)
/* RFSDOR Bit Fields */
#define FR_RFSDOR_SDO_MASK                       0xFFFFu
#define FR_RFSDOR_SDO_SHIFT                      0u
#define FR_RFSDOR_SDO_WIDTH                      16u
#define FR_RFSDOR_SDO(x)                         (((uint16_t)(((uint16_t)(x))<<FR_RFSDOR_SDO_SHIFT))&FR_RFSDOR_SDO_MASK)
/* RFSYMBADHR Bit Fields */
#define FR_RFSYMBADHR_SMBA_MASK                  0xFFFFu
#define FR_RFSYMBADHR_SMBA_SHIFT                 0u
#define FR_RFSYMBADHR_SMBA_WIDTH                 16u
#define FR_RFSYMBADHR_SMBA(x)                    (((uint16_t)(((uint16_t)(x))<<FR_RFSYMBADHR_SMBA_SHIFT))&FR_RFSYMBADHR_SMBA_MASK)
/* RFSYMBADLR Bit Fields */
#define FR_RFSYMBADLR_SMBA_MASK                  0xFFF0u
#define FR_RFSYMBADLR_SMBA_SHIFT                 4u
#define FR_RFSYMBADLR_SMBA_WIDTH                 12u
#define FR_RFSYMBADLR_SMBA(x)                    (((uint16_t)(((uint16_t)(x))<<FR_RFSYMBADLR_SMBA_SHIFT))&FR_RFSYMBADLR_SMBA_MASK)
/* RFPTR Bit Fields */
#define FR_RFPTR_PTD_MASK                        0x3FFFu
#define FR_RFPTR_PTD_SHIFT                       0u
#define FR_RFPTR_PTD_WIDTH                       14u
#define FR_RFPTR_PTD(x)                          (((uint16_t)(((uint16_t)(x))<<FR_RFPTR_PTD_SHIFT))&FR_RFPTR_PTD_MASK)
/* RFFLPCR Bit Fields */
#define FR_RFFLPCR_FLA_or_PCA_MASK               0xFFu
#define FR_RFFLPCR_FLA_or_PCA_SHIFT              0u
#define FR_RFFLPCR_FLA_or_PCA_WIDTH              8u
#define FR_RFFLPCR_FLA_or_PCA(x)                 (((uint16_t)(((uint16_t)(x))<<FR_RFFLPCR_FLA_or_PCA_SHIFT))&FR_RFFLPCR_FLA_or_PCA_MASK)
#define FR_RFFLPCR_FLB_or_PCB_MASK               0xFF00u
#define FR_RFFLPCR_FLB_or_PCB_SHIFT              8u
#define FR_RFFLPCR_FLB_or_PCB_WIDTH              8u
#define FR_RFFLPCR_FLB_or_PCB(x)                 (((uint16_t)(((uint16_t)(x))<<FR_RFFLPCR_FLB_or_PCB_SHIFT))&FR_RFFLPCR_FLB_or_PCB_MASK)
/* EEIFER Bit Fields */
#define FR_EEIFER_DRCE_IE_MASK                   0x1u
#define FR_EEIFER_DRCE_IE_SHIFT                  0u
#define FR_EEIFER_DRCE_IE_WIDTH                  1u
#define FR_EEIFER_DRCE_IE(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_DRCE_IE_SHIFT))&FR_EEIFER_DRCE_IE_MASK)
#define FR_EEIFER_DRNE_IE_MASK                   0x2u
#define FR_EEIFER_DRNE_IE_SHIFT                  1u
#define FR_EEIFER_DRNE_IE_WIDTH                  1u
#define FR_EEIFER_DRNE_IE(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_DRNE_IE_SHIFT))&FR_EEIFER_DRNE_IE_MASK)
#define FR_EEIFER_LRCE_IE_MASK                   0x4u
#define FR_EEIFER_LRCE_IE_SHIFT                  2u
#define FR_EEIFER_LRCE_IE_WIDTH                  1u
#define FR_EEIFER_LRCE_IE(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_LRCE_IE_SHIFT))&FR_EEIFER_LRCE_IE_MASK)
#define FR_EEIFER_LRNE_IE_MASK                   0x8u
#define FR_EEIFER_LRNE_IE_SHIFT                  3u
#define FR_EEIFER_LRNE_IE_WIDTH                  1u
#define FR_EEIFER_LRNE_IE(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_LRNE_IE_SHIFT))&FR_EEIFER_LRNE_IE_MASK)
#define FR_EEIFER_DRCE_IF_MASK                   0x100u
#define FR_EEIFER_DRCE_IF_SHIFT                  8u
#define FR_EEIFER_DRCE_IF_WIDTH                  1u
#define FR_EEIFER_DRCE_IF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_DRCE_IF_SHIFT))&FR_EEIFER_DRCE_IF_MASK)
#define FR_EEIFER_DRNE_IF_MASK                   0x200u
#define FR_EEIFER_DRNE_IF_SHIFT                  9u
#define FR_EEIFER_DRNE_IF_WIDTH                  1u
#define FR_EEIFER_DRNE_IF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_DRNE_IF_SHIFT))&FR_EEIFER_DRNE_IF_MASK)
#define FR_EEIFER_LRCE_IF_MASK                   0x400u
#define FR_EEIFER_LRCE_IF_SHIFT                  10u
#define FR_EEIFER_LRCE_IF_WIDTH                  1u
#define FR_EEIFER_LRCE_IF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_LRCE_IF_SHIFT))&FR_EEIFER_LRCE_IF_MASK)
#define FR_EEIFER_LRNE_IF_MASK                   0x800u
#define FR_EEIFER_LRNE_IF_SHIFT                  11u
#define FR_EEIFER_LRNE_IF_WIDTH                  1u
#define FR_EEIFER_LRNE_IF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_LRNE_IF_SHIFT))&FR_EEIFER_LRNE_IF_MASK)
#define FR_EEIFER_DRCE_OF_MASK                   0x1000u
#define FR_EEIFER_DRCE_OF_SHIFT                  12u
#define FR_EEIFER_DRCE_OF_WIDTH                  1u
#define FR_EEIFER_DRCE_OF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_DRCE_OF_SHIFT))&FR_EEIFER_DRCE_OF_MASK)
#define FR_EEIFER_DRNE_OF_MASK                   0x2000u
#define FR_EEIFER_DRNE_OF_SHIFT                  13u
#define FR_EEIFER_DRNE_OF_WIDTH                  1u
#define FR_EEIFER_DRNE_OF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_DRNE_OF_SHIFT))&FR_EEIFER_DRNE_OF_MASK)
#define FR_EEIFER_LRCE_OF_MASK                   0x4000u
#define FR_EEIFER_LRCE_OF_SHIFT                  14u
#define FR_EEIFER_LRCE_OF_WIDTH                  1u
#define FR_EEIFER_LRCE_OF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_LRCE_OF_SHIFT))&FR_EEIFER_LRCE_OF_MASK)
#define FR_EEIFER_LRNE_OF_MASK                   0x8000u
#define FR_EEIFER_LRNE_OF_SHIFT                  15u
#define FR_EEIFER_LRNE_OF_WIDTH                  1u
#define FR_EEIFER_LRNE_OF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_LRNE_OF_SHIFT))&FR_EEIFER_LRNE_OF_MASK)
/* EERICR Bit Fields */
#define FR_EERICR_EIE_MASK                       0x1u
#define FR_EERICR_EIE_SHIFT                      0u
#define FR_EERICR_EIE_WIDTH                      1u
#define FR_EERICR_EIE(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERICR_EIE_SHIFT))&FR_EERICR_EIE_MASK)
#define FR_EERICR_EIM_MASK                       0x2u
#define FR_EERICR_EIM_SHIFT                      1u
#define FR_EERICR_EIM_WIDTH                      1u
#define FR_EERICR_EIM(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERICR_EIM_SHIFT))&FR_EERICR_EIM_MASK)
#define FR_EERICR_ERM_MASK                       0x10u
#define FR_EERICR_ERM_SHIFT                      4u
#define FR_EERICR_ERM_WIDTH                      1u
#define FR_EERICR_ERM(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERICR_ERM_SHIFT))&FR_EERICR_ERM_MASK)
#define FR_EERICR_ERS_MASK                       0x300u
#define FR_EERICR_ERS_SHIFT                      8u
#define FR_EERICR_ERS_WIDTH                      2u
#define FR_EERICR_ERS(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERICR_ERS_SHIFT))&FR_EERICR_ERS_MASK)
#define FR_EERICR_BSY_MASK                       0x8000u
#define FR_EERICR_BSY_SHIFT                      15u
#define FR_EERICR_BSY_WIDTH                      1u
#define FR_EERICR_BSY(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERICR_BSY_SHIFT))&FR_EERICR_BSY_MASK)
/* EERAR Bit Fields */
#define FR_EERAR_ADDR_MASK                       0xFFFu
#define FR_EERAR_ADDR_SHIFT                      0u
#define FR_EERAR_ADDR_WIDTH                      12u
#define FR_EERAR_ADDR(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERAR_ADDR_SHIFT))&FR_EERAR_ADDR_MASK)
#define FR_EERAR_BANK_MASK                       0x7000u
#define FR_EERAR_BANK_SHIFT                      12u
#define FR_EERAR_BANK_WIDTH                      3u
#define FR_EERAR_BANK(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERAR_BANK_SHIFT))&FR_EERAR_BANK_MASK)
#define FR_EERAR_MID_MASK                        0x8000u
#define FR_EERAR_MID_SHIFT                       15u
#define FR_EERAR_MID_WIDTH                       1u
#define FR_EERAR_MID(x)                          (((uint16_t)(((uint16_t)(x))<<FR_EERAR_MID_SHIFT))&FR_EERAR_MID_MASK)
/* EERDR Bit Fields */
#define FR_EERDR_DATA_MASK                       0xFFFFu
#define FR_EERDR_DATA_SHIFT                      0u
#define FR_EERDR_DATA_WIDTH                      16u
#define FR_EERDR_DATA(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERDR_DATA_SHIFT))&FR_EERDR_DATA_MASK)
/* EERCR Bit Fields */
#define FR_EERCR_CODE_MASK                       0x1Fu
#define FR_EERCR_CODE_SHIFT                      0u
#define FR_EERCR_CODE_WIDTH                      5u
#define FR_EERCR_CODE(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERCR_CODE_SHIFT))&FR_EERCR_CODE_MASK)
/* EEIAR Bit Fields */
#define FR_EEIAR_ADDR_MASK                       0xFFFu
#define FR_EEIAR_ADDR_SHIFT                      0u
#define FR_EEIAR_ADDR_WIDTH                      12u
#define FR_EEIAR_ADDR(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EEIAR_ADDR_SHIFT))&FR_EEIAR_ADDR_MASK)
#define FR_EEIAR_BANK_MASK                       0x7000u
#define FR_EEIAR_BANK_SHIFT                      12u
#define FR_EEIAR_BANK_WIDTH                      3u
#define FR_EEIAR_BANK(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EEIAR_BANK_SHIFT))&FR_EEIAR_BANK_MASK)
#define FR_EEIAR_MID_MASK                        0x8000u
#define FR_EEIAR_MID_SHIFT                       15u
#define FR_EEIAR_MID_WIDTH                       1u
#define FR_EEIAR_MID(x)                          (((uint16_t)(((uint16_t)(x))<<FR_EEIAR_MID_SHIFT))&FR_EEIAR_MID_MASK)
/* EEIDR Bit Fields */
#define FR_EEIDR_DATA_MASK                       0xFFFFu
#define FR_EEIDR_DATA_SHIFT                      0u
#define FR_EEIDR_DATA_WIDTH                      16u
#define FR_EEIDR_DATA(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EEIDR_DATA_SHIFT))&FR_EEIDR_DATA_MASK)
/* EEICR Bit Fields */
#define FR_EEICR_CODE_MASK                       0x1Fu
#define FR_EEICR_CODE_SHIFT                      0u
#define FR_EEICR_CODE_WIDTH                      5u
#define FR_EEICR_CODE(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EEICR_CODE_SHIFT))&FR_EEICR_CODE_MASK)
/* CCSR Bit Fields */
#define FR_CCSR_MBIF_MASK                        0x1u
#define FR_CCSR_MBIF_SHIFT                       0u
#define FR_CCSR_MBIF_WIDTH                       1u
#define FR_CCSR_MBIF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CCSR_MBIF_SHIFT))&FR_CCSR_MBIF_MASK)
#define FR_CCSR_LCKS_MASK                        0x2u
#define FR_CCSR_LCKS_SHIFT                       1u
#define FR_CCSR_LCKS_WIDTH                       1u
#define FR_CCSR_LCKS(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CCSR_LCKS_SHIFT))&FR_CCSR_LCKS_MASK)
#define FR_CCSR_EDS_MASK                         0x4u
#define FR_CCSR_EDS_SHIFT                        2u
#define FR_CCSR_EDS_WIDTH                        1u
#define FR_CCSR_EDS(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCSR_EDS_SHIFT))&FR_CCSR_EDS_MASK)
#define FR_CCSR_DVAL_MASK                        0x8u
#define FR_CCSR_DVAL_SHIFT                       3u
#define FR_CCSR_DVAL_WIDTH                       1u
#define FR_CCSR_DVAL(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CCSR_DVAL_SHIFT))&FR_CCSR_DVAL_MASK)
#define FR_CCSR_DUP_MASK                         0x10u
#define FR_CCSR_DUP_SHIFT                        4u
#define FR_CCSR_DUP_WIDTH                        1u
#define FR_CCSR_DUP(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCSR_DUP_SHIFT))&FR_CCSR_DUP_MASK)
#define FR_CCSR_MBIE_MASK                        0x100u
#define FR_CCSR_MBIE_SHIFT                       8u
#define FR_CCSR_MBIE_WIDTH                       1u
#define FR_CCSR_MBIE(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CCSR_MBIE_SHIFT))&FR_CCSR_MBIE_MASK)
#define FR_CCSR_LCKT_MASK                        0x200u
#define FR_CCSR_LCKT_SHIFT                       9u
#define FR_CCSR_LCKT_WIDTH                       1u
#define FR_CCSR_LCKT(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CCSR_LCKT_SHIFT))&FR_CCSR_LCKT_MASK)
#define FR_CCSR_EDT_MASK                         0x400u
#define FR_CCSR_EDT_SHIFT                        10u
#define FR_CCSR_EDT_WIDTH                        1u
#define FR_CCSR_EDT(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCSR_EDT_SHIFT))&FR_CCSR_EDT_MASK)
#define FR_CCSR_CMT_MASK                         0x800u
#define FR_CCSR_CMT_SHIFT                        11u
#define FR_CCSR_CMT_WIDTH                        1u
#define FR_CCSR_CMT(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCSR_CMT_SHIFT))&FR_CCSR_CMT_MASK)
#define FR_CCSR_MTD_MASK                         0x1000u
#define FR_CCSR_MTD_SHIFT                        12u
#define FR_CCSR_MTD_WIDTH                        1u
#define FR_CCSR_MTD(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCSR_MTD_SHIFT))&FR_CCSR_MTD_MASK)
/* CCFR Bit Fields */
#define FR_CCFR_CCFVAL_MASK                      0x3Fu
#define FR_CCFR_CCFVAL_SHIFT                     0u
#define FR_CCFR_CCFVAL_WIDTH                     6u
#define FR_CCFR_CCFVAL(x)                        (((uint16_t)(((uint16_t)(x))<<FR_CCFR_CCFVAL_SHIFT))&FR_CCFR_CCFVAL_MASK)
#define FR_CCFR_CCFMSK_MASK                      0xFC0u
#define FR_CCFR_CCFMSK_SHIFT                     6u
#define FR_CCFR_CCFMSK_WIDTH                     6u
#define FR_CCFR_CCFMSK(x)                        (((uint16_t)(((uint16_t)(x))<<FR_CCFR_CCFMSK_SHIFT))&FR_CCFR_CCFMSK_MASK)
#define FR_CCFR_CCFE_MASK                        0x1000u
#define FR_CCFR_CCFE_SHIFT                       12u
#define FR_CCFR_CCFE_WIDTH                       1u
#define FR_CCFR_CCFE(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CCFR_CCFE_SHIFT))&FR_CCFR_CCFE_MASK)
#define FR_CCFR_CHB_MASK                         0x2000u
#define FR_CCFR_CHB_SHIFT                        13u
#define FR_CCFR_CHB_WIDTH                        1u
#define FR_CCFR_CHB(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCFR_CHB_SHIFT))&FR_CCFR_CHB_MASK)
#define FR_CCFR_CHA_MASK                         0x4000u
#define FR_CCFR_CHA_SHIFT                        14u
#define FR_CCFR_CHA_WIDTH                        1u
#define FR_CCFR_CHA(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCFR_CHA_SHIFT))&FR_CCFR_CHA_MASK)
#define FR_CCFR_MTM_MASK                         0x8000u
#define FR_CCFR_MTM_SHIFT                        15u
#define FR_CCFR_MTM_WIDTH                        1u
#define FR_CCFR_MTM(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCFR_MTM_SHIFT))&FR_CCFR_MTM_MASK)
/* FIDR Bit Fields */
#define FR_FIDR_FID_MASK                         0x7FFu
#define FR_FIDR_FID_SHIFT                        0u
#define FR_FIDR_FID_WIDTH                        11u
#define FR_FIDR_FID(x)                           (((uint16_t)(((uint16_t)(x))<<FR_FIDR_FID_SHIFT))&FR_FIDR_FID_MASK)
/* IDXR Bit Fields */
#define FR_IDXR_MBIDX_MASK                       0x7Fu
#define FR_IDXR_MBIDX_SHIFT                      0u
#define FR_IDXR_MBIDX_WIDTH                      7u
#define FR_IDXR_MBIDX(x)                         (((uint16_t)(((uint16_t)(x))<<FR_IDXR_MBIDX_SHIFT))&FR_IDXR_MBIDX_MASK)
/* MBDOR Bit Fields */
#define FR_MBDOR_MBDO_MASK                       0xFFFFu
#define FR_MBDOR_MBDO_SHIFT                      0u
#define FR_MBDOR_MBDO_WIDTH                      16u
#define FR_MBDOR_MBDO(x)                         (((uint16_t)(((uint16_t)(x))<<FR_MBDOR_MBDO_SHIFT))&FR_MBDOR_MBDO_MASK)
/* LEETR Bit Fields */
#define FR_LEETR_LEETD_MASK                      0xFFFFu
#define FR_LEETR_LEETD_SHIFT                     0u
#define FR_LEETR_LEETD_WIDTH                     16u
#define FR_LEETR_LEETD(x)                        (((uint16_t)(((uint16_t)(x))<<FR_LEETR_LEETD_SHIFT))&FR_LEETR_LEETD_MASK)

/*!
 * @}
 */ /* end of group FR_Register_Masks */


/*!
 * @}
 */ /* end of group FR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FlexPWM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FlexPWM_Peripheral_Access_Layer FlexPWM Peripheral Access Layer
 * @{
 */


/** FlexPWM - Size of Registers Arrays */
#define FlexPWM_SUB_COUNT                        4u

/** FlexPWM - Register Layout Typedef */
typedef struct {
  struct {                                         /* offset: 0x0, array step: 0x50 */
    __I  uint16_t CNT;                               /**< Submodule n Counter Register, array offset: 0x0, array step: 0x50 */
    __IO uint16_t INIT;                              /**< Submodule n Initial Count Register, array offset: 0x2, array step: 0x50 */
    __IO uint16_t CTRL2;                             /**< Submodule n Control 2 Register, array offset: 0x4, array step: 0x50 */
    __IO uint16_t CTRL1;                             /**< Submodule n Control 1 Register, array offset: 0x6, array step: 0x50 */
    __IO uint16_t VAL0;                              /**< Submodule n Value Register 0, array offset: 0x8, array step: 0x50 */
    __IO uint16_t VAL1;                              /**< Submodule n Value Register 1, array offset: 0xA, array step: 0x50 */
    __IO uint16_t VAL2;                              /**< Submodule n Value Register 2, array offset: 0xC, array step: 0x50 */
    __IO uint16_t VAL3;                              /**< Submodule n Value Register 3, array offset: 0xE, array step: 0x50 */
    __IO uint16_t VAL4;                              /**< Submodule n Value Register 4, array offset: 0x10, array step: 0x50 */
    __IO uint16_t VAL5;                              /**< Submodule n Value Register 5, array offset: 0x12, array step: 0x50 */
         uint8_t RESERVED_0[4];
    __IO uint16_t OCTRL;                             /**< Submodule n Output Control Register, array offset: 0x18, array step: 0x50 */
    __IO uint16_t STS;                               /**< Submodule n Status Register, array offset: 0x1A, array step: 0x50 */
    __IO uint16_t INTEN;                             /**< Submodule n Interrupt Enable Register, array offset: 0x1C, array step: 0x50 */
    __IO uint16_t DMAEN;                             /**< Submodule n DMA Enable Register, array offset: 0x1E, array step: 0x50 */
    __IO uint16_t TCTRL;                             /**< Submodule n Output Trigger Control Register, array offset: 0x20, array step: 0x50 */
    __IO uint16_t DISMAP;                            /**< Submodule n Fault Disable Mapping Register, array offset: 0x22, array step: 0x50 */
    __IO uint16_t DTCNT0;                            /**< Submodule n Deadtime Count Register 0, array offset: 0x24, array step: 0x50 */
    __IO uint16_t DTCNT1;                            /**< Submodule n Deadtime Count Register 1, array offset: 0x26, array step: 0x50 */
         uint8_t RESERVED_1[8];
    __IO uint16_t CAPTCTRLX;                         /**< Submodule n Capture Control X Register, array offset: 0x30, array step: 0x50 */
    __IO uint16_t CAPTCMPX;                          /**< Submodule n Capture Compare X Register, array offset: 0x32, array step: 0x50 */
    __I  uint16_t CVAL0;                             /**< Submodule n Capture Value 0 Register, array offset: 0x34, array step: 0x50 */
    __I  uint16_t CVAL0CYC;                          /**< Submodule n Capture Value 0 Cycle Register, array offset: 0x36, array step: 0x50 */
    __I  uint16_t CVAL1;                             /**< Submodule n Capture Value 1 Register, array offset: 0x38, array step: 0x50 */
    __I  uint16_t CVAL1CYC;                          /**< Submodule n Capture Value 1 Cycle Register, array offset: 0x3A, array step: 0x50 */
         uint8_t RESERVED_2[20];
  } SUB[FlexPWM_SUB_COUNT];
  __IO uint16_t OUTEN;                             /**< Output Enable Register, offset: 0x140 */
  __IO uint16_t MASK;                              /**< Mask Register, offset: 0x142 */
  __IO uint16_t SWCOUT;                            /**< Software Controlled Output Register, offset: 0x144 */
  __IO uint16_t DTSRCSEL;                          /**< Deadtime Source Select Register, offset: 0x146 */
  __IO uint16_t MCTRL;                             /**< Master Control Register, offset: 0x148 */
       uint8_t RESERVED_0[2];
  __IO uint16_t FCTRL;                             /**< Fault Control Register, offset: 0x14C */
  __IO uint16_t FSTS;                              /**< Fault Status Register, offset: 0x14E */
  __IO uint16_t FFILT;                             /**< Fault Filter Register, offset: 0x150 */
} FlexPWM_Type, *FlexPWM_MemMapPtr;

 /** Number of instances of the FlexPWM module. */
#define FlexPWM_INSTANCE_COUNT                   (2u)


/* FlexPWM - Peripheral instance base addresses */
/** Peripheral FlexPWM_0 base address */
#define FlexPWM_0_BASE                           (0xFBC00000u)
/** Peripheral FlexPWM_0 base pointer */
#define FlexPWM_0                                ((FlexPWM_Type *)FlexPWM_0_BASE)
/** Peripheral FlexPWM_1 base address */
#define FlexPWM_1_BASE                           (0xFFC04000u)
/** Peripheral FlexPWM_1 base pointer */
#define FlexPWM_1                                ((FlexPWM_Type *)FlexPWM_1_BASE)
/** Array initializer of FlexPWM peripheral base addresses */
#define FlexPWM_BASE_ADDRS                       { FlexPWM_0_BASE, FlexPWM_1_BASE }
/** Array initializer of FlexPWM peripheral base pointers */
#define FlexPWM_BASE_PTRS                        { FlexPWM_0, FlexPWM_1 }
/** Number of compare interrupts */
#define FlexPWM_Compare_IRQS_COUNT               (4u)
/** Number of reload interrupts */
#define FlexPWM_Reload_IRQS_COUNT                (4u)
/** Number of capture interrupts */
#define FlexPWM_Capture_IRQS_COUNT               (4u)
/** Number of reload error interrupts */
#define FlexPWM_Reload_Error_IRQS_COUNT          (2u)
/** Number fault input interrupts */
#define FlexPWM_Fault_Input_IRQS_COUNT           (2u)
/** Interrupt vectors for the FlexPWM peripheral type */
#define FLEXPWM_COMPARE_IRQS                     { { FlexPWM_0_COF0_IRQn, FlexPWM_0_COF1_IRQn, FlexPWM_0_COF2_IRQn, FlexPWM_0_COF3_IRQn }, \
                                                   { FlexPWM_1_COF0_IRQn, FlexPWM_1_COF1_IRQn, FlexPWM_1_COF2_IRQn, FlexPWM_1_COF3_IRQn } }
#define FLEXPWM_RELOAD_IRQS                      { { FlexPWM_0_RF0_IRQn, FlexPWM_0_RF1_IRQn, FlexPWM_0_RF2_IRQn, FlexPWM_0_RF3_IRQn }, \
                                                   { FlexPWM_1_RF0_IRQn, FlexPWM_1_RF1_IRQn, FlexPWM_1_RF2_IRQn, FlexPWM_1_RF3_IRQn } }
#define FLEXPWM_CAPTURE_IRQS                     { { FlexPWM_0_CAF0_IRQn, FlexPWM_0_CAF1_IRQn, FlexPWM_0_CAF2_IRQn, FlexPWM_0_CAF3_IRQn }, \
                                                   { FlexPWM_1_CAF0_IRQn, FlexPWM_1_CAF1_IRQn, FlexPWM_1_CAF2_IRQn, FlexPWM_1_CAF3_IRQn } }
#define FLEXPWM_RELOAD_ERROR_IRQS                { FlexPWM_0_REF_IRQn, FlexPWM_1_REF_IRQn }
#define FLEXPWM_FAULT_INPUT_IRQS                 { FlexPWM_0_FFLAG_IRQn, FlexPWM_1_FFLAG_IRQn }

/* ----------------------------------------------------------------------------
   -- FlexPWM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FlexPWM_Register_Masks FlexPWM Register Masks
 * @{
 */

/* CNT Bit Fields */
#define FlexPWM_CNT_CNT_MASK                     0xFFFFu
#define FlexPWM_CNT_CNT_SHIFT                    0u
#define FlexPWM_CNT_CNT_WIDTH                    16u
#define FlexPWM_CNT_CNT(x)                       (((uint16_t)(((uint16_t)(x))<<FlexPWM_CNT_CNT_SHIFT))&FlexPWM_CNT_CNT_MASK)
/* INIT Bit Fields */
#define FlexPWM_INIT_INIT_MASK                   0xFFFFu
#define FlexPWM_INIT_INIT_SHIFT                  0u
#define FlexPWM_INIT_INIT_WIDTH                  16u
#define FlexPWM_INIT_INIT(x)                     (((uint16_t)(((uint16_t)(x))<<FlexPWM_INIT_INIT_SHIFT))&FlexPWM_INIT_INIT_MASK)
/* CTRL2 Bit Fields */
#define FlexPWM_CTRL2_CLK_SEL_MASK               0x3u
#define FlexPWM_CTRL2_CLK_SEL_SHIFT              0u
#define FlexPWM_CTRL2_CLK_SEL_WIDTH              2u
#define FlexPWM_CTRL2_CLK_SEL(x)                 (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL2_CLK_SEL_SHIFT))&FlexPWM_CTRL2_CLK_SEL_MASK)
#define FlexPWM_CTRL2_RELOAD_SEL_MASK            0x4u
#define FlexPWM_CTRL2_RELOAD_SEL_SHIFT           2u
#define FlexPWM_CTRL2_RELOAD_SEL_WIDTH           1u
#define FlexPWM_CTRL2_RELOAD_SEL(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL2_RELOAD_SEL_SHIFT))&FlexPWM_CTRL2_RELOAD_SEL_MASK)
#define FlexPWM_CTRL2_FORCE_SEL_MASK             0x38u
#define FlexPWM_CTRL2_FORCE_SEL_SHIFT            3u
#define FlexPWM_CTRL2_FORCE_SEL_WIDTH            3u
#define FlexPWM_CTRL2_FORCE_SEL(x)               (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL2_FORCE_SEL_SHIFT))&FlexPWM_CTRL2_FORCE_SEL_MASK)
#define FlexPWM_CTRL2_FORCE_MASK                 0x40u
#define FlexPWM_CTRL2_FORCE_SHIFT                6u
#define FlexPWM_CTRL2_FORCE_WIDTH                1u
#define FlexPWM_CTRL2_FORCE(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL2_FORCE_SHIFT))&FlexPWM_CTRL2_FORCE_MASK)
#define FlexPWM_CTRL2_FRCEN_MASK                 0x80u
#define FlexPWM_CTRL2_FRCEN_SHIFT                7u
#define FlexPWM_CTRL2_FRCEN_WIDTH                1u
#define FlexPWM_CTRL2_FRCEN(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL2_FRCEN_SHIFT))&FlexPWM_CTRL2_FRCEN_MASK)
#define FlexPWM_CTRL2_INIT_SEL_MASK              0x300u
#define FlexPWM_CTRL2_INIT_SEL_SHIFT             8u
#define FlexPWM_CTRL2_INIT_SEL_WIDTH             2u
#define FlexPWM_CTRL2_INIT_SEL(x)                (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL2_INIT_SEL_SHIFT))&FlexPWM_CTRL2_INIT_SEL_MASK)
#define FlexPWM_CTRL2_PWMX_INIT_MASK             0x400u
#define FlexPWM_CTRL2_PWMX_INIT_SHIFT            10u
#define FlexPWM_CTRL2_PWMX_INIT_WIDTH            1u
#define FlexPWM_CTRL2_PWMX_INIT(x)               (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL2_PWMX_INIT_SHIFT))&FlexPWM_CTRL2_PWMX_INIT_MASK)
#define FlexPWM_CTRL2_PWM45_INIT_MASK            0x800u
#define FlexPWM_CTRL2_PWM45_INIT_SHIFT           11u
#define FlexPWM_CTRL2_PWM45_INIT_WIDTH           1u
#define FlexPWM_CTRL2_PWM45_INIT(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL2_PWM45_INIT_SHIFT))&FlexPWM_CTRL2_PWM45_INIT_MASK)
#define FlexPWM_CTRL2_PWM23_INIT_MASK            0x1000u
#define FlexPWM_CTRL2_PWM23_INIT_SHIFT           12u
#define FlexPWM_CTRL2_PWM23_INIT_WIDTH           1u
#define FlexPWM_CTRL2_PWM23_INIT(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL2_PWM23_INIT_SHIFT))&FlexPWM_CTRL2_PWM23_INIT_MASK)
#define FlexPWM_CTRL2_INDEP_MASK                 0x2000u
#define FlexPWM_CTRL2_INDEP_SHIFT                13u
#define FlexPWM_CTRL2_INDEP_WIDTH                1u
#define FlexPWM_CTRL2_INDEP(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL2_INDEP_SHIFT))&FlexPWM_CTRL2_INDEP_MASK)
#define FlexPWM_CTRL2_DBGEN_MASK                 0x8000u
#define FlexPWM_CTRL2_DBGEN_SHIFT                15u
#define FlexPWM_CTRL2_DBGEN_WIDTH                1u
#define FlexPWM_CTRL2_DBGEN(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL2_DBGEN_SHIFT))&FlexPWM_CTRL2_DBGEN_MASK)
/* CTRL1 Bit Fields */
#define FlexPWM_CTRL1_DBLEN_MASK                 0x1u
#define FlexPWM_CTRL1_DBLEN_SHIFT                0u
#define FlexPWM_CTRL1_DBLEN_WIDTH                1u
#define FlexPWM_CTRL1_DBLEN(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL1_DBLEN_SHIFT))&FlexPWM_CTRL1_DBLEN_MASK)
#define FlexPWM_CTRL1_LDMOD_MASK                 0x4u
#define FlexPWM_CTRL1_LDMOD_SHIFT                2u
#define FlexPWM_CTRL1_LDMOD_WIDTH                1u
#define FlexPWM_CTRL1_LDMOD(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL1_LDMOD_SHIFT))&FlexPWM_CTRL1_LDMOD_MASK)
#define FlexPWM_CTRL1_PHSSHFT_MASK               0x8u
#define FlexPWM_CTRL1_PHSSHFT_SHIFT              3u
#define FlexPWM_CTRL1_PHSSHFT_WIDTH              1u
#define FlexPWM_CTRL1_PHSSHFT(x)                 (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL1_PHSSHFT_SHIFT))&FlexPWM_CTRL1_PHSSHFT_MASK)
#define FlexPWM_CTRL1_PRSC_MASK                  0x70u
#define FlexPWM_CTRL1_PRSC_SHIFT                 4u
#define FlexPWM_CTRL1_PRSC_WIDTH                 3u
#define FlexPWM_CTRL1_PRSC(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL1_PRSC_SHIFT))&FlexPWM_CTRL1_PRSC_MASK)
#define FlexPWM_CTRL1_DT_MASK                    0x300u
#define FlexPWM_CTRL1_DT_SHIFT                   8u
#define FlexPWM_CTRL1_DT_WIDTH                   2u
#define FlexPWM_CTRL1_DT(x)                      (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL1_DT_SHIFT))&FlexPWM_CTRL1_DT_MASK)
#define FlexPWM_CTRL1_FULL_MASK                  0x400u
#define FlexPWM_CTRL1_FULL_SHIFT                 10u
#define FlexPWM_CTRL1_FULL_WIDTH                 1u
#define FlexPWM_CTRL1_FULL(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL1_FULL_SHIFT))&FlexPWM_CTRL1_FULL_MASK)
#define FlexPWM_CTRL1_HALF_MASK                  0x800u
#define FlexPWM_CTRL1_HALF_SHIFT                 11u
#define FlexPWM_CTRL1_HALF_WIDTH                 1u
#define FlexPWM_CTRL1_HALF(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL1_HALF_SHIFT))&FlexPWM_CTRL1_HALF_MASK)
#define FlexPWM_CTRL1_LDFQ_MASK                  0xF000u
#define FlexPWM_CTRL1_LDFQ_SHIFT                 12u
#define FlexPWM_CTRL1_LDFQ_WIDTH                 4u
#define FlexPWM_CTRL1_LDFQ(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_CTRL1_LDFQ_SHIFT))&FlexPWM_CTRL1_LDFQ_MASK)
/* VAL0 Bit Fields */
#define FlexPWM_VAL0_VAL0_MASK                   0xFFFFu
#define FlexPWM_VAL0_VAL0_SHIFT                  0u
#define FlexPWM_VAL0_VAL0_WIDTH                  16u
#define FlexPWM_VAL0_VAL0(x)                     (((uint16_t)(((uint16_t)(x))<<FlexPWM_VAL0_VAL0_SHIFT))&FlexPWM_VAL0_VAL0_MASK)
/* VAL1 Bit Fields */
#define FlexPWM_VAL1_VAL1_MASK                   0xFFFFu
#define FlexPWM_VAL1_VAL1_SHIFT                  0u
#define FlexPWM_VAL1_VAL1_WIDTH                  16u
#define FlexPWM_VAL1_VAL1(x)                     (((uint16_t)(((uint16_t)(x))<<FlexPWM_VAL1_VAL1_SHIFT))&FlexPWM_VAL1_VAL1_MASK)
/* VAL2 Bit Fields */
#define FlexPWM_VAL2_VAL2_MASK                   0xFFFFu
#define FlexPWM_VAL2_VAL2_SHIFT                  0u
#define FlexPWM_VAL2_VAL2_WIDTH                  16u
#define FlexPWM_VAL2_VAL2(x)                     (((uint16_t)(((uint16_t)(x))<<FlexPWM_VAL2_VAL2_SHIFT))&FlexPWM_VAL2_VAL2_MASK)
/* VAL3 Bit Fields */
#define FlexPWM_VAL3_VAL3_MASK                   0xFFFFu
#define FlexPWM_VAL3_VAL3_SHIFT                  0u
#define FlexPWM_VAL3_VAL3_WIDTH                  16u
#define FlexPWM_VAL3_VAL3(x)                     (((uint16_t)(((uint16_t)(x))<<FlexPWM_VAL3_VAL3_SHIFT))&FlexPWM_VAL3_VAL3_MASK)
/* VAL4 Bit Fields */
#define FlexPWM_VAL4_VAL4_MASK                   0xFFFFu
#define FlexPWM_VAL4_VAL4_SHIFT                  0u
#define FlexPWM_VAL4_VAL4_WIDTH                  16u
#define FlexPWM_VAL4_VAL4(x)                     (((uint16_t)(((uint16_t)(x))<<FlexPWM_VAL4_VAL4_SHIFT))&FlexPWM_VAL4_VAL4_MASK)
/* VAL5 Bit Fields */
#define FlexPWM_VAL5_VAL5_MASK                   0xFFFFu
#define FlexPWM_VAL5_VAL5_SHIFT                  0u
#define FlexPWM_VAL5_VAL5_WIDTH                  16u
#define FlexPWM_VAL5_VAL5(x)                     (((uint16_t)(((uint16_t)(x))<<FlexPWM_VAL5_VAL5_SHIFT))&FlexPWM_VAL5_VAL5_MASK)
/* OCTRL Bit Fields */
#define FlexPWM_OCTRL_PWMXFS_MASK                0x3u
#define FlexPWM_OCTRL_PWMXFS_SHIFT               0u
#define FlexPWM_OCTRL_PWMXFS_WIDTH               2u
#define FlexPWM_OCTRL_PWMXFS(x)                  (((uint16_t)(((uint16_t)(x))<<FlexPWM_OCTRL_PWMXFS_SHIFT))&FlexPWM_OCTRL_PWMXFS_MASK)
#define FlexPWM_OCTRL_PWMBFS_MASK                0xCu
#define FlexPWM_OCTRL_PWMBFS_SHIFT               2u
#define FlexPWM_OCTRL_PWMBFS_WIDTH               2u
#define FlexPWM_OCTRL_PWMBFS(x)                  (((uint16_t)(((uint16_t)(x))<<FlexPWM_OCTRL_PWMBFS_SHIFT))&FlexPWM_OCTRL_PWMBFS_MASK)
#define FlexPWM_OCTRL_PWMAFS_MASK                0x30u
#define FlexPWM_OCTRL_PWMAFS_SHIFT               4u
#define FlexPWM_OCTRL_PWMAFS_WIDTH               2u
#define FlexPWM_OCTRL_PWMAFS(x)                  (((uint16_t)(((uint16_t)(x))<<FlexPWM_OCTRL_PWMAFS_SHIFT))&FlexPWM_OCTRL_PWMAFS_MASK)
#define FlexPWM_OCTRL_POLX_MASK                  0x100u
#define FlexPWM_OCTRL_POLX_SHIFT                 8u
#define FlexPWM_OCTRL_POLX_WIDTH                 1u
#define FlexPWM_OCTRL_POLX(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_OCTRL_POLX_SHIFT))&FlexPWM_OCTRL_POLX_MASK)
#define FlexPWM_OCTRL_POLB_MASK                  0x200u
#define FlexPWM_OCTRL_POLB_SHIFT                 9u
#define FlexPWM_OCTRL_POLB_WIDTH                 1u
#define FlexPWM_OCTRL_POLB(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_OCTRL_POLB_SHIFT))&FlexPWM_OCTRL_POLB_MASK)
#define FlexPWM_OCTRL_POLA_MASK                  0x400u
#define FlexPWM_OCTRL_POLA_SHIFT                 10u
#define FlexPWM_OCTRL_POLA_WIDTH                 1u
#define FlexPWM_OCTRL_POLA(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_OCTRL_POLA_SHIFT))&FlexPWM_OCTRL_POLA_MASK)
#define FlexPWM_OCTRL_PWMX_IN_MASK               0x2000u
#define FlexPWM_OCTRL_PWMX_IN_SHIFT              13u
#define FlexPWM_OCTRL_PWMX_IN_WIDTH              1u
#define FlexPWM_OCTRL_PWMX_IN(x)                 (((uint16_t)(((uint16_t)(x))<<FlexPWM_OCTRL_PWMX_IN_SHIFT))&FlexPWM_OCTRL_PWMX_IN_MASK)
/* STS Bit Fields */
#define FlexPWM_STS_CMPF_MASK                    0x3Fu
#define FlexPWM_STS_CMPF_SHIFT                   0u
#define FlexPWM_STS_CMPF_WIDTH                   6u
#define FlexPWM_STS_CMPF(x)                      (((uint16_t)(((uint16_t)(x))<<FlexPWM_STS_CMPF_SHIFT))&FlexPWM_STS_CMPF_MASK)
#define FlexPWM_STS_CFX0_MASK                    0x40u
#define FlexPWM_STS_CFX0_SHIFT                   6u
#define FlexPWM_STS_CFX0_WIDTH                   1u
#define FlexPWM_STS_CFX0(x)                      (((uint16_t)(((uint16_t)(x))<<FlexPWM_STS_CFX0_SHIFT))&FlexPWM_STS_CFX0_MASK)
#define FlexPWM_STS_CFX1_MASK                    0x80u
#define FlexPWM_STS_CFX1_SHIFT                   7u
#define FlexPWM_STS_CFX1_WIDTH                   1u
#define FlexPWM_STS_CFX1(x)                      (((uint16_t)(((uint16_t)(x))<<FlexPWM_STS_CFX1_SHIFT))&FlexPWM_STS_CFX1_MASK)
#define FlexPWM_STS_RF_MASK                      0x1000u
#define FlexPWM_STS_RF_SHIFT                     12u
#define FlexPWM_STS_RF_WIDTH                     1u
#define FlexPWM_STS_RF(x)                        (((uint16_t)(((uint16_t)(x))<<FlexPWM_STS_RF_SHIFT))&FlexPWM_STS_RF_MASK)
#define FlexPWM_STS_REF_MASK                     0x2000u
#define FlexPWM_STS_REF_SHIFT                    13u
#define FlexPWM_STS_REF_WIDTH                    1u
#define FlexPWM_STS_REF(x)                       (((uint16_t)(((uint16_t)(x))<<FlexPWM_STS_REF_SHIFT))&FlexPWM_STS_REF_MASK)
#define FlexPWM_STS_RUF_MASK                     0x4000u
#define FlexPWM_STS_RUF_SHIFT                    14u
#define FlexPWM_STS_RUF_WIDTH                    1u
#define FlexPWM_STS_RUF(x)                       (((uint16_t)(((uint16_t)(x))<<FlexPWM_STS_RUF_SHIFT))&FlexPWM_STS_RUF_MASK)
/* INTEN Bit Fields */
#define FlexPWM_INTEN_CMPIE_MASK                 0x3Fu
#define FlexPWM_INTEN_CMPIE_SHIFT                0u
#define FlexPWM_INTEN_CMPIE_WIDTH                6u
#define FlexPWM_INTEN_CMPIE(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_INTEN_CMPIE_SHIFT))&FlexPWM_INTEN_CMPIE_MASK)
#define FlexPWM_INTEN_CX0IE_MASK                 0x40u
#define FlexPWM_INTEN_CX0IE_SHIFT                6u
#define FlexPWM_INTEN_CX0IE_WIDTH                1u
#define FlexPWM_INTEN_CX0IE(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_INTEN_CX0IE_SHIFT))&FlexPWM_INTEN_CX0IE_MASK)
#define FlexPWM_INTEN_CX1IE_MASK                 0x80u
#define FlexPWM_INTEN_CX1IE_SHIFT                7u
#define FlexPWM_INTEN_CX1IE_WIDTH                1u
#define FlexPWM_INTEN_CX1IE(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_INTEN_CX1IE_SHIFT))&FlexPWM_INTEN_CX1IE_MASK)
#define FlexPWM_INTEN_RIE_MASK                   0x1000u
#define FlexPWM_INTEN_RIE_SHIFT                  12u
#define FlexPWM_INTEN_RIE_WIDTH                  1u
#define FlexPWM_INTEN_RIE(x)                     (((uint16_t)(((uint16_t)(x))<<FlexPWM_INTEN_RIE_SHIFT))&FlexPWM_INTEN_RIE_MASK)
#define FlexPWM_INTEN_REIE_MASK                  0x2000u
#define FlexPWM_INTEN_REIE_SHIFT                 13u
#define FlexPWM_INTEN_REIE_WIDTH                 1u
#define FlexPWM_INTEN_REIE(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_INTEN_REIE_SHIFT))&FlexPWM_INTEN_REIE_MASK)
/* DMAEN Bit Fields */
#define FlexPWM_DMAEN_CX0DE_MASK                 0x1u
#define FlexPWM_DMAEN_CX0DE_SHIFT                0u
#define FlexPWM_DMAEN_CX0DE_WIDTH                1u
#define FlexPWM_DMAEN_CX0DE(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_DMAEN_CX0DE_SHIFT))&FlexPWM_DMAEN_CX0DE_MASK)
#define FlexPWM_DMAEN_CX1DE_MASK                 0x2u
#define FlexPWM_DMAEN_CX1DE_SHIFT                1u
#define FlexPWM_DMAEN_CX1DE_WIDTH                1u
#define FlexPWM_DMAEN_CX1DE(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_DMAEN_CX1DE_SHIFT))&FlexPWM_DMAEN_CX1DE_MASK)
#define FlexPWM_DMAEN_CAPTDE_MASK                0xC0u
#define FlexPWM_DMAEN_CAPTDE_SHIFT               6u
#define FlexPWM_DMAEN_CAPTDE_WIDTH               2u
#define FlexPWM_DMAEN_CAPTDE(x)                  (((uint16_t)(((uint16_t)(x))<<FlexPWM_DMAEN_CAPTDE_SHIFT))&FlexPWM_DMAEN_CAPTDE_MASK)
#define FlexPWM_DMAEN_FAND_MASK                  0x100u
#define FlexPWM_DMAEN_FAND_SHIFT                 8u
#define FlexPWM_DMAEN_FAND_WIDTH                 1u
#define FlexPWM_DMAEN_FAND(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_DMAEN_FAND_SHIFT))&FlexPWM_DMAEN_FAND_MASK)
#define FlexPWM_DMAEN_VALDE_MASK                 0x200u
#define FlexPWM_DMAEN_VALDE_SHIFT                9u
#define FlexPWM_DMAEN_VALDE_WIDTH                1u
#define FlexPWM_DMAEN_VALDE(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_DMAEN_VALDE_SHIFT))&FlexPWM_DMAEN_VALDE_MASK)
/* TCTRL Bit Fields */
#define FlexPWM_TCTRL_OUT_TRIG_EN_MASK           0x3Fu
#define FlexPWM_TCTRL_OUT_TRIG_EN_SHIFT          0u
#define FlexPWM_TCTRL_OUT_TRIG_EN_WIDTH          6u
#define FlexPWM_TCTRL_OUT_TRIG_EN(x)             (((uint16_t)(((uint16_t)(x))<<FlexPWM_TCTRL_OUT_TRIG_EN_SHIFT))&FlexPWM_TCTRL_OUT_TRIG_EN_MASK)
/* DISMAP Bit Fields */
#define FlexPWM_DISMAP_DISA_MASK                 0xFu
#define FlexPWM_DISMAP_DISA_SHIFT                0u
#define FlexPWM_DISMAP_DISA_WIDTH                4u
#define FlexPWM_DISMAP_DISA(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_DISMAP_DISA_SHIFT))&FlexPWM_DISMAP_DISA_MASK)
#define FlexPWM_DISMAP_DISB_MASK                 0xF0u
#define FlexPWM_DISMAP_DISB_SHIFT                4u
#define FlexPWM_DISMAP_DISB_WIDTH                4u
#define FlexPWM_DISMAP_DISB(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_DISMAP_DISB_SHIFT))&FlexPWM_DISMAP_DISB_MASK)
#define FlexPWM_DISMAP_DISX_MASK                 0xF00u
#define FlexPWM_DISMAP_DISX_SHIFT                8u
#define FlexPWM_DISMAP_DISX_WIDTH                4u
#define FlexPWM_DISMAP_DISX(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_DISMAP_DISX_SHIFT))&FlexPWM_DISMAP_DISX_MASK)
/* DTCNT0 Bit Fields */
#define FlexPWM_DTCNT0_DTCNT0_MASK               0x7FFu
#define FlexPWM_DTCNT0_DTCNT0_SHIFT              0u
#define FlexPWM_DTCNT0_DTCNT0_WIDTH              11u
#define FlexPWM_DTCNT0_DTCNT0(x)                 (((uint16_t)(((uint16_t)(x))<<FlexPWM_DTCNT0_DTCNT0_SHIFT))&FlexPWM_DTCNT0_DTCNT0_MASK)
/* DTCNT1 Bit Fields */
#define FlexPWM_DTCNT1_DTCNT1_MASK               0x7FFu
#define FlexPWM_DTCNT1_DTCNT1_SHIFT              0u
#define FlexPWM_DTCNT1_DTCNT1_WIDTH              11u
#define FlexPWM_DTCNT1_DTCNT1(x)                 (((uint16_t)(((uint16_t)(x))<<FlexPWM_DTCNT1_DTCNT1_SHIFT))&FlexPWM_DTCNT1_DTCNT1_MASK)
/* CAPTCTRLX Bit Fields */
#define FlexPWM_CAPTCTRLX_ARMX_MASK              0x1u
#define FlexPWM_CAPTCTRLX_ARMX_SHIFT             0u
#define FlexPWM_CAPTCTRLX_ARMX_WIDTH             1u
#define FlexPWM_CAPTCTRLX_ARMX(x)                (((uint16_t)(((uint16_t)(x))<<FlexPWM_CAPTCTRLX_ARMX_SHIFT))&FlexPWM_CAPTCTRLX_ARMX_MASK)
#define FlexPWM_CAPTCTRLX_ONESHOTX_MASK          0x2u
#define FlexPWM_CAPTCTRLX_ONESHOTX_SHIFT         1u
#define FlexPWM_CAPTCTRLX_ONESHOTX_WIDTH         1u
#define FlexPWM_CAPTCTRLX_ONESHOTX(x)            (((uint16_t)(((uint16_t)(x))<<FlexPWM_CAPTCTRLX_ONESHOTX_SHIFT))&FlexPWM_CAPTCTRLX_ONESHOTX_MASK)
#define FlexPWM_CAPTCTRLX_EDGX0_MASK             0xCu
#define FlexPWM_CAPTCTRLX_EDGX0_SHIFT            2u
#define FlexPWM_CAPTCTRLX_EDGX0_WIDTH            2u
#define FlexPWM_CAPTCTRLX_EDGX0(x)               (((uint16_t)(((uint16_t)(x))<<FlexPWM_CAPTCTRLX_EDGX0_SHIFT))&FlexPWM_CAPTCTRLX_EDGX0_MASK)
#define FlexPWM_CAPTCTRLX_EDGX1_MASK             0x30u
#define FlexPWM_CAPTCTRLX_EDGX1_SHIFT            4u
#define FlexPWM_CAPTCTRLX_EDGX1_WIDTH            2u
#define FlexPWM_CAPTCTRLX_EDGX1(x)               (((uint16_t)(((uint16_t)(x))<<FlexPWM_CAPTCTRLX_EDGX1_SHIFT))&FlexPWM_CAPTCTRLX_EDGX1_MASK)
#define FlexPWM_CAPTCTRLX_INPSELX_MASK           0x40u
#define FlexPWM_CAPTCTRLX_INPSELX_SHIFT          6u
#define FlexPWM_CAPTCTRLX_INPSELX_WIDTH          1u
#define FlexPWM_CAPTCTRLX_INPSELX(x)             (((uint16_t)(((uint16_t)(x))<<FlexPWM_CAPTCTRLX_INPSELX_SHIFT))&FlexPWM_CAPTCTRLX_INPSELX_MASK)
#define FlexPWM_CAPTCTRLX_EDGCNTX_EN_MASK        0x80u
#define FlexPWM_CAPTCTRLX_EDGCNTX_EN_SHIFT       7u
#define FlexPWM_CAPTCTRLX_EDGCNTX_EN_WIDTH       1u
#define FlexPWM_CAPTCTRLX_EDGCNTX_EN(x)          (((uint16_t)(((uint16_t)(x))<<FlexPWM_CAPTCTRLX_EDGCNTX_EN_SHIFT))&FlexPWM_CAPTCTRLX_EDGCNTX_EN_MASK)
#define FlexPWM_CAPTCTRLX_CFXWM_MASK             0x300u
#define FlexPWM_CAPTCTRLX_CFXWM_SHIFT            8u
#define FlexPWM_CAPTCTRLX_CFXWM_WIDTH            2u
#define FlexPWM_CAPTCTRLX_CFXWM(x)               (((uint16_t)(((uint16_t)(x))<<FlexPWM_CAPTCTRLX_CFXWM_SHIFT))&FlexPWM_CAPTCTRLX_CFXWM_MASK)
#define FlexPWM_CAPTCTRLX_CX0CNT_MASK            0x1C00u
#define FlexPWM_CAPTCTRLX_CX0CNT_SHIFT           10u
#define FlexPWM_CAPTCTRLX_CX0CNT_WIDTH           3u
#define FlexPWM_CAPTCTRLX_CX0CNT(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_CAPTCTRLX_CX0CNT_SHIFT))&FlexPWM_CAPTCTRLX_CX0CNT_MASK)
#define FlexPWM_CAPTCTRLX_CX1CNT_MASK            0xE000u
#define FlexPWM_CAPTCTRLX_CX1CNT_SHIFT           13u
#define FlexPWM_CAPTCTRLX_CX1CNT_WIDTH           3u
#define FlexPWM_CAPTCTRLX_CX1CNT(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_CAPTCTRLX_CX1CNT_SHIFT))&FlexPWM_CAPTCTRLX_CX1CNT_MASK)
/* CAPTCMPX Bit Fields */
#define FlexPWM_CAPTCMPX_EDGCMPX_MASK            0xFFu
#define FlexPWM_CAPTCMPX_EDGCMPX_SHIFT           0u
#define FlexPWM_CAPTCMPX_EDGCMPX_WIDTH           8u
#define FlexPWM_CAPTCMPX_EDGCMPX(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_CAPTCMPX_EDGCMPX_SHIFT))&FlexPWM_CAPTCMPX_EDGCMPX_MASK)
#define FlexPWM_CAPTCMPX_EDGCNTX_MASK            0xFF00u
#define FlexPWM_CAPTCMPX_EDGCNTX_SHIFT           8u
#define FlexPWM_CAPTCMPX_EDGCNTX_WIDTH           8u
#define FlexPWM_CAPTCMPX_EDGCNTX(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_CAPTCMPX_EDGCNTX_SHIFT))&FlexPWM_CAPTCMPX_EDGCNTX_MASK)
/* CVAL0 Bit Fields */
#define FlexPWM_CVAL0_CAPTVAL0_MASK              0xFFFFu
#define FlexPWM_CVAL0_CAPTVAL0_SHIFT             0u
#define FlexPWM_CVAL0_CAPTVAL0_WIDTH             16u
#define FlexPWM_CVAL0_CAPTVAL0(x)                (((uint16_t)(((uint16_t)(x))<<FlexPWM_CVAL0_CAPTVAL0_SHIFT))&FlexPWM_CVAL0_CAPTVAL0_MASK)
/* CVAL0CYC Bit Fields */
#define FlexPWM_CVAL0CYC_CVAL0CYC_MASK           0x7u
#define FlexPWM_CVAL0CYC_CVAL0CYC_SHIFT          0u
#define FlexPWM_CVAL0CYC_CVAL0CYC_WIDTH          3u
#define FlexPWM_CVAL0CYC_CVAL0CYC(x)             (((uint16_t)(((uint16_t)(x))<<FlexPWM_CVAL0CYC_CVAL0CYC_SHIFT))&FlexPWM_CVAL0CYC_CVAL0CYC_MASK)
/* CVAL1 Bit Fields */
#define FlexPWM_CVAL1_CAPTVAL1_MASK              0xFFFFu
#define FlexPWM_CVAL1_CAPTVAL1_SHIFT             0u
#define FlexPWM_CVAL1_CAPTVAL1_WIDTH             16u
#define FlexPWM_CVAL1_CAPTVAL1(x)                (((uint16_t)(((uint16_t)(x))<<FlexPWM_CVAL1_CAPTVAL1_SHIFT))&FlexPWM_CVAL1_CAPTVAL1_MASK)
/* CVAL1CYC Bit Fields */
#define FlexPWM_CVAL1CYC_CVAL1CYC_MASK           0x7u
#define FlexPWM_CVAL1CYC_CVAL1CYC_SHIFT          0u
#define FlexPWM_CVAL1CYC_CVAL1CYC_WIDTH          3u
#define FlexPWM_CVAL1CYC_CVAL1CYC(x)             (((uint16_t)(((uint16_t)(x))<<FlexPWM_CVAL1CYC_CVAL1CYC_SHIFT))&FlexPWM_CVAL1CYC_CVAL1CYC_MASK)
/* OUTEN Bit Fields */
#define FlexPWM_OUTEN_PWMX_EN_MASK               0xFu
#define FlexPWM_OUTEN_PWMX_EN_SHIFT              0u
#define FlexPWM_OUTEN_PWMX_EN_WIDTH              4u
#define FlexPWM_OUTEN_PWMX_EN(x)                 (((uint16_t)(((uint16_t)(x))<<FlexPWM_OUTEN_PWMX_EN_SHIFT))&FlexPWM_OUTEN_PWMX_EN_MASK)
#define FlexPWM_OUTEN_PWMB_EN_MASK               0xF0u
#define FlexPWM_OUTEN_PWMB_EN_SHIFT              4u
#define FlexPWM_OUTEN_PWMB_EN_WIDTH              4u
#define FlexPWM_OUTEN_PWMB_EN(x)                 (((uint16_t)(((uint16_t)(x))<<FlexPWM_OUTEN_PWMB_EN_SHIFT))&FlexPWM_OUTEN_PWMB_EN_MASK)
#define FlexPWM_OUTEN_PWMA_EN_MASK               0xF00u
#define FlexPWM_OUTEN_PWMA_EN_SHIFT              8u
#define FlexPWM_OUTEN_PWMA_EN_WIDTH              4u
#define FlexPWM_OUTEN_PWMA_EN(x)                 (((uint16_t)(((uint16_t)(x))<<FlexPWM_OUTEN_PWMA_EN_SHIFT))&FlexPWM_OUTEN_PWMA_EN_MASK)
/* MASK Bit Fields */
#define FlexPWM_MASK_MASKX_MASK                  0xFu
#define FlexPWM_MASK_MASKX_SHIFT                 0u
#define FlexPWM_MASK_MASKX_WIDTH                 4u
#define FlexPWM_MASK_MASKX(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_MASK_MASKX_SHIFT))&FlexPWM_MASK_MASKX_MASK)
#define FlexPWM_MASK_MASKB_MASK                  0xF0u
#define FlexPWM_MASK_MASKB_SHIFT                 4u
#define FlexPWM_MASK_MASKB_WIDTH                 4u
#define FlexPWM_MASK_MASKB(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_MASK_MASKB_SHIFT))&FlexPWM_MASK_MASKB_MASK)
#define FlexPWM_MASK_MASKA_MASK                  0xF00u
#define FlexPWM_MASK_MASKA_SHIFT                 8u
#define FlexPWM_MASK_MASKA_WIDTH                 4u
#define FlexPWM_MASK_MASKA(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_MASK_MASKA_SHIFT))&FlexPWM_MASK_MASKA_MASK)
#define FlexPWM_MASK_UPDATE_MASK_MASK            0xF000u
#define FlexPWM_MASK_UPDATE_MASK_SHIFT           12u
#define FlexPWM_MASK_UPDATE_MASK_WIDTH           4u
#define FlexPWM_MASK_UPDATE_MASK(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_MASK_UPDATE_MASK_SHIFT))&FlexPWM_MASK_UPDATE_MASK_MASK)
/* SWCOUT Bit Fields */
#define FlexPWM_SWCOUT_OUT45_0_MASK              0x1u
#define FlexPWM_SWCOUT_OUT45_0_SHIFT             0u
#define FlexPWM_SWCOUT_OUT45_0_WIDTH             1u
#define FlexPWM_SWCOUT_OUT45_0(x)                (((uint16_t)(((uint16_t)(x))<<FlexPWM_SWCOUT_OUT45_0_SHIFT))&FlexPWM_SWCOUT_OUT45_0_MASK)
#define FlexPWM_SWCOUT_OUT23_0_MASK              0x2u
#define FlexPWM_SWCOUT_OUT23_0_SHIFT             1u
#define FlexPWM_SWCOUT_OUT23_0_WIDTH             1u
#define FlexPWM_SWCOUT_OUT23_0(x)                (((uint16_t)(((uint16_t)(x))<<FlexPWM_SWCOUT_OUT23_0_SHIFT))&FlexPWM_SWCOUT_OUT23_0_MASK)
#define FlexPWM_SWCOUT_OUT45_1_MASK              0x4u
#define FlexPWM_SWCOUT_OUT45_1_SHIFT             2u
#define FlexPWM_SWCOUT_OUT45_1_WIDTH             1u
#define FlexPWM_SWCOUT_OUT45_1(x)                (((uint16_t)(((uint16_t)(x))<<FlexPWM_SWCOUT_OUT45_1_SHIFT))&FlexPWM_SWCOUT_OUT45_1_MASK)
#define FlexPWM_SWCOUT_OUT23_1_MASK              0x8u
#define FlexPWM_SWCOUT_OUT23_1_SHIFT             3u
#define FlexPWM_SWCOUT_OUT23_1_WIDTH             1u
#define FlexPWM_SWCOUT_OUT23_1(x)                (((uint16_t)(((uint16_t)(x))<<FlexPWM_SWCOUT_OUT23_1_SHIFT))&FlexPWM_SWCOUT_OUT23_1_MASK)
#define FlexPWM_SWCOUT_OUT45_2_MASK              0x10u
#define FlexPWM_SWCOUT_OUT45_2_SHIFT             4u
#define FlexPWM_SWCOUT_OUT45_2_WIDTH             1u
#define FlexPWM_SWCOUT_OUT45_2(x)                (((uint16_t)(((uint16_t)(x))<<FlexPWM_SWCOUT_OUT45_2_SHIFT))&FlexPWM_SWCOUT_OUT45_2_MASK)
#define FlexPWM_SWCOUT_OUT23_2_MASK              0x20u
#define FlexPWM_SWCOUT_OUT23_2_SHIFT             5u
#define FlexPWM_SWCOUT_OUT23_2_WIDTH             1u
#define FlexPWM_SWCOUT_OUT23_2(x)                (((uint16_t)(((uint16_t)(x))<<FlexPWM_SWCOUT_OUT23_2_SHIFT))&FlexPWM_SWCOUT_OUT23_2_MASK)
#define FlexPWM_SWCOUT_OUT45_3_MASK              0x40u
#define FlexPWM_SWCOUT_OUT45_3_SHIFT             6u
#define FlexPWM_SWCOUT_OUT45_3_WIDTH             1u
#define FlexPWM_SWCOUT_OUT45_3(x)                (((uint16_t)(((uint16_t)(x))<<FlexPWM_SWCOUT_OUT45_3_SHIFT))&FlexPWM_SWCOUT_OUT45_3_MASK)
#define FlexPWM_SWCOUT_OUT23_3_MASK              0x80u
#define FlexPWM_SWCOUT_OUT23_3_SHIFT             7u
#define FlexPWM_SWCOUT_OUT23_3_WIDTH             1u
#define FlexPWM_SWCOUT_OUT23_3(x)                (((uint16_t)(((uint16_t)(x))<<FlexPWM_SWCOUT_OUT23_3_SHIFT))&FlexPWM_SWCOUT_OUT23_3_MASK)
/* DTSRCSEL Bit Fields */
#define FlexPWM_DTSRCSEL_SEL45_0_MASK            0x3u
#define FlexPWM_DTSRCSEL_SEL45_0_SHIFT           0u
#define FlexPWM_DTSRCSEL_SEL45_0_WIDTH           2u
#define FlexPWM_DTSRCSEL_SEL45_0(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_DTSRCSEL_SEL45_0_SHIFT))&FlexPWM_DTSRCSEL_SEL45_0_MASK)
#define FlexPWM_DTSRCSEL_SEL23_0_MASK            0xCu
#define FlexPWM_DTSRCSEL_SEL23_0_SHIFT           2u
#define FlexPWM_DTSRCSEL_SEL23_0_WIDTH           2u
#define FlexPWM_DTSRCSEL_SEL23_0(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_DTSRCSEL_SEL23_0_SHIFT))&FlexPWM_DTSRCSEL_SEL23_0_MASK)
#define FlexPWM_DTSRCSEL_SEL45_1_MASK            0x30u
#define FlexPWM_DTSRCSEL_SEL45_1_SHIFT           4u
#define FlexPWM_DTSRCSEL_SEL45_1_WIDTH           2u
#define FlexPWM_DTSRCSEL_SEL45_1(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_DTSRCSEL_SEL45_1_SHIFT))&FlexPWM_DTSRCSEL_SEL45_1_MASK)
#define FlexPWM_DTSRCSEL_SEL23_1_MASK            0xC0u
#define FlexPWM_DTSRCSEL_SEL23_1_SHIFT           6u
#define FlexPWM_DTSRCSEL_SEL23_1_WIDTH           2u
#define FlexPWM_DTSRCSEL_SEL23_1(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_DTSRCSEL_SEL23_1_SHIFT))&FlexPWM_DTSRCSEL_SEL23_1_MASK)
#define FlexPWM_DTSRCSEL_SEL45_2_MASK            0x300u
#define FlexPWM_DTSRCSEL_SEL45_2_SHIFT           8u
#define FlexPWM_DTSRCSEL_SEL45_2_WIDTH           2u
#define FlexPWM_DTSRCSEL_SEL45_2(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_DTSRCSEL_SEL45_2_SHIFT))&FlexPWM_DTSRCSEL_SEL45_2_MASK)
#define FlexPWM_DTSRCSEL_SEL23_2_MASK            0xC00u
#define FlexPWM_DTSRCSEL_SEL23_2_SHIFT           10u
#define FlexPWM_DTSRCSEL_SEL23_2_WIDTH           2u
#define FlexPWM_DTSRCSEL_SEL23_2(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_DTSRCSEL_SEL23_2_SHIFT))&FlexPWM_DTSRCSEL_SEL23_2_MASK)
#define FlexPWM_DTSRCSEL_SEL45_3_MASK            0x3000u
#define FlexPWM_DTSRCSEL_SEL45_3_SHIFT           12u
#define FlexPWM_DTSRCSEL_SEL45_3_WIDTH           2u
#define FlexPWM_DTSRCSEL_SEL45_3(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_DTSRCSEL_SEL45_3_SHIFT))&FlexPWM_DTSRCSEL_SEL45_3_MASK)
#define FlexPWM_DTSRCSEL_SEL23_3_MASK            0xC000u
#define FlexPWM_DTSRCSEL_SEL23_3_SHIFT           14u
#define FlexPWM_DTSRCSEL_SEL23_3_WIDTH           2u
#define FlexPWM_DTSRCSEL_SEL23_3(x)              (((uint16_t)(((uint16_t)(x))<<FlexPWM_DTSRCSEL_SEL23_3_SHIFT))&FlexPWM_DTSRCSEL_SEL23_3_MASK)
/* MCTRL Bit Fields */
#define FlexPWM_MCTRL_LDOK_MASK                  0xFu
#define FlexPWM_MCTRL_LDOK_SHIFT                 0u
#define FlexPWM_MCTRL_LDOK_WIDTH                 4u
#define FlexPWM_MCTRL_LDOK(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_MCTRL_LDOK_SHIFT))&FlexPWM_MCTRL_LDOK_MASK)
#define FlexPWM_MCTRL_CLDOK_MASK                 0xF0u
#define FlexPWM_MCTRL_CLDOK_SHIFT                4u
#define FlexPWM_MCTRL_CLDOK_WIDTH                4u
#define FlexPWM_MCTRL_CLDOK(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_MCTRL_CLDOK_SHIFT))&FlexPWM_MCTRL_CLDOK_MASK)
#define FlexPWM_MCTRL_RUN_MASK                   0xF00u
#define FlexPWM_MCTRL_RUN_SHIFT                  8u
#define FlexPWM_MCTRL_RUN_WIDTH                  4u
#define FlexPWM_MCTRL_RUN(x)                     (((uint16_t)(((uint16_t)(x))<<FlexPWM_MCTRL_RUN_SHIFT))&FlexPWM_MCTRL_RUN_MASK)
#define FlexPWM_MCTRL_IPOL_MASK                  0xF000u
#define FlexPWM_MCTRL_IPOL_SHIFT                 12u
#define FlexPWM_MCTRL_IPOL_WIDTH                 4u
#define FlexPWM_MCTRL_IPOL(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_MCTRL_IPOL_SHIFT))&FlexPWM_MCTRL_IPOL_MASK)
/* FCTRL Bit Fields */
#define FlexPWM_FCTRL_FIE_MASK                   0xFu
#define FlexPWM_FCTRL_FIE_SHIFT                  0u
#define FlexPWM_FCTRL_FIE_WIDTH                  4u
#define FlexPWM_FCTRL_FIE(x)                     (((uint16_t)(((uint16_t)(x))<<FlexPWM_FCTRL_FIE_SHIFT))&FlexPWM_FCTRL_FIE_MASK)
#define FlexPWM_FCTRL_FSAFE_MASK                 0xF0u
#define FlexPWM_FCTRL_FSAFE_SHIFT                4u
#define FlexPWM_FCTRL_FSAFE_WIDTH                4u
#define FlexPWM_FCTRL_FSAFE(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_FCTRL_FSAFE_SHIFT))&FlexPWM_FCTRL_FSAFE_MASK)
#define FlexPWM_FCTRL_FAUTO_MASK                 0xF00u
#define FlexPWM_FCTRL_FAUTO_SHIFT                8u
#define FlexPWM_FCTRL_FAUTO_WIDTH                4u
#define FlexPWM_FCTRL_FAUTO(x)                   (((uint16_t)(((uint16_t)(x))<<FlexPWM_FCTRL_FAUTO_SHIFT))&FlexPWM_FCTRL_FAUTO_MASK)
#define FlexPWM_FCTRL_FLVL_MASK                  0xF000u
#define FlexPWM_FCTRL_FLVL_SHIFT                 12u
#define FlexPWM_FCTRL_FLVL_WIDTH                 4u
#define FlexPWM_FCTRL_FLVL(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_FCTRL_FLVL_SHIFT))&FlexPWM_FCTRL_FLVL_MASK)
/* FSTS Bit Fields */
#define FlexPWM_FSTS_FFLAG_MASK                  0xFu
#define FlexPWM_FSTS_FFLAG_SHIFT                 0u
#define FlexPWM_FSTS_FFLAG_WIDTH                 4u
#define FlexPWM_FSTS_FFLAG(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_FSTS_FFLAG_SHIFT))&FlexPWM_FSTS_FFLAG_MASK)
#define FlexPWM_FSTS_FFULL_MASK                  0xF0u
#define FlexPWM_FSTS_FFULL_SHIFT                 4u
#define FlexPWM_FSTS_FFULL_WIDTH                 4u
#define FlexPWM_FSTS_FFULL(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_FSTS_FFULL_SHIFT))&FlexPWM_FSTS_FFULL_MASK)
#define FlexPWM_FSTS_FFPIN_MASK                  0xF00u
#define FlexPWM_FSTS_FFPIN_SHIFT                 8u
#define FlexPWM_FSTS_FFPIN_WIDTH                 4u
#define FlexPWM_FSTS_FFPIN(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_FSTS_FFPIN_SHIFT))&FlexPWM_FSTS_FFPIN_MASK)
#define FlexPWM_FSTS_FTEST_MASK                  0x1000u
#define FlexPWM_FSTS_FTEST_SHIFT                 12u
#define FlexPWM_FSTS_FTEST_WIDTH                 1u
#define FlexPWM_FSTS_FTEST(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_FSTS_FTEST_SHIFT))&FlexPWM_FSTS_FTEST_MASK)
/* FFILT Bit Fields */
#define FlexPWM_FFILT_FILT_PER_MASK              0xFFu
#define FlexPWM_FFILT_FILT_PER_SHIFT             0u
#define FlexPWM_FFILT_FILT_PER_WIDTH             8u
#define FlexPWM_FFILT_FILT_PER(x)                (((uint16_t)(((uint16_t)(x))<<FlexPWM_FFILT_FILT_PER_SHIFT))&FlexPWM_FFILT_FILT_PER_MASK)
#define FlexPWM_FFILT_FILT_CNT_MASK              0x700u
#define FlexPWM_FFILT_FILT_CNT_SHIFT             8u
#define FlexPWM_FFILT_FILT_CNT_WIDTH             3u
#define FlexPWM_FFILT_FILT_CNT(x)                (((uint16_t)(((uint16_t)(x))<<FlexPWM_FFILT_FILT_CNT_SHIFT))&FlexPWM_FFILT_FILT_CNT_MASK)
#define FlexPWM_FFILT_GSTR_MASK                  0x8000u
#define FlexPWM_FFILT_GSTR_SHIFT                 15u
#define FlexPWM_FFILT_GSTR_WIDTH                 1u
#define FlexPWM_FFILT_GSTR(x)                    (((uint16_t)(((uint16_t)(x))<<FlexPWM_FFILT_GSTR_SHIFT))&FlexPWM_FFILT_GSTR_MASK)

/*!
 * @}
 */ /* end of group FlexPWM_Register_Masks */


/*!
 * @}
 */ /* end of group FlexPWM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- INTC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup INTC_Peripheral_Access_Layer INTC Peripheral Access Layer
 * @{
 */


/** INTC - Size of Registers Arrays */
#define INTC_SSCIR_COUNT                         16u
#define INTC_PSR_COUNT                           1024u
#define INTC_HIPRIC0_COUNT                       3u
#define INTC_LATC0_COUNT                         3u
#define INTC_TIMERC0_COUNT                       3u

/** INTC - Register Layout Typedef */
typedef struct {
  __IO uint32_t BCR;                               /**< INTC Block Configuration Register, offset: 0x0 */
       uint8_t RESERVED_0[12];
  __IO uint32_t CPR0;                              /**< INTC Current Priority Register for Processor 0, offset: 0x10 */
       uint8_t RESERVED_1[12];
  __IO uint32_t IACKR0;                            /**< INTC Interrupt Acknowledge Register for Processor 0, offset: 0x20 */
       uint8_t RESERVED_2[12];
  __O  uint32_t EOIR0;                             /**< INTC End Of Interrupt Register for Processor 0, offset: 0x30 */
       uint8_t RESERVED_3[12];
  __IO uint8_t SSCIR[INTC_SSCIR_COUNT];            /**< INTC Software Set/Clear Interrupt Register, array offset: 0x40, array step: 0x1 */
       uint8_t RESERVED_4[16];
  __IO uint16_t PSR[INTC_PSR_COUNT];               /**< INTC Priority Select Register, array offset: 0x60, array step: 0x2 */
       uint8_t RESERVED_5[1952];
  __IO uint32_t MMRC0;                             /**< INTC Monitor Mode Register 0, offset: 0x1000 */
  __IO uint32_t HIPRIC0[INTC_HIPRIC0_COUNT];       /**< INTC HIPRI Register, array offset: 0x1004, array step: 0x4 */
       uint8_t RESERVED_6[4];
  __IO uint32_t LATC0[INTC_LATC0_COUNT];           /**< INTC LAT Register, array offset: 0x1014, array step: 0x4 */
       uint8_t RESERVED_7[4];
  __IO uint32_t TIMERC0[INTC_TIMERC0_COUNT];       /**< INTC Timer Register, array offset: 0x1024, array step: 0x4 */
} INTC_Type, *INTC_MemMapPtr;

 /** Number of instances of the INTC module. */
#define INTC_INSTANCE_COUNT                      (1u)


/* INTC - Peripheral instance base addresses */
/** Peripheral INTC base address */
#define INTC_BASE                                (0xFC040000u)
/** Peripheral INTC base pointer */
#define INTC                                     ((INTC_Type *)INTC_BASE)
/** Array initializer of INTC peripheral base addresses */
#define INTC_BASE_ADDRS                          { INTC_BASE }
/** Array initializer of INTC peripheral base pointers */
#define INTC_BASE_PTRS                           { INTC }

/* ----------------------------------------------------------------------------
   -- INTC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup INTC_Register_Masks INTC Register Masks
 * @{
 */

/* BCR Bit Fields */
#define INTC_BCR_HVEN0_MASK                      0x1u
#define INTC_BCR_HVEN0_SHIFT                     0u
#define INTC_BCR_HVEN0_WIDTH                     1u
#define INTC_BCR_HVEN0(x)                        (((uint32_t)(((uint32_t)(x))<<INTC_BCR_HVEN0_SHIFT))&INTC_BCR_HVEN0_MASK)
/* CPR0 Bit Fields */
#define INTC_CPR0_PRI_MASK                       0x1Fu
#define INTC_CPR0_PRI_SHIFT                      0u
#define INTC_CPR0_PRI_WIDTH                      5u
#define INTC_CPR0_PRI(x)                         (((uint32_t)(((uint32_t)(x))<<INTC_CPR0_PRI_SHIFT))&INTC_CPR0_PRI_MASK)
/* IACKR0 Bit Fields */
#define INTC_IACKR0_INTVEC_MASK                  0xFFCu
#define INTC_IACKR0_INTVEC_SHIFT                 2u
#define INTC_IACKR0_INTVEC_WIDTH                 10u
#define INTC_IACKR0_INTVEC(x)                    (((uint32_t)(((uint32_t)(x))<<INTC_IACKR0_INTVEC_SHIFT))&INTC_IACKR0_INTVEC_MASK)
#define INTC_IACKR0_VTBA_MASK                    0xFFFFF000u
#define INTC_IACKR0_VTBA_SHIFT                   12u
#define INTC_IACKR0_VTBA_WIDTH                   20u
#define INTC_IACKR0_VTBA(x)                      (((uint32_t)(((uint32_t)(x))<<INTC_IACKR0_VTBA_SHIFT))&INTC_IACKR0_VTBA_MASK)
/* EOIR0 Bit Fields */
#define INTC_EOIR0_EOI_MASK                      0xFFFFFFFFu
#define INTC_EOIR0_EOI_SHIFT                     0u
#define INTC_EOIR0_EOI_WIDTH                     32u
#define INTC_EOIR0_EOI(x)                        (((uint32_t)(((uint32_t)(x))<<INTC_EOIR0_EOI_SHIFT))&INTC_EOIR0_EOI_MASK)
/* SSCIR Bit Fields */
#define INTC_SSCIR_CLR_MASK                      0x1u
#define INTC_SSCIR_CLR_SHIFT                     0u
#define INTC_SSCIR_CLR_WIDTH                     1u
#define INTC_SSCIR_CLR(x)                        (((uint8_t)(((uint8_t)(x))<<INTC_SSCIR_CLR_SHIFT))&INTC_SSCIR_CLR_MASK)
#define INTC_SSCIR_SET_MASK                      0x2u
#define INTC_SSCIR_SET_SHIFT                     1u
#define INTC_SSCIR_SET_WIDTH                     1u
#define INTC_SSCIR_SET(x)                        (((uint8_t)(((uint8_t)(x))<<INTC_SSCIR_SET_SHIFT))&INTC_SSCIR_SET_MASK)
/* PSR Bit Fields */
#define INTC_PSR_PRIN_MASK                       0x1Fu
#define INTC_PSR_PRIN_SHIFT                      0u
#define INTC_PSR_PRIN_WIDTH                      5u
#define INTC_PSR_PRIN(x)                         (((uint16_t)(((uint16_t)(x))<<INTC_PSR_PRIN_SHIFT))&INTC_PSR_PRIN_MASK)
#define INTC_PSR_SWTN_MASK                       0x100u
#define INTC_PSR_SWTN_SHIFT                      8u
#define INTC_PSR_SWTN_WIDTH                      1u
#define INTC_PSR_SWTN(x)                         (((uint16_t)(((uint16_t)(x))<<INTC_PSR_SWTN_SHIFT))&INTC_PSR_SWTN_MASK)
#define INTC_PSR_PRC_SELN0_MASK                  0x8000u
#define INTC_PSR_PRC_SELN0_SHIFT                 15u
#define INTC_PSR_PRC_SELN0_WIDTH                 1u
#define INTC_PSR_PRC_SELN0(x)                    (((uint16_t)(((uint16_t)(x))<<INTC_PSR_PRC_SELN0_SHIFT))&INTC_PSR_PRC_SELN0_MASK)
/* MMRC0 Bit Fields */
#define INTC_MMRC0_MM_MASK                       0x3u
#define INTC_MMRC0_MM_SHIFT                      0u
#define INTC_MMRC0_MM_WIDTH                      2u
#define INTC_MMRC0_MM(x)                         (((uint32_t)(((uint32_t)(x))<<INTC_MMRC0_MM_SHIFT))&INTC_MMRC0_MM_MASK)
/* HIPRIC0 Bit Fields */
#define INTC_HIPRIC0_IRQ_MASK                    0x3FFu
#define INTC_HIPRIC0_IRQ_SHIFT                   0u
#define INTC_HIPRIC0_IRQ_WIDTH                   10u
#define INTC_HIPRIC0_IRQ(x)                      (((uint32_t)(((uint32_t)(x))<<INTC_HIPRIC0_IRQ_SHIFT))&INTC_HIPRIC0_IRQ_MASK)
/* LATC0 Bit Fields */
#define INTC_LATC0_LAT_MASK                      0xFFFFFFu
#define INTC_LATC0_LAT_SHIFT                     0u
#define INTC_LATC0_LAT_WIDTH                     24u
#define INTC_LATC0_LAT(x)                        (((uint32_t)(((uint32_t)(x))<<INTC_LATC0_LAT_SHIFT))&INTC_LATC0_LAT_MASK)
/* TIMERC0 Bit Fields */
#define INTC_TIMERC0_TIMER_MASK                  0xFFFFFFu
#define INTC_TIMERC0_TIMER_SHIFT                 0u
#define INTC_TIMERC0_TIMER_WIDTH                 24u
#define INTC_TIMERC0_TIMER(x)                    (((uint32_t)(((uint32_t)(x))<<INTC_TIMERC0_TIMER_SHIFT))&INTC_TIMERC0_TIMER_MASK)

/*!
 * @}
 */ /* end of group INTC_Register_Masks */


/*!
 * @}
 */ /* end of group INTC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- IRCOSC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup IRCOSC_Peripheral_Access_Layer IRCOSC Peripheral Access Layer
 * @{
 */


/** IRCOSC - Size of Registers Arrays */

/** IRCOSC - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTL;                               /**< IRCOSC Control Register, offset: 0x0 */
} IRCOSC_Type, *IRCOSC_MemMapPtr;

 /** Number of instances of the IRCOSC module. */
#define IRCOSC_INSTANCE_COUNT                    (1u)


/* IRCOSC - Peripheral instance base addresses */
/** Peripheral IRCOSC base address */
#define IRCOSC_BASE                              (0xFFFB0000u)
/** Peripheral IRCOSC base pointer */
#define IRCOSC                                   ((IRCOSC_Type *)IRCOSC_BASE)
/** Array initializer of IRCOSC peripheral base addresses */
#define IRCOSC_BASE_ADDRS                        { IRCOSC_BASE }
/** Array initializer of IRCOSC peripheral base pointers */
#define IRCOSC_BASE_PTRS                         { IRCOSC }

/* ----------------------------------------------------------------------------
   -- IRCOSC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup IRCOSC_Register_Masks IRCOSC Register Masks
 * @{
 */

/* CTL Bit Fields */
#define IRCOSC_CTL_USER_TRIM_MASK                0x1F0000u
#define IRCOSC_CTL_USER_TRIM_SHIFT               16u
#define IRCOSC_CTL_USER_TRIM_WIDTH               5u
#define IRCOSC_CTL_USER_TRIM(x)                  (((uint32_t)(((uint32_t)(x))<<IRCOSC_CTL_USER_TRIM_SHIFT))&IRCOSC_CTL_USER_TRIM_MASK)

/*!
 * @}
 */ /* end of group IRCOSC_Register_Masks */


/*!
 * @}
 */ /* end of group IRCOSC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- LFAST Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LFAST_Peripheral_Access_Layer LFAST Peripheral Access Layer
 * @{
 */


/** LFAST - Size of Registers Arrays */
#define LFAST_UNSTDR_COUNT                       9u
#define LFAST_UNSRDR_COUNT                       9u

/** LFAST - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< LFAST Mode Configuration Register, offset: 0x0 */
  __IO uint32_t SCR;                               /**< LFAST Speed Control Register, offset: 0x4 */
  __IO uint32_t COCR;                              /**< LFAST Correlator Control Register, offset: 0x8 */
  __IO uint32_t TMCR;                              /**< LFAST Test Mode Control Register, offset: 0xC */
  __IO uint32_t ALCR;                              /**< LFAST Auto Loopback Control Register, offset: 0x10 */
  __IO uint32_t RCDCR;                             /**< LFAST Rate Change Delay Control Register, offset: 0x14 */
  __IO uint32_t SLCR;                              /**< LFAST Wakeup Delay Control Register, offset: 0x18 */
  __IO uint32_t ICR;                               /**< LFAST ICLC Control Register, offset: 0x1C */
  __IO uint32_t PICR;                              /**< LFAST Ping Control Register, offset: 0x20 */
       uint8_t RESERVED_0[8];
  __IO uint32_t RFCR;                              /**< LFAST Rx FIFO CTS Control Register, offset: 0x2C */
  __IO uint32_t TIER;                              /**< LFAST Tx Interrupt Enable Register, offset: 0x30 */
  __IO uint32_t RIER;                              /**< LFAST Rx Interrupt Enable Register, offset: 0x34 */
  __IO uint32_t RIIER;                             /**< LFAST Rx ICLC Interrupt Enable Register, offset: 0x38 */
  __IO uint32_t PLLCR;                             /**< LFAST PLL Control Register, offset: 0x3C */
  __IO uint32_t LCR;                               /**< LFAST LVDS Control Register, offset: 0x40 */
  __IO uint32_t UNSTCR;                            /**< LFAST Unsolicited Tx Control Register, offset: 0x44 */
  __IO uint32_t UNSTDR[LFAST_UNSTDR_COUNT];        /**< LFAST Unsolicited Tx Data Registers, array offset: 0x48, array step: 0x4 */
       uint8_t RESERVED_1[20];
  __I  uint32_t GSR;                               /**< LFAST Global Status Register, offset: 0x80 */
  __I  uint32_t PISR;                              /**< LFAST Ping Status Register, offset: 0x84 */
       uint8_t RESERVED_2[12];
  __I  uint32_t DFSR;                              /**< LFAST Data Frame Status Register, offset: 0x94 */
  __IO uint32_t TISR;                              /**< LFAST Tx Interrupt Status Register, offset: 0x98 */
  __IO uint32_t RISR;                              /**< LFAST Rx Interrupt Status Register, offset: 0x9C */
  __IO uint32_t RIISR;                             /**< LFAST Rx ICLC Interrupt Status Register, offset: 0xA0 */
  __I  uint32_t PLLLSR;                            /**< LFAST PLL and LVDS Status Register, offset: 0xA4 */
  __IO uint32_t UNSRSR;                            /**< LFAST Unsolicited Rx Status Register, offset: 0xA8 */
  __I  uint32_t UNSRDR[LFAST_UNSRDR_COUNT];        /**< LFAST Unsolicited Rx Data Register, array offset: 0xAC, array step: 0x4 */
} LFAST_Type, *LFAST_MemMapPtr;

 /** Number of instances of the LFAST module. */
#define LFAST_INSTANCE_COUNT                     (1u)


/* LFAST - Peripheral instance base addresses */
/** Peripheral LFAST_0 base address */
#define LFAST_0_BASE                             (0xFFFD8000u)
/** Peripheral LFAST_0 base pointer */
#define LFAST_0                                  ((LFAST_Type *)LFAST_0_BASE)
/** Array initializer of LFAST peripheral base addresses */
#define LFAST_BASE_ADDRS                         { LFAST_0_BASE }
/** Array initializer of LFAST peripheral base pointers */
#define LFAST_BASE_PTRS                          { LFAST_0 }

/* ----------------------------------------------------------------------------
   -- LFAST Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LFAST_Register_Masks LFAST Register Masks
 * @{
 */

/* MCR Bit Fields */
#define LFAST_MCR_DATAEN_MASK                    0x1u
#define LFAST_MCR_DATAEN_SHIFT                   0u
#define LFAST_MCR_DATAEN_WIDTH                   1u
#define LFAST_MCR_DATAEN(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_MCR_DATAEN_SHIFT))&LFAST_MCR_DATAEN_MASK)
#define LFAST_MCR_DRFRST_MASK                    0x2u
#define LFAST_MCR_DRFRST_SHIFT                   1u
#define LFAST_MCR_DRFRST_WIDTH                   1u
#define LFAST_MCR_DRFRST(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_MCR_DRFRST_SHIFT))&LFAST_MCR_DRFRST_MASK)
#define LFAST_MCR_CTSEN_MASK                     0x8u
#define LFAST_MCR_CTSEN_SHIFT                    3u
#define LFAST_MCR_CTSEN_WIDTH                    1u
#define LFAST_MCR_CTSEN(x)                       (((uint32_t)(((uint32_t)(x))<<LFAST_MCR_CTSEN_SHIFT))&LFAST_MCR_CTSEN_MASK)
#define LFAST_MCR_TXARBD_MASK                    0x10u
#define LFAST_MCR_TXARBD_SHIFT                   4u
#define LFAST_MCR_TXARBD_WIDTH                   1u
#define LFAST_MCR_TXARBD(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_MCR_TXARBD_SHIFT))&LFAST_MCR_TXARBD_MASK)
#define LFAST_MCR_TXEN_MASK                      0x2000u
#define LFAST_MCR_TXEN_SHIFT                     13u
#define LFAST_MCR_TXEN_WIDTH                     1u
#define LFAST_MCR_TXEN(x)                        (((uint32_t)(((uint32_t)(x))<<LFAST_MCR_TXEN_SHIFT))&LFAST_MCR_TXEN_MASK)
#define LFAST_MCR_RXEN_MASK                      0x4000u
#define LFAST_MCR_RXEN_SHIFT                     14u
#define LFAST_MCR_RXEN_WIDTH                     1u
#define LFAST_MCR_RXEN(x)                        (((uint32_t)(((uint32_t)(x))<<LFAST_MCR_RXEN_SHIFT))&LFAST_MCR_RXEN_MASK)
#define LFAST_MCR_DRFEN_MASK                     0x8000u
#define LFAST_MCR_DRFEN_SHIFT                    15u
#define LFAST_MCR_DRFEN_WIDTH                    1u
#define LFAST_MCR_DRFEN(x)                       (((uint32_t)(((uint32_t)(x))<<LFAST_MCR_DRFEN_SHIFT))&LFAST_MCR_DRFEN_MASK)
#define LFAST_MCR_LSSEL_MASK                     0x10000u
#define LFAST_MCR_LSSEL_SHIFT                    16u
#define LFAST_MCR_LSSEL_WIDTH                    1u
#define LFAST_MCR_LSSEL(x)                       (((uint32_t)(((uint32_t)(x))<<LFAST_MCR_LSSEL_SHIFT))&LFAST_MCR_LSSEL_MASK)
#define LFAST_MCR_IPGDBG_MASK                    0x1000000u
#define LFAST_MCR_IPGDBG_SHIFT                   24u
#define LFAST_MCR_IPGDBG_WIDTH                   1u
#define LFAST_MCR_IPGDBG(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_MCR_IPGDBG_SHIFT))&LFAST_MCR_IPGDBG_MASK)
#define LFAST_MCR_MSEN_MASK                      0x80000000u
#define LFAST_MCR_MSEN_SHIFT                     31u
#define LFAST_MCR_MSEN_WIDTH                     1u
#define LFAST_MCR_MSEN(x)                        (((uint32_t)(((uint32_t)(x))<<LFAST_MCR_MSEN_SHIFT))&LFAST_MCR_MSEN_MASK)
/* SCR Bit Fields */
#define LFAST_SCR_TDR_MASK                       0x1u
#define LFAST_SCR_TDR_SHIFT                      0u
#define LFAST_SCR_TDR_WIDTH                      1u
#define LFAST_SCR_TDR(x)                         (((uint32_t)(((uint32_t)(x))<<LFAST_SCR_TDR_SHIFT))&LFAST_SCR_TDR_MASK)
#define LFAST_SCR_RDR_MASK                       0x100u
#define LFAST_SCR_RDR_SHIFT                      8u
#define LFAST_SCR_RDR_WIDTH                      1u
#define LFAST_SCR_RDR(x)                         (((uint32_t)(((uint32_t)(x))<<LFAST_SCR_RDR_SHIFT))&LFAST_SCR_RDR_MASK)
#define LFAST_SCR_DRMD_MASK                      0x10000u
#define LFAST_SCR_DRMD_SHIFT                     16u
#define LFAST_SCR_DRMD_WIDTH                     1u
#define LFAST_SCR_DRMD(x)                        (((uint32_t)(((uint32_t)(x))<<LFAST_SCR_DRMD_SHIFT))&LFAST_SCR_DRMD_MASK)
/* COCR Bit Fields */
#define LFAST_COCR_PHSSEL_MASK                   0x1u
#define LFAST_COCR_PHSSEL_SHIFT                  0u
#define LFAST_COCR_PHSSEL_WIDTH                  1u
#define LFAST_COCR_PHSSEL(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_COCR_PHSSEL_SHIFT))&LFAST_COCR_PHSSEL_MASK)
#define LFAST_COCR_CORRTH_MASK                   0xEu
#define LFAST_COCR_CORRTH_SHIFT                  1u
#define LFAST_COCR_CORRTH_WIDTH                  3u
#define LFAST_COCR_CORRTH(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_COCR_CORRTH_SHIFT))&LFAST_COCR_CORRTH_MASK)
#define LFAST_COCR_SMPSEL_MASK                   0xFF000000u
#define LFAST_COCR_SMPSEL_SHIFT                  24u
#define LFAST_COCR_SMPSEL_WIDTH                  8u
#define LFAST_COCR_SMPSEL(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_COCR_SMPSEL_SHIFT))&LFAST_COCR_SMPSEL_MASK)
/* TMCR Bit Fields */
#define LFAST_TMCR_LPFRMTH_MASK                  0xFFFFu
#define LFAST_TMCR_LPFRMTH_SHIFT                 0u
#define LFAST_TMCR_LPFRMTH_WIDTH                 16u
#define LFAST_TMCR_LPFRMTH(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_TMCR_LPFRMTH_SHIFT))&LFAST_TMCR_LPFRMTH_MASK)
#define LFAST_TMCR_LPMOD_MASK                    0x70000u
#define LFAST_TMCR_LPMOD_SHIFT                   16u
#define LFAST_TMCR_LPMOD_WIDTH                   3u
#define LFAST_TMCR_LPMOD(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_TMCR_LPMOD_SHIFT))&LFAST_TMCR_LPMOD_MASK)
#define LFAST_TMCR_LPON_MASK                     0x1000000u
#define LFAST_TMCR_LPON_SHIFT                    24u
#define LFAST_TMCR_LPON_WIDTH                    1u
#define LFAST_TMCR_LPON(x)                       (((uint32_t)(((uint32_t)(x))<<LFAST_TMCR_LPON_SHIFT))&LFAST_TMCR_LPON_MASK)
#define LFAST_TMCR_CLKTST_MASK                   0x2000000u
#define LFAST_TMCR_CLKTST_SHIFT                  25u
#define LFAST_TMCR_CLKTST_WIDTH                  1u
#define LFAST_TMCR_CLKTST(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_TMCR_CLKTST_SHIFT))&LFAST_TMCR_CLKTST_MASK)
/* ALCR Bit Fields */
#define LFAST_ALCR_LPFMCNT_MASK                  0xFFFFu
#define LFAST_ALCR_LPFMCNT_SHIFT                 0u
#define LFAST_ALCR_LPFMCNT_WIDTH                 16u
#define LFAST_ALCR_LPFMCNT(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_ALCR_LPFMCNT_SHIFT))&LFAST_ALCR_LPFMCNT_MASK)
#define LFAST_ALCR_LPCNTEN_MASK                  0x10000u
#define LFAST_ALCR_LPCNTEN_SHIFT                 16u
#define LFAST_ALCR_LPCNTEN_WIDTH                 1u
#define LFAST_ALCR_LPCNTEN(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_ALCR_LPCNTEN_SHIFT))&LFAST_ALCR_LPCNTEN_MASK)
/* RCDCR Bit Fields */
#define LFAST_RCDCR_DRCNT_MASK                   0xF0000u
#define LFAST_RCDCR_DRCNT_SHIFT                  16u
#define LFAST_RCDCR_DRCNT_WIDTH                  4u
#define LFAST_RCDCR_DRCNT(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RCDCR_DRCNT_SHIFT))&LFAST_RCDCR_DRCNT_MASK)
/* SLCR Bit Fields */
#define LFAST_SLCR_LWKCNT_MASK                   0xFu
#define LFAST_SLCR_LWKCNT_SHIFT                  0u
#define LFAST_SLCR_LWKCNT_WIDTH                  4u
#define LFAST_SLCR_LWKCNT(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_SLCR_LWKCNT_SHIFT))&LFAST_SLCR_LWKCNT_MASK)
#define LFAST_SLCR_HWKCNT_MASK                   0xFF00u
#define LFAST_SLCR_HWKCNT_SHIFT                  8u
#define LFAST_SLCR_HWKCNT_WIDTH                  8u
#define LFAST_SLCR_HWKCNT(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_SLCR_HWKCNT_SHIFT))&LFAST_SLCR_HWKCNT_MASK)
#define LFAST_SLCR_LSCNT_MASK                    0xF0000u
#define LFAST_SLCR_LSCNT_SHIFT                   16u
#define LFAST_SLCR_LSCNT_WIDTH                   4u
#define LFAST_SLCR_LSCNT(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_SLCR_LSCNT_SHIFT))&LFAST_SLCR_LSCNT_MASK)
#define LFAST_SLCR_HSCNT_MASK                    0xFF000000u
#define LFAST_SLCR_HSCNT_SHIFT                   24u
#define LFAST_SLCR_HSCNT_WIDTH                   8u
#define LFAST_SLCR_HSCNT(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_SLCR_HSCNT_SHIFT))&LFAST_SLCR_HSCNT_MASK)
/* ICR Bit Fields */
#define LFAST_ICR_ICLCPLD_MASK                   0xFFu
#define LFAST_ICR_ICLCPLD_SHIFT                  0u
#define LFAST_ICR_ICLCPLD_WIDTH                  8u
#define LFAST_ICR_ICLCPLD(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_ICR_ICLCPLD_SHIFT))&LFAST_ICR_ICLCPLD_MASK)
#define LFAST_ICR_SNDICLC_MASK                   0x10000u
#define LFAST_ICR_SNDICLC_SHIFT                  16u
#define LFAST_ICR_SNDICLC_WIDTH                  1u
#define LFAST_ICR_SNDICLC(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_ICR_SNDICLC_SHIFT))&LFAST_ICR_SNDICLC_MASK)
#define LFAST_ICR_ICLCSEQ_MASK                   0x20000u
#define LFAST_ICR_ICLCSEQ_SHIFT                  17u
#define LFAST_ICR_ICLCSEQ_WIDTH                  1u
#define LFAST_ICR_ICLCSEQ(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_ICR_ICLCSEQ_SHIFT))&LFAST_ICR_ICLCSEQ_MASK)
/* PICR Bit Fields */
#define LFAST_PICR_PNGPYLD_MASK                  0xFFu
#define LFAST_PICR_PNGPYLD_SHIFT                 0u
#define LFAST_PICR_PNGPYLD_WIDTH                 8u
#define LFAST_PICR_PNGPYLD(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_PICR_PNGPYLD_SHIFT))&LFAST_PICR_PNGPYLD_MASK)
#define LFAST_PICR_PNGAUTO_MASK                  0x8000u
#define LFAST_PICR_PNGAUTO_SHIFT                 15u
#define LFAST_PICR_PNGAUTO_WIDTH                 1u
#define LFAST_PICR_PNGAUTO(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_PICR_PNGAUTO_SHIFT))&LFAST_PICR_PNGAUTO_MASK)
#define LFAST_PICR_PNGREQ_MASK                   0x10000u
#define LFAST_PICR_PNGREQ_SHIFT                  16u
#define LFAST_PICR_PNGREQ_WIDTH                  1u
#define LFAST_PICR_PNGREQ(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_PICR_PNGREQ_SHIFT))&LFAST_PICR_PNGREQ_MASK)
/* RFCR Bit Fields */
#define LFAST_RFCR_RCTSMN_MASK                   0x3Fu
#define LFAST_RFCR_RCTSMN_SHIFT                  0u
#define LFAST_RFCR_RCTSMN_WIDTH                  6u
#define LFAST_RFCR_RCTSMN(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RFCR_RCTSMN_SHIFT))&LFAST_RFCR_RCTSMN_MASK)
#define LFAST_RFCR_RCTSMX_MASK                   0x3F0000u
#define LFAST_RFCR_RCTSMX_SHIFT                  16u
#define LFAST_RFCR_RCTSMX_WIDTH                  6u
#define LFAST_RFCR_RCTSMX(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RFCR_RCTSMX_SHIFT))&LFAST_RFCR_RCTSMX_MASK)
/* TIER Bit Fields */
#define LFAST_TIER_TXDTIE_MASK                   0x1u
#define LFAST_TIER_TXDTIE_SHIFT                  0u
#define LFAST_TIER_TXDTIE_WIDTH                  1u
#define LFAST_TIER_TXDTIE(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_TIER_TXDTIE_SHIFT))&LFAST_TIER_TXDTIE_MASK)
#define LFAST_TIER_TXICLCIE_MASK                 0x2u
#define LFAST_TIER_TXICLCIE_SHIFT                1u
#define LFAST_TIER_TXICLCIE_WIDTH                1u
#define LFAST_TIER_TXICLCIE(x)                   (((uint32_t)(((uint32_t)(x))<<LFAST_TIER_TXICLCIE_SHIFT))&LFAST_TIER_TXICLCIE_MASK)
#define LFAST_TIER_TXUNSIE_MASK                  0x4u
#define LFAST_TIER_TXUNSIE_SHIFT                 2u
#define LFAST_TIER_TXUNSIE_WIDTH                 1u
#define LFAST_TIER_TXUNSIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_TIER_TXUNSIE_SHIFT))&LFAST_TIER_TXUNSIE_MASK)
#define LFAST_TIER_TXPNGIE_MASK                  0x10u
#define LFAST_TIER_TXPNGIE_SHIFT                 4u
#define LFAST_TIER_TXPNGIE_WIDTH                 1u
#define LFAST_TIER_TXPNGIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_TIER_TXPNGIE_SHIFT))&LFAST_TIER_TXPNGIE_MASK)
#define LFAST_TIER_TXOVIE_MASK                   0x10000u
#define LFAST_TIER_TXOVIE_SHIFT                  16u
#define LFAST_TIER_TXOVIE_WIDTH                  1u
#define LFAST_TIER_TXOVIE(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_TIER_TXOVIE_SHIFT))&LFAST_TIER_TXOVIE_MASK)
#define LFAST_TIER_TXIIE_MASK                    0x20000u
#define LFAST_TIER_TXIIE_SHIFT                   17u
#define LFAST_TIER_TXIIE_WIDTH                   1u
#define LFAST_TIER_TXIIE(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_TIER_TXIIE_SHIFT))&LFAST_TIER_TXIIE_MASK)
/* RIER Bit Fields */
#define LFAST_RIER_RXUNSIE_MASK                  0x2u
#define LFAST_RIER_RXUNSIE_SHIFT                 1u
#define LFAST_RIER_RXUNSIE_WIDTH                 1u
#define LFAST_RIER_RXUNSIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIER_RXUNSIE_SHIFT))&LFAST_RIER_RXUNSIE_MASK)
#define LFAST_RIER_RXDIE_MASK                    0x4u
#define LFAST_RIER_RXDIE_SHIFT                   2u
#define LFAST_RIER_RXDIE_WIDTH                   1u
#define LFAST_RIER_RXDIE(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_RIER_RXDIE_SHIFT))&LFAST_RIER_RXDIE_MASK)
#define LFAST_RIER_RXCTSIE_MASK                  0x8u
#define LFAST_RIER_RXCTSIE_SHIFT                 3u
#define LFAST_RIER_RXCTSIE_WIDTH                 1u
#define LFAST_RIER_RXCTSIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIER_RXCTSIE_SHIFT))&LFAST_RIER_RXCTSIE_MASK)
#define LFAST_RIER_RXLCEIE_MASK                  0x10000u
#define LFAST_RIER_RXLCEIE_SHIFT                 16u
#define LFAST_RIER_RXLCEIE_WIDTH                 1u
#define LFAST_RIER_RXLCEIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIER_RXLCEIE_SHIFT))&LFAST_RIER_RXLCEIE_MASK)
#define LFAST_RIER_RXICIE_MASK                   0x20000u
#define LFAST_RIER_RXICIE_SHIFT                  17u
#define LFAST_RIER_RXICIE_WIDTH                  1u
#define LFAST_RIER_RXICIE(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIER_RXICIE_SHIFT))&LFAST_RIER_RXICIE_MASK)
#define LFAST_RIER_RXSZIE_MASK                   0x40000u
#define LFAST_RIER_RXSZIE_SHIFT                  18u
#define LFAST_RIER_RXSZIE_WIDTH                  1u
#define LFAST_RIER_RXSZIE(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIER_RXSZIE_SHIFT))&LFAST_RIER_RXSZIE_MASK)
#define LFAST_RIER_RXOFIE_MASK                   0x80000u
#define LFAST_RIER_RXOFIE_SHIFT                  19u
#define LFAST_RIER_RXOFIE_WIDTH                  1u
#define LFAST_RIER_RXOFIE(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIER_RXOFIE_SHIFT))&LFAST_RIER_RXOFIE_MASK)
#define LFAST_RIER_RXUFIE_MASK                   0x100000u
#define LFAST_RIER_RXUFIE_SHIFT                  20u
#define LFAST_RIER_RXUFIE_WIDTH                  1u
#define LFAST_RIER_RXUFIE(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIER_RXUFIE_SHIFT))&LFAST_RIER_RXUFIE_MASK)
#define LFAST_RIER_RXMXIE_MASK                   0x200000u
#define LFAST_RIER_RXMXIE_SHIFT                  21u
#define LFAST_RIER_RXMXIE_WIDTH                  1u
#define LFAST_RIER_RXMXIE(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIER_RXMXIE_SHIFT))&LFAST_RIER_RXMXIE_MASK)
#define LFAST_RIER_RXMNIE_MASK                   0x400000u
#define LFAST_RIER_RXMNIE_SHIFT                  22u
#define LFAST_RIER_RXMNIE_WIDTH                  1u
#define LFAST_RIER_RXMNIE(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIER_RXMNIE_SHIFT))&LFAST_RIER_RXMNIE_MASK)
#define LFAST_RIER_RXUOIE_MASK                   0x800000u
#define LFAST_RIER_RXUOIE_SHIFT                  23u
#define LFAST_RIER_RXUOIE_WIDTH                  1u
#define LFAST_RIER_RXUOIE(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIER_RXUOIE_SHIFT))&LFAST_RIER_RXUOIE_MASK)
/* RIIER Bit Fields */
#define LFAST_RIIER_ICPONIE_MASK                 0x1u
#define LFAST_RIIER_ICPONIE_SHIFT                0u
#define LFAST_RIIER_ICPONIE_WIDTH                1u
#define LFAST_RIIER_ICPONIE(x)                   (((uint32_t)(((uint32_t)(x))<<LFAST_RIIER_ICPONIE_SHIFT))&LFAST_RIIER_ICPONIE_MASK)
#define LFAST_RIIER_ICPOFIE_MASK                 0x2u
#define LFAST_RIIER_ICPOFIE_SHIFT                1u
#define LFAST_RIIER_ICPOFIE_WIDTH                1u
#define LFAST_RIIER_ICPOFIE(x)                   (((uint32_t)(((uint32_t)(x))<<LFAST_RIIER_ICPOFIE_SHIFT))&LFAST_RIIER_ICPOFIE_MASK)
#define LFAST_RIIER_ICTSIE_MASK                  0x4u
#define LFAST_RIIER_ICTSIE_SHIFT                 2u
#define LFAST_RIIER_ICTSIE_WIDTH                 1u
#define LFAST_RIIER_ICTSIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIIER_ICTSIE_SHIFT))&LFAST_RIIER_ICTSIE_MASK)
#define LFAST_RIIER_ICTFIE_MASK                  0x8u
#define LFAST_RIIER_ICTFIE_SHIFT                 3u
#define LFAST_RIIER_ICTFIE_WIDTH                 1u
#define LFAST_RIIER_ICTFIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIIER_ICTFIE_SHIFT))&LFAST_RIIER_ICTFIE_MASK)
#define LFAST_RIIER_ICRSIE_MASK                  0x10u
#define LFAST_RIIER_ICRSIE_SHIFT                 4u
#define LFAST_RIIER_ICRSIE_WIDTH                 1u
#define LFAST_RIIER_ICRSIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIIER_ICRSIE_SHIFT))&LFAST_RIIER_ICRSIE_MASK)
#define LFAST_RIIER_ICRFIE_MASK                  0x20u
#define LFAST_RIIER_ICRFIE_SHIFT                 5u
#define LFAST_RIIER_ICRFIE_WIDTH                 1u
#define LFAST_RIIER_ICRFIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIIER_ICRFIE_SHIFT))&LFAST_RIIER_ICRFIE_MASK)
#define LFAST_RIIER_ICTEIE_MASK                  0x40u
#define LFAST_RIIER_ICTEIE_SHIFT                 6u
#define LFAST_RIIER_ICTEIE_WIDTH                 1u
#define LFAST_RIIER_ICTEIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIIER_ICTEIE_SHIFT))&LFAST_RIIER_ICTEIE_MASK)
#define LFAST_RIIER_ICTDIE_MASK                  0x80u
#define LFAST_RIIER_ICTDIE_SHIFT                 7u
#define LFAST_RIIER_ICTDIE_WIDTH                 1u
#define LFAST_RIIER_ICTDIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIIER_ICTDIE_SHIFT))&LFAST_RIIER_ICTDIE_MASK)
#define LFAST_RIIER_ICCTIE_MASK                  0x100u
#define LFAST_RIIER_ICCTIE_SHIFT                 8u
#define LFAST_RIIER_ICCTIE_WIDTH                 1u
#define LFAST_RIIER_ICCTIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIIER_ICCTIE_SHIFT))&LFAST_RIIER_ICCTIE_MASK)
#define LFAST_RIIER_ICLPIE_MASK                  0x200u
#define LFAST_RIIER_ICLPIE_SHIFT                 9u
#define LFAST_RIIER_ICLPIE_WIDTH                 1u
#define LFAST_RIIER_ICLPIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIIER_ICLPIE_SHIFT))&LFAST_RIIER_ICLPIE_MASK)
#define LFAST_RIIER_ICTOIE_MASK                  0x400u
#define LFAST_RIIER_ICTOIE_SHIFT                 10u
#define LFAST_RIIER_ICTOIE_WIDTH                 1u
#define LFAST_RIIER_ICTOIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIIER_ICTOIE_SHIFT))&LFAST_RIIER_ICTOIE_MASK)
#define LFAST_RIIER_ICPRIE_MASK                  0x800u
#define LFAST_RIIER_ICPRIE_SHIFT                 11u
#define LFAST_RIIER_ICPRIE_WIDTH                 1u
#define LFAST_RIIER_ICPRIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIIER_ICPRIE_SHIFT))&LFAST_RIIER_ICPRIE_MASK)
#define LFAST_RIIER_ICPSIE_MASK                  0x1000u
#define LFAST_RIIER_ICPSIE_SHIFT                 12u
#define LFAST_RIIER_ICPSIE_WIDTH                 1u
#define LFAST_RIIER_ICPSIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIIER_ICPSIE_SHIFT))&LFAST_RIIER_ICPSIE_MASK)
#define LFAST_RIIER_ICPFIE_MASK                  0x2000u
#define LFAST_RIIER_ICPFIE_SHIFT                 13u
#define LFAST_RIIER_ICPFIE_WIDTH                 1u
#define LFAST_RIIER_ICPFIE(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIIER_ICPFIE_SHIFT))&LFAST_RIIER_ICPFIE_MASK)
/* PLLCR Bit Fields */
#define LFAST_PLLCR_PREDIV_MASK                  0x3u
#define LFAST_PLLCR_PREDIV_SHIFT                 0u
#define LFAST_PLLCR_PREDIV_WIDTH                 2u
#define LFAST_PLLCR_PREDIV(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_PLLCR_PREDIV_SHIFT))&LFAST_PLLCR_PREDIV_MASK)
#define LFAST_PLLCR_FBDIV_MASK                   0xFCu
#define LFAST_PLLCR_FBDIV_SHIFT                  2u
#define LFAST_PLLCR_FBDIV_WIDTH                  6u
#define LFAST_PLLCR_FBDIV(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_PLLCR_FBDIV_SHIFT))&LFAST_PLLCR_FBDIV_MASK)
#define LFAST_PLLCR_FDIVEN_MASK                  0x100u
#define LFAST_PLLCR_FDIVEN_SHIFT                 8u
#define LFAST_PLLCR_FDIVEN_WIDTH                 1u
#define LFAST_PLLCR_FDIVEN(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_PLLCR_FDIVEN_SHIFT))&LFAST_PLLCR_FDIVEN_MASK)
#define LFAST_PLLCR_PLCKCW_MASK                  0x600u
#define LFAST_PLLCR_PLCKCW_SHIFT                 9u
#define LFAST_PLLCR_PLCKCW_WIDTH                 2u
#define LFAST_PLLCR_PLCKCW(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_PLLCR_PLCKCW_SHIFT))&LFAST_PLLCR_PLCKCW_MASK)
#define LFAST_PLLCR_LPCFG_MASK                   0x6000u
#define LFAST_PLLCR_LPCFG_SHIFT                  13u
#define LFAST_PLLCR_LPCFG_WIDTH                  2u
#define LFAST_PLLCR_LPCFG(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_PLLCR_LPCFG_SHIFT))&LFAST_PLLCR_LPCFG_MASK)
#define LFAST_PLLCR_REFINV_MASK                  0x8000u
#define LFAST_PLLCR_REFINV_SHIFT                 15u
#define LFAST_PLLCR_REFINV_WIDTH                 1u
#define LFAST_PLLCR_REFINV(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_PLLCR_REFINV_SHIFT))&LFAST_PLLCR_REFINV_MASK)
#define LFAST_PLLCR_SWPON_MASK                   0x10000u
#define LFAST_PLLCR_SWPON_SHIFT                  16u
#define LFAST_PLLCR_SWPON_WIDTH                  1u
#define LFAST_PLLCR_SWPON(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_PLLCR_SWPON_SHIFT))&LFAST_PLLCR_SWPON_MASK)
#define LFAST_PLLCR_SWPOFF_MASK                  0x20000u
#define LFAST_PLLCR_SWPOFF_SHIFT                 17u
#define LFAST_PLLCR_SWPOFF_WIDTH                 1u
#define LFAST_PLLCR_SWPOFF(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_PLLCR_SWPOFF_SHIFT))&LFAST_PLLCR_SWPOFF_MASK)
#define LFAST_PLLCR_IPTMOD_MASK                  0xE0000000u
#define LFAST_PLLCR_IPTMOD_SHIFT                 29u
#define LFAST_PLLCR_IPTMOD_WIDTH                 3u
#define LFAST_PLLCR_IPTMOD(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_PLLCR_IPTMOD_SHIFT))&LFAST_PLLCR_IPTMOD_MASK)
/* LCR Bit Fields */
#define LFAST_LCR_LVCKP_MASK                     0x1u
#define LFAST_LCR_LVCKP_SHIFT                    0u
#define LFAST_LCR_LVCKP_WIDTH                    1u
#define LFAST_LCR_LVCKP(x)                       (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_LVCKP_SHIFT))&LFAST_LCR_LVCKP_MASK)
#define LFAST_LCR_LVCKSS_MASK                    0x2u
#define LFAST_LCR_LVCKSS_SHIFT                   1u
#define LFAST_LCR_LVCKSS_WIDTH                   1u
#define LFAST_LCR_LVCKSS(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_LVCKSS_SHIFT))&LFAST_LCR_LVCKSS_MASK)
#define LFAST_LCR_LVTXOP_MASK                    0x4u
#define LFAST_LCR_LVTXOP_SHIFT                   2u
#define LFAST_LCR_LVTXOP_WIDTH                   1u
#define LFAST_LCR_LVTXOP(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_LVTXOP_SHIFT))&LFAST_LCR_LVTXOP_MASK)
#define LFAST_LCR_LVRXOP_BR_MASK                 0x8u
#define LFAST_LCR_LVRXOP_BR_SHIFT                3u
#define LFAST_LCR_LVRXOP_BR_WIDTH                1u
#define LFAST_LCR_LVRXOP_BR(x)                   (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_LVRXOP_BR_SHIFT))&LFAST_LCR_LVRXOP_BR_MASK)
#define LFAST_LCR_LVRXOP_TR_MASK                 0x20u
#define LFAST_LCR_LVRXOP_TR_SHIFT                5u
#define LFAST_LCR_LVRXOP_TR_WIDTH                1u
#define LFAST_LCR_LVRXOP_TR(x)                   (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_LVRXOP_TR_SHIFT))&LFAST_LCR_LVRXOP_TR_MASK)
#define LFAST_LCR_LVLPEN_MASK                    0x800u
#define LFAST_LCR_LVLPEN_SHIFT                   11u
#define LFAST_LCR_LVLPEN_WIDTH                   1u
#define LFAST_LCR_LVLPEN(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_LVLPEN_SHIFT))&LFAST_LCR_LVLPEN_MASK)
#define LFAST_LCR_LVRFEN_MASK                    0x1000u
#define LFAST_LCR_LVRFEN_SHIFT                   12u
#define LFAST_LCR_LVRFEN_WIDTH                   1u
#define LFAST_LCR_LVRFEN(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_LVRFEN_SHIFT))&LFAST_LCR_LVRFEN_MASK)
#define LFAST_LCR_TXCMUX_MASK                    0x2000u
#define LFAST_LCR_TXCMUX_SHIFT                   13u
#define LFAST_LCR_TXCMUX_WIDTH                   1u
#define LFAST_LCR_TXCMUX(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_TXCMUX_SHIFT))&LFAST_LCR_TXCMUX_MASK)
#define LFAST_LCR_LVTXOE_MASK                    0x4000u
#define LFAST_LCR_LVTXOE_SHIFT                   14u
#define LFAST_LCR_LVTXOE_WIDTH                   1u
#define LFAST_LCR_LVTXOE(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_LVTXOE_SHIFT))&LFAST_LCR_LVTXOE_MASK)
#define LFAST_LCR_LVRXOFF_MASK                   0x8000u
#define LFAST_LCR_LVRXOFF_SHIFT                  15u
#define LFAST_LCR_LVRXOFF_WIDTH                  1u
#define LFAST_LCR_LVRXOFF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_LVRXOFF_SHIFT))&LFAST_LCR_LVRXOFF_MASK)
#define LFAST_LCR_SWONLR_MASK                    0x10000u
#define LFAST_LCR_SWONLR_SHIFT                   16u
#define LFAST_LCR_SWONLR_WIDTH                   1u
#define LFAST_LCR_SWONLR(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_SWONLR_SHIFT))&LFAST_LCR_SWONLR_MASK)
#define LFAST_LCR_SWOFFLR_MASK                   0x20000u
#define LFAST_LCR_SWOFFLR_SHIFT                  17u
#define LFAST_LCR_SWOFFLR_WIDTH                  1u
#define LFAST_LCR_SWOFFLR(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_SWOFFLR_SHIFT))&LFAST_LCR_SWOFFLR_MASK)
#define LFAST_LCR_SWONLD_MASK                    0x40000u
#define LFAST_LCR_SWONLD_SHIFT                   18u
#define LFAST_LCR_SWONLD_WIDTH                   1u
#define LFAST_LCR_SWONLD(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_SWONLD_SHIFT))&LFAST_LCR_SWONLD_MASK)
#define LFAST_LCR_SWOFFLD_MASK                   0x80000u
#define LFAST_LCR_SWOFFLD_SHIFT                  19u
#define LFAST_LCR_SWOFFLD_WIDTH                  1u
#define LFAST_LCR_SWOFFLD(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_SWOFFLD_SHIFT))&LFAST_LCR_SWOFFLD_MASK)
#define LFAST_LCR_SWSLPLR_MASK                   0x100000u
#define LFAST_LCR_SWSLPLR_SHIFT                  20u
#define LFAST_LCR_SWSLPLR_WIDTH                  1u
#define LFAST_LCR_SWSLPLR(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_SWSLPLR_SHIFT))&LFAST_LCR_SWSLPLR_MASK)
#define LFAST_LCR_SWWKLR_MASK                    0x200000u
#define LFAST_LCR_SWWKLR_SHIFT                   21u
#define LFAST_LCR_SWWKLR_WIDTH                   1u
#define LFAST_LCR_SWWKLR(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_SWWKLR_SHIFT))&LFAST_LCR_SWWKLR_MASK)
#define LFAST_LCR_SWSLPLD_MASK                   0x400000u
#define LFAST_LCR_SWSLPLD_SHIFT                  22u
#define LFAST_LCR_SWSLPLD_WIDTH                  1u
#define LFAST_LCR_SWSLPLD(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_SWSLPLD_SHIFT))&LFAST_LCR_SWSLPLD_MASK)
#define LFAST_LCR_SWWKLD_MASK                    0x800000u
#define LFAST_LCR_SWWKLD_SHIFT                   23u
#define LFAST_LCR_SWWKLD_WIDTH                   1u
#define LFAST_LCR_SWWKLD(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_LCR_SWWKLD_SHIFT))&LFAST_LCR_SWWKLD_MASK)
/* UNSTCR Bit Fields */
#define LFAST_UNSTCR_UNSHDR_MASK                 0x7Fu
#define LFAST_UNSTCR_UNSHDR_SHIFT                0u
#define LFAST_UNSTCR_UNSHDR_WIDTH                7u
#define LFAST_UNSTCR_UNSHDR(x)                   (((uint32_t)(((uint32_t)(x))<<LFAST_UNSTCR_UNSHDR_SHIFT))&LFAST_UNSTCR_UNSHDR_MASK)
#define LFAST_UNSTCR_USNDRQ_MASK                 0x10000u
#define LFAST_UNSTCR_USNDRQ_SHIFT                16u
#define LFAST_UNSTCR_USNDRQ_WIDTH                1u
#define LFAST_UNSTCR_USNDRQ(x)                   (((uint32_t)(((uint32_t)(x))<<LFAST_UNSTCR_USNDRQ_SHIFT))&LFAST_UNSTCR_USNDRQ_MASK)
/* UNSTDR Bit Fields */
#define LFAST_UNSTDR_UNTXD_MASK                  0xFFFFFFFFu
#define LFAST_UNSTDR_UNTXD_SHIFT                 0u
#define LFAST_UNSTDR_UNTXD_WIDTH                 32u
#define LFAST_UNSTDR_UNTXD(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_UNSTDR_UNTXD_SHIFT))&LFAST_UNSTDR_UNTXD_MASK)
/* GSR Bit Fields */
#define LFAST_GSR_LPCSDV_MASK                    0x1u
#define LFAST_GSR_LPCSDV_SHIFT                   0u
#define LFAST_GSR_LPCSDV_WIDTH                   1u
#define LFAST_GSR_LPCSDV(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_GSR_LPCSDV_SHIFT))&LFAST_GSR_LPCSDV_MASK)
#define LFAST_GSR_LPCHDV_MASK                    0x2u
#define LFAST_GSR_LPCHDV_SHIFT                   1u
#define LFAST_GSR_LPCHDV_WIDTH                   1u
#define LFAST_GSR_LPCHDV(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_GSR_LPCHDV_SHIFT))&LFAST_GSR_LPCHDV_MASK)
#define LFAST_GSR_LPCPDV_MASK                    0x4u
#define LFAST_GSR_LPCPDV_SHIFT                   2u
#define LFAST_GSR_LPCPDV_WIDTH                   1u
#define LFAST_GSR_LPCPDV(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_GSR_LPCPDV_SHIFT))&LFAST_GSR_LPCPDV_MASK)
#define LFAST_GSR_LPFPDV_MASK                    0x8u
#define LFAST_GSR_LPFPDV_SHIFT                   3u
#define LFAST_GSR_LPFPDV_WIDTH                   1u
#define LFAST_GSR_LPFPDV(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_GSR_LPFPDV_SHIFT))&LFAST_GSR_LPFPDV_MASK)
#define LFAST_GSR_LPTXDN_MASK                    0x10u
#define LFAST_GSR_LPTXDN_SHIFT                   4u
#define LFAST_GSR_LPTXDN_WIDTH                   1u
#define LFAST_GSR_LPTXDN(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_GSR_LPTXDN_SHIFT))&LFAST_GSR_LPTXDN_MASK)
#define LFAST_GSR_DRSM_MASK                      0x10000u
#define LFAST_GSR_DRSM_SHIFT                     16u
#define LFAST_GSR_DRSM_WIDTH                     1u
#define LFAST_GSR_DRSM(x)                        (((uint32_t)(((uint32_t)(x))<<LFAST_GSR_DRSM_SHIFT))&LFAST_GSR_DRSM_MASK)
#define LFAST_GSR_LDSM_MASK                      0x20000u
#define LFAST_GSR_LDSM_SHIFT                     17u
#define LFAST_GSR_LDSM_WIDTH                     1u
#define LFAST_GSR_LDSM(x)                        (((uint32_t)(((uint32_t)(x))<<LFAST_GSR_LDSM_SHIFT))&LFAST_GSR_LDSM_MASK)
#define LFAST_GSR_LRMD_MASK                      0x40000u
#define LFAST_GSR_LRMD_SHIFT                     18u
#define LFAST_GSR_LRMD_WIDTH                     1u
#define LFAST_GSR_LRMD(x)                        (((uint32_t)(((uint32_t)(x))<<LFAST_GSR_LRMD_SHIFT))&LFAST_GSR_LRMD_MASK)
#define LFAST_GSR_DUALMD_MASK                    0x80000000u
#define LFAST_GSR_DUALMD_SHIFT                   31u
#define LFAST_GSR_DUALMD_WIDTH                   1u
#define LFAST_GSR_DUALMD(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_GSR_DUALMD_SHIFT))&LFAST_GSR_DUALMD_MASK)
/* PISR Bit Fields */
#define LFAST_PISR_RXPNGD_MASK                   0xFFu
#define LFAST_PISR_RXPNGD_SHIFT                  0u
#define LFAST_PISR_RXPNGD_WIDTH                  8u
#define LFAST_PISR_RXPNGD(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_PISR_RXPNGD_SHIFT))&LFAST_PISR_RXPNGD_MASK)
/* DFSR Bit Fields */
#define LFAST_DFSR_TXFCNT_MASK                   0x7u
#define LFAST_DFSR_TXFCNT_SHIFT                  0u
#define LFAST_DFSR_TXFCNT_WIDTH                  3u
#define LFAST_DFSR_TXFCNT(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_DFSR_TXFCNT_SHIFT))&LFAST_DFSR_TXFCNT_MASK)
#define LFAST_DFSR_TXDCNT_MASK                   0x3F00u
#define LFAST_DFSR_TXDCNT_SHIFT                  8u
#define LFAST_DFSR_TXDCNT_WIDTH                  6u
#define LFAST_DFSR_TXDCNT(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_DFSR_TXDCNT_SHIFT))&LFAST_DFSR_TXDCNT_MASK)
#define LFAST_DFSR_RXFCNT_MASK                   0x70000u
#define LFAST_DFSR_RXFCNT_SHIFT                  16u
#define LFAST_DFSR_RXFCNT_WIDTH                  3u
#define LFAST_DFSR_RXFCNT(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_DFSR_RXFCNT_SHIFT))&LFAST_DFSR_RXFCNT_MASK)
#define LFAST_DFSR_RXDCNT_MASK                   0x3F000000u
#define LFAST_DFSR_RXDCNT_SHIFT                  24u
#define LFAST_DFSR_RXDCNT_WIDTH                  6u
#define LFAST_DFSR_RXDCNT(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_DFSR_RXDCNT_SHIFT))&LFAST_DFSR_RXDCNT_MASK)
/* TISR Bit Fields */
#define LFAST_TISR_TXDTF_MASK                    0x1u
#define LFAST_TISR_TXDTF_SHIFT                   0u
#define LFAST_TISR_TXDTF_WIDTH                   1u
#define LFAST_TISR_TXDTF(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_TISR_TXDTF_SHIFT))&LFAST_TISR_TXDTF_MASK)
#define LFAST_TISR_TXICLCF_MASK                  0x2u
#define LFAST_TISR_TXICLCF_SHIFT                 1u
#define LFAST_TISR_TXICLCF_WIDTH                 1u
#define LFAST_TISR_TXICLCF(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_TISR_TXICLCF_SHIFT))&LFAST_TISR_TXICLCF_MASK)
#define LFAST_TISR_TXUNSF_MASK                   0x4u
#define LFAST_TISR_TXUNSF_SHIFT                  2u
#define LFAST_TISR_TXUNSF_WIDTH                  1u
#define LFAST_TISR_TXUNSF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_TISR_TXUNSF_SHIFT))&LFAST_TISR_TXUNSF_MASK)
#define LFAST_TISR_TXPNGF_MASK                   0x10u
#define LFAST_TISR_TXPNGF_SHIFT                  4u
#define LFAST_TISR_TXPNGF_WIDTH                  1u
#define LFAST_TISR_TXPNGF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_TISR_TXPNGF_SHIFT))&LFAST_TISR_TXPNGF_MASK)
#define LFAST_TISR_TXOVF_MASK                    0x10000u
#define LFAST_TISR_TXOVF_SHIFT                   16u
#define LFAST_TISR_TXOVF_WIDTH                   1u
#define LFAST_TISR_TXOVF(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_TISR_TXOVF_SHIFT))&LFAST_TISR_TXOVF_MASK)
#define LFAST_TISR_TXIEF_MASK                    0x20000u
#define LFAST_TISR_TXIEF_SHIFT                   17u
#define LFAST_TISR_TXIEF_WIDTH                   1u
#define LFAST_TISR_TXIEF(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_TISR_TXIEF_SHIFT))&LFAST_TISR_TXIEF_MASK)
/* RISR Bit Fields */
#define LFAST_RISR_RXUNSF_MASK                   0x2u
#define LFAST_RISR_RXUNSF_SHIFT                  1u
#define LFAST_RISR_RXUNSF_WIDTH                  1u
#define LFAST_RISR_RXUNSF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RISR_RXUNSF_SHIFT))&LFAST_RISR_RXUNSF_MASK)
#define LFAST_RISR_RXDF_MASK                     0x4u
#define LFAST_RISR_RXDF_SHIFT                    2u
#define LFAST_RISR_RXDF_WIDTH                    1u
#define LFAST_RISR_RXDF(x)                       (((uint32_t)(((uint32_t)(x))<<LFAST_RISR_RXDF_SHIFT))&LFAST_RISR_RXDF_MASK)
#define LFAST_RISR_RXCTSF_MASK                   0x8u
#define LFAST_RISR_RXCTSF_SHIFT                  3u
#define LFAST_RISR_RXCTSF_WIDTH                  1u
#define LFAST_RISR_RXCTSF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RISR_RXCTSF_SHIFT))&LFAST_RISR_RXCTSF_MASK)
#define LFAST_RISR_RXLCEF_MASK                   0x10000u
#define LFAST_RISR_RXLCEF_SHIFT                  16u
#define LFAST_RISR_RXLCEF_WIDTH                  1u
#define LFAST_RISR_RXLCEF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RISR_RXLCEF_SHIFT))&LFAST_RISR_RXLCEF_MASK)
#define LFAST_RISR_RXICF_MASK                    0x20000u
#define LFAST_RISR_RXICF_SHIFT                   17u
#define LFAST_RISR_RXICF_WIDTH                   1u
#define LFAST_RISR_RXICF(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_RISR_RXICF_SHIFT))&LFAST_RISR_RXICF_MASK)
#define LFAST_RISR_RXSZF_MASK                    0x40000u
#define LFAST_RISR_RXSZF_SHIFT                   18u
#define LFAST_RISR_RXSZF_WIDTH                   1u
#define LFAST_RISR_RXSZF(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_RISR_RXSZF_SHIFT))&LFAST_RISR_RXSZF_MASK)
#define LFAST_RISR_RXOFF_MASK                    0x80000u
#define LFAST_RISR_RXOFF_SHIFT                   19u
#define LFAST_RISR_RXOFF_WIDTH                   1u
#define LFAST_RISR_RXOFF(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_RISR_RXOFF_SHIFT))&LFAST_RISR_RXOFF_MASK)
#define LFAST_RISR_RXUFF_MASK                    0x100000u
#define LFAST_RISR_RXUFF_SHIFT                   20u
#define LFAST_RISR_RXUFF_WIDTH                   1u
#define LFAST_RISR_RXUFF(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_RISR_RXUFF_SHIFT))&LFAST_RISR_RXUFF_MASK)
#define LFAST_RISR_RXMXF_MASK                    0x200000u
#define LFAST_RISR_RXMXF_SHIFT                   21u
#define LFAST_RISR_RXMXF_WIDTH                   1u
#define LFAST_RISR_RXMXF(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_RISR_RXMXF_SHIFT))&LFAST_RISR_RXMXF_MASK)
#define LFAST_RISR_RXMNF_MASK                    0x400000u
#define LFAST_RISR_RXMNF_SHIFT                   22u
#define LFAST_RISR_RXMNF_WIDTH                   1u
#define LFAST_RISR_RXMNF(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_RISR_RXMNF_SHIFT))&LFAST_RISR_RXMNF_MASK)
#define LFAST_RISR_RXUOF_MASK                    0x800000u
#define LFAST_RISR_RXUOF_SHIFT                   23u
#define LFAST_RISR_RXUOF_WIDTH                   1u
#define LFAST_RISR_RXUOF(x)                      (((uint32_t)(((uint32_t)(x))<<LFAST_RISR_RXUOF_SHIFT))&LFAST_RISR_RXUOF_MASK)
/* RIISR Bit Fields */
#define LFAST_RIISR_ICPONF_MASK                  0x1u
#define LFAST_RIISR_ICPONF_SHIFT                 0u
#define LFAST_RIISR_ICPONF_WIDTH                 1u
#define LFAST_RIISR_ICPONF(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIISR_ICPONF_SHIFT))&LFAST_RIISR_ICPONF_MASK)
#define LFAST_RIISR_ICPOFF_MASK                  0x2u
#define LFAST_RIISR_ICPOFF_SHIFT                 1u
#define LFAST_RIISR_ICPOFF_WIDTH                 1u
#define LFAST_RIISR_ICPOFF(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_RIISR_ICPOFF_SHIFT))&LFAST_RIISR_ICPOFF_MASK)
#define LFAST_RIISR_ICTSF_MASK                   0x4u
#define LFAST_RIISR_ICTSF_SHIFT                  2u
#define LFAST_RIISR_ICTSF_WIDTH                  1u
#define LFAST_RIISR_ICTSF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIISR_ICTSF_SHIFT))&LFAST_RIISR_ICTSF_MASK)
#define LFAST_RIISR_ICTFF_MASK                   0x8u
#define LFAST_RIISR_ICTFF_SHIFT                  3u
#define LFAST_RIISR_ICTFF_WIDTH                  1u
#define LFAST_RIISR_ICTFF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIISR_ICTFF_SHIFT))&LFAST_RIISR_ICTFF_MASK)
#define LFAST_RIISR_ICRSF_MASK                   0x10u
#define LFAST_RIISR_ICRSF_SHIFT                  4u
#define LFAST_RIISR_ICRSF_WIDTH                  1u
#define LFAST_RIISR_ICRSF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIISR_ICRSF_SHIFT))&LFAST_RIISR_ICRSF_MASK)
#define LFAST_RIISR_ICRFF_MASK                   0x20u
#define LFAST_RIISR_ICRFF_SHIFT                  5u
#define LFAST_RIISR_ICRFF_WIDTH                  1u
#define LFAST_RIISR_ICRFF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIISR_ICRFF_SHIFT))&LFAST_RIISR_ICRFF_MASK)
#define LFAST_RIISR_ICTEF_MASK                   0x40u
#define LFAST_RIISR_ICTEF_SHIFT                  6u
#define LFAST_RIISR_ICTEF_WIDTH                  1u
#define LFAST_RIISR_ICTEF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIISR_ICTEF_SHIFT))&LFAST_RIISR_ICTEF_MASK)
#define LFAST_RIISR_ICTDF_MASK                   0x80u
#define LFAST_RIISR_ICTDF_SHIFT                  7u
#define LFAST_RIISR_ICTDF_WIDTH                  1u
#define LFAST_RIISR_ICTDF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIISR_ICTDF_SHIFT))&LFAST_RIISR_ICTDF_MASK)
#define LFAST_RIISR_ICCTF_MASK                   0x100u
#define LFAST_RIISR_ICCTF_SHIFT                  8u
#define LFAST_RIISR_ICCTF_WIDTH                  1u
#define LFAST_RIISR_ICCTF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIISR_ICCTF_SHIFT))&LFAST_RIISR_ICCTF_MASK)
#define LFAST_RIISR_ICLPF_MASK                   0x200u
#define LFAST_RIISR_ICLPF_SHIFT                  9u
#define LFAST_RIISR_ICLPF_WIDTH                  1u
#define LFAST_RIISR_ICLPF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIISR_ICLPF_SHIFT))&LFAST_RIISR_ICLPF_MASK)
#define LFAST_RIISR_ICTOF_MASK                   0x400u
#define LFAST_RIISR_ICTOF_SHIFT                  10u
#define LFAST_RIISR_ICTOF_WIDTH                  1u
#define LFAST_RIISR_ICTOF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIISR_ICTOF_SHIFT))&LFAST_RIISR_ICTOF_MASK)
#define LFAST_RIISR_ICPRF_MASK                   0x800u
#define LFAST_RIISR_ICPRF_SHIFT                  11u
#define LFAST_RIISR_ICPRF_WIDTH                  1u
#define LFAST_RIISR_ICPRF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIISR_ICPRF_SHIFT))&LFAST_RIISR_ICPRF_MASK)
#define LFAST_RIISR_ICPSF_MASK                   0x1000u
#define LFAST_RIISR_ICPSF_SHIFT                  12u
#define LFAST_RIISR_ICPSF_WIDTH                  1u
#define LFAST_RIISR_ICPSF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIISR_ICPSF_SHIFT))&LFAST_RIISR_ICPSF_MASK)
#define LFAST_RIISR_ICPFF_MASK                   0x2000u
#define LFAST_RIISR_ICPFF_SHIFT                  13u
#define LFAST_RIISR_ICPFF_WIDTH                  1u
#define LFAST_RIISR_ICPFF(x)                     (((uint32_t)(((uint32_t)(x))<<LFAST_RIISR_ICPFF_SHIFT))&LFAST_RIISR_ICPFF_MASK)
/* PLLLSR Bit Fields */
#define LFAST_PLLLSR_LRPDS_MASK                  0x1u
#define LFAST_PLLLSR_LRPDS_SHIFT                 0u
#define LFAST_PLLLSR_LRPDS_WIDTH                 1u
#define LFAST_PLLLSR_LRPDS(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_PLLLSR_LRPDS_SHIFT))&LFAST_PLLLSR_LRPDS_MASK)
#define LFAST_PLLLSR_LDPDS_MASK                  0x2u
#define LFAST_PLLLSR_LDPDS_SHIFT                 1u
#define LFAST_PLLLSR_LDPDS_WIDTH                 1u
#define LFAST_PLLLSR_LDPDS(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_PLLLSR_LDPDS_SHIFT))&LFAST_PLLLSR_LDPDS_MASK)
#define LFAST_PLLLSR_LDSLPS_MASK                 0x4u
#define LFAST_PLLLSR_LDSLPS_SHIFT                2u
#define LFAST_PLLLSR_LDSLPS_WIDTH                1u
#define LFAST_PLLLSR_LDSLPS(x)                   (((uint32_t)(((uint32_t)(x))<<LFAST_PLLLSR_LDSLPS_SHIFT))&LFAST_PLLLSR_LDSLPS_MASK)
#define LFAST_PLLLSR_LRSLPS_MASK                 0x8u
#define LFAST_PLLLSR_LRSLPS_SHIFT                3u
#define LFAST_PLLLSR_LRSLPS_WIDTH                1u
#define LFAST_PLLLSR_LRSLPS(x)                   (((uint32_t)(((uint32_t)(x))<<LFAST_PLLLSR_LRSLPS_SHIFT))&LFAST_PLLLSR_LRSLPS_MASK)
#define LFAST_PLLLSR_PLDCR_MASK                  0x10000u
#define LFAST_PLLLSR_PLDCR_SHIFT                 16u
#define LFAST_PLLLSR_PLDCR_WIDTH                 1u
#define LFAST_PLLLSR_PLDCR(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_PLLLSR_PLDCR_SHIFT))&LFAST_PLLLSR_PLDCR_MASK)
#define LFAST_PLLLSR_PLLDIS_MASK                 0x20000u
#define LFAST_PLLLSR_PLLDIS_SHIFT                17u
#define LFAST_PLLLSR_PLLDIS_WIDTH                1u
#define LFAST_PLLLSR_PLLDIS(x)                   (((uint32_t)(((uint32_t)(x))<<LFAST_PLLLSR_PLLDIS_SHIFT))&LFAST_PLLLSR_PLLDIS_MASK)
/* UNSRSR Bit Fields */
#define LFAST_UNSRSR_URPCNT_MASK                 0x7u
#define LFAST_UNSRSR_URPCNT_SHIFT                0u
#define LFAST_UNSRSR_URPCNT_WIDTH                3u
#define LFAST_UNSRSR_URPCNT(x)                   (((uint32_t)(((uint32_t)(x))<<LFAST_UNSRSR_URPCNT_SHIFT))&LFAST_UNSRSR_URPCNT_MASK)
#define LFAST_UNSRSR_URXDV_MASK                  0x100u
#define LFAST_UNSRSR_URXDV_SHIFT                 8u
#define LFAST_UNSRSR_URXDV_WIDTH                 1u
#define LFAST_UNSRSR_URXDV(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_UNSRSR_URXDV_SHIFT))&LFAST_UNSRSR_URXDV_MASK)
/* UNSRDR Bit Fields */
#define LFAST_UNSRDR_UNRXD_MASK                  0xFFFFFFFFu
#define LFAST_UNSRDR_UNRXD_SHIFT                 0u
#define LFAST_UNSRDR_UNRXD_WIDTH                 32u
#define LFAST_UNSRDR_UNRXD(x)                    (((uint32_t)(((uint32_t)(x))<<LFAST_UNSRDR_UNRXD_SHIFT))&LFAST_UNSRDR_UNRXD_MASK)

/*!
 * @}
 */ /* end of group LFAST_Register_Masks */


/*!
 * @}
 */ /* end of group LFAST_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- LINFlexD Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LINFlexD_Peripheral_Access_Layer LINFlexD Peripheral Access Layer
 * @{
 */


/** LINFlexD - Size of Registers Arrays */
#define LINFlexD_IFCR_COUNT                      16u

/** LINFlexD - Register Layout Typedef */
typedef struct {
  __IO uint32_t LINCR1;                            /**< LIN Control Register 1, offset: 0x0 */
  __IO uint32_t LINIER;                            /**< LIN Interrupt enable register, offset: 0x4 */
  __IO uint32_t LINSR;                             /**< LIN Status Register, offset: 0x8 */
  __IO uint32_t LINESR;                            /**< LIN Error Status Register, offset: 0xC */
  __IO uint32_t UARTCR;                            /**< UART Mode Control Register, offset: 0x10 */
  __IO uint32_t UARTSR;                            /**< UART Mode Status Register, offset: 0x14 */
  __IO uint32_t LINTCSR;                           /**< LIN Time-Out Control Status Register, offset: 0x18 */
  __IO uint32_t LINOCR;                            /**< LIN Output Compare Register, offset: 0x1C */
  __IO uint32_t LINTOCR;                           /**< LIN Time-Out Control Register, offset: 0x20 */
  __IO uint32_t LINFBRR;                           /**< LIN Fractional Baud Rate Register, offset: 0x24 */
  __IO uint32_t LINIBRR;                           /**< LIN Integer Baud Rate Register, offset: 0x28 */
  __IO uint32_t LINCFR;                            /**< LIN Checksum Field Register, offset: 0x2C */
  __IO uint32_t LINCR2;                            /**< LIN Control Register 2, offset: 0x30 */
  __IO uint32_t BIDR;                              /**< Buffer Identifier Register, offset: 0x34 */
  __IO uint32_t BDRL;                              /**< Buffer Data Register Least Significant, offset: 0x38 */
  __IO uint32_t BDRM;                              /**< Buffer Data Register Most Significant, offset: 0x3C */
  __IO uint32_t IFER;                              /**< Identifier Filter Enable Register, offset: 0x40 */
  __I  uint32_t IFMI;                              /**< Identifier Filter Match Index, offset: 0x44 */
  __IO uint32_t IFMR;                              /**< Identifier Filter Mode Register, offset: 0x48 */
  __IO uint32_t IFCR[LINFlexD_IFCR_COUNT];         /**< Identifier Filter Control Register, array offset: 0x4C, array step: 0x4 */
  __IO uint32_t GCR;                               /**< Global Control Register, offset: 0x8C */
  __IO uint32_t UARTPTO;                           /**< UART Preset Timeout Register, offset: 0x90 */
  __I  uint32_t UARTCTO;                           /**< UART Current Timeout Register, offset: 0x94 */
  __IO uint32_t DMATXE;                            /**< DMA Tx Enable Register, offset: 0x98 */
  __IO uint32_t DMARXE;                            /**< DMA Rx Enable Register, offset: 0x9C */
} LINFlexD_Type, *LINFlexD_MemMapPtr;

 /** Number of instances of the LINFlexD module. */
#define LINFlexD_INSTANCE_COUNT                  (2u)


/* LINFlexD - Peripheral instance base addresses */
/** Peripheral LINFlexD_0 base address */
#define LINFlexD_0_BASE                          (0xFBE84000u)
/** Peripheral LINFlexD_0 base pointer */
#define LINFlexD_0                               ((LINFlexD_Type *)LINFlexD_0_BASE)
/** Peripheral LINFlexD_1 base address */
#define LINFlexD_1_BASE                          (0xFFE90000u)
/** Peripheral LINFlexD_1 base pointer */
#define LINFlexD_1                               ((LINFlexD_Type *)LINFlexD_1_BASE)
/** Array initializer of LINFlexD peripheral base addresses */
#define LINFlexD_BASE_ADDRS                      { LINFlexD_0_BASE, LINFlexD_1_BASE }
/** Array initializer of LINFlexD peripheral base pointers */
#define LINFlexD_BASE_PTRS                       { LINFlexD_0, LINFlexD_1 }
/** Interrupt vectors for the LINFlexD */
#define LINFLEXD_RX_IRQS {LINFLEXD0_RX_IRQn, LINFLEXD1_RX_IRQn}
#define LINFLEXD_TX_IRQS {LINFLEXD0_TX_IRQn, LINFLEXD1_TX_IRQn}
#define LINFLEXD_ERR_IRQS {LINFLEXD0_ERR_IRQn, LINFLEXD1_ERR_IRQn}

/* ----------------------------------------------------------------------------
   -- LINFlexD Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LINFlexD_Register_Masks LINFlexD Register Masks
 * @{
 */

/* LINCR1 Bit Fields */
#define LINFlexD_LINCR1_INIT_MASK                0x1u
#define LINFlexD_LINCR1_INIT_SHIFT               0u
#define LINFlexD_LINCR1_INIT_WIDTH               1u
#define LINFlexD_LINCR1_INIT(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_INIT_SHIFT))&LINFlexD_LINCR1_INIT_MASK)
#define LINFlexD_LINCR1_SLEEP_MASK               0x2u
#define LINFlexD_LINCR1_SLEEP_SHIFT              1u
#define LINFlexD_LINCR1_SLEEP_WIDTH              1u
#define LINFlexD_LINCR1_SLEEP(x)                 (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_SLEEP_SHIFT))&LINFlexD_LINCR1_SLEEP_MASK)
#define LINFlexD_LINCR1_RBLM_MASK                0x4u
#define LINFlexD_LINCR1_RBLM_SHIFT               2u
#define LINFlexD_LINCR1_RBLM_WIDTH               1u
#define LINFlexD_LINCR1_RBLM(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_RBLM_SHIFT))&LINFlexD_LINCR1_RBLM_MASK)
#define LINFlexD_LINCR1_SSBL_MASK                0x8u
#define LINFlexD_LINCR1_SSBL_SHIFT               3u
#define LINFlexD_LINCR1_SSBL_WIDTH               1u
#define LINFlexD_LINCR1_SSBL(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_SSBL_SHIFT))&LINFlexD_LINCR1_SSBL_MASK)
#define LINFlexD_LINCR1_MME_MASK                 0x10u
#define LINFlexD_LINCR1_MME_SHIFT                4u
#define LINFlexD_LINCR1_MME_WIDTH                1u
#define LINFlexD_LINCR1_MME(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_MME_SHIFT))&LINFlexD_LINCR1_MME_MASK)
#define LINFlexD_LINCR1_LBKM_MASK                0x20u
#define LINFlexD_LINCR1_LBKM_SHIFT               5u
#define LINFlexD_LINCR1_LBKM_WIDTH               1u
#define LINFlexD_LINCR1_LBKM(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_LBKM_SHIFT))&LINFlexD_LINCR1_LBKM_MASK)
#define LINFlexD_LINCR1_BF_MASK                  0x80u
#define LINFlexD_LINCR1_BF_SHIFT                 7u
#define LINFlexD_LINCR1_BF_WIDTH                 1u
#define LINFlexD_LINCR1_BF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_BF_SHIFT))&LINFlexD_LINCR1_BF_MASK)
#define LINFlexD_LINCR1_MBL_MASK                 0xF00u
#define LINFlexD_LINCR1_MBL_SHIFT                8u
#define LINFlexD_LINCR1_MBL_WIDTH                4u
#define LINFlexD_LINCR1_MBL(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_MBL_SHIFT))&LINFlexD_LINCR1_MBL_MASK)
#define LINFlexD_LINCR1_AUTOWU_MASK              0x1000u
#define LINFlexD_LINCR1_AUTOWU_SHIFT             12u
#define LINFlexD_LINCR1_AUTOWU_WIDTH             1u
#define LINFlexD_LINCR1_AUTOWU(x)                (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_AUTOWU_SHIFT))&LINFlexD_LINCR1_AUTOWU_MASK)
#define LINFlexD_LINCR1_LASE_MASK                0x2000u
#define LINFlexD_LINCR1_LASE_SHIFT               13u
#define LINFlexD_LINCR1_LASE_WIDTH               1u
#define LINFlexD_LINCR1_LASE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_LASE_SHIFT))&LINFlexD_LINCR1_LASE_MASK)
#define LINFlexD_LINCR1_CFD_MASK                 0x4000u
#define LINFlexD_LINCR1_CFD_SHIFT                14u
#define LINFlexD_LINCR1_CFD_WIDTH                1u
#define LINFlexD_LINCR1_CFD(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_CFD_SHIFT))&LINFlexD_LINCR1_CFD_MASK)
#define LINFlexD_LINCR1_CCD_MASK                 0x8000u
#define LINFlexD_LINCR1_CCD_SHIFT                15u
#define LINFlexD_LINCR1_CCD_WIDTH                1u
#define LINFlexD_LINCR1_CCD(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_CCD_SHIFT))&LINFlexD_LINCR1_CCD_MASK)
/* LINIER Bit Fields */
#define LINFlexD_LINIER_HRIE_MASK                0x1u
#define LINFlexD_LINIER_HRIE_SHIFT               0u
#define LINFlexD_LINIER_HRIE_WIDTH               1u
#define LINFlexD_LINIER_HRIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_HRIE_SHIFT))&LINFlexD_LINIER_HRIE_MASK)
#define LINFlexD_LINIER_DTIE_MASK                0x2u
#define LINFlexD_LINIER_DTIE_SHIFT               1u
#define LINFlexD_LINIER_DTIE_WIDTH               1u
#define LINFlexD_LINIER_DTIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_DTIE_SHIFT))&LINFlexD_LINIER_DTIE_MASK)
#define LINFlexD_LINIER_DRIE_MASK                0x4u
#define LINFlexD_LINIER_DRIE_SHIFT               2u
#define LINFlexD_LINIER_DRIE_WIDTH               1u
#define LINFlexD_LINIER_DRIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_DRIE_SHIFT))&LINFlexD_LINIER_DRIE_MASK)
#define LINFlexD_LINIER_DBEIETOIE_MASK           0x8u
#define LINFlexD_LINIER_DBEIETOIE_SHIFT          3u
#define LINFlexD_LINIER_DBEIETOIE_WIDTH          1u
#define LINFlexD_LINIER_DBEIETOIE(x)             (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_DBEIETOIE_SHIFT))&LINFlexD_LINIER_DBEIETOIE_MASK)
#define LINFlexD_LINIER_DBFIE_MASK               0x10u
#define LINFlexD_LINIER_DBFIE_SHIFT              4u
#define LINFlexD_LINIER_DBFIE_WIDTH              1u
#define LINFlexD_LINIER_DBFIE(x)                 (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_DBFIE_SHIFT))&LINFlexD_LINIER_DBFIE_MASK)
#define LINFlexD_LINIER_WUIE_MASK                0x20u
#define LINFlexD_LINIER_WUIE_SHIFT               5u
#define LINFlexD_LINIER_WUIE_WIDTH               1u
#define LINFlexD_LINIER_WUIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_WUIE_SHIFT))&LINFlexD_LINIER_WUIE_MASK)
#define LINFlexD_LINIER_LSIE_MASK                0x40u
#define LINFlexD_LINIER_LSIE_SHIFT               6u
#define LINFlexD_LINIER_LSIE_WIDTH               1u
#define LINFlexD_LINIER_LSIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_LSIE_SHIFT))&LINFlexD_LINIER_LSIE_MASK)
#define LINFlexD_LINIER_BOIE_MASK                0x80u
#define LINFlexD_LINIER_BOIE_SHIFT               7u
#define LINFlexD_LINIER_BOIE_WIDTH               1u
#define LINFlexD_LINIER_BOIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_BOIE_SHIFT))&LINFlexD_LINIER_BOIE_MASK)
#define LINFlexD_LINIER_FEIE_MASK                0x100u
#define LINFlexD_LINIER_FEIE_SHIFT               8u
#define LINFlexD_LINIER_FEIE_WIDTH               1u
#define LINFlexD_LINIER_FEIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_FEIE_SHIFT))&LINFlexD_LINIER_FEIE_MASK)
#define LINFlexD_LINIER_HEIE_MASK                0x800u
#define LINFlexD_LINIER_HEIE_SHIFT               11u
#define LINFlexD_LINIER_HEIE_WIDTH               1u
#define LINFlexD_LINIER_HEIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_HEIE_SHIFT))&LINFlexD_LINIER_HEIE_MASK)
#define LINFlexD_LINIER_CEIE_MASK                0x1000u
#define LINFlexD_LINIER_CEIE_SHIFT               12u
#define LINFlexD_LINIER_CEIE_WIDTH               1u
#define LINFlexD_LINIER_CEIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_CEIE_SHIFT))&LINFlexD_LINIER_CEIE_MASK)
#define LINFlexD_LINIER_BEIE_MASK                0x2000u
#define LINFlexD_LINIER_BEIE_SHIFT               13u
#define LINFlexD_LINIER_BEIE_WIDTH               1u
#define LINFlexD_LINIER_BEIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_BEIE_SHIFT))&LINFlexD_LINIER_BEIE_MASK)
#define LINFlexD_LINIER_OCIE_MASK                0x4000u
#define LINFlexD_LINIER_OCIE_SHIFT               14u
#define LINFlexD_LINIER_OCIE_WIDTH               1u
#define LINFlexD_LINIER_OCIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_OCIE_SHIFT))&LINFlexD_LINIER_OCIE_MASK)
#define LINFlexD_LINIER_SZIE_MASK                0x8000u
#define LINFlexD_LINIER_SZIE_SHIFT               15u
#define LINFlexD_LINIER_SZIE_WIDTH               1u
#define LINFlexD_LINIER_SZIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_SZIE_SHIFT))&LINFlexD_LINIER_SZIE_MASK)
/* LINSR Bit Fields */
#define LINFlexD_LINSR_HRF_MASK                  0x1u
#define LINFlexD_LINSR_HRF_SHIFT                 0u
#define LINFlexD_LINSR_HRF_WIDTH                 1u
#define LINFlexD_LINSR_HRF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_HRF_SHIFT))&LINFlexD_LINSR_HRF_MASK)
#define LINFlexD_LINSR_DTF_MASK                  0x2u
#define LINFlexD_LINSR_DTF_SHIFT                 1u
#define LINFlexD_LINSR_DTF_WIDTH                 1u
#define LINFlexD_LINSR_DTF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_DTF_SHIFT))&LINFlexD_LINSR_DTF_MASK)
#define LINFlexD_LINSR_DRF_MASK                  0x4u
#define LINFlexD_LINSR_DRF_SHIFT                 2u
#define LINFlexD_LINSR_DRF_WIDTH                 1u
#define LINFlexD_LINSR_DRF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_DRF_SHIFT))&LINFlexD_LINSR_DRF_MASK)
#define LINFlexD_LINSR_DBEF_MASK                 0x8u
#define LINFlexD_LINSR_DBEF_SHIFT                3u
#define LINFlexD_LINSR_DBEF_WIDTH                1u
#define LINFlexD_LINSR_DBEF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_DBEF_SHIFT))&LINFlexD_LINSR_DBEF_MASK)
#define LINFlexD_LINSR_DBFF_MASK                 0x10u
#define LINFlexD_LINSR_DBFF_SHIFT                4u
#define LINFlexD_LINSR_DBFF_WIDTH                1u
#define LINFlexD_LINSR_DBFF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_DBFF_SHIFT))&LINFlexD_LINSR_DBFF_MASK)
#define LINFlexD_LINSR_WUF_MASK                  0x20u
#define LINFlexD_LINSR_WUF_SHIFT                 5u
#define LINFlexD_LINSR_WUF_WIDTH                 1u
#define LINFlexD_LINSR_WUF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_WUF_SHIFT))&LINFlexD_LINSR_WUF_MASK)
#define LINFlexD_LINSR_RDI_MASK                  0x40u
#define LINFlexD_LINSR_RDI_SHIFT                 6u
#define LINFlexD_LINSR_RDI_WIDTH                 1u
#define LINFlexD_LINSR_RDI(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_RDI_SHIFT))&LINFlexD_LINSR_RDI_MASK)
#define LINFlexD_LINSR_RXbusy_MASK               0x80u
#define LINFlexD_LINSR_RXbusy_SHIFT              7u
#define LINFlexD_LINSR_RXbusy_WIDTH              1u
#define LINFlexD_LINSR_RXbusy(x)                 (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_RXbusy_SHIFT))&LINFlexD_LINSR_RXbusy_MASK)
#define LINFlexD_LINSR_DRBNE_MASK                0x100u
#define LINFlexD_LINSR_DRBNE_SHIFT               8u
#define LINFlexD_LINSR_DRBNE_WIDTH               1u
#define LINFlexD_LINSR_DRBNE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_DRBNE_SHIFT))&LINFlexD_LINSR_DRBNE_MASK)
#define LINFlexD_LINSR_RMB_MASK                  0x200u
#define LINFlexD_LINSR_RMB_SHIFT                 9u
#define LINFlexD_LINSR_RMB_WIDTH                 1u
#define LINFlexD_LINSR_RMB(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_RMB_SHIFT))&LINFlexD_LINSR_RMB_MASK)
#define LINFlexD_LINSR_LINS_MASK                 0xF000u
#define LINFlexD_LINSR_LINS_SHIFT                12u
#define LINFlexD_LINSR_LINS_WIDTH                4u
#define LINFlexD_LINSR_LINS(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_LINS_SHIFT))&LINFlexD_LINSR_LINS_MASK)
#define LINFlexD_LINSR_RDC_MASK                  0x70000u
#define LINFlexD_LINSR_RDC_SHIFT                 16u
#define LINFlexD_LINSR_RDC_WIDTH                 3u
#define LINFlexD_LINSR_RDC(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_RDC_SHIFT))&LINFlexD_LINSR_RDC_MASK)
#define LINFlexD_LINSR_AUTOSYNC_COMP_MASK        0x80000u
#define LINFlexD_LINSR_AUTOSYNC_COMP_SHIFT       19u
#define LINFlexD_LINSR_AUTOSYNC_COMP_WIDTH       1u
#define LINFlexD_LINSR_AUTOSYNC_COMP(x)          (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_AUTOSYNC_COMP_SHIFT))&LINFlexD_LINSR_AUTOSYNC_COMP_MASK)
/* LINESR Bit Fields */
#define LINFlexD_LINESR_NF_MASK                  0x1u
#define LINFlexD_LINESR_NF_SHIFT                 0u
#define LINFlexD_LINESR_NF_WIDTH                 1u
#define LINFlexD_LINESR_NF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_NF_SHIFT))&LINFlexD_LINESR_NF_MASK)
#define LINFlexD_LINESR_BOF_MASK                 0x80u
#define LINFlexD_LINESR_BOF_SHIFT                7u
#define LINFlexD_LINESR_BOF_WIDTH                1u
#define LINFlexD_LINESR_BOF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_BOF_SHIFT))&LINFlexD_LINESR_BOF_MASK)
#define LINFlexD_LINESR_FEF_MASK                 0x100u
#define LINFlexD_LINESR_FEF_SHIFT                8u
#define LINFlexD_LINESR_FEF_WIDTH                1u
#define LINFlexD_LINESR_FEF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_FEF_SHIFT))&LINFlexD_LINESR_FEF_MASK)
#define LINFlexD_LINESR_IDPEF_MASK               0x200u
#define LINFlexD_LINESR_IDPEF_SHIFT              9u
#define LINFlexD_LINESR_IDPEF_WIDTH              1u
#define LINFlexD_LINESR_IDPEF(x)                 (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_IDPEF_SHIFT))&LINFlexD_LINESR_IDPEF_MASK)
#define LINFlexD_LINESR_SDEF_MASK                0x400u
#define LINFlexD_LINESR_SDEF_SHIFT               10u
#define LINFlexD_LINESR_SDEF_WIDTH               1u
#define LINFlexD_LINESR_SDEF(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_SDEF_SHIFT))&LINFlexD_LINESR_SDEF_MASK)
#define LINFlexD_LINESR_SFEF_MASK                0x800u
#define LINFlexD_LINESR_SFEF_SHIFT               11u
#define LINFlexD_LINESR_SFEF_WIDTH               1u
#define LINFlexD_LINESR_SFEF(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_SFEF_SHIFT))&LINFlexD_LINESR_SFEF_MASK)
#define LINFlexD_LINESR_CEF_MASK                 0x1000u
#define LINFlexD_LINESR_CEF_SHIFT                12u
#define LINFlexD_LINESR_CEF_WIDTH                1u
#define LINFlexD_LINESR_CEF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_CEF_SHIFT))&LINFlexD_LINESR_CEF_MASK)
#define LINFlexD_LINESR_BEF_MASK                 0x2000u
#define LINFlexD_LINESR_BEF_SHIFT                13u
#define LINFlexD_LINESR_BEF_WIDTH                1u
#define LINFlexD_LINESR_BEF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_BEF_SHIFT))&LINFlexD_LINESR_BEF_MASK)
#define LINFlexD_LINESR_OCF_MASK                 0x4000u
#define LINFlexD_LINESR_OCF_SHIFT                14u
#define LINFlexD_LINESR_OCF_WIDTH                1u
#define LINFlexD_LINESR_OCF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_OCF_SHIFT))&LINFlexD_LINESR_OCF_MASK)
#define LINFlexD_LINESR_SZF_MASK                 0x8000u
#define LINFlexD_LINESR_SZF_SHIFT                15u
#define LINFlexD_LINESR_SZF_WIDTH                1u
#define LINFlexD_LINESR_SZF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_SZF_SHIFT))&LINFlexD_LINESR_SZF_MASK)
/* UARTCR Bit Fields */
#define LINFlexD_UARTCR_UART_MASK                0x1u
#define LINFlexD_UARTCR_UART_SHIFT               0u
#define LINFlexD_UARTCR_UART_WIDTH               1u
#define LINFlexD_UARTCR_UART(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_UART_SHIFT))&LINFlexD_UARTCR_UART_MASK)
#define LINFlexD_UARTCR_WL0_MASK                 0x2u
#define LINFlexD_UARTCR_WL0_SHIFT                1u
#define LINFlexD_UARTCR_WL0_WIDTH                1u
#define LINFlexD_UARTCR_WL0(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_WL0_SHIFT))&LINFlexD_UARTCR_WL0_MASK)
#define LINFlexD_UARTCR_PCE_MASK                 0x4u
#define LINFlexD_UARTCR_PCE_SHIFT                2u
#define LINFlexD_UARTCR_PCE_WIDTH                1u
#define LINFlexD_UARTCR_PCE(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_PCE_SHIFT))&LINFlexD_UARTCR_PCE_MASK)
#define LINFlexD_UARTCR_PC0_MASK                 0x8u
#define LINFlexD_UARTCR_PC0_SHIFT                3u
#define LINFlexD_UARTCR_PC0_WIDTH                1u
#define LINFlexD_UARTCR_PC0(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_PC0_SHIFT))&LINFlexD_UARTCR_PC0_MASK)
#define LINFlexD_UARTCR_TxEn_MASK                0x10u
#define LINFlexD_UARTCR_TxEn_SHIFT               4u
#define LINFlexD_UARTCR_TxEn_WIDTH               1u
#define LINFlexD_UARTCR_TxEn(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_TxEn_SHIFT))&LINFlexD_UARTCR_TxEn_MASK)
#define LINFlexD_UARTCR_RxEn_MASK                0x20u
#define LINFlexD_UARTCR_RxEn_SHIFT               5u
#define LINFlexD_UARTCR_RxEn_WIDTH               1u
#define LINFlexD_UARTCR_RxEn(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_RxEn_SHIFT))&LINFlexD_UARTCR_RxEn_MASK)
#define LINFlexD_UARTCR_PC1_MASK                 0x40u
#define LINFlexD_UARTCR_PC1_SHIFT                6u
#define LINFlexD_UARTCR_PC1_WIDTH                1u
#define LINFlexD_UARTCR_PC1(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_PC1_SHIFT))&LINFlexD_UARTCR_PC1_MASK)
#define LINFlexD_UARTCR_WL1_MASK                 0x80u
#define LINFlexD_UARTCR_WL1_SHIFT                7u
#define LINFlexD_UARTCR_WL1_WIDTH                1u
#define LINFlexD_UARTCR_WL1(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_WL1_SHIFT))&LINFlexD_UARTCR_WL1_MASK)
#define LINFlexD_UARTCR_TFBM_MASK                0x100u
#define LINFlexD_UARTCR_TFBM_SHIFT               8u
#define LINFlexD_UARTCR_TFBM_WIDTH               1u
#define LINFlexD_UARTCR_TFBM(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_TFBM_SHIFT))&LINFlexD_UARTCR_TFBM_MASK)
#define LINFlexD_UARTCR_RFBM_MASK                0x200u
#define LINFlexD_UARTCR_RFBM_SHIFT               9u
#define LINFlexD_UARTCR_RFBM_WIDTH               1u
#define LINFlexD_UARTCR_RFBM(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_RFBM_SHIFT))&LINFlexD_UARTCR_RFBM_MASK)
#define LINFlexD_UARTCR_RDFL_RFC_MASK            0x1C00u
#define LINFlexD_UARTCR_RDFL_RFC_SHIFT           10u
#define LINFlexD_UARTCR_RDFL_RFC_WIDTH           3u
#define LINFlexD_UARTCR_RDFL_RFC(x)              (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_RDFL_RFC_SHIFT))&LINFlexD_UARTCR_RDFL_RFC_MASK)
#define LINFlexD_UARTCR_TDFL_TFC_MASK            0xE000u
#define LINFlexD_UARTCR_TDFL_TFC_SHIFT           13u
#define LINFlexD_UARTCR_TDFL_TFC_WIDTH           3u
#define LINFlexD_UARTCR_TDFL_TFC(x)              (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_TDFL_TFC_SHIFT))&LINFlexD_UARTCR_TDFL_TFC_MASK)
#define LINFlexD_UARTCR_WLS_MASK                 0x10000u
#define LINFlexD_UARTCR_WLS_SHIFT                16u
#define LINFlexD_UARTCR_WLS_WIDTH                1u
#define LINFlexD_UARTCR_WLS(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_WLS_SHIFT))&LINFlexD_UARTCR_WLS_MASK)
#define LINFlexD_UARTCR_SBUR_MASK                0x60000u
#define LINFlexD_UARTCR_SBUR_SHIFT               17u
#define LINFlexD_UARTCR_SBUR_WIDTH               2u
#define LINFlexD_UARTCR_SBUR(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_SBUR_SHIFT))&LINFlexD_UARTCR_SBUR_MASK)
#define LINFlexD_UARTCR_DTU_PCETX_MASK           0x80000u
#define LINFlexD_UARTCR_DTU_PCETX_SHIFT          19u
#define LINFlexD_UARTCR_DTU_PCETX_WIDTH          1u
#define LINFlexD_UARTCR_DTU_PCETX(x)             (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_DTU_PCETX_SHIFT))&LINFlexD_UARTCR_DTU_PCETX_MASK)
#define LINFlexD_UARTCR_NEF_MASK                 0x700000u
#define LINFlexD_UARTCR_NEF_SHIFT                20u
#define LINFlexD_UARTCR_NEF_WIDTH                3u
#define LINFlexD_UARTCR_NEF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_NEF_SHIFT))&LINFlexD_UARTCR_NEF_MASK)
/* UARTSR Bit Fields */
#define LINFlexD_UARTSR_NF_MASK                  0x1u
#define LINFlexD_UARTSR_NF_SHIFT                 0u
#define LINFlexD_UARTSR_NF_WIDTH                 1u
#define LINFlexD_UARTSR_NF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_NF_SHIFT))&LINFlexD_UARTSR_NF_MASK)
#define LINFlexD_UARTSR_DTFTFF_MASK              0x2u
#define LINFlexD_UARTSR_DTFTFF_SHIFT             1u
#define LINFlexD_UARTSR_DTFTFF_WIDTH             1u
#define LINFlexD_UARTSR_DTFTFF(x)                (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_DTFTFF_SHIFT))&LINFlexD_UARTSR_DTFTFF_MASK)
#define LINFlexD_UARTSR_DRFRFE_MASK              0x4u
#define LINFlexD_UARTSR_DRFRFE_SHIFT             2u
#define LINFlexD_UARTSR_DRFRFE_WIDTH             1u
#define LINFlexD_UARTSR_DRFRFE(x)                (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_DRFRFE_SHIFT))&LINFlexD_UARTSR_DRFRFE_MASK)
#define LINFlexD_UARTSR_TO_MASK                  0x8u
#define LINFlexD_UARTSR_TO_SHIFT                 3u
#define LINFlexD_UARTSR_TO_WIDTH                 1u
#define LINFlexD_UARTSR_TO(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_TO_SHIFT))&LINFlexD_UARTSR_TO_MASK)
#define LINFlexD_UARTSR_RFNE_MASK                0x10u
#define LINFlexD_UARTSR_RFNE_SHIFT               4u
#define LINFlexD_UARTSR_RFNE_WIDTH               1u
#define LINFlexD_UARTSR_RFNE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_RFNE_SHIFT))&LINFlexD_UARTSR_RFNE_MASK)
#define LINFlexD_UARTSR_WUF_MASK                 0x20u
#define LINFlexD_UARTSR_WUF_SHIFT                5u
#define LINFlexD_UARTSR_WUF_WIDTH                1u
#define LINFlexD_UARTSR_WUF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_WUF_SHIFT))&LINFlexD_UARTSR_WUF_MASK)
#define LINFlexD_UARTSR_RDI_MASK                 0x40u
#define LINFlexD_UARTSR_RDI_SHIFT                6u
#define LINFlexD_UARTSR_RDI_WIDTH                1u
#define LINFlexD_UARTSR_RDI(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_RDI_SHIFT))&LINFlexD_UARTSR_RDI_MASK)
#define LINFlexD_UARTSR_BOF_MASK                 0x80u
#define LINFlexD_UARTSR_BOF_SHIFT                7u
#define LINFlexD_UARTSR_BOF_WIDTH                1u
#define LINFlexD_UARTSR_BOF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_BOF_SHIFT))&LINFlexD_UARTSR_BOF_MASK)
#define LINFlexD_UARTSR_FEF_MASK                 0x100u
#define LINFlexD_UARTSR_FEF_SHIFT                8u
#define LINFlexD_UARTSR_FEF_WIDTH                1u
#define LINFlexD_UARTSR_FEF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_FEF_SHIFT))&LINFlexD_UARTSR_FEF_MASK)
#define LINFlexD_UARTSR_RMB_MASK                 0x200u
#define LINFlexD_UARTSR_RMB_SHIFT                9u
#define LINFlexD_UARTSR_RMB_WIDTH                1u
#define LINFlexD_UARTSR_RMB(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_RMB_SHIFT))&LINFlexD_UARTSR_RMB_MASK)
#define LINFlexD_UARTSR_PE_MASK                  0x3C00u
#define LINFlexD_UARTSR_PE_SHIFT                 10u
#define LINFlexD_UARTSR_PE_WIDTH                 4u
#define LINFlexD_UARTSR_PE(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_PE_SHIFT))&LINFlexD_UARTSR_PE_MASK)
#define LINFlexD_UARTSR_OCF_MASK                 0x4000u
#define LINFlexD_UARTSR_OCF_SHIFT                14u
#define LINFlexD_UARTSR_OCF_WIDTH                1u
#define LINFlexD_UARTSR_OCF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_OCF_SHIFT))&LINFlexD_UARTSR_OCF_MASK)
#define LINFlexD_UARTSR_SZF_MASK                 0x8000u
#define LINFlexD_UARTSR_SZF_SHIFT                15u
#define LINFlexD_UARTSR_SZF_WIDTH                1u
#define LINFlexD_UARTSR_SZF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_SZF_SHIFT))&LINFlexD_UARTSR_SZF_MASK)
/* LINTCSR Bit Fields */
#define LINFlexD_LINTCSR_CNT_MASK                0xFFu
#define LINFlexD_LINTCSR_CNT_SHIFT               0u
#define LINFlexD_LINTCSR_CNT_WIDTH               8u
#define LINFlexD_LINTCSR_CNT(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINTCSR_CNT_SHIFT))&LINFlexD_LINTCSR_CNT_MASK)
#define LINFlexD_LINTCSR_TOCE_MASK               0x100u
#define LINFlexD_LINTCSR_TOCE_SHIFT              8u
#define LINFlexD_LINTCSR_TOCE_WIDTH              1u
#define LINFlexD_LINTCSR_TOCE(x)                 (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINTCSR_TOCE_SHIFT))&LINFlexD_LINTCSR_TOCE_MASK)
#define LINFlexD_LINTCSR_IOT_MASK                0x200u
#define LINFlexD_LINTCSR_IOT_SHIFT               9u
#define LINFlexD_LINTCSR_IOT_WIDTH               1u
#define LINFlexD_LINTCSR_IOT(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINTCSR_IOT_SHIFT))&LINFlexD_LINTCSR_IOT_MASK)
#define LINFlexD_LINTCSR_MODE_MASK               0x400u
#define LINFlexD_LINTCSR_MODE_SHIFT              10u
#define LINFlexD_LINTCSR_MODE_WIDTH              1u
#define LINFlexD_LINTCSR_MODE(x)                 (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINTCSR_MODE_SHIFT))&LINFlexD_LINTCSR_MODE_MASK)
/* LINOCR Bit Fields */
#define LINFlexD_LINOCR_OC1_MASK                 0xFFu
#define LINFlexD_LINOCR_OC1_SHIFT                0u
#define LINFlexD_LINOCR_OC1_WIDTH                8u
#define LINFlexD_LINOCR_OC1(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINOCR_OC1_SHIFT))&LINFlexD_LINOCR_OC1_MASK)
#define LINFlexD_LINOCR_OC2_MASK                 0xFF00u
#define LINFlexD_LINOCR_OC2_SHIFT                8u
#define LINFlexD_LINOCR_OC2_WIDTH                8u
#define LINFlexD_LINOCR_OC2(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINOCR_OC2_SHIFT))&LINFlexD_LINOCR_OC2_MASK)
/* LINTOCR Bit Fields */
#define LINFlexD_LINTOCR_HTO_MASK                0x7Fu
#define LINFlexD_LINTOCR_HTO_SHIFT               0u
#define LINFlexD_LINTOCR_HTO_WIDTH               7u
#define LINFlexD_LINTOCR_HTO(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINTOCR_HTO_SHIFT))&LINFlexD_LINTOCR_HTO_MASK)
#define LINFlexD_LINTOCR_RTO_MASK                0xF00u
#define LINFlexD_LINTOCR_RTO_SHIFT               8u
#define LINFlexD_LINTOCR_RTO_WIDTH               4u
#define LINFlexD_LINTOCR_RTO(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINTOCR_RTO_SHIFT))&LINFlexD_LINTOCR_RTO_MASK)
/* LINFBRR Bit Fields */
#define LINFlexD_LINFBRR_FBR_MASK                0xFu
#define LINFlexD_LINFBRR_FBR_SHIFT               0u
#define LINFlexD_LINFBRR_FBR_WIDTH               4u
#define LINFlexD_LINFBRR_FBR(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINFBRR_FBR_SHIFT))&LINFlexD_LINFBRR_FBR_MASK)
/* LINIBRR Bit Fields */
#define LINFlexD_LINIBRR_IBR_MASK                0xFFFFFu
#define LINFlexD_LINIBRR_IBR_SHIFT               0u
#define LINFlexD_LINIBRR_IBR_WIDTH               20u
#define LINFlexD_LINIBRR_IBR(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIBRR_IBR_SHIFT))&LINFlexD_LINIBRR_IBR_MASK)
/* LINCFR Bit Fields */
#define LINFlexD_LINCFR_CF_MASK                  0xFFu
#define LINFlexD_LINCFR_CF_SHIFT                 0u
#define LINFlexD_LINCFR_CF_WIDTH                 8u
#define LINFlexD_LINCFR_CF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCFR_CF_SHIFT))&LINFlexD_LINCFR_CF_MASK)
/* LINCR2 Bit Fields */
#define LINFlexD_LINCR2_HTRQ_MASK                0x100u
#define LINFlexD_LINCR2_HTRQ_SHIFT               8u
#define LINFlexD_LINCR2_HTRQ_WIDTH               1u
#define LINFlexD_LINCR2_HTRQ(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_HTRQ_SHIFT))&LINFlexD_LINCR2_HTRQ_MASK)
#define LINFlexD_LINCR2_ABRQ_MASK                0x200u
#define LINFlexD_LINCR2_ABRQ_SHIFT               9u
#define LINFlexD_LINCR2_ABRQ_WIDTH               1u
#define LINFlexD_LINCR2_ABRQ(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_ABRQ_SHIFT))&LINFlexD_LINCR2_ABRQ_MASK)
#define LINFlexD_LINCR2_DTRQ_MASK                0x400u
#define LINFlexD_LINCR2_DTRQ_SHIFT               10u
#define LINFlexD_LINCR2_DTRQ_WIDTH               1u
#define LINFlexD_LINCR2_DTRQ(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_DTRQ_SHIFT))&LINFlexD_LINCR2_DTRQ_MASK)
#define LINFlexD_LINCR2_DDRQ_MASK                0x800u
#define LINFlexD_LINCR2_DDRQ_SHIFT               11u
#define LINFlexD_LINCR2_DDRQ_WIDTH               1u
#define LINFlexD_LINCR2_DDRQ(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_DDRQ_SHIFT))&LINFlexD_LINCR2_DDRQ_MASK)
#define LINFlexD_LINCR2_WURQ_MASK                0x1000u
#define LINFlexD_LINCR2_WURQ_SHIFT               12u
#define LINFlexD_LINCR2_WURQ_WIDTH               1u
#define LINFlexD_LINCR2_WURQ(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_WURQ_SHIFT))&LINFlexD_LINCR2_WURQ_MASK)
#define LINFlexD_LINCR2_IOPE_MASK                0x2000u
#define LINFlexD_LINCR2_IOPE_SHIFT               13u
#define LINFlexD_LINCR2_IOPE_WIDTH               1u
#define LINFlexD_LINCR2_IOPE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_IOPE_SHIFT))&LINFlexD_LINCR2_IOPE_MASK)
#define LINFlexD_LINCR2_IOBE_MASK                0x4000u
#define LINFlexD_LINCR2_IOBE_SHIFT               14u
#define LINFlexD_LINCR2_IOBE_WIDTH               1u
#define LINFlexD_LINCR2_IOBE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_IOBE_SHIFT))&LINFlexD_LINCR2_IOBE_MASK)
#define LINFlexD_LINCR2_TBDE_MASK                0x8000u
#define LINFlexD_LINCR2_TBDE_SHIFT               15u
#define LINFlexD_LINCR2_TBDE_WIDTH               1u
#define LINFlexD_LINCR2_TBDE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_TBDE_SHIFT))&LINFlexD_LINCR2_TBDE_MASK)
/* BIDR Bit Fields */
#define LINFlexD_BIDR_ID_MASK                    0x3Fu
#define LINFlexD_BIDR_ID_SHIFT                   0u
#define LINFlexD_BIDR_ID_WIDTH                   6u
#define LINFlexD_BIDR_ID(x)                      (((uint32_t)(((uint32_t)(x))<<LINFlexD_BIDR_ID_SHIFT))&LINFlexD_BIDR_ID_MASK)
#define LINFlexD_BIDR_CCS_MASK                   0x100u
#define LINFlexD_BIDR_CCS_SHIFT                  8u
#define LINFlexD_BIDR_CCS_WIDTH                  1u
#define LINFlexD_BIDR_CCS(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_BIDR_CCS_SHIFT))&LINFlexD_BIDR_CCS_MASK)
#define LINFlexD_BIDR_DIR_MASK                   0x200u
#define LINFlexD_BIDR_DIR_SHIFT                  9u
#define LINFlexD_BIDR_DIR_WIDTH                  1u
#define LINFlexD_BIDR_DIR(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_BIDR_DIR_SHIFT))&LINFlexD_BIDR_DIR_MASK)
#define LINFlexD_BIDR_DFL_MASK                   0xFC00u
#define LINFlexD_BIDR_DFL_SHIFT                  10u
#define LINFlexD_BIDR_DFL_WIDTH                  6u
#define LINFlexD_BIDR_DFL(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_BIDR_DFL_SHIFT))&LINFlexD_BIDR_DFL_MASK)
/* BDRL Bit Fields */
#define LINFlexD_BDRL_DATA0_MASK                 0xFFu
#define LINFlexD_BDRL_DATA0_SHIFT                0u
#define LINFlexD_BDRL_DATA0_WIDTH                8u
#define LINFlexD_BDRL_DATA0(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRL_DATA0_SHIFT))&LINFlexD_BDRL_DATA0_MASK)
#define LINFlexD_BDRL_DATA1_MASK                 0xFF00u
#define LINFlexD_BDRL_DATA1_SHIFT                8u
#define LINFlexD_BDRL_DATA1_WIDTH                8u
#define LINFlexD_BDRL_DATA1(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRL_DATA1_SHIFT))&LINFlexD_BDRL_DATA1_MASK)
#define LINFlexD_BDRL_DATA2_MASK                 0xFF0000u
#define LINFlexD_BDRL_DATA2_SHIFT                16u
#define LINFlexD_BDRL_DATA2_WIDTH                8u
#define LINFlexD_BDRL_DATA2(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRL_DATA2_SHIFT))&LINFlexD_BDRL_DATA2_MASK)
#define LINFlexD_BDRL_DATA3_MASK                 0xFF000000u
#define LINFlexD_BDRL_DATA3_SHIFT                24u
#define LINFlexD_BDRL_DATA3_WIDTH                8u
#define LINFlexD_BDRL_DATA3(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRL_DATA3_SHIFT))&LINFlexD_BDRL_DATA3_MASK)
/* BDRM Bit Fields */
#define LINFlexD_BDRM_DATA4_MASK                 0xFFu
#define LINFlexD_BDRM_DATA4_SHIFT                0u
#define LINFlexD_BDRM_DATA4_WIDTH                8u
#define LINFlexD_BDRM_DATA4(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRM_DATA4_SHIFT))&LINFlexD_BDRM_DATA4_MASK)
#define LINFlexD_BDRM_DATA5_MASK                 0xFF00u
#define LINFlexD_BDRM_DATA5_SHIFT                8u
#define LINFlexD_BDRM_DATA5_WIDTH                8u
#define LINFlexD_BDRM_DATA5(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRM_DATA5_SHIFT))&LINFlexD_BDRM_DATA5_MASK)
#define LINFlexD_BDRM_DATA6_MASK                 0xFF0000u
#define LINFlexD_BDRM_DATA6_SHIFT                16u
#define LINFlexD_BDRM_DATA6_WIDTH                8u
#define LINFlexD_BDRM_DATA6(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRM_DATA6_SHIFT))&LINFlexD_BDRM_DATA6_MASK)
#define LINFlexD_BDRM_DATA7_MASK                 0xFF000000u
#define LINFlexD_BDRM_DATA7_SHIFT                24u
#define LINFlexD_BDRM_DATA7_WIDTH                8u
#define LINFlexD_BDRM_DATA7(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRM_DATA7_SHIFT))&LINFlexD_BDRM_DATA7_MASK)
/* IFER Bit Fields */
#define LINFlexD_IFER_FACT_MASK                  0xFFFFu
#define LINFlexD_IFER_FACT_SHIFT                 0u
#define LINFlexD_IFER_FACT_WIDTH                 16u
#define LINFlexD_IFER_FACT(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_IFER_FACT_SHIFT))&LINFlexD_IFER_FACT_MASK)
/* IFMI Bit Fields */
#define LINFlexD_IFMI_IFMI_MASK                  0x1Fu
#define LINFlexD_IFMI_IFMI_SHIFT                 0u
#define LINFlexD_IFMI_IFMI_WIDTH                 5u
#define LINFlexD_IFMI_IFMI(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_IFMI_IFMI_SHIFT))&LINFlexD_IFMI_IFMI_MASK)
/* IFMR Bit Fields */
#define LINFlexD_IFMR_IFM_MASK                   0xFFu
#define LINFlexD_IFMR_IFM_SHIFT                  0u
#define LINFlexD_IFMR_IFM_WIDTH                  8u
#define LINFlexD_IFMR_IFM(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_IFMR_IFM_SHIFT))&LINFlexD_IFMR_IFM_MASK)
/* IFCR Bit Fields */
#define LINFlexD_IFCR_ID_MASK                    0x3Fu
#define LINFlexD_IFCR_ID_SHIFT                   0u
#define LINFlexD_IFCR_ID_WIDTH                   6u
#define LINFlexD_IFCR_ID(x)                      (((uint32_t)(((uint32_t)(x))<<LINFlexD_IFCR_ID_SHIFT))&LINFlexD_IFCR_ID_MASK)
#define LINFlexD_IFCR_CCS_MASK                   0x100u
#define LINFlexD_IFCR_CCS_SHIFT                  8u
#define LINFlexD_IFCR_CCS_WIDTH                  1u
#define LINFlexD_IFCR_CCS(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_IFCR_CCS_SHIFT))&LINFlexD_IFCR_CCS_MASK)
#define LINFlexD_IFCR_DIR_MASK                   0x200u
#define LINFlexD_IFCR_DIR_SHIFT                  9u
#define LINFlexD_IFCR_DIR_WIDTH                  1u
#define LINFlexD_IFCR_DIR(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_IFCR_DIR_SHIFT))&LINFlexD_IFCR_DIR_MASK)
#define LINFlexD_IFCR_DFL_MASK                   0xFC00u
#define LINFlexD_IFCR_DFL_SHIFT                  10u
#define LINFlexD_IFCR_DFL_WIDTH                  6u
#define LINFlexD_IFCR_DFL(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_IFCR_DFL_SHIFT))&LINFlexD_IFCR_DFL_MASK)
/* GCR Bit Fields */
#define LINFlexD_GCR_SR_MASK                     0x1u
#define LINFlexD_GCR_SR_SHIFT                    0u
#define LINFlexD_GCR_SR_WIDTH                    1u
#define LINFlexD_GCR_SR(x)                       (((uint32_t)(((uint32_t)(x))<<LINFlexD_GCR_SR_SHIFT))&LINFlexD_GCR_SR_MASK)
#define LINFlexD_GCR_STOP_MASK                   0x2u
#define LINFlexD_GCR_STOP_SHIFT                  1u
#define LINFlexD_GCR_STOP_WIDTH                  1u
#define LINFlexD_GCR_STOP(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_GCR_STOP_SHIFT))&LINFlexD_GCR_STOP_MASK)
#define LINFlexD_GCR_RDLIS_MASK                  0x4u
#define LINFlexD_GCR_RDLIS_SHIFT                 2u
#define LINFlexD_GCR_RDLIS_WIDTH                 1u
#define LINFlexD_GCR_RDLIS(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_GCR_RDLIS_SHIFT))&LINFlexD_GCR_RDLIS_MASK)
#define LINFlexD_GCR_TDLIS_MASK                  0x8u
#define LINFlexD_GCR_TDLIS_SHIFT                 3u
#define LINFlexD_GCR_TDLIS_WIDTH                 1u
#define LINFlexD_GCR_TDLIS(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_GCR_TDLIS_SHIFT))&LINFlexD_GCR_TDLIS_MASK)
#define LINFlexD_GCR_RDFBM_MASK                  0x10u
#define LINFlexD_GCR_RDFBM_SHIFT                 4u
#define LINFlexD_GCR_RDFBM_WIDTH                 1u
#define LINFlexD_GCR_RDFBM(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_GCR_RDFBM_SHIFT))&LINFlexD_GCR_RDFBM_MASK)
#define LINFlexD_GCR_TDFBM_MASK                  0x20u
#define LINFlexD_GCR_TDFBM_SHIFT                 5u
#define LINFlexD_GCR_TDFBM_WIDTH                 1u
#define LINFlexD_GCR_TDFBM(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_GCR_TDFBM_SHIFT))&LINFlexD_GCR_TDFBM_MASK)
/* UARTPTO Bit Fields */
#define LINFlexD_UARTPTO_PTO_MASK                0xFFFu
#define LINFlexD_UARTPTO_PTO_SHIFT               0u
#define LINFlexD_UARTPTO_PTO_WIDTH               12u
#define LINFlexD_UARTPTO_PTO(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTPTO_PTO_SHIFT))&LINFlexD_UARTPTO_PTO_MASK)
/* UARTCTO Bit Fields */
#define LINFlexD_UARTCTO_CTO_MASK                0xFFFu
#define LINFlexD_UARTCTO_CTO_SHIFT               0u
#define LINFlexD_UARTCTO_CTO_WIDTH               12u
#define LINFlexD_UARTCTO_CTO(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCTO_CTO_SHIFT))&LINFlexD_UARTCTO_CTO_MASK)
/* DMATXE Bit Fields */
#define LINFlexD_DMATXE_DTE_MASK                 0xFFFFu
#define LINFlexD_DMATXE_DTE_SHIFT                0u
#define LINFlexD_DMATXE_DTE_WIDTH                16u
#define LINFlexD_DMATXE_DTE(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_DMATXE_DTE_SHIFT))&LINFlexD_DMATXE_DTE_MASK)
/* DMARXE Bit Fields */
#define LINFlexD_DMARXE_DRE_MASK                 0xFFFFu
#define LINFlexD_DMARXE_DRE_SHIFT                0u
#define LINFlexD_DMARXE_DRE_WIDTH                16u
#define LINFlexD_DMARXE_DRE(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_DMARXE_DRE_SHIFT))&LINFlexD_DMARXE_DRE_MASK)

/*!
 * @}
 */ /* end of group LINFlexD_Register_Masks */


/*!
 * @}
 */ /* end of group LINFlexD_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MC_CGM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_CGM_Peripheral_Access_Layer MC_CGM Peripheral Access Layer
 * @{
 */


/** MC_CGM - Size of Registers Arrays */

/** MC_CGM - Register Layout Typedef */
typedef struct {
       uint8_t RESERVED_0[1792];
  __IO uint8_t PCS_SDUR;                           /**< PCS Switch Duration Register, offset: 0x700 */
       uint8_t RESERVED_1[3];
  __IO uint32_t PCS_DIVC1;                         /**< PCS Divider Change Register 1, offset: 0x704 */
  __IO uint32_t PCS_DIVE1;                         /**< PCS Divider End Register 1, offset: 0x708 */
  __IO uint32_t PCS_DIVS1;                         /**< PCS Divider Start Register 1, offset: 0x70C */
  __IO uint32_t PCS_DIVC2;                         /**< PCS Divider Change Register 2, offset: 0x710 */
  __IO uint32_t PCS_DIVE2;                         /**< PCS Divider End Register 2, offset: 0x714 */
  __IO uint32_t PCS_DIVS2;                         /**< PCS Divider Start Register 2, offset: 0x718 */
       uint8_t RESERVED_2[12];
  __IO uint32_t PCS_DIVC4;                         /**< PCS Divider Change Register 4, offset: 0x728 */
  __IO uint32_t PCS_DIVE4;                         /**< PCS Divider End Register 4, offset: 0x72C */
  __IO uint32_t PCS_DIVS4;                         /**< PCS Divider Start Register 4, offset: 0x730 */
       uint8_t RESERVED_3[176];
  __I  uint32_t SC_SS;                             /**< System Clock Select Status Register, offset: 0x7E4 */
  __IO uint32_t SC_DC0;                            /**< System Clock Divider 0 Configuration Register, offset: 0x7E8 */
       uint8_t RESERVED_4[20];
  __IO uint32_t AC0_SC;                            /**< Auxiliary Clock 0 Select Control Register, offset: 0x800 */
  __I  uint32_t AC0_SS;                            /**< Auxiliary Clock 0 Select Status Register, offset: 0x804 */
  __IO uint32_t AC0_DC0;                           /**< Auxiliary Clock 0 Divider 0 Configuration Register, offset: 0x808 */
  __IO uint32_t AC0_DC1;                           /**< Auxiliary Clock 0 Divider 1 Configuration Register, offset: 0x80C */
  __IO uint32_t AC0_DC2;                           /**< Auxiliary Clock 0 Divider 2 Configuration Register, offset: 0x810 */
       uint8_t RESERVED_5[20];
  __IO uint32_t AC1_DC0;                           /**< Auxiliary Clock 1 Divider 0 Configuration Register, offset: 0x828 */
  __IO uint32_t AC1_DC1;                           /**< Auxiliary Clock 1 Divider 1 Configuration Register, offset: 0x82C */
       uint8_t RESERVED_6[24];
  __IO uint32_t AC2_DC0;                           /**< Auxiliary Clock 2 Divider 0 Configuration Register, offset: 0x848 */
       uint8_t RESERVED_7[20];
  __IO uint32_t AC3_SC;                            /**< Auxiliary Clock 3 Select Control Register, offset: 0x860 */
  __I  uint32_t AC3_SS;                            /**< Auxiliary Clock 3 Select Status Register, offset: 0x864 */
       uint8_t RESERVED_8[24];
  __IO uint32_t AC4_SC;                            /**< Auxiliary Clock 4 Select Control Register, offset: 0x880 */
  __I  uint32_t AC4_SS;                            /**< Auxiliary Clock 4 Select Status Register, offset: 0x884 */
       uint8_t RESERVED_9[24];
  __IO uint32_t AC5_SC;                            /**< Auxiliary Clock 5 Select Control Register, offset: 0x8A0 */
  __I  uint32_t AC5_SS;                            /**< Auxiliary Clock 5 Select Status Register, offset: 0x8A4 */
  __IO uint32_t AC5_DC0;                           /**< Auxiliary Clock 5 Divider 0 Configuration Register, offset: 0x8A8 */
       uint8_t RESERVED_10[20];
  __IO uint32_t AC6_SC;                            /**< Auxiliary Clock 6 Select Control Register, offset: 0x8C0 */
  __I  uint32_t AC6_SS;                            /**< Auxiliary Clock 6 Select Status Register, offset: 0x8C4 */
  __IO uint32_t AC6_DC0;                           /**< Auxiliary Clock 6 Divider 0 Configuration Register, offset: 0x8C8 */
       uint8_t RESERVED_11[116];
  __IO uint32_t AC10_SC;                           /**< Auxiliary Clock 10 Select Control Register, offset: 0x940 */
  __I  uint32_t AC10_SS;                           /**< Auxiliary Clock 10 Select Status Register, offset: 0x944 */
  __IO uint32_t AC10_DC0;                          /**< Auxiliary Clock 10 Divider 0 Configuration Register, offset: 0x948 */
       uint8_t RESERVED_12[20];
  __IO uint32_t AC11_SC;                           /**< Auxiliary Clock 11 Select Control Register, offset: 0x960 */
  __I  uint32_t AC11_SS;                           /**< Auxiliary Clock 11 Select Status Register, offset: 0x964 */
  __IO uint32_t AC11_DC0;                          /**< Auxiliary Clock 11 Divider 0 Configuration Register, offset: 0x968 */
} MC_CGM_Type, *MC_CGM_MemMapPtr;

 /** Number of instances of the MC_CGM module. */
#define MC_CGM_INSTANCE_COUNT                    (1u)


/* MC_CGM - Peripheral instance base addresses */
/** Peripheral MC_CGM base address */
#define MC_CGM_BASE                              (0xFFFB0000u)
/** Peripheral MC_CGM base pointer */
#define MC_CGM                                   ((MC_CGM_Type *)MC_CGM_BASE)
/** Array initializer of MC_CGM peripheral base addresses */
#define MC_CGM_BASE_ADDRS                        { MC_CGM_BASE }
/** Array initializer of MC_CGM peripheral base pointers */
#define MC_CGM_BASE_PTRS                         { MC_CGM }

/* ----------------------------------------------------------------------------
   -- MC_CGM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_CGM_Register_Masks MC_CGM Register Masks
 * @{
 */

/* PCS_SDUR Bit Fields */
#define MC_CGM_PCS_SDUR_SDUR_MASK                0xFFu
#define MC_CGM_PCS_SDUR_SDUR_SHIFT               0u
#define MC_CGM_PCS_SDUR_SDUR_WIDTH               8u
#define MC_CGM_PCS_SDUR_SDUR(x)                  (((uint8_t)(((uint8_t)(x))<<MC_CGM_PCS_SDUR_SDUR_SHIFT))&MC_CGM_PCS_SDUR_SDUR_MASK)
/* PCS_DIVC1 Bit Fields */
#define MC_CGM_PCS_DIVC1_RATE_MASK               0xFFu
#define MC_CGM_PCS_DIVC1_RATE_SHIFT              0u
#define MC_CGM_PCS_DIVC1_RATE_WIDTH              8u
#define MC_CGM_PCS_DIVC1_RATE(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVC1_RATE_SHIFT))&MC_CGM_PCS_DIVC1_RATE_MASK)
#define MC_CGM_PCS_DIVC1_INIT_MASK               0xFFFF0000u
#define MC_CGM_PCS_DIVC1_INIT_SHIFT              16u
#define MC_CGM_PCS_DIVC1_INIT_WIDTH              16u
#define MC_CGM_PCS_DIVC1_INIT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVC1_INIT_SHIFT))&MC_CGM_PCS_DIVC1_INIT_MASK)
/* PCS_DIVE1 Bit Fields */
#define MC_CGM_PCS_DIVE1_DIVE_MASK               0xFFFFFu
#define MC_CGM_PCS_DIVE1_DIVE_SHIFT              0u
#define MC_CGM_PCS_DIVE1_DIVE_WIDTH              20u
#define MC_CGM_PCS_DIVE1_DIVE(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVE1_DIVE_SHIFT))&MC_CGM_PCS_DIVE1_DIVE_MASK)
/* PCS_DIVS1 Bit Fields */
#define MC_CGM_PCS_DIVS1_DIVS_MASK               0xFFFFFu
#define MC_CGM_PCS_DIVS1_DIVS_SHIFT              0u
#define MC_CGM_PCS_DIVS1_DIVS_WIDTH              20u
#define MC_CGM_PCS_DIVS1_DIVS(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVS1_DIVS_SHIFT))&MC_CGM_PCS_DIVS1_DIVS_MASK)
/* PCS_DIVC2 Bit Fields */
#define MC_CGM_PCS_DIVC2_RATE_MASK               0xFFu
#define MC_CGM_PCS_DIVC2_RATE_SHIFT              0u
#define MC_CGM_PCS_DIVC2_RATE_WIDTH              8u
#define MC_CGM_PCS_DIVC2_RATE(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVC2_RATE_SHIFT))&MC_CGM_PCS_DIVC2_RATE_MASK)
#define MC_CGM_PCS_DIVC2_INIT_MASK               0xFFFF0000u
#define MC_CGM_PCS_DIVC2_INIT_SHIFT              16u
#define MC_CGM_PCS_DIVC2_INIT_WIDTH              16u
#define MC_CGM_PCS_DIVC2_INIT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVC2_INIT_SHIFT))&MC_CGM_PCS_DIVC2_INIT_MASK)
/* PCS_DIVE2 Bit Fields */
#define MC_CGM_PCS_DIVE2_DIVE_MASK               0xFFFFFu
#define MC_CGM_PCS_DIVE2_DIVE_SHIFT              0u
#define MC_CGM_PCS_DIVE2_DIVE_WIDTH              20u
#define MC_CGM_PCS_DIVE2_DIVE(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVE2_DIVE_SHIFT))&MC_CGM_PCS_DIVE2_DIVE_MASK)
/* PCS_DIVS2 Bit Fields */
#define MC_CGM_PCS_DIVS2_DIVS_MASK               0xFFFFFu
#define MC_CGM_PCS_DIVS2_DIVS_SHIFT              0u
#define MC_CGM_PCS_DIVS2_DIVS_WIDTH              20u
#define MC_CGM_PCS_DIVS2_DIVS(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVS2_DIVS_SHIFT))&MC_CGM_PCS_DIVS2_DIVS_MASK)
/* PCS_DIVC4 Bit Fields */
#define MC_CGM_PCS_DIVC4_RATE_MASK               0xFFu
#define MC_CGM_PCS_DIVC4_RATE_SHIFT              0u
#define MC_CGM_PCS_DIVC4_RATE_WIDTH              8u
#define MC_CGM_PCS_DIVC4_RATE(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVC4_RATE_SHIFT))&MC_CGM_PCS_DIVC4_RATE_MASK)
#define MC_CGM_PCS_DIVC4_INIT_MASK               0xFFFF0000u
#define MC_CGM_PCS_DIVC4_INIT_SHIFT              16u
#define MC_CGM_PCS_DIVC4_INIT_WIDTH              16u
#define MC_CGM_PCS_DIVC4_INIT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVC4_INIT_SHIFT))&MC_CGM_PCS_DIVC4_INIT_MASK)
/* PCS_DIVE4 Bit Fields */
#define MC_CGM_PCS_DIVE4_DIVE_MASK               0xFFFFFu
#define MC_CGM_PCS_DIVE4_DIVE_SHIFT              0u
#define MC_CGM_PCS_DIVE4_DIVE_WIDTH              20u
#define MC_CGM_PCS_DIVE4_DIVE(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVE4_DIVE_SHIFT))&MC_CGM_PCS_DIVE4_DIVE_MASK)
/* PCS_DIVS4 Bit Fields */
#define MC_CGM_PCS_DIVS4_DIVS_MASK               0xFFFFFu
#define MC_CGM_PCS_DIVS4_DIVS_SHIFT              0u
#define MC_CGM_PCS_DIVS4_DIVS_WIDTH              20u
#define MC_CGM_PCS_DIVS4_DIVS(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVS4_DIVS_SHIFT))&MC_CGM_PCS_DIVS4_DIVS_MASK)
/* SC_SS Bit Fields */
#define MC_CGM_SC_SS_SWIP_MASK                   0x10000u
#define MC_CGM_SC_SS_SWIP_SHIFT                  16u
#define MC_CGM_SC_SS_SWIP_WIDTH                  1u
#define MC_CGM_SC_SS_SWIP(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_SS_SWIP_SHIFT))&MC_CGM_SC_SS_SWIP_MASK)
#define MC_CGM_SC_SS_SWTRG_MASK                  0xE0000u
#define MC_CGM_SC_SS_SWTRG_SHIFT                 17u
#define MC_CGM_SC_SS_SWTRG_WIDTH                 3u
#define MC_CGM_SC_SS_SWTRG(x)                    (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_SS_SWTRG_SHIFT))&MC_CGM_SC_SS_SWTRG_MASK)
#define MC_CGM_SC_SS_SELSTAT_MASK                0xF000000u
#define MC_CGM_SC_SS_SELSTAT_SHIFT               24u
#define MC_CGM_SC_SS_SELSTAT_WIDTH               4u
#define MC_CGM_SC_SS_SELSTAT(x)                  (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_SS_SELSTAT_SHIFT))&MC_CGM_SC_SS_SELSTAT_MASK)
/* SC_DC0 Bit Fields */
#define MC_CGM_SC_DC0_DIV_MASK                   0x3F0000u
#define MC_CGM_SC_DC0_DIV_SHIFT                  16u
#define MC_CGM_SC_DC0_DIV_WIDTH                  6u
#define MC_CGM_SC_DC0_DIV(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC0_DIV_SHIFT))&MC_CGM_SC_DC0_DIV_MASK)
#define MC_CGM_SC_DC0_DE_MASK                    0x80000000u
#define MC_CGM_SC_DC0_DE_SHIFT                   31u
#define MC_CGM_SC_DC0_DE_WIDTH                   1u
#define MC_CGM_SC_DC0_DE(x)                      (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC0_DE_SHIFT))&MC_CGM_SC_DC0_DE_MASK)
/* AC0_SC Bit Fields */
#define MC_CGM_AC0_SC_SELCTL_MASK                0x7000000u
#define MC_CGM_AC0_SC_SELCTL_SHIFT               24u
#define MC_CGM_AC0_SC_SELCTL_WIDTH               3u
#define MC_CGM_AC0_SC_SELCTL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC0_SC_SELCTL_SHIFT))&MC_CGM_AC0_SC_SELCTL_MASK)
/* AC0_SS Bit Fields */
#define MC_CGM_AC0_SS_SELSTAT_MASK               0x7000000u
#define MC_CGM_AC0_SS_SELSTAT_SHIFT              24u
#define MC_CGM_AC0_SS_SELSTAT_WIDTH              3u
#define MC_CGM_AC0_SS_SELSTAT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC0_SS_SELSTAT_SHIFT))&MC_CGM_AC0_SS_SELSTAT_MASK)
/* AC0_DC0 Bit Fields */
#define MC_CGM_AC0_DC0_DIV_MASK                  0xF0000u
#define MC_CGM_AC0_DC0_DIV_SHIFT                 16u
#define MC_CGM_AC0_DC0_DIV_WIDTH                 4u
#define MC_CGM_AC0_DC0_DIV(x)                    (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC0_DC0_DIV_SHIFT))&MC_CGM_AC0_DC0_DIV_MASK)
#define MC_CGM_AC0_DC0_DE_MASK                   0x80000000u
#define MC_CGM_AC0_DC0_DE_SHIFT                  31u
#define MC_CGM_AC0_DC0_DE_WIDTH                  1u
#define MC_CGM_AC0_DC0_DE(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC0_DC0_DE_SHIFT))&MC_CGM_AC0_DC0_DE_MASK)
/* AC0_DC1 Bit Fields */
#define MC_CGM_AC0_DC1_DIV_MASK                  0x1F0000u
#define MC_CGM_AC0_DC1_DIV_SHIFT                 16u
#define MC_CGM_AC0_DC1_DIV_WIDTH                 5u
#define MC_CGM_AC0_DC1_DIV(x)                    (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC0_DC1_DIV_SHIFT))&MC_CGM_AC0_DC1_DIV_MASK)
#define MC_CGM_AC0_DC1_DE_MASK                   0x80000000u
#define MC_CGM_AC0_DC1_DE_SHIFT                  31u
#define MC_CGM_AC0_DC1_DE_WIDTH                  1u
#define MC_CGM_AC0_DC1_DE(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC0_DC1_DE_SHIFT))&MC_CGM_AC0_DC1_DE_MASK)
/* AC0_DC2 Bit Fields */
#define MC_CGM_AC0_DC2_DIV_MASK                  0x1F0000u
#define MC_CGM_AC0_DC2_DIV_SHIFT                 16u
#define MC_CGM_AC0_DC2_DIV_WIDTH                 5u
#define MC_CGM_AC0_DC2_DIV(x)                    (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC0_DC2_DIV_SHIFT))&MC_CGM_AC0_DC2_DIV_MASK)
#define MC_CGM_AC0_DC2_DE_MASK                   0x80000000u
#define MC_CGM_AC0_DC2_DE_SHIFT                  31u
#define MC_CGM_AC0_DC2_DE_WIDTH                  1u
#define MC_CGM_AC0_DC2_DE(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC0_DC2_DE_SHIFT))&MC_CGM_AC0_DC2_DE_MASK)
/* AC1_DC0 Bit Fields */
#define MC_CGM_AC1_DC0_DIV_MASK                  0x1F0000u
#define MC_CGM_AC1_DC0_DIV_SHIFT                 16u
#define MC_CGM_AC1_DC0_DIV_WIDTH                 5u
#define MC_CGM_AC1_DC0_DIV(x)                    (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC1_DC0_DIV_SHIFT))&MC_CGM_AC1_DC0_DIV_MASK)
#define MC_CGM_AC1_DC0_DE_MASK                   0x80000000u
#define MC_CGM_AC1_DC0_DE_SHIFT                  31u
#define MC_CGM_AC1_DC0_DE_WIDTH                  1u
#define MC_CGM_AC1_DC0_DE(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC1_DC0_DE_SHIFT))&MC_CGM_AC1_DC0_DE_MASK)
/* AC1_DC1 Bit Fields */
#define MC_CGM_AC1_DC1_DIV_MASK                  0x3F0000u
#define MC_CGM_AC1_DC1_DIV_SHIFT                 16u
#define MC_CGM_AC1_DC1_DIV_WIDTH                 6u
#define MC_CGM_AC1_DC1_DIV(x)                    (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC1_DC1_DIV_SHIFT))&MC_CGM_AC1_DC1_DIV_MASK)
#define MC_CGM_AC1_DC1_DE_MASK                   0x80000000u
#define MC_CGM_AC1_DC1_DE_SHIFT                  31u
#define MC_CGM_AC1_DC1_DE_WIDTH                  1u
#define MC_CGM_AC1_DC1_DE(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC1_DC1_DE_SHIFT))&MC_CGM_AC1_DC1_DE_MASK)
/* AC2_DC0 Bit Fields */
#define MC_CGM_AC2_DC0_DIV_MASK                  0xF0000u
#define MC_CGM_AC2_DC0_DIV_SHIFT                 16u
#define MC_CGM_AC2_DC0_DIV_WIDTH                 4u
#define MC_CGM_AC2_DC0_DIV(x)                    (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC2_DC0_DIV_SHIFT))&MC_CGM_AC2_DC0_DIV_MASK)
#define MC_CGM_AC2_DC0_DE_MASK                   0x80000000u
#define MC_CGM_AC2_DC0_DE_SHIFT                  31u
#define MC_CGM_AC2_DC0_DE_WIDTH                  1u
#define MC_CGM_AC2_DC0_DE(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC2_DC0_DE_SHIFT))&MC_CGM_AC2_DC0_DE_MASK)
/* AC3_SC Bit Fields */
#define MC_CGM_AC3_SC_SELCTL_MASK                0x1000000u
#define MC_CGM_AC3_SC_SELCTL_SHIFT               24u
#define MC_CGM_AC3_SC_SELCTL_WIDTH               1u
#define MC_CGM_AC3_SC_SELCTL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC3_SC_SELCTL_SHIFT))&MC_CGM_AC3_SC_SELCTL_MASK)
/* AC3_SS Bit Fields */
#define MC_CGM_AC3_SS_SELSTAT_MASK               0x1000000u
#define MC_CGM_AC3_SS_SELSTAT_SHIFT              24u
#define MC_CGM_AC3_SS_SELSTAT_WIDTH              1u
#define MC_CGM_AC3_SS_SELSTAT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC3_SS_SELSTAT_SHIFT))&MC_CGM_AC3_SS_SELSTAT_MASK)
/* AC4_SC Bit Fields */
#define MC_CGM_AC4_SC_SELCTL_MASK                0x3000000u
#define MC_CGM_AC4_SC_SELCTL_SHIFT               24u
#define MC_CGM_AC4_SC_SELCTL_WIDTH               2u
#define MC_CGM_AC4_SC_SELCTL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC4_SC_SELCTL_SHIFT))&MC_CGM_AC4_SC_SELCTL_MASK)
/* AC4_SS Bit Fields */
#define MC_CGM_AC4_SS_SELSTAT_MASK               0x3000000u
#define MC_CGM_AC4_SS_SELSTAT_SHIFT              24u
#define MC_CGM_AC4_SS_SELSTAT_WIDTH              2u
#define MC_CGM_AC4_SS_SELSTAT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC4_SS_SELSTAT_SHIFT))&MC_CGM_AC4_SS_SELSTAT_MASK)
/* AC5_SC Bit Fields */
#define MC_CGM_AC5_SC_SELCTL_MASK                0x7000000u
#define MC_CGM_AC5_SC_SELCTL_SHIFT               24u
#define MC_CGM_AC5_SC_SELCTL_WIDTH               3u
#define MC_CGM_AC5_SC_SELCTL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC5_SC_SELCTL_SHIFT))&MC_CGM_AC5_SC_SELCTL_MASK)
/* AC5_SS Bit Fields */
#define MC_CGM_AC5_SS_SELSTAT_MASK               0x7000000u
#define MC_CGM_AC5_SS_SELSTAT_SHIFT              24u
#define MC_CGM_AC5_SS_SELSTAT_WIDTH              3u
#define MC_CGM_AC5_SS_SELSTAT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC5_SS_SELSTAT_SHIFT))&MC_CGM_AC5_SS_SELSTAT_MASK)
/* AC5_DC0 Bit Fields */
#define MC_CGM_AC5_DC0_DIV_MASK                  0x1F0000u
#define MC_CGM_AC5_DC0_DIV_SHIFT                 16u
#define MC_CGM_AC5_DC0_DIV_WIDTH                 5u
#define MC_CGM_AC5_DC0_DIV(x)                    (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC5_DC0_DIV_SHIFT))&MC_CGM_AC5_DC0_DIV_MASK)
#define MC_CGM_AC5_DC0_DE_MASK                   0x80000000u
#define MC_CGM_AC5_DC0_DE_SHIFT                  31u
#define MC_CGM_AC5_DC0_DE_WIDTH                  1u
#define MC_CGM_AC5_DC0_DE(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC5_DC0_DE_SHIFT))&MC_CGM_AC5_DC0_DE_MASK)
/* AC6_SC Bit Fields */
#define MC_CGM_AC6_SC_SELCTL_MASK                0x7000000u
#define MC_CGM_AC6_SC_SELCTL_SHIFT               24u
#define MC_CGM_AC6_SC_SELCTL_WIDTH               3u
#define MC_CGM_AC6_SC_SELCTL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC6_SC_SELCTL_SHIFT))&MC_CGM_AC6_SC_SELCTL_MASK)
/* AC6_SS Bit Fields */
#define MC_CGM_AC6_SS_SELSTAT_MASK               0x7000000u
#define MC_CGM_AC6_SS_SELSTAT_SHIFT              24u
#define MC_CGM_AC6_SS_SELSTAT_WIDTH              3u
#define MC_CGM_AC6_SS_SELSTAT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC6_SS_SELSTAT_SHIFT))&MC_CGM_AC6_SS_SELSTAT_MASK)
/* AC6_DC0 Bit Fields */
#define MC_CGM_AC6_DC0_DIV_MASK                  0x7F0000u
#define MC_CGM_AC6_DC0_DIV_SHIFT                 16u
#define MC_CGM_AC6_DC0_DIV_WIDTH                 7u
#define MC_CGM_AC6_DC0_DIV(x)                    (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC6_DC0_DIV_SHIFT))&MC_CGM_AC6_DC0_DIV_MASK)
#define MC_CGM_AC6_DC0_DE_MASK                   0x80000000u
#define MC_CGM_AC6_DC0_DE_SHIFT                  31u
#define MC_CGM_AC6_DC0_DE_WIDTH                  1u
#define MC_CGM_AC6_DC0_DE(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC6_DC0_DE_SHIFT))&MC_CGM_AC6_DC0_DE_MASK)
/* AC10_SC Bit Fields */
#define MC_CGM_AC10_SC_SELCTL_MASK               0x7000000u
#define MC_CGM_AC10_SC_SELCTL_SHIFT              24u
#define MC_CGM_AC10_SC_SELCTL_WIDTH              3u
#define MC_CGM_AC10_SC_SELCTL(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC10_SC_SELCTL_SHIFT))&MC_CGM_AC10_SC_SELCTL_MASK)
/* AC10_SS Bit Fields */
#define MC_CGM_AC10_SS_SELSTAT_MASK              0x7000000u
#define MC_CGM_AC10_SS_SELSTAT_SHIFT             24u
#define MC_CGM_AC10_SS_SELSTAT_WIDTH             3u
#define MC_CGM_AC10_SS_SELSTAT(x)                (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC10_SS_SELSTAT_SHIFT))&MC_CGM_AC10_SS_SELSTAT_MASK)
/* AC10_DC0 Bit Fields */
#define MC_CGM_AC10_DC0_DIV_MASK                 0xF0000u
#define MC_CGM_AC10_DC0_DIV_SHIFT                16u
#define MC_CGM_AC10_DC0_DIV_WIDTH                4u
#define MC_CGM_AC10_DC0_DIV(x)                   (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC10_DC0_DIV_SHIFT))&MC_CGM_AC10_DC0_DIV_MASK)
#define MC_CGM_AC10_DC0_DE_MASK                  0x80000000u
#define MC_CGM_AC10_DC0_DE_SHIFT                 31u
#define MC_CGM_AC10_DC0_DE_WIDTH                 1u
#define MC_CGM_AC10_DC0_DE(x)                    (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC10_DC0_DE_SHIFT))&MC_CGM_AC10_DC0_DE_MASK)
/* AC11_SC Bit Fields */
#define MC_CGM_AC11_SC_SELCTL_MASK               0x7000000u
#define MC_CGM_AC11_SC_SELCTL_SHIFT              24u
#define MC_CGM_AC11_SC_SELCTL_WIDTH              3u
#define MC_CGM_AC11_SC_SELCTL(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC11_SC_SELCTL_SHIFT))&MC_CGM_AC11_SC_SELCTL_MASK)
/* AC11_SS Bit Fields */
#define MC_CGM_AC11_SS_SELSTAT_MASK              0x7000000u
#define MC_CGM_AC11_SS_SELSTAT_SHIFT             24u
#define MC_CGM_AC11_SS_SELSTAT_WIDTH             3u
#define MC_CGM_AC11_SS_SELSTAT(x)                (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC11_SS_SELSTAT_SHIFT))&MC_CGM_AC11_SS_SELSTAT_MASK)
/* AC11_DC0 Bit Fields */
#define MC_CGM_AC11_DC0_DIV_MASK                 0xF0000u
#define MC_CGM_AC11_DC0_DIV_SHIFT                16u
#define MC_CGM_AC11_DC0_DIV_WIDTH                4u
#define MC_CGM_AC11_DC0_DIV(x)                   (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC11_DC0_DIV_SHIFT))&MC_CGM_AC11_DC0_DIV_MASK)
#define MC_CGM_AC11_DC0_DE_MASK                  0x80000000u
#define MC_CGM_AC11_DC0_DE_SHIFT                 31u
#define MC_CGM_AC11_DC0_DE_WIDTH                 1u
#define MC_CGM_AC11_DC0_DE(x)                    (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC11_DC0_DE_SHIFT))&MC_CGM_AC11_DC0_DE_MASK)

/*!
 * @}
 */ /* end of group MC_CGM_Register_Masks */


/*!
 * @}
 */ /* end of group MC_CGM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MC_ME Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_ME_Peripheral_Access_Layer MC_ME Peripheral Access Layer
 * @{
 */


/** MC_ME - Size of Registers Arrays */
#define MC_ME_RUN_PC_COUNT                       8u
#define MC_ME_LP_PC_COUNT                        8u
#define MC_ME_PCTLn_COUNT                        256u

/** MC_ME - Register Layout Typedef */
typedef struct {
  __IO uint32_t GS;                                /**< Global Status Register, offset: 0x0 */
  __IO uint32_t MCTL;                              /**< Mode Control Register, offset: 0x4 */
  __IO uint32_t ME;                                /**< Mode Enable Register, offset: 0x8 */
  __IO uint32_t IS;                                /**< Interrupt Status Register, offset: 0xC */
  __IO uint32_t IM;                                /**< Interrupt Mask Register, offset: 0x10 */
  __IO uint32_t IMTS;                              /**< Invalid Mode Transition Status Register, offset: 0x14 */
  __I  uint32_t DMTS;                              /**< Debug Mode Transition Status Register, offset: 0x18 */
       uint8_t RESERVED_0[4];
  __I  uint32_t RESET_MC;                          /**< RESET Mode Configuration Register, offset: 0x20 */
  __IO uint32_t TEST_MC;                           /**< TEST Mode Configuration Register, offset: 0x24 */
  __IO uint32_t SAFE_MC;                           /**< SAFE Mode Configuration Register, offset: 0x28 */
  __IO uint32_t DRUN_MC;                           /**< DRUN Mode Configuration Register, offset: 0x2C */
  __IO uint32_t RUN0_MC;                           /**< RUN0 Mode Configuration Register, offset: 0x30 */
  __IO uint32_t RUN1_MC;                           /**< RUN1 Mode Configuration Register, offset: 0x34 */
  __IO uint32_t RUN2_MC;                           /**< RUN2 Mode Configuration Register, offset: 0x38 */
  __IO uint32_t RUN3_MC;                           /**< RUN3 Mode Configuration Register, offset: 0x3C */
  __IO uint32_t HALT0_MC;                          /**< HALT0 Mode Configuration Register, offset: 0x40 */
       uint8_t RESERVED_1[4];
  __IO uint32_t STOP0_MC;                          /**< STOP0 Mode Configuration Register, offset: 0x48 */
       uint8_t RESERVED_2[20];
  __I  uint32_t PS0;                               /**< Peripheral Status Register 0, offset: 0x60 */
  __I  uint32_t PS1;                               /**< Peripheral Status Register 1, offset: 0x64 */
  __I  uint32_t PS2;                               /**< Peripheral Status Register 2, offset: 0x68 */
  __I  uint32_t PS3;                               /**< Peripheral Status Register 3, offset: 0x6C */
  __I  uint32_t PS4;                               /**< Peripheral Status Register 4, offset: 0x70 */
       uint8_t RESERVED_3[4];
  __I  uint32_t PS6;                               /**< Peripheral Status Register 6, offset: 0x78 */
  __I  uint32_t PS7;                               /**< Peripheral Status Register 7, offset: 0x7C */
  __IO uint32_t RUN_PC[MC_ME_RUN_PC_COUNT];        /**< Run Peripheral Configuration Register, array offset: 0x80, array step: 0x4 */
  __IO uint32_t LP_PC[MC_ME_LP_PC_COUNT];          /**< Low-Power Peripheral Configuration Register, array offset: 0xA0, array step: 0x4 */
  __IO uint8_t PCTLn[MC_ME_PCTLn_COUNT];           /**< PCTL Dummy Register..PCTL Register, array offset: 0xC0, array step: 0x1 */
  __I  uint32_t CS;                                /**< Core Status Register, offset: 0x1C0 */
  __I  uint16_t CCTL0;                             /**< Core Control Register, offset: 0x1C4 */
       uint8_t RESERVED_4[26];
  __IO uint32_t CADDR0;                            /**< CORE0 Address Register, offset: 0x1E0 */
} MC_ME_Type, *MC_ME_MemMapPtr;

 /** Number of instances of the MC_ME module. */
#define MC_ME_INSTANCE_COUNT                     (1u)


/* MC_ME - Peripheral instance base addresses */
/** Peripheral MC_ME base address */
#define MC_ME_BASE                               (0xFFFB8000u)
/** Peripheral MC_ME base pointer */
#define MC_ME                                    ((MC_ME_Type *)MC_ME_BASE)
/** Array initializer of MC_ME peripheral base addresses */
#define MC_ME_BASE_ADDRS                         { MC_ME_BASE }
/** Array initializer of MC_ME peripheral base pointers */
#define MC_ME_BASE_PTRS                          { MC_ME }

/* MC_ME index offsets */
#define MC_ME_RUN_PC0_INDEX                      0
#define MC_ME_RUN_PC1_INDEX                      1
#define MC_ME_RUN_PC2_INDEX                      2
#define MC_ME_RUN_PC3_INDEX                      3
#define MC_ME_RUN_PC4_INDEX                      4
#define MC_ME_RUN_PC5_INDEX                      5
#define MC_ME_RUN_PC6_INDEX                      6
#define MC_ME_RUN_PC7_INDEX                      7
#define MC_ME_LP_PC0_INDEX                       0
#define MC_ME_LP_PC1_INDEX                       1
#define MC_ME_LP_PC2_INDEX                       2
#define MC_ME_LP_PC3_INDEX                       3
#define MC_ME_LP_PC4_INDEX                       4
#define MC_ME_LP_PC5_INDEX                       5
#define MC_ME_LP_PC6_INDEX                       6
#define MC_ME_LP_PC7_INDEX                       7
#define MC_ME_PCTL_LFAST_0_INDEX                 9
#define MC_ME_PCTL_SIPI_0_INDEX                  11
#define MC_ME_PCTL_ENET_0_INDEX                  12
#define MC_ME_PCTL_PIT_0_INDEX                   30
#define MC_ME_PCTL_DMAMUX_0_INDEX                36
#define MC_ME_PCTL_CRC_0_INDEX                   38
#define MC_ME_PCTL_CAN_2_INDEX                   77
#define MC_ME_PCTL_CAN_1_INDEX                   78
#define MC_ME_PCTL_CAN_0_INDEX                   79
#define MC_ME_PCTL_LINFlex_1_INDEX               91
#define MC_ME_PCTL_DSPI_1_INDEX                  98
#define MC_ME_PCTL_DSPI_0_INDEX                  99
#define MC_ME_PCTL_SENT_0_INDEX                  104
#define MC_ME_PCTL_FLEXRAY_INDEX                 107
#define MC_ME_PCTL_ADC_3_INDEX                   124
#define MC_ME_PCTL_ADC_1_INDEX                   126
#define MC_ME_PCTL_ETIMER_1_INDEX                137
#define MC_ME_PCTL_CTU_1_INDEX                   141
#define MC_ME_PCTL_PWM_1_INDEX                   144
#define MC_ME_PCTL_DMAMUX_1_INDEX                146
#define MC_ME_PCTL_LINFlex_0_INDEX               204
#define MC_ME_PCTL_DSPI_3_INDEX                  208
#define MC_ME_PCTL_DSPI_2_INDEX                  209
#define MC_ME_PCTL_SENT_1_INDEX                  214
#define MC_ME_PCTL_ADC_2_INDEX                   235
#define MC_ME_PCTL_ADC_0_INDEX                   237
#define MC_ME_PCTL_SGEN_0_INDEX                  239
#define MC_ME_PCTL_ETIMER_2_INDEX                245
#define MC_ME_PCTL_ETIMER_0_INDEX                247
#define MC_ME_PCTL_CTU_0_INDEX                   251
#define MC_ME_PCTL_PWM_0_INDEX                   255

/* ----------------------------------------------------------------------------
   -- MC_ME Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_ME_Register_Masks MC_ME Register Masks
 * @{
 */

/* GS Bit Fields */
#define MC_ME_GS_S_SYSCLK_MASK                   0xFu
#define MC_ME_GS_S_SYSCLK_SHIFT                  0u
#define MC_ME_GS_S_SYSCLK_WIDTH                  4u
#define MC_ME_GS_S_SYSCLK(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_SYSCLK_SHIFT))&MC_ME_GS_S_SYSCLK_MASK)
#define MC_ME_GS_S_IRC_MASK                      0x10u
#define MC_ME_GS_S_IRC_SHIFT                     4u
#define MC_ME_GS_S_IRC_WIDTH                     1u
#define MC_ME_GS_S_IRC(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_IRC_SHIFT))&MC_ME_GS_S_IRC_MASK)
#define MC_ME_GS_S_XOSC_MASK                     0x20u
#define MC_ME_GS_S_XOSC_SHIFT                    5u
#define MC_ME_GS_S_XOSC_WIDTH                    1u
#define MC_ME_GS_S_XOSC(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_XOSC_SHIFT))&MC_ME_GS_S_XOSC_MASK)
#define MC_ME_GS_S_PLL0_MASK                     0x40u
#define MC_ME_GS_S_PLL0_SHIFT                    6u
#define MC_ME_GS_S_PLL0_WIDTH                    1u
#define MC_ME_GS_S_PLL0(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_PLL0_SHIFT))&MC_ME_GS_S_PLL0_MASK)
#define MC_ME_GS_S_PLL1_MASK                     0x80u
#define MC_ME_GS_S_PLL1_SHIFT                    7u
#define MC_ME_GS_S_PLL1_WIDTH                    1u
#define MC_ME_GS_S_PLL1(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_PLL1_SHIFT))&MC_ME_GS_S_PLL1_MASK)
#define MC_ME_GS_S_FLA_MASK                      0x30000u
#define MC_ME_GS_S_FLA_SHIFT                     16u
#define MC_ME_GS_S_FLA_WIDTH                     2u
#define MC_ME_GS_S_FLA(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_FLA_SHIFT))&MC_ME_GS_S_FLA_MASK)
#define MC_ME_GS_S_MVR_MASK                      0x100000u
#define MC_ME_GS_S_MVR_SHIFT                     20u
#define MC_ME_GS_S_MVR_WIDTH                     1u
#define MC_ME_GS_S_MVR(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_MVR_SHIFT))&MC_ME_GS_S_MVR_MASK)
#define MC_ME_GS_S_PDO_MASK                      0x800000u
#define MC_ME_GS_S_PDO_SHIFT                     23u
#define MC_ME_GS_S_PDO_WIDTH                     1u
#define MC_ME_GS_S_PDO(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_PDO_SHIFT))&MC_ME_GS_S_PDO_MASK)
#define MC_ME_GS_S_MTRANS_MASK                   0x8000000u
#define MC_ME_GS_S_MTRANS_SHIFT                  27u
#define MC_ME_GS_S_MTRANS_WIDTH                  1u
#define MC_ME_GS_S_MTRANS(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_MTRANS_SHIFT))&MC_ME_GS_S_MTRANS_MASK)
#define MC_ME_GS_S_CURRENT_MODE_MASK             0xF0000000u
#define MC_ME_GS_S_CURRENT_MODE_SHIFT            28u
#define MC_ME_GS_S_CURRENT_MODE_WIDTH            4u
#define MC_ME_GS_S_CURRENT_MODE(x)               (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_CURRENT_MODE_SHIFT))&MC_ME_GS_S_CURRENT_MODE_MASK)
/* MCTL Bit Fields */
#define MC_ME_MCTL_KEY_MASK                      0xFFFFu
#define MC_ME_MCTL_KEY_SHIFT                     0u
#define MC_ME_MCTL_KEY_WIDTH                     16u
#define MC_ME_MCTL_KEY(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_MCTL_KEY_SHIFT))&MC_ME_MCTL_KEY_MASK)
#define MC_ME_MCTL_TARGET_MODE_MASK              0xF0000000u
#define MC_ME_MCTL_TARGET_MODE_SHIFT             28u
#define MC_ME_MCTL_TARGET_MODE_WIDTH             4u
#define MC_ME_MCTL_TARGET_MODE(x)                (((uint32_t)(((uint32_t)(x))<<MC_ME_MCTL_TARGET_MODE_SHIFT))&MC_ME_MCTL_TARGET_MODE_MASK)
/* ME Bit Fields */
#define MC_ME_ME_RESET_FUNC_MASK                 0x1u
#define MC_ME_ME_RESET_FUNC_SHIFT                0u
#define MC_ME_ME_RESET_FUNC_WIDTH                1u
#define MC_ME_ME_RESET_FUNC(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_RESET_FUNC_SHIFT))&MC_ME_ME_RESET_FUNC_MASK)
#define MC_ME_ME_TEST_MASK                       0x2u
#define MC_ME_ME_TEST_SHIFT                      1u
#define MC_ME_ME_TEST_WIDTH                      1u
#define MC_ME_ME_TEST(x)                         (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_TEST_SHIFT))&MC_ME_ME_TEST_MASK)
#define MC_ME_ME_SAFE_MASK                       0x4u
#define MC_ME_ME_SAFE_SHIFT                      2u
#define MC_ME_ME_SAFE_WIDTH                      1u
#define MC_ME_ME_SAFE(x)                         (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_SAFE_SHIFT))&MC_ME_ME_SAFE_MASK)
#define MC_ME_ME_DRUN_MASK                       0x8u
#define MC_ME_ME_DRUN_SHIFT                      3u
#define MC_ME_ME_DRUN_WIDTH                      1u
#define MC_ME_ME_DRUN(x)                         (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_DRUN_SHIFT))&MC_ME_ME_DRUN_MASK)
#define MC_ME_ME_RUN0_MASK                       0x10u
#define MC_ME_ME_RUN0_SHIFT                      4u
#define MC_ME_ME_RUN0_WIDTH                      1u
#define MC_ME_ME_RUN0(x)                         (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_RUN0_SHIFT))&MC_ME_ME_RUN0_MASK)
#define MC_ME_ME_RUN1_MASK                       0x20u
#define MC_ME_ME_RUN1_SHIFT                      5u
#define MC_ME_ME_RUN1_WIDTH                      1u
#define MC_ME_ME_RUN1(x)                         (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_RUN1_SHIFT))&MC_ME_ME_RUN1_MASK)
#define MC_ME_ME_RUN2_MASK                       0x40u
#define MC_ME_ME_RUN2_SHIFT                      6u
#define MC_ME_ME_RUN2_WIDTH                      1u
#define MC_ME_ME_RUN2(x)                         (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_RUN2_SHIFT))&MC_ME_ME_RUN2_MASK)
#define MC_ME_ME_RUN3_MASK                       0x80u
#define MC_ME_ME_RUN3_SHIFT                      7u
#define MC_ME_ME_RUN3_WIDTH                      1u
#define MC_ME_ME_RUN3(x)                         (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_RUN3_SHIFT))&MC_ME_ME_RUN3_MASK)
#define MC_ME_ME_HALT0_MASK                      0x100u
#define MC_ME_ME_HALT0_SHIFT                     8u
#define MC_ME_ME_HALT0_WIDTH                     1u
#define MC_ME_ME_HALT0(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_HALT0_SHIFT))&MC_ME_ME_HALT0_MASK)
#define MC_ME_ME_STOP0_MASK                      0x400u
#define MC_ME_ME_STOP0_SHIFT                     10u
#define MC_ME_ME_STOP0_WIDTH                     1u
#define MC_ME_ME_STOP0(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_STOP0_SHIFT))&MC_ME_ME_STOP0_MASK)
#define MC_ME_ME_RESET_DEST_MASK                 0x8000u
#define MC_ME_ME_RESET_DEST_SHIFT                15u
#define MC_ME_ME_RESET_DEST_WIDTH                1u
#define MC_ME_ME_RESET_DEST(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_RESET_DEST_SHIFT))&MC_ME_ME_RESET_DEST_MASK)
/* IS Bit Fields */
#define MC_ME_IS_I_MTC_MASK                      0x1u
#define MC_ME_IS_I_MTC_SHIFT                     0u
#define MC_ME_IS_I_MTC_WIDTH                     1u
#define MC_ME_IS_I_MTC(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_IS_I_MTC_SHIFT))&MC_ME_IS_I_MTC_MASK)
#define MC_ME_IS_I_SAFE_MASK                     0x2u
#define MC_ME_IS_I_SAFE_SHIFT                    1u
#define MC_ME_IS_I_SAFE_WIDTH                    1u
#define MC_ME_IS_I_SAFE(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_IS_I_SAFE_SHIFT))&MC_ME_IS_I_SAFE_MASK)
#define MC_ME_IS_I_IMODE_MASK                    0x4u
#define MC_ME_IS_I_IMODE_SHIFT                   2u
#define MC_ME_IS_I_IMODE_WIDTH                   1u
#define MC_ME_IS_I_IMODE(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IS_I_IMODE_SHIFT))&MC_ME_IS_I_IMODE_MASK)
#define MC_ME_IS_I_ICONF_MASK                    0x8u
#define MC_ME_IS_I_ICONF_SHIFT                   3u
#define MC_ME_IS_I_ICONF_WIDTH                   1u
#define MC_ME_IS_I_ICONF(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IS_I_ICONF_SHIFT))&MC_ME_IS_I_ICONF_MASK)
#define MC_ME_IS_I_ICONF_CU_MASK                 0x10u
#define MC_ME_IS_I_ICONF_CU_SHIFT                4u
#define MC_ME_IS_I_ICONF_CU_WIDTH                1u
#define MC_ME_IS_I_ICONF_CU(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_IS_I_ICONF_CU_SHIFT))&MC_ME_IS_I_ICONF_CU_MASK)
#define MC_ME_IS_I_ICONF_CC_MASK                 0x20u
#define MC_ME_IS_I_ICONF_CC_SHIFT                5u
#define MC_ME_IS_I_ICONF_CC_WIDTH                1u
#define MC_ME_IS_I_ICONF_CC(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_IS_I_ICONF_CC_SHIFT))&MC_ME_IS_I_ICONF_CC_MASK)
/* IM Bit Fields */
#define MC_ME_IM_M_MTC_MASK                      0x1u
#define MC_ME_IM_M_MTC_SHIFT                     0u
#define MC_ME_IM_M_MTC_WIDTH                     1u
#define MC_ME_IM_M_MTC(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_IM_M_MTC_SHIFT))&MC_ME_IM_M_MTC_MASK)
#define MC_ME_IM_M_SAFE_MASK                     0x2u
#define MC_ME_IM_M_SAFE_SHIFT                    1u
#define MC_ME_IM_M_SAFE_WIDTH                    1u
#define MC_ME_IM_M_SAFE(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_IM_M_SAFE_SHIFT))&MC_ME_IM_M_SAFE_MASK)
#define MC_ME_IM_M_IMODE_MASK                    0x4u
#define MC_ME_IM_M_IMODE_SHIFT                   2u
#define MC_ME_IM_M_IMODE_WIDTH                   1u
#define MC_ME_IM_M_IMODE(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IM_M_IMODE_SHIFT))&MC_ME_IM_M_IMODE_MASK)
#define MC_ME_IM_M_ICONF_MASK                    0x8u
#define MC_ME_IM_M_ICONF_SHIFT                   3u
#define MC_ME_IM_M_ICONF_WIDTH                   1u
#define MC_ME_IM_M_ICONF(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IM_M_ICONF_SHIFT))&MC_ME_IM_M_ICONF_MASK)
#define MC_ME_IM_M_ICONF_CU_MASK                 0x10u
#define MC_ME_IM_M_ICONF_CU_SHIFT                4u
#define MC_ME_IM_M_ICONF_CU_WIDTH                1u
#define MC_ME_IM_M_ICONF_CU(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_IM_M_ICONF_CU_SHIFT))&MC_ME_IM_M_ICONF_CU_MASK)
#define MC_ME_IM_M_ICONF_CC_MASK                 0x20u
#define MC_ME_IM_M_ICONF_CC_SHIFT                5u
#define MC_ME_IM_M_ICONF_CC_WIDTH                1u
#define MC_ME_IM_M_ICONF_CC(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_IM_M_ICONF_CC_SHIFT))&MC_ME_IM_M_ICONF_CC_MASK)
/* IMTS Bit Fields */
#define MC_ME_IMTS_S_SEA_MASK                    0x1u
#define MC_ME_IMTS_S_SEA_SHIFT                   0u
#define MC_ME_IMTS_S_SEA_WIDTH                   1u
#define MC_ME_IMTS_S_SEA(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IMTS_S_SEA_SHIFT))&MC_ME_IMTS_S_SEA_MASK)
#define MC_ME_IMTS_S_NMA_MASK                    0x2u
#define MC_ME_IMTS_S_NMA_SHIFT                   1u
#define MC_ME_IMTS_S_NMA_WIDTH                   1u
#define MC_ME_IMTS_S_NMA(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IMTS_S_NMA_SHIFT))&MC_ME_IMTS_S_NMA_MASK)
#define MC_ME_IMTS_S_DMA_MASK                    0x4u
#define MC_ME_IMTS_S_DMA_SHIFT                   2u
#define MC_ME_IMTS_S_DMA_WIDTH                   1u
#define MC_ME_IMTS_S_DMA(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IMTS_S_DMA_SHIFT))&MC_ME_IMTS_S_DMA_MASK)
#define MC_ME_IMTS_S_MRI_MASK                    0x8u
#define MC_ME_IMTS_S_MRI_SHIFT                   3u
#define MC_ME_IMTS_S_MRI_WIDTH                   1u
#define MC_ME_IMTS_S_MRI(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IMTS_S_MRI_SHIFT))&MC_ME_IMTS_S_MRI_MASK)
#define MC_ME_IMTS_S_MTI_MASK                    0x10u
#define MC_ME_IMTS_S_MTI_SHIFT                   4u
#define MC_ME_IMTS_S_MTI_WIDTH                   1u
#define MC_ME_IMTS_S_MTI(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IMTS_S_MTI_SHIFT))&MC_ME_IMTS_S_MTI_MASK)
#define MC_ME_IMTS_S_MRIG_MASK                   0x20u
#define MC_ME_IMTS_S_MRIG_SHIFT                  5u
#define MC_ME_IMTS_S_MRIG_WIDTH                  1u
#define MC_ME_IMTS_S_MRIG(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_IMTS_S_MRIG_SHIFT))&MC_ME_IMTS_S_MRIG_MASK)
/* DMTS Bit Fields */
#define MC_ME_DMTS_CDP_PRPH_0_31_MASK            0x1u
#define MC_ME_DMTS_CDP_PRPH_0_31_SHIFT           0u
#define MC_ME_DMTS_CDP_PRPH_0_31_WIDTH           1u
#define MC_ME_DMTS_CDP_PRPH_0_31(x)              (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CDP_PRPH_0_31_SHIFT))&MC_ME_DMTS_CDP_PRPH_0_31_MASK)
#define MC_ME_DMTS_CDP_PRPH_32_63_MASK           0x2u
#define MC_ME_DMTS_CDP_PRPH_32_63_SHIFT          1u
#define MC_ME_DMTS_CDP_PRPH_32_63_WIDTH          1u
#define MC_ME_DMTS_CDP_PRPH_32_63(x)             (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CDP_PRPH_32_63_SHIFT))&MC_ME_DMTS_CDP_PRPH_32_63_MASK)
#define MC_ME_DMTS_CDP_PRPH_64_95_MASK           0x4u
#define MC_ME_DMTS_CDP_PRPH_64_95_SHIFT          2u
#define MC_ME_DMTS_CDP_PRPH_64_95_WIDTH          1u
#define MC_ME_DMTS_CDP_PRPH_64_95(x)             (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CDP_PRPH_64_95_SHIFT))&MC_ME_DMTS_CDP_PRPH_64_95_MASK)
#define MC_ME_DMTS_CDP_PRPH_96_127_MASK          0x8u
#define MC_ME_DMTS_CDP_PRPH_96_127_SHIFT         3u
#define MC_ME_DMTS_CDP_PRPH_96_127_WIDTH         1u
#define MC_ME_DMTS_CDP_PRPH_96_127(x)            (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CDP_PRPH_96_127_SHIFT))&MC_ME_DMTS_CDP_PRPH_96_127_MASK)
#define MC_ME_DMTS_CDP_PRPH_128_159_MASK         0x10u
#define MC_ME_DMTS_CDP_PRPH_128_159_SHIFT        4u
#define MC_ME_DMTS_CDP_PRPH_128_159_WIDTH        1u
#define MC_ME_DMTS_CDP_PRPH_128_159(x)           (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CDP_PRPH_128_159_SHIFT))&MC_ME_DMTS_CDP_PRPH_128_159_MASK)
#define MC_ME_DMTS_CDP_PRPH_160_191_MASK         0x20u
#define MC_ME_DMTS_CDP_PRPH_160_191_SHIFT        5u
#define MC_ME_DMTS_CDP_PRPH_160_191_WIDTH        1u
#define MC_ME_DMTS_CDP_PRPH_160_191(x)           (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CDP_PRPH_160_191_SHIFT))&MC_ME_DMTS_CDP_PRPH_160_191_MASK)
#define MC_ME_DMTS_CDP_PRPH_192_223_MASK         0x40u
#define MC_ME_DMTS_CDP_PRPH_192_223_SHIFT        6u
#define MC_ME_DMTS_CDP_PRPH_192_223_WIDTH        1u
#define MC_ME_DMTS_CDP_PRPH_192_223(x)           (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CDP_PRPH_192_223_SHIFT))&MC_ME_DMTS_CDP_PRPH_192_223_MASK)
#define MC_ME_DMTS_CDP_PRPH_224_255_MASK         0x80u
#define MC_ME_DMTS_CDP_PRPH_224_255_SHIFT        7u
#define MC_ME_DMTS_CDP_PRPH_224_255_WIDTH        1u
#define MC_ME_DMTS_CDP_PRPH_224_255(x)           (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CDP_PRPH_224_255_SHIFT))&MC_ME_DMTS_CDP_PRPH_224_255_MASK)
#define MC_ME_DMTS_FLASH_SC_MASK                 0x100u
#define MC_ME_DMTS_FLASH_SC_SHIFT                8u
#define MC_ME_DMTS_FLASH_SC_WIDTH                1u
#define MC_ME_DMTS_FLASH_SC(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_FLASH_SC_SHIFT))&MC_ME_DMTS_FLASH_SC_MASK)
#define MC_ME_DMTS_SYSCLK_SW_MASK                0x400u
#define MC_ME_DMTS_SYSCLK_SW_SHIFT               10u
#define MC_ME_DMTS_SYSCLK_SW_WIDTH               1u
#define MC_ME_DMTS_SYSCLK_SW(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_SYSCLK_SW_SHIFT))&MC_ME_DMTS_SYSCLK_SW_MASK)
#define MC_ME_DMTS_SCSRC_SC_MASK                 0x800u
#define MC_ME_DMTS_SCSRC_SC_SHIFT                11u
#define MC_ME_DMTS_SCSRC_SC_WIDTH                1u
#define MC_ME_DMTS_SCSRC_SC(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_SCSRC_SC_SHIFT))&MC_ME_DMTS_SCSRC_SC_MASK)
#define MC_ME_DMTS_IRC_SC_MASK                   0x1000u
#define MC_ME_DMTS_IRC_SC_SHIFT                  12u
#define MC_ME_DMTS_IRC_SC_WIDTH                  1u
#define MC_ME_DMTS_IRC_SC(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_IRC_SC_SHIFT))&MC_ME_DMTS_IRC_SC_MASK)
#define MC_ME_DMTS_CSRC_CSRC_SC_MASK             0x2000u
#define MC_ME_DMTS_CSRC_CSRC_SC_SHIFT            13u
#define MC_ME_DMTS_CSRC_CSRC_SC_WIDTH            1u
#define MC_ME_DMTS_CSRC_CSRC_SC(x)               (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CSRC_CSRC_SC_SHIFT))&MC_ME_DMTS_CSRC_CSRC_SC_MASK)
#define MC_ME_DMTS_VREG_CSRC_SC_MASK             0x4000u
#define MC_ME_DMTS_VREG_CSRC_SC_SHIFT            14u
#define MC_ME_DMTS_VREG_CSRC_SC_WIDTH            1u
#define MC_ME_DMTS_VREG_CSRC_SC(x)               (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_VREG_CSRC_SC_SHIFT))&MC_ME_DMTS_VREG_CSRC_SC_MASK)
#define MC_ME_DMTS_CDP_PRPH_0_255_MASK           0x8000u
#define MC_ME_DMTS_CDP_PRPH_0_255_SHIFT          15u
#define MC_ME_DMTS_CDP_PRPH_0_255_WIDTH          1u
#define MC_ME_DMTS_CDP_PRPH_0_255(x)             (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CDP_PRPH_0_255_SHIFT))&MC_ME_DMTS_CDP_PRPH_0_255_MASK)
#define MC_ME_DMTS_SMR_MASK                      0x10000u
#define MC_ME_DMTS_SMR_SHIFT                     16u
#define MC_ME_DMTS_SMR_WIDTH                     1u
#define MC_ME_DMTS_SMR(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_SMR_SHIFT))&MC_ME_DMTS_SMR_MASK)
#define MC_ME_DMTS_PCS_PROG_MASK                 0x20000u
#define MC_ME_DMTS_PCS_PROG_SHIFT                17u
#define MC_ME_DMTS_PCS_PROG_WIDTH                1u
#define MC_ME_DMTS_PCS_PROG(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_PCS_PROG_SHIFT))&MC_ME_DMTS_PCS_PROG_MASK)
#define MC_ME_DMTS_CCKL_PROG_MASK                0x40000u
#define MC_ME_DMTS_CCKL_PROG_SHIFT               18u
#define MC_ME_DMTS_CCKL_PROG_WIDTH               1u
#define MC_ME_DMTS_CCKL_PROG(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CCKL_PROG_SHIFT))&MC_ME_DMTS_CCKL_PROG_MASK)
#define MC_ME_DMTS_DBG_MODE_MASK                 0x80000u
#define MC_ME_DMTS_DBG_MODE_SHIFT                19u
#define MC_ME_DMTS_DBG_MODE_WIDTH                1u
#define MC_ME_DMTS_DBG_MODE(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_DBG_MODE_SHIFT))&MC_ME_DMTS_DBG_MODE_MASK)
#define MC_ME_DMTS_PMC_PROG_MASK                 0x100000u
#define MC_ME_DMTS_PMC_PROG_SHIFT                20u
#define MC_ME_DMTS_PMC_PROG_WIDTH                1u
#define MC_ME_DMTS_PMC_PROG(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_PMC_PROG_SHIFT))&MC_ME_DMTS_PMC_PROG_MASK)
#define MC_ME_DMTS_MPH_BUSY_MASK                 0x800000u
#define MC_ME_DMTS_MPH_BUSY_SHIFT                23u
#define MC_ME_DMTS_MPH_BUSY_WIDTH                1u
#define MC_ME_DMTS_MPH_BUSY(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_MPH_BUSY_SHIFT))&MC_ME_DMTS_MPH_BUSY_MASK)
#define MC_ME_DMTS_PREVIOUS_MODE_MASK            0xF0000000u
#define MC_ME_DMTS_PREVIOUS_MODE_SHIFT           28u
#define MC_ME_DMTS_PREVIOUS_MODE_WIDTH           4u
#define MC_ME_DMTS_PREVIOUS_MODE(x)              (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_PREVIOUS_MODE_SHIFT))&MC_ME_DMTS_PREVIOUS_MODE_MASK)
/* RESET_MC Bit Fields */
#define MC_ME_RESET_MC_SYSCLK_MASK               0xFu
#define MC_ME_RESET_MC_SYSCLK_SHIFT              0u
#define MC_ME_RESET_MC_SYSCLK_WIDTH              4u
#define MC_ME_RESET_MC_SYSCLK(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_SYSCLK_SHIFT))&MC_ME_RESET_MC_SYSCLK_MASK)
#define MC_ME_RESET_MC_IRCON_MASK                0x10u
#define MC_ME_RESET_MC_IRCON_SHIFT               4u
#define MC_ME_RESET_MC_IRCON_WIDTH               1u
#define MC_ME_RESET_MC_IRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_IRCON_SHIFT))&MC_ME_RESET_MC_IRCON_MASK)
#define MC_ME_RESET_MC_XOSCON_MASK               0x20u
#define MC_ME_RESET_MC_XOSCON_SHIFT              5u
#define MC_ME_RESET_MC_XOSCON_WIDTH              1u
#define MC_ME_RESET_MC_XOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_XOSCON_SHIFT))&MC_ME_RESET_MC_XOSCON_MASK)
#define MC_ME_RESET_MC_PLL0ON_MASK               0x40u
#define MC_ME_RESET_MC_PLL0ON_SHIFT              6u
#define MC_ME_RESET_MC_PLL0ON_WIDTH              1u
#define MC_ME_RESET_MC_PLL0ON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_PLL0ON_SHIFT))&MC_ME_RESET_MC_PLL0ON_MASK)
#define MC_ME_RESET_MC_PLL1ON_MASK               0x80u
#define MC_ME_RESET_MC_PLL1ON_SHIFT              7u
#define MC_ME_RESET_MC_PLL1ON_WIDTH              1u
#define MC_ME_RESET_MC_PLL1ON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_PLL1ON_SHIFT))&MC_ME_RESET_MC_PLL1ON_MASK)
#define MC_ME_RESET_MC_FLAON_MASK                0x30000u
#define MC_ME_RESET_MC_FLAON_SHIFT               16u
#define MC_ME_RESET_MC_FLAON_WIDTH               2u
#define MC_ME_RESET_MC_FLAON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_FLAON_SHIFT))&MC_ME_RESET_MC_FLAON_MASK)
#define MC_ME_RESET_MC_MVRON_MASK                0x100000u
#define MC_ME_RESET_MC_MVRON_SHIFT               20u
#define MC_ME_RESET_MC_MVRON_WIDTH               1u
#define MC_ME_RESET_MC_MVRON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_MVRON_SHIFT))&MC_ME_RESET_MC_MVRON_MASK)
#define MC_ME_RESET_MC_PDO_MASK                  0x800000u
#define MC_ME_RESET_MC_PDO_SHIFT                 23u
#define MC_ME_RESET_MC_PDO_WIDTH                 1u
#define MC_ME_RESET_MC_PDO(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_PDO_SHIFT))&MC_ME_RESET_MC_PDO_MASK)
#define MC_ME_RESET_MC_PWRLVL_MASK               0x70000000u
#define MC_ME_RESET_MC_PWRLVL_SHIFT              28u
#define MC_ME_RESET_MC_PWRLVL_WIDTH              3u
#define MC_ME_RESET_MC_PWRLVL(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_PWRLVL_SHIFT))&MC_ME_RESET_MC_PWRLVL_MASK)
/* TEST_MC Bit Fields */
#define MC_ME_TEST_MC_SYSCLK_MASK                0xFu
#define MC_ME_TEST_MC_SYSCLK_SHIFT               0u
#define MC_ME_TEST_MC_SYSCLK_WIDTH               4u
#define MC_ME_TEST_MC_SYSCLK(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_TEST_MC_SYSCLK_SHIFT))&MC_ME_TEST_MC_SYSCLK_MASK)
#define MC_ME_TEST_MC_IRCON_MASK                 0x10u
#define MC_ME_TEST_MC_IRCON_SHIFT                4u
#define MC_ME_TEST_MC_IRCON_WIDTH                1u
#define MC_ME_TEST_MC_IRCON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_TEST_MC_IRCON_SHIFT))&MC_ME_TEST_MC_IRCON_MASK)
#define MC_ME_TEST_MC_XOSCON_MASK                0x20u
#define MC_ME_TEST_MC_XOSCON_SHIFT               5u
#define MC_ME_TEST_MC_XOSCON_WIDTH               1u
#define MC_ME_TEST_MC_XOSCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_TEST_MC_XOSCON_SHIFT))&MC_ME_TEST_MC_XOSCON_MASK)
#define MC_ME_TEST_MC_PLL0ON_MASK                0x40u
#define MC_ME_TEST_MC_PLL0ON_SHIFT               6u
#define MC_ME_TEST_MC_PLL0ON_WIDTH               1u
#define MC_ME_TEST_MC_PLL0ON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_TEST_MC_PLL0ON_SHIFT))&MC_ME_TEST_MC_PLL0ON_MASK)
#define MC_ME_TEST_MC_PLL1ON_MASK                0x80u
#define MC_ME_TEST_MC_PLL1ON_SHIFT               7u
#define MC_ME_TEST_MC_PLL1ON_WIDTH               1u
#define MC_ME_TEST_MC_PLL1ON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_TEST_MC_PLL1ON_SHIFT))&MC_ME_TEST_MC_PLL1ON_MASK)
#define MC_ME_TEST_MC_FLAON_MASK                 0x30000u
#define MC_ME_TEST_MC_FLAON_SHIFT                16u
#define MC_ME_TEST_MC_FLAON_WIDTH                2u
#define MC_ME_TEST_MC_FLAON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_TEST_MC_FLAON_SHIFT))&MC_ME_TEST_MC_FLAON_MASK)
#define MC_ME_TEST_MC_MVRON_MASK                 0x100000u
#define MC_ME_TEST_MC_MVRON_SHIFT                20u
#define MC_ME_TEST_MC_MVRON_WIDTH                1u
#define MC_ME_TEST_MC_MVRON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_TEST_MC_MVRON_SHIFT))&MC_ME_TEST_MC_MVRON_MASK)
#define MC_ME_TEST_MC_PDO_MASK                   0x800000u
#define MC_ME_TEST_MC_PDO_SHIFT                  23u
#define MC_ME_TEST_MC_PDO_WIDTH                  1u
#define MC_ME_TEST_MC_PDO(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_TEST_MC_PDO_SHIFT))&MC_ME_TEST_MC_PDO_MASK)
#define MC_ME_TEST_MC_PWRLVL_MASK                0x70000000u
#define MC_ME_TEST_MC_PWRLVL_SHIFT               28u
#define MC_ME_TEST_MC_PWRLVL_WIDTH               3u
#define MC_ME_TEST_MC_PWRLVL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_TEST_MC_PWRLVL_SHIFT))&MC_ME_TEST_MC_PWRLVL_MASK)
/* SAFE_MC Bit Fields */
#define MC_ME_SAFE_MC_SYSCLK_MASK                0xFu
#define MC_ME_SAFE_MC_SYSCLK_SHIFT               0u
#define MC_ME_SAFE_MC_SYSCLK_WIDTH               4u
#define MC_ME_SAFE_MC_SYSCLK(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_SYSCLK_SHIFT))&MC_ME_SAFE_MC_SYSCLK_MASK)
#define MC_ME_SAFE_MC_IRCON_MASK                 0x10u
#define MC_ME_SAFE_MC_IRCON_SHIFT                4u
#define MC_ME_SAFE_MC_IRCON_WIDTH                1u
#define MC_ME_SAFE_MC_IRCON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_IRCON_SHIFT))&MC_ME_SAFE_MC_IRCON_MASK)
#define MC_ME_SAFE_MC_XOSCON_MASK                0x20u
#define MC_ME_SAFE_MC_XOSCON_SHIFT               5u
#define MC_ME_SAFE_MC_XOSCON_WIDTH               1u
#define MC_ME_SAFE_MC_XOSCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_XOSCON_SHIFT))&MC_ME_SAFE_MC_XOSCON_MASK)
#define MC_ME_SAFE_MC_PLL0ON_MASK                0x40u
#define MC_ME_SAFE_MC_PLL0ON_SHIFT               6u
#define MC_ME_SAFE_MC_PLL0ON_WIDTH               1u
#define MC_ME_SAFE_MC_PLL0ON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_PLL0ON_SHIFT))&MC_ME_SAFE_MC_PLL0ON_MASK)
#define MC_ME_SAFE_MC_PLL1ON_MASK                0x80u
#define MC_ME_SAFE_MC_PLL1ON_SHIFT               7u
#define MC_ME_SAFE_MC_PLL1ON_WIDTH               1u
#define MC_ME_SAFE_MC_PLL1ON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_PLL1ON_SHIFT))&MC_ME_SAFE_MC_PLL1ON_MASK)
#define MC_ME_SAFE_MC_FLAON_MASK                 0x30000u
#define MC_ME_SAFE_MC_FLAON_SHIFT                16u
#define MC_ME_SAFE_MC_FLAON_WIDTH                2u
#define MC_ME_SAFE_MC_FLAON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_FLAON_SHIFT))&MC_ME_SAFE_MC_FLAON_MASK)
#define MC_ME_SAFE_MC_MVRON_MASK                 0x100000u
#define MC_ME_SAFE_MC_MVRON_SHIFT                20u
#define MC_ME_SAFE_MC_MVRON_WIDTH                1u
#define MC_ME_SAFE_MC_MVRON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_MVRON_SHIFT))&MC_ME_SAFE_MC_MVRON_MASK)
#define MC_ME_SAFE_MC_PDO_MASK                   0x800000u
#define MC_ME_SAFE_MC_PDO_SHIFT                  23u
#define MC_ME_SAFE_MC_PDO_WIDTH                  1u
#define MC_ME_SAFE_MC_PDO(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_PDO_SHIFT))&MC_ME_SAFE_MC_PDO_MASK)
#define MC_ME_SAFE_MC_PWRLVL_MASK                0x70000000u
#define MC_ME_SAFE_MC_PWRLVL_SHIFT               28u
#define MC_ME_SAFE_MC_PWRLVL_WIDTH               3u
#define MC_ME_SAFE_MC_PWRLVL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_PWRLVL_SHIFT))&MC_ME_SAFE_MC_PWRLVL_MASK)
/* DRUN_MC Bit Fields */
#define MC_ME_DRUN_MC_SYSCLK_MASK                0xFu
#define MC_ME_DRUN_MC_SYSCLK_SHIFT               0u
#define MC_ME_DRUN_MC_SYSCLK_WIDTH               4u
#define MC_ME_DRUN_MC_SYSCLK(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_SYSCLK_SHIFT))&MC_ME_DRUN_MC_SYSCLK_MASK)
#define MC_ME_DRUN_MC_IRCON_MASK                 0x10u
#define MC_ME_DRUN_MC_IRCON_SHIFT                4u
#define MC_ME_DRUN_MC_IRCON_WIDTH                1u
#define MC_ME_DRUN_MC_IRCON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_IRCON_SHIFT))&MC_ME_DRUN_MC_IRCON_MASK)
#define MC_ME_DRUN_MC_XOSCON_MASK                0x20u
#define MC_ME_DRUN_MC_XOSCON_SHIFT               5u
#define MC_ME_DRUN_MC_XOSCON_WIDTH               1u
#define MC_ME_DRUN_MC_XOSCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_XOSCON_SHIFT))&MC_ME_DRUN_MC_XOSCON_MASK)
#define MC_ME_DRUN_MC_PLL0ON_MASK                0x40u
#define MC_ME_DRUN_MC_PLL0ON_SHIFT               6u
#define MC_ME_DRUN_MC_PLL0ON_WIDTH               1u
#define MC_ME_DRUN_MC_PLL0ON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_PLL0ON_SHIFT))&MC_ME_DRUN_MC_PLL0ON_MASK)
#define MC_ME_DRUN_MC_PLL1ON_MASK                0x80u
#define MC_ME_DRUN_MC_PLL1ON_SHIFT               7u
#define MC_ME_DRUN_MC_PLL1ON_WIDTH               1u
#define MC_ME_DRUN_MC_PLL1ON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_PLL1ON_SHIFT))&MC_ME_DRUN_MC_PLL1ON_MASK)
#define MC_ME_DRUN_MC_FLAON_MASK                 0x30000u
#define MC_ME_DRUN_MC_FLAON_SHIFT                16u
#define MC_ME_DRUN_MC_FLAON_WIDTH                2u
#define MC_ME_DRUN_MC_FLAON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_FLAON_SHIFT))&MC_ME_DRUN_MC_FLAON_MASK)
#define MC_ME_DRUN_MC_MVRON_MASK                 0x100000u
#define MC_ME_DRUN_MC_MVRON_SHIFT                20u
#define MC_ME_DRUN_MC_MVRON_WIDTH                1u
#define MC_ME_DRUN_MC_MVRON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_MVRON_SHIFT))&MC_ME_DRUN_MC_MVRON_MASK)
#define MC_ME_DRUN_MC_PDO_MASK                   0x800000u
#define MC_ME_DRUN_MC_PDO_SHIFT                  23u
#define MC_ME_DRUN_MC_PDO_WIDTH                  1u
#define MC_ME_DRUN_MC_PDO(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_PDO_SHIFT))&MC_ME_DRUN_MC_PDO_MASK)
#define MC_ME_DRUN_MC_PWRLVL_MASK                0x70000000u
#define MC_ME_DRUN_MC_PWRLVL_SHIFT               28u
#define MC_ME_DRUN_MC_PWRLVL_WIDTH               3u
#define MC_ME_DRUN_MC_PWRLVL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_PWRLVL_SHIFT))&MC_ME_DRUN_MC_PWRLVL_MASK)
/* RUN0_MC Bit Fields */
#define MC_ME_RUN0_MC_SYSCLK_MASK                0xFu
#define MC_ME_RUN0_MC_SYSCLK_SHIFT               0u
#define MC_ME_RUN0_MC_SYSCLK_WIDTH               4u
#define MC_ME_RUN0_MC_SYSCLK(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_SYSCLK_SHIFT))&MC_ME_RUN0_MC_SYSCLK_MASK)
#define MC_ME_RUN0_MC_IRCON_MASK                 0x10u
#define MC_ME_RUN0_MC_IRCON_SHIFT                4u
#define MC_ME_RUN0_MC_IRCON_WIDTH                1u
#define MC_ME_RUN0_MC_IRCON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_IRCON_SHIFT))&MC_ME_RUN0_MC_IRCON_MASK)
#define MC_ME_RUN0_MC_XOSCON_MASK                0x20u
#define MC_ME_RUN0_MC_XOSCON_SHIFT               5u
#define MC_ME_RUN0_MC_XOSCON_WIDTH               1u
#define MC_ME_RUN0_MC_XOSCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_XOSCON_SHIFT))&MC_ME_RUN0_MC_XOSCON_MASK)
#define MC_ME_RUN0_MC_PLL0ON_MASK                0x40u
#define MC_ME_RUN0_MC_PLL0ON_SHIFT               6u
#define MC_ME_RUN0_MC_PLL0ON_WIDTH               1u
#define MC_ME_RUN0_MC_PLL0ON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_PLL0ON_SHIFT))&MC_ME_RUN0_MC_PLL0ON_MASK)
#define MC_ME_RUN0_MC_PLL1ON_MASK                0x80u
#define MC_ME_RUN0_MC_PLL1ON_SHIFT               7u
#define MC_ME_RUN0_MC_PLL1ON_WIDTH               1u
#define MC_ME_RUN0_MC_PLL1ON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_PLL1ON_SHIFT))&MC_ME_RUN0_MC_PLL1ON_MASK)
#define MC_ME_RUN0_MC_FLAON_MASK                 0x30000u
#define MC_ME_RUN0_MC_FLAON_SHIFT                16u
#define MC_ME_RUN0_MC_FLAON_WIDTH                2u
#define MC_ME_RUN0_MC_FLAON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_FLAON_SHIFT))&MC_ME_RUN0_MC_FLAON_MASK)
#define MC_ME_RUN0_MC_MVRON_MASK                 0x100000u
#define MC_ME_RUN0_MC_MVRON_SHIFT                20u
#define MC_ME_RUN0_MC_MVRON_WIDTH                1u
#define MC_ME_RUN0_MC_MVRON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_MVRON_SHIFT))&MC_ME_RUN0_MC_MVRON_MASK)
#define MC_ME_RUN0_MC_PDO_MASK                   0x800000u
#define MC_ME_RUN0_MC_PDO_SHIFT                  23u
#define MC_ME_RUN0_MC_PDO_WIDTH                  1u
#define MC_ME_RUN0_MC_PDO(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_PDO_SHIFT))&MC_ME_RUN0_MC_PDO_MASK)
#define MC_ME_RUN0_MC_PWRLVL_MASK                0x70000000u
#define MC_ME_RUN0_MC_PWRLVL_SHIFT               28u
#define MC_ME_RUN0_MC_PWRLVL_WIDTH               3u
#define MC_ME_RUN0_MC_PWRLVL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_PWRLVL_SHIFT))&MC_ME_RUN0_MC_PWRLVL_MASK)
/* RUN1_MC Bit Fields */
#define MC_ME_RUN1_MC_SYSCLK_MASK                0xFu
#define MC_ME_RUN1_MC_SYSCLK_SHIFT               0u
#define MC_ME_RUN1_MC_SYSCLK_WIDTH               4u
#define MC_ME_RUN1_MC_SYSCLK(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_SYSCLK_SHIFT))&MC_ME_RUN1_MC_SYSCLK_MASK)
#define MC_ME_RUN1_MC_IRCON_MASK                 0x10u
#define MC_ME_RUN1_MC_IRCON_SHIFT                4u
#define MC_ME_RUN1_MC_IRCON_WIDTH                1u
#define MC_ME_RUN1_MC_IRCON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_IRCON_SHIFT))&MC_ME_RUN1_MC_IRCON_MASK)
#define MC_ME_RUN1_MC_XOSCON_MASK                0x20u
#define MC_ME_RUN1_MC_XOSCON_SHIFT               5u
#define MC_ME_RUN1_MC_XOSCON_WIDTH               1u
#define MC_ME_RUN1_MC_XOSCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_XOSCON_SHIFT))&MC_ME_RUN1_MC_XOSCON_MASK)
#define MC_ME_RUN1_MC_PLL0ON_MASK                0x40u
#define MC_ME_RUN1_MC_PLL0ON_SHIFT               6u
#define MC_ME_RUN1_MC_PLL0ON_WIDTH               1u
#define MC_ME_RUN1_MC_PLL0ON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_PLL0ON_SHIFT))&MC_ME_RUN1_MC_PLL0ON_MASK)
#define MC_ME_RUN1_MC_PLL1ON_MASK                0x80u
#define MC_ME_RUN1_MC_PLL1ON_SHIFT               7u
#define MC_ME_RUN1_MC_PLL1ON_WIDTH               1u
#define MC_ME_RUN1_MC_PLL1ON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_PLL1ON_SHIFT))&MC_ME_RUN1_MC_PLL1ON_MASK)
#define MC_ME_RUN1_MC_FLAON_MASK                 0x30000u
#define MC_ME_RUN1_MC_FLAON_SHIFT                16u
#define MC_ME_RUN1_MC_FLAON_WIDTH                2u
#define MC_ME_RUN1_MC_FLAON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_FLAON_SHIFT))&MC_ME_RUN1_MC_FLAON_MASK)
#define MC_ME_RUN1_MC_MVRON_MASK                 0x100000u
#define MC_ME_RUN1_MC_MVRON_SHIFT                20u
#define MC_ME_RUN1_MC_MVRON_WIDTH                1u
#define MC_ME_RUN1_MC_MVRON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_MVRON_SHIFT))&MC_ME_RUN1_MC_MVRON_MASK)
#define MC_ME_RUN1_MC_PDO_MASK                   0x800000u
#define MC_ME_RUN1_MC_PDO_SHIFT                  23u
#define MC_ME_RUN1_MC_PDO_WIDTH                  1u
#define MC_ME_RUN1_MC_PDO(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_PDO_SHIFT))&MC_ME_RUN1_MC_PDO_MASK)
#define MC_ME_RUN1_MC_PWRLVL_MASK                0x70000000u
#define MC_ME_RUN1_MC_PWRLVL_SHIFT               28u
#define MC_ME_RUN1_MC_PWRLVL_WIDTH               3u
#define MC_ME_RUN1_MC_PWRLVL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_PWRLVL_SHIFT))&MC_ME_RUN1_MC_PWRLVL_MASK)
/* RUN2_MC Bit Fields */
#define MC_ME_RUN2_MC_SYSCLK_MASK                0xFu
#define MC_ME_RUN2_MC_SYSCLK_SHIFT               0u
#define MC_ME_RUN2_MC_SYSCLK_WIDTH               4u
#define MC_ME_RUN2_MC_SYSCLK(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_SYSCLK_SHIFT))&MC_ME_RUN2_MC_SYSCLK_MASK)
#define MC_ME_RUN2_MC_IRCON_MASK                 0x10u
#define MC_ME_RUN2_MC_IRCON_SHIFT                4u
#define MC_ME_RUN2_MC_IRCON_WIDTH                1u
#define MC_ME_RUN2_MC_IRCON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_IRCON_SHIFT))&MC_ME_RUN2_MC_IRCON_MASK)
#define MC_ME_RUN2_MC_XOSCON_MASK                0x20u
#define MC_ME_RUN2_MC_XOSCON_SHIFT               5u
#define MC_ME_RUN2_MC_XOSCON_WIDTH               1u
#define MC_ME_RUN2_MC_XOSCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_XOSCON_SHIFT))&MC_ME_RUN2_MC_XOSCON_MASK)
#define MC_ME_RUN2_MC_PLL0ON_MASK                0x40u
#define MC_ME_RUN2_MC_PLL0ON_SHIFT               6u
#define MC_ME_RUN2_MC_PLL0ON_WIDTH               1u
#define MC_ME_RUN2_MC_PLL0ON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_PLL0ON_SHIFT))&MC_ME_RUN2_MC_PLL0ON_MASK)
#define MC_ME_RUN2_MC_PLL1ON_MASK                0x80u
#define MC_ME_RUN2_MC_PLL1ON_SHIFT               7u
#define MC_ME_RUN2_MC_PLL1ON_WIDTH               1u
#define MC_ME_RUN2_MC_PLL1ON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_PLL1ON_SHIFT))&MC_ME_RUN2_MC_PLL1ON_MASK)
#define MC_ME_RUN2_MC_FLAON_MASK                 0x30000u
#define MC_ME_RUN2_MC_FLAON_SHIFT                16u
#define MC_ME_RUN2_MC_FLAON_WIDTH                2u
#define MC_ME_RUN2_MC_FLAON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_FLAON_SHIFT))&MC_ME_RUN2_MC_FLAON_MASK)
#define MC_ME_RUN2_MC_MVRON_MASK                 0x100000u
#define MC_ME_RUN2_MC_MVRON_SHIFT                20u
#define MC_ME_RUN2_MC_MVRON_WIDTH                1u
#define MC_ME_RUN2_MC_MVRON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_MVRON_SHIFT))&MC_ME_RUN2_MC_MVRON_MASK)
#define MC_ME_RUN2_MC_PDO_MASK                   0x800000u
#define MC_ME_RUN2_MC_PDO_SHIFT                  23u
#define MC_ME_RUN2_MC_PDO_WIDTH                  1u
#define MC_ME_RUN2_MC_PDO(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_PDO_SHIFT))&MC_ME_RUN2_MC_PDO_MASK)
#define MC_ME_RUN2_MC_PWRLVL_MASK                0x70000000u
#define MC_ME_RUN2_MC_PWRLVL_SHIFT               28u
#define MC_ME_RUN2_MC_PWRLVL_WIDTH               3u
#define MC_ME_RUN2_MC_PWRLVL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_PWRLVL_SHIFT))&MC_ME_RUN2_MC_PWRLVL_MASK)
/* RUN3_MC Bit Fields */
#define MC_ME_RUN3_MC_SYSCLK_MASK                0xFu
#define MC_ME_RUN3_MC_SYSCLK_SHIFT               0u
#define MC_ME_RUN3_MC_SYSCLK_WIDTH               4u
#define MC_ME_RUN3_MC_SYSCLK(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_SYSCLK_SHIFT))&MC_ME_RUN3_MC_SYSCLK_MASK)
#define MC_ME_RUN3_MC_IRCON_MASK                 0x10u
#define MC_ME_RUN3_MC_IRCON_SHIFT                4u
#define MC_ME_RUN3_MC_IRCON_WIDTH                1u
#define MC_ME_RUN3_MC_IRCON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_IRCON_SHIFT))&MC_ME_RUN3_MC_IRCON_MASK)
#define MC_ME_RUN3_MC_XOSCON_MASK                0x20u
#define MC_ME_RUN3_MC_XOSCON_SHIFT               5u
#define MC_ME_RUN3_MC_XOSCON_WIDTH               1u
#define MC_ME_RUN3_MC_XOSCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_XOSCON_SHIFT))&MC_ME_RUN3_MC_XOSCON_MASK)
#define MC_ME_RUN3_MC_PLL0ON_MASK                0x40u
#define MC_ME_RUN3_MC_PLL0ON_SHIFT               6u
#define MC_ME_RUN3_MC_PLL0ON_WIDTH               1u
#define MC_ME_RUN3_MC_PLL0ON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_PLL0ON_SHIFT))&MC_ME_RUN3_MC_PLL0ON_MASK)
#define MC_ME_RUN3_MC_PLL1ON_MASK                0x80u
#define MC_ME_RUN3_MC_PLL1ON_SHIFT               7u
#define MC_ME_RUN3_MC_PLL1ON_WIDTH               1u
#define MC_ME_RUN3_MC_PLL1ON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_PLL1ON_SHIFT))&MC_ME_RUN3_MC_PLL1ON_MASK)
#define MC_ME_RUN3_MC_FLAON_MASK                 0x30000u
#define MC_ME_RUN3_MC_FLAON_SHIFT                16u
#define MC_ME_RUN3_MC_FLAON_WIDTH                2u
#define MC_ME_RUN3_MC_FLAON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_FLAON_SHIFT))&MC_ME_RUN3_MC_FLAON_MASK)
#define MC_ME_RUN3_MC_MVRON_MASK                 0x100000u
#define MC_ME_RUN3_MC_MVRON_SHIFT                20u
#define MC_ME_RUN3_MC_MVRON_WIDTH                1u
#define MC_ME_RUN3_MC_MVRON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_MVRON_SHIFT))&MC_ME_RUN3_MC_MVRON_MASK)
#define MC_ME_RUN3_MC_PDO_MASK                   0x800000u
#define MC_ME_RUN3_MC_PDO_SHIFT                  23u
#define MC_ME_RUN3_MC_PDO_WIDTH                  1u
#define MC_ME_RUN3_MC_PDO(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_PDO_SHIFT))&MC_ME_RUN3_MC_PDO_MASK)
#define MC_ME_RUN3_MC_PWRLVL_MASK                0x70000000u
#define MC_ME_RUN3_MC_PWRLVL_SHIFT               28u
#define MC_ME_RUN3_MC_PWRLVL_WIDTH               3u
#define MC_ME_RUN3_MC_PWRLVL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_PWRLVL_SHIFT))&MC_ME_RUN3_MC_PWRLVL_MASK)
/* HALT0_MC Bit Fields */
#define MC_ME_HALT0_MC_SYSCLK_MASK               0xFu
#define MC_ME_HALT0_MC_SYSCLK_SHIFT              0u
#define MC_ME_HALT0_MC_SYSCLK_WIDTH              4u
#define MC_ME_HALT0_MC_SYSCLK(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_HALT0_MC_SYSCLK_SHIFT))&MC_ME_HALT0_MC_SYSCLK_MASK)
#define MC_ME_HALT0_MC_IRCON_MASK                0x10u
#define MC_ME_HALT0_MC_IRCON_SHIFT               4u
#define MC_ME_HALT0_MC_IRCON_WIDTH               1u
#define MC_ME_HALT0_MC_IRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_HALT0_MC_IRCON_SHIFT))&MC_ME_HALT0_MC_IRCON_MASK)
#define MC_ME_HALT0_MC_XOSCON_MASK               0x20u
#define MC_ME_HALT0_MC_XOSCON_SHIFT              5u
#define MC_ME_HALT0_MC_XOSCON_WIDTH              1u
#define MC_ME_HALT0_MC_XOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_HALT0_MC_XOSCON_SHIFT))&MC_ME_HALT0_MC_XOSCON_MASK)
#define MC_ME_HALT0_MC_PLL0ON_MASK               0x40u
#define MC_ME_HALT0_MC_PLL0ON_SHIFT              6u
#define MC_ME_HALT0_MC_PLL0ON_WIDTH              1u
#define MC_ME_HALT0_MC_PLL0ON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_HALT0_MC_PLL0ON_SHIFT))&MC_ME_HALT0_MC_PLL0ON_MASK)
#define MC_ME_HALT0_MC_PLL1ON_MASK               0x80u
#define MC_ME_HALT0_MC_PLL1ON_SHIFT              7u
#define MC_ME_HALT0_MC_PLL1ON_WIDTH              1u
#define MC_ME_HALT0_MC_PLL1ON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_HALT0_MC_PLL1ON_SHIFT))&MC_ME_HALT0_MC_PLL1ON_MASK)
#define MC_ME_HALT0_MC_FLAON_MASK                0x30000u
#define MC_ME_HALT0_MC_FLAON_SHIFT               16u
#define MC_ME_HALT0_MC_FLAON_WIDTH               2u
#define MC_ME_HALT0_MC_FLAON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_HALT0_MC_FLAON_SHIFT))&MC_ME_HALT0_MC_FLAON_MASK)
#define MC_ME_HALT0_MC_MVRON_MASK                0x100000u
#define MC_ME_HALT0_MC_MVRON_SHIFT               20u
#define MC_ME_HALT0_MC_MVRON_WIDTH               1u
#define MC_ME_HALT0_MC_MVRON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_HALT0_MC_MVRON_SHIFT))&MC_ME_HALT0_MC_MVRON_MASK)
#define MC_ME_HALT0_MC_PDO_MASK                  0x800000u
#define MC_ME_HALT0_MC_PDO_SHIFT                 23u
#define MC_ME_HALT0_MC_PDO_WIDTH                 1u
#define MC_ME_HALT0_MC_PDO(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_HALT0_MC_PDO_SHIFT))&MC_ME_HALT0_MC_PDO_MASK)
#define MC_ME_HALT0_MC_PWRLVL_MASK               0x70000000u
#define MC_ME_HALT0_MC_PWRLVL_SHIFT              28u
#define MC_ME_HALT0_MC_PWRLVL_WIDTH              3u
#define MC_ME_HALT0_MC_PWRLVL(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_HALT0_MC_PWRLVL_SHIFT))&MC_ME_HALT0_MC_PWRLVL_MASK)
/* STOP0_MC Bit Fields */
#define MC_ME_STOP0_MC_SYSCLK_MASK               0xFu
#define MC_ME_STOP0_MC_SYSCLK_SHIFT              0u
#define MC_ME_STOP0_MC_SYSCLK_WIDTH              4u
#define MC_ME_STOP0_MC_SYSCLK(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP0_MC_SYSCLK_SHIFT))&MC_ME_STOP0_MC_SYSCLK_MASK)
#define MC_ME_STOP0_MC_IRCON_MASK                0x10u
#define MC_ME_STOP0_MC_IRCON_SHIFT               4u
#define MC_ME_STOP0_MC_IRCON_WIDTH               1u
#define MC_ME_STOP0_MC_IRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP0_MC_IRCON_SHIFT))&MC_ME_STOP0_MC_IRCON_MASK)
#define MC_ME_STOP0_MC_XOSCON_MASK               0x20u
#define MC_ME_STOP0_MC_XOSCON_SHIFT              5u
#define MC_ME_STOP0_MC_XOSCON_WIDTH              1u
#define MC_ME_STOP0_MC_XOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP0_MC_XOSCON_SHIFT))&MC_ME_STOP0_MC_XOSCON_MASK)
#define MC_ME_STOP0_MC_PLL0ON_MASK               0x40u
#define MC_ME_STOP0_MC_PLL0ON_SHIFT              6u
#define MC_ME_STOP0_MC_PLL0ON_WIDTH              1u
#define MC_ME_STOP0_MC_PLL0ON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP0_MC_PLL0ON_SHIFT))&MC_ME_STOP0_MC_PLL0ON_MASK)
#define MC_ME_STOP0_MC_PLL1ON_MASK               0x80u
#define MC_ME_STOP0_MC_PLL1ON_SHIFT              7u
#define MC_ME_STOP0_MC_PLL1ON_WIDTH              1u
#define MC_ME_STOP0_MC_PLL1ON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP0_MC_PLL1ON_SHIFT))&MC_ME_STOP0_MC_PLL1ON_MASK)
#define MC_ME_STOP0_MC_FLAON_MASK                0x30000u
#define MC_ME_STOP0_MC_FLAON_SHIFT               16u
#define MC_ME_STOP0_MC_FLAON_WIDTH               2u
#define MC_ME_STOP0_MC_FLAON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP0_MC_FLAON_SHIFT))&MC_ME_STOP0_MC_FLAON_MASK)
#define MC_ME_STOP0_MC_MVRON_MASK                0x100000u
#define MC_ME_STOP0_MC_MVRON_SHIFT               20u
#define MC_ME_STOP0_MC_MVRON_WIDTH               1u
#define MC_ME_STOP0_MC_MVRON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP0_MC_MVRON_SHIFT))&MC_ME_STOP0_MC_MVRON_MASK)
#define MC_ME_STOP0_MC_PDO_MASK                  0x800000u
#define MC_ME_STOP0_MC_PDO_SHIFT                 23u
#define MC_ME_STOP0_MC_PDO_WIDTH                 1u
#define MC_ME_STOP0_MC_PDO(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP0_MC_PDO_SHIFT))&MC_ME_STOP0_MC_PDO_MASK)
#define MC_ME_STOP0_MC_PWRLVL_MASK               0x70000000u
#define MC_ME_STOP0_MC_PWRLVL_SHIFT              28u
#define MC_ME_STOP0_MC_PWRLVL_WIDTH              3u
#define MC_ME_STOP0_MC_PWRLVL(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP0_MC_PWRLVL_SHIFT))&MC_ME_STOP0_MC_PWRLVL_MASK)
/* PS0 Bit Fields */
#define MC_ME_PS0_S_LFAST_0_MASK                 0x200u
#define MC_ME_PS0_S_LFAST_0_SHIFT                9u
#define MC_ME_PS0_S_LFAST_0_WIDTH                1u
#define MC_ME_PS0_S_LFAST_0(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_LFAST_0_SHIFT))&MC_ME_PS0_S_LFAST_0_MASK)
#define MC_ME_PS0_S_SIPI_0_MASK                  0x800u
#define MC_ME_PS0_S_SIPI_0_SHIFT                 11u
#define MC_ME_PS0_S_SIPI_0_WIDTH                 1u
#define MC_ME_PS0_S_SIPI_0(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_SIPI_0_SHIFT))&MC_ME_PS0_S_SIPI_0_MASK)
#define MC_ME_PS0_S_ENET_0_MASK                  0x1000u
#define MC_ME_PS0_S_ENET_0_SHIFT                 12u
#define MC_ME_PS0_S_ENET_0_WIDTH                 1u
#define MC_ME_PS0_S_ENET_0(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_ENET_0_SHIFT))&MC_ME_PS0_S_ENET_0_MASK)
#define MC_ME_PS0_S_PIT_0_MASK                   0x40000000u
#define MC_ME_PS0_S_PIT_0_SHIFT                  30u
#define MC_ME_PS0_S_PIT_0_WIDTH                  1u
#define MC_ME_PS0_S_PIT_0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_PIT_0_SHIFT))&MC_ME_PS0_S_PIT_0_MASK)
/* PS1 Bit Fields */
#define MC_ME_PS1_S_ATX_MASK                     0x4u
#define MC_ME_PS1_S_ATX_SHIFT                    2u
#define MC_ME_PS1_S_ATX_WIDTH                    1u
#define MC_ME_PS1_S_ATX(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_PS1_S_ATX_SHIFT))&MC_ME_PS1_S_ATX_MASK)
#define MC_ME_PS1_S_DMAMUX_0_MASK                0x10u
#define MC_ME_PS1_S_DMAMUX_0_SHIFT               4u
#define MC_ME_PS1_S_DMAMUX_0_WIDTH               1u
#define MC_ME_PS1_S_DMAMUX_0(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_PS1_S_DMAMUX_0_SHIFT))&MC_ME_PS1_S_DMAMUX_0_MASK)
#define MC_ME_PS1_S_CRC_0_MASK                   0x40u
#define MC_ME_PS1_S_CRC_0_SHIFT                  6u
#define MC_ME_PS1_S_CRC_0_WIDTH                  1u
#define MC_ME_PS1_S_CRC_0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS1_S_CRC_0_SHIFT))&MC_ME_PS1_S_CRC_0_MASK)
/* PS2 Bit Fields */
#define MC_ME_PS2_S_CAN_2_MASK                   0x2000u
#define MC_ME_PS2_S_CAN_2_SHIFT                  13u
#define MC_ME_PS2_S_CAN_2_WIDTH                  1u
#define MC_ME_PS2_S_CAN_2(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS2_S_CAN_2_SHIFT))&MC_ME_PS2_S_CAN_2_MASK)
#define MC_ME_PS2_S_CAN_1_MASK                   0x4000u
#define MC_ME_PS2_S_CAN_1_SHIFT                  14u
#define MC_ME_PS2_S_CAN_1_WIDTH                  1u
#define MC_ME_PS2_S_CAN_1(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS2_S_CAN_1_SHIFT))&MC_ME_PS2_S_CAN_1_MASK)
#define MC_ME_PS2_S_CAN_0_MASK                   0x8000u
#define MC_ME_PS2_S_CAN_0_SHIFT                  15u
#define MC_ME_PS2_S_CAN_0_WIDTH                  1u
#define MC_ME_PS2_S_CAN_0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS2_S_CAN_0_SHIFT))&MC_ME_PS2_S_CAN_0_MASK)
#define MC_ME_PS2_S_LINFlex_1_MASK               0x8000000u
#define MC_ME_PS2_S_LINFlex_1_SHIFT              27u
#define MC_ME_PS2_S_LINFlex_1_WIDTH              1u
#define MC_ME_PS2_S_LINFlex_1(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_PS2_S_LINFlex_1_SHIFT))&MC_ME_PS2_S_LINFlex_1_MASK)
/* PS3 Bit Fields */
#define MC_ME_PS3_S_DSPI_1_MASK                  0x4u
#define MC_ME_PS3_S_DSPI_1_SHIFT                 2u
#define MC_ME_PS3_S_DSPI_1_WIDTH                 1u
#define MC_ME_PS3_S_DSPI_1(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS3_S_DSPI_1_SHIFT))&MC_ME_PS3_S_DSPI_1_MASK)
#define MC_ME_PS3_S_DSPI_0_MASK                  0x8u
#define MC_ME_PS3_S_DSPI_0_SHIFT                 3u
#define MC_ME_PS3_S_DSPI_0_WIDTH                 1u
#define MC_ME_PS3_S_DSPI_0(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS3_S_DSPI_0_SHIFT))&MC_ME_PS3_S_DSPI_0_MASK)
#define MC_ME_PS3_S_SENT_0_MASK                  0x100u
#define MC_ME_PS3_S_SENT_0_SHIFT                 8u
#define MC_ME_PS3_S_SENT_0_WIDTH                 1u
#define MC_ME_PS3_S_SENT_0(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS3_S_SENT_0_SHIFT))&MC_ME_PS3_S_SENT_0_MASK)
#define MC_ME_PS3_S_FLEXRAY_MASK                 0x800u
#define MC_ME_PS3_S_FLEXRAY_SHIFT                11u
#define MC_ME_PS3_S_FLEXRAY_WIDTH                1u
#define MC_ME_PS3_S_FLEXRAY(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_PS3_S_FLEXRAY_SHIFT))&MC_ME_PS3_S_FLEXRAY_MASK)
#define MC_ME_PS3_S_ADC_3_MASK                   0x10000000u
#define MC_ME_PS3_S_ADC_3_SHIFT                  28u
#define MC_ME_PS3_S_ADC_3_WIDTH                  1u
#define MC_ME_PS3_S_ADC_3(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS3_S_ADC_3_SHIFT))&MC_ME_PS3_S_ADC_3_MASK)
#define MC_ME_PS3_S_ADC_1_MASK                   0x40000000u
#define MC_ME_PS3_S_ADC_1_SHIFT                  30u
#define MC_ME_PS3_S_ADC_1_WIDTH                  1u
#define MC_ME_PS3_S_ADC_1(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS3_S_ADC_1_SHIFT))&MC_ME_PS3_S_ADC_1_MASK)
/* PS4 Bit Fields */
#define MC_ME_PS4_S_ETIMER_1_MASK                0x200u
#define MC_ME_PS4_S_ETIMER_1_SHIFT               9u
#define MC_ME_PS4_S_ETIMER_1_WIDTH               1u
#define MC_ME_PS4_S_ETIMER_1(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_PS4_S_ETIMER_1_SHIFT))&MC_ME_PS4_S_ETIMER_1_MASK)
#define MC_ME_PS4_S_CTU_1_MASK                   0x2000u
#define MC_ME_PS4_S_CTU_1_SHIFT                  13u
#define MC_ME_PS4_S_CTU_1_WIDTH                  1u
#define MC_ME_PS4_S_CTU_1(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS4_S_CTU_1_SHIFT))&MC_ME_PS4_S_CTU_1_MASK)
#define MC_ME_PS4_S_PWM_1_MASK                   0x10000u
#define MC_ME_PS4_S_PWM_1_SHIFT                  16u
#define MC_ME_PS4_S_PWM_1_WIDTH                  1u
#define MC_ME_PS4_S_PWM_1(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS4_S_PWM_1_SHIFT))&MC_ME_PS4_S_PWM_1_MASK)
#define MC_ME_PS4_S_DMAMUX_1_MASK                0x40000u
#define MC_ME_PS4_S_DMAMUX_1_SHIFT               18u
#define MC_ME_PS4_S_DMAMUX_1_WIDTH               1u
#define MC_ME_PS4_S_DMAMUX_1(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_PS4_S_DMAMUX_1_SHIFT))&MC_ME_PS4_S_DMAMUX_1_MASK)
/* PS6 Bit Fields */
#define MC_ME_PS6_S_LINFlex_0_MASK               0x1000u
#define MC_ME_PS6_S_LINFlex_0_SHIFT              12u
#define MC_ME_PS6_S_LINFlex_0_WIDTH              1u
#define MC_ME_PS6_S_LINFlex_0(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_PS6_S_LINFlex_0_SHIFT))&MC_ME_PS6_S_LINFlex_0_MASK)
#define MC_ME_PS6_S_DSPI_3_MASK                  0x10000u
#define MC_ME_PS6_S_DSPI_3_SHIFT                 16u
#define MC_ME_PS6_S_DSPI_3_WIDTH                 1u
#define MC_ME_PS6_S_DSPI_3(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS6_S_DSPI_3_SHIFT))&MC_ME_PS6_S_DSPI_3_MASK)
#define MC_ME_PS6_S_DSPI_2_MASK                  0x20000u
#define MC_ME_PS6_S_DSPI_2_SHIFT                 17u
#define MC_ME_PS6_S_DSPI_2_WIDTH                 1u
#define MC_ME_PS6_S_DSPI_2(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS6_S_DSPI_2_SHIFT))&MC_ME_PS6_S_DSPI_2_MASK)
#define MC_ME_PS6_S_SENT_1_MASK                  0x400000u
#define MC_ME_PS6_S_SENT_1_SHIFT                 22u
#define MC_ME_PS6_S_SENT_1_WIDTH                 1u
#define MC_ME_PS6_S_SENT_1(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS6_S_SENT_1_SHIFT))&MC_ME_PS6_S_SENT_1_MASK)
/* PS7 Bit Fields */
#define MC_ME_PS7_S_ADC_2_MASK                   0x800u
#define MC_ME_PS7_S_ADC_2_SHIFT                  11u
#define MC_ME_PS7_S_ADC_2_WIDTH                  1u
#define MC_ME_PS7_S_ADC_2(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS7_S_ADC_2_SHIFT))&MC_ME_PS7_S_ADC_2_MASK)
#define MC_ME_PS7_S_ADC_0_MASK                   0x2000u
#define MC_ME_PS7_S_ADC_0_SHIFT                  13u
#define MC_ME_PS7_S_ADC_0_WIDTH                  1u
#define MC_ME_PS7_S_ADC_0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS7_S_ADC_0_SHIFT))&MC_ME_PS7_S_ADC_0_MASK)
#define MC_ME_PS7_S_SGEN_0_MASK                  0x8000u
#define MC_ME_PS7_S_SGEN_0_SHIFT                 15u
#define MC_ME_PS7_S_SGEN_0_WIDTH                 1u
#define MC_ME_PS7_S_SGEN_0(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS7_S_SGEN_0_SHIFT))&MC_ME_PS7_S_SGEN_0_MASK)
#define MC_ME_PS7_S_ETIMER_2_MASK                0x200000u
#define MC_ME_PS7_S_ETIMER_2_SHIFT               21u
#define MC_ME_PS7_S_ETIMER_2_WIDTH               1u
#define MC_ME_PS7_S_ETIMER_2(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_PS7_S_ETIMER_2_SHIFT))&MC_ME_PS7_S_ETIMER_2_MASK)
#define MC_ME_PS7_S_ETIMER_0_MASK                0x800000u
#define MC_ME_PS7_S_ETIMER_0_SHIFT               23u
#define MC_ME_PS7_S_ETIMER_0_WIDTH               1u
#define MC_ME_PS7_S_ETIMER_0(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_PS7_S_ETIMER_0_SHIFT))&MC_ME_PS7_S_ETIMER_0_MASK)
#define MC_ME_PS7_S_CTU_0_MASK                   0x8000000u
#define MC_ME_PS7_S_CTU_0_SHIFT                  27u
#define MC_ME_PS7_S_CTU_0_WIDTH                  1u
#define MC_ME_PS7_S_CTU_0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS7_S_CTU_0_SHIFT))&MC_ME_PS7_S_CTU_0_MASK)
#define MC_ME_PS7_S_PWM_0_MASK                   0x80000000u
#define MC_ME_PS7_S_PWM_0_SHIFT                  31u
#define MC_ME_PS7_S_PWM_0_WIDTH                  1u
#define MC_ME_PS7_S_PWM_0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS7_S_PWM_0_SHIFT))&MC_ME_PS7_S_PWM_0_MASK)
/* RUN_PC Bit Fields */
#define MC_ME_RUN_PC_RESET_MASK                  0x1u
#define MC_ME_RUN_PC_RESET_SHIFT                 0u
#define MC_ME_RUN_PC_RESET_WIDTH                 1u
#define MC_ME_RUN_PC_RESET(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_RESET_SHIFT))&MC_ME_RUN_PC_RESET_MASK)
#define MC_ME_RUN_PC_TEST_MASK                   0x2u
#define MC_ME_RUN_PC_TEST_SHIFT                  1u
#define MC_ME_RUN_PC_TEST_WIDTH                  1u
#define MC_ME_RUN_PC_TEST(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_TEST_SHIFT))&MC_ME_RUN_PC_TEST_MASK)
#define MC_ME_RUN_PC_SAFE_MASK                   0x4u
#define MC_ME_RUN_PC_SAFE_SHIFT                  2u
#define MC_ME_RUN_PC_SAFE_WIDTH                  1u
#define MC_ME_RUN_PC_SAFE(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_SAFE_SHIFT))&MC_ME_RUN_PC_SAFE_MASK)
#define MC_ME_RUN_PC_DRUN_MASK                   0x8u
#define MC_ME_RUN_PC_DRUN_SHIFT                  3u
#define MC_ME_RUN_PC_DRUN_WIDTH                  1u
#define MC_ME_RUN_PC_DRUN(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_DRUN_SHIFT))&MC_ME_RUN_PC_DRUN_MASK)
#define MC_ME_RUN_PC_RUN0_MASK                   0x10u
#define MC_ME_RUN_PC_RUN0_SHIFT                  4u
#define MC_ME_RUN_PC_RUN0_WIDTH                  1u
#define MC_ME_RUN_PC_RUN0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_RUN0_SHIFT))&MC_ME_RUN_PC_RUN0_MASK)
#define MC_ME_RUN_PC_RUN1_MASK                   0x20u
#define MC_ME_RUN_PC_RUN1_SHIFT                  5u
#define MC_ME_RUN_PC_RUN1_WIDTH                  1u
#define MC_ME_RUN_PC_RUN1(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_RUN1_SHIFT))&MC_ME_RUN_PC_RUN1_MASK)
#define MC_ME_RUN_PC_RUN2_MASK                   0x40u
#define MC_ME_RUN_PC_RUN2_SHIFT                  6u
#define MC_ME_RUN_PC_RUN2_WIDTH                  1u
#define MC_ME_RUN_PC_RUN2(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_RUN2_SHIFT))&MC_ME_RUN_PC_RUN2_MASK)
#define MC_ME_RUN_PC_RUN3_MASK                   0x80u
#define MC_ME_RUN_PC_RUN3_SHIFT                  7u
#define MC_ME_RUN_PC_RUN3_WIDTH                  1u
#define MC_ME_RUN_PC_RUN3(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_RUN3_SHIFT))&MC_ME_RUN_PC_RUN3_MASK)
/* LP_PC Bit Fields */
#define MC_ME_LP_PC_HALT0_MASK                   0x100u
#define MC_ME_LP_PC_HALT0_SHIFT                  8u
#define MC_ME_LP_PC_HALT0_WIDTH                  1u
#define MC_ME_LP_PC_HALT0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_LP_PC_HALT0_SHIFT))&MC_ME_LP_PC_HALT0_MASK)
#define MC_ME_LP_PC_STOP0_MASK                   0x400u
#define MC_ME_LP_PC_STOP0_SHIFT                  10u
#define MC_ME_LP_PC_STOP0_WIDTH                  1u
#define MC_ME_LP_PC_STOP0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_LP_PC_STOP0_SHIFT))&MC_ME_LP_PC_STOP0_MASK)
/* PCTLn Bit Fields */
#define MC_ME_PCTLn_RUN_CFG_MASK                 0x7u
#define MC_ME_PCTLn_RUN_CFG_SHIFT                0u
#define MC_ME_PCTLn_RUN_CFG_WIDTH                3u
#define MC_ME_PCTLn_RUN_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTLn_RUN_CFG_SHIFT))&MC_ME_PCTLn_RUN_CFG_MASK)
#define MC_ME_PCTLn_LP_CFG_MASK                  0x38u
#define MC_ME_PCTLn_LP_CFG_SHIFT                 3u
#define MC_ME_PCTLn_LP_CFG_WIDTH                 3u
#define MC_ME_PCTLn_LP_CFG(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTLn_LP_CFG_SHIFT))&MC_ME_PCTLn_LP_CFG_MASK)
#define MC_ME_PCTLn_DBG_F_MASK                   0x40u
#define MC_ME_PCTLn_DBG_F_SHIFT                  6u
#define MC_ME_PCTLn_DBG_F_WIDTH                  1u
#define MC_ME_PCTLn_DBG_F(x)                     (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTLn_DBG_F_SHIFT))&MC_ME_PCTLn_DBG_F_MASK)
/* CS Bit Fields */
#define MC_ME_CS_S_CORE0_MASK                    0x1u
#define MC_ME_CS_S_CORE0_SHIFT                   0u
#define MC_ME_CS_S_CORE0_WIDTH                   1u
#define MC_ME_CS_S_CORE0(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_CS_S_CORE0_SHIFT))&MC_ME_CS_S_CORE0_MASK)
/* CCTL0 Bit Fields */
#define MC_ME_CCTL0_RESET_MASK                   0x1u
#define MC_ME_CCTL0_RESET_SHIFT                  0u
#define MC_ME_CCTL0_RESET_WIDTH                  1u
#define MC_ME_CCTL0_RESET(x)                     (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL0_RESET_SHIFT))&MC_ME_CCTL0_RESET_MASK)
#define MC_ME_CCTL0_TEST_MASK                    0x2u
#define MC_ME_CCTL0_TEST_SHIFT                   1u
#define MC_ME_CCTL0_TEST_WIDTH                   1u
#define MC_ME_CCTL0_TEST(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL0_TEST_SHIFT))&MC_ME_CCTL0_TEST_MASK)
#define MC_ME_CCTL0_SAFE_MASK                    0x4u
#define MC_ME_CCTL0_SAFE_SHIFT                   2u
#define MC_ME_CCTL0_SAFE_WIDTH                   1u
#define MC_ME_CCTL0_SAFE(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL0_SAFE_SHIFT))&MC_ME_CCTL0_SAFE_MASK)
#define MC_ME_CCTL0_DRUN_MASK                    0x8u
#define MC_ME_CCTL0_DRUN_SHIFT                   3u
#define MC_ME_CCTL0_DRUN_WIDTH                   1u
#define MC_ME_CCTL0_DRUN(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL0_DRUN_SHIFT))&MC_ME_CCTL0_DRUN_MASK)
#define MC_ME_CCTL0_RUN0_MASK                    0x10u
#define MC_ME_CCTL0_RUN0_SHIFT                   4u
#define MC_ME_CCTL0_RUN0_WIDTH                   1u
#define MC_ME_CCTL0_RUN0(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL0_RUN0_SHIFT))&MC_ME_CCTL0_RUN0_MASK)
#define MC_ME_CCTL0_RUN1_MASK                    0x20u
#define MC_ME_CCTL0_RUN1_SHIFT                   5u
#define MC_ME_CCTL0_RUN1_WIDTH                   1u
#define MC_ME_CCTL0_RUN1(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL0_RUN1_SHIFT))&MC_ME_CCTL0_RUN1_MASK)
#define MC_ME_CCTL0_RUN2_MASK                    0x40u
#define MC_ME_CCTL0_RUN2_SHIFT                   6u
#define MC_ME_CCTL0_RUN2_WIDTH                   1u
#define MC_ME_CCTL0_RUN2(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL0_RUN2_SHIFT))&MC_ME_CCTL0_RUN2_MASK)
#define MC_ME_CCTL0_RUN3_MASK                    0x80u
#define MC_ME_CCTL0_RUN3_SHIFT                   7u
#define MC_ME_CCTL0_RUN3_WIDTH                   1u
#define MC_ME_CCTL0_RUN3(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL0_RUN3_SHIFT))&MC_ME_CCTL0_RUN3_MASK)
#define MC_ME_CCTL0_HALT0_MASK                   0x100u
#define MC_ME_CCTL0_HALT0_SHIFT                  8u
#define MC_ME_CCTL0_HALT0_WIDTH                  1u
#define MC_ME_CCTL0_HALT0(x)                     (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL0_HALT0_SHIFT))&MC_ME_CCTL0_HALT0_MASK)
#define MC_ME_CCTL0_STOP0_MASK                   0x400u
#define MC_ME_CCTL0_STOP0_SHIFT                  10u
#define MC_ME_CCTL0_STOP0_WIDTH                  1u
#define MC_ME_CCTL0_STOP0(x)                     (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL0_STOP0_SHIFT))&MC_ME_CCTL0_STOP0_MASK)
/* CADDR0 Bit Fields */
#define MC_ME_CADDR0_ADDR_MASK                   0xFFFFFFFCu
#define MC_ME_CADDR0_ADDR_SHIFT                  2u
#define MC_ME_CADDR0_ADDR_WIDTH                  30u
#define MC_ME_CADDR0_ADDR(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_CADDR0_ADDR_SHIFT))&MC_ME_CADDR0_ADDR_MASK)

/*!
 * @}
 */ /* end of group MC_ME_Register_Masks */


/*!
 * @}
 */ /* end of group MC_ME_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MC_PCU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_PCU_Peripheral_Access_Layer MC_PCU Peripheral Access Layer
 * @{
 */


/** MC_PCU - Size of Registers Arrays */

/** MC_PCU - Register Layout Typedef */
typedef struct {
  __I  uint32_t PCONF0;                            /**< Power Domain #0 Configuration Register, offset: 0x0 */
       uint8_t RESERVED_0[60];
  __I  uint32_t PSTAT;                             /**< Power Domain Status Register, offset: 0x40 */
} MC_PCU_Type, *MC_PCU_MemMapPtr;

 /** Number of instances of the MC_PCU module. */
#define MC_PCU_INSTANCE_COUNT                    (1u)


/* MC_PCU - Peripheral instance base addresses */
/** Peripheral MC_PCU base address */
#define MC_PCU_BASE                              (0xFFFA0000u)
/** Peripheral MC_PCU base pointer */
#define MC_PCU                                   ((MC_PCU_Type *)MC_PCU_BASE)
/** Array initializer of MC_PCU peripheral base addresses */
#define MC_PCU_BASE_ADDRS                        { MC_PCU_BASE }
/** Array initializer of MC_PCU peripheral base pointers */
#define MC_PCU_BASE_PTRS                         { MC_PCU }

/* ----------------------------------------------------------------------------
   -- MC_PCU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_PCU_Register_Masks MC_PCU Register Masks
 * @{
 */

/* PCONF0 Bit Fields */
#define MC_PCU_PCONF0_RST_MASK                   0x1u
#define MC_PCU_PCONF0_RST_SHIFT                  0u
#define MC_PCU_PCONF0_RST_WIDTH                  1u
#define MC_PCU_PCONF0_RST(x)                     (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_RST_SHIFT))&MC_PCU_PCONF0_RST_MASK)
#define MC_PCU_PCONF0_TEST_MASK                  0x2u
#define MC_PCU_PCONF0_TEST_SHIFT                 1u
#define MC_PCU_PCONF0_TEST_WIDTH                 1u
#define MC_PCU_PCONF0_TEST(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_TEST_SHIFT))&MC_PCU_PCONF0_TEST_MASK)
#define MC_PCU_PCONF0_SAFE_MASK                  0x4u
#define MC_PCU_PCONF0_SAFE_SHIFT                 2u
#define MC_PCU_PCONF0_SAFE_WIDTH                 1u
#define MC_PCU_PCONF0_SAFE(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_SAFE_SHIFT))&MC_PCU_PCONF0_SAFE_MASK)
#define MC_PCU_PCONF0_DRUN_MASK                  0x8u
#define MC_PCU_PCONF0_DRUN_SHIFT                 3u
#define MC_PCU_PCONF0_DRUN_WIDTH                 1u
#define MC_PCU_PCONF0_DRUN(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_DRUN_SHIFT))&MC_PCU_PCONF0_DRUN_MASK)
#define MC_PCU_PCONF0_RUN0_MASK                  0x10u
#define MC_PCU_PCONF0_RUN0_SHIFT                 4u
#define MC_PCU_PCONF0_RUN0_WIDTH                 1u
#define MC_PCU_PCONF0_RUN0(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_RUN0_SHIFT))&MC_PCU_PCONF0_RUN0_MASK)
#define MC_PCU_PCONF0_RUN1_MASK                  0x20u
#define MC_PCU_PCONF0_RUN1_SHIFT                 5u
#define MC_PCU_PCONF0_RUN1_WIDTH                 1u
#define MC_PCU_PCONF0_RUN1(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_RUN1_SHIFT))&MC_PCU_PCONF0_RUN1_MASK)
#define MC_PCU_PCONF0_RUN2_MASK                  0x40u
#define MC_PCU_PCONF0_RUN2_SHIFT                 6u
#define MC_PCU_PCONF0_RUN2_WIDTH                 1u
#define MC_PCU_PCONF0_RUN2(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_RUN2_SHIFT))&MC_PCU_PCONF0_RUN2_MASK)
#define MC_PCU_PCONF0_RUN3_MASK                  0x80u
#define MC_PCU_PCONF0_RUN3_SHIFT                 7u
#define MC_PCU_PCONF0_RUN3_WIDTH                 1u
#define MC_PCU_PCONF0_RUN3(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_RUN3_SHIFT))&MC_PCU_PCONF0_RUN3_MASK)
#define MC_PCU_PCONF0_HALT0_MASK                 0x100u
#define MC_PCU_PCONF0_HALT0_SHIFT                8u
#define MC_PCU_PCONF0_HALT0_WIDTH                1u
#define MC_PCU_PCONF0_HALT0(x)                   (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_HALT0_SHIFT))&MC_PCU_PCONF0_HALT0_MASK)
#define MC_PCU_PCONF0_STOP0_MASK                 0x400u
#define MC_PCU_PCONF0_STOP0_SHIFT                10u
#define MC_PCU_PCONF0_STOP0_WIDTH                1u
#define MC_PCU_PCONF0_STOP0(x)                   (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_STOP0_SHIFT))&MC_PCU_PCONF0_STOP0_MASK)
/* PSTAT Bit Fields */
#define MC_PCU_PSTAT_PD0_MASK                    0x1u
#define MC_PCU_PSTAT_PD0_SHIFT                   0u
#define MC_PCU_PSTAT_PD0_WIDTH                   1u
#define MC_PCU_PSTAT_PD0(x)                      (((uint32_t)(((uint32_t)(x))<<MC_PCU_PSTAT_PD0_SHIFT))&MC_PCU_PSTAT_PD0_MASK)

/*!
 * @}
 */ /* end of group MC_PCU_Register_Masks */


/*!
 * @}
 */ /* end of group MC_PCU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MC_RGM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_RGM_Peripheral_Access_Layer MC_RGM Peripheral Access Layer
 * @{
 */


/** MC_RGM - Size of Registers Arrays */

/** MC_RGM - Register Layout Typedef */
typedef struct {
  __IO uint32_t DES;                               /**< 'Destructive' Event Status Register, offset: 0x0 */
       uint8_t RESERVED_0[12];
  __I  uint32_t DERD;                              /**< 'Destructive' Event Reset Disable Register, offset: 0x10 */
       uint8_t RESERVED_1[28];
  __IO uint32_t DBRE;                              /**< Destructive' Bidirectional Reset Enable Register, offset: 0x30 */
       uint8_t RESERVED_2[716];
  __IO uint32_t FES;                               /**< 'Functional' Event Status Register, offset: 0x300 */
       uint8_t RESERVED_3[12];
  __IO uint32_t FERD;                              /**< 'Functional' Event Reset Disable Register, offset: 0x310 */
       uint8_t RESERVED_4[12];
  __IO uint32_t FEAR;                              /**< 'Functional' Event Alternate Request Register, offset: 0x320 */
       uint8_t RESERVED_5[12];
  __IO uint32_t FBRE;                              /**< 'Functional' Bidirectional Reset Enable Register, offset: 0x330 */
       uint8_t RESERVED_6[12];
  __IO uint32_t FESS;                              /**< 'Functional' Event Short Sequence Register, offset: 0x340 */
       uint8_t RESERVED_7[704];
  __IO uint8_t FRET;                               /**< 'Functional' Reset Escalation Threshold Register, offset: 0x604 */
       uint8_t RESERVED_8[3];
  __IO uint8_t DRET;                               /**< 'Destructive' Reset Escalation Threshold Register, offset: 0x608 */
} MC_RGM_Type, *MC_RGM_MemMapPtr;

 /** Number of instances of the MC_RGM module. */
#define MC_RGM_INSTANCE_COUNT                    (1u)


/* MC_RGM - Peripheral instance base addresses */
/** Peripheral MC_RGM base address */
#define MC_RGM_BASE                              (0xFFFA8000u)
/** Peripheral MC_RGM base pointer */
#define MC_RGM                                   ((MC_RGM_Type *)MC_RGM_BASE)
/** Array initializer of MC_RGM peripheral base addresses */
#define MC_RGM_BASE_ADDRS                        { MC_RGM_BASE }
/** Array initializer of MC_RGM peripheral base pointers */
#define MC_RGM_BASE_PTRS                         { MC_RGM }

/* ----------------------------------------------------------------------------
   -- MC_RGM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_RGM_Register_Masks MC_RGM Register Masks
 * @{
 */

/* DES Bit Fields */
#define MC_RGM_DES_F_POR_MASK                    0x1u
#define MC_RGM_DES_F_POR_SHIFT                   0u
#define MC_RGM_DES_F_POR_WIDTH                   1u
#define MC_RGM_DES_F_POR(x)                      (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_POR_SHIFT))&MC_RGM_DES_F_POR_MASK)
#define MC_RGM_DES_F_SOFT_DEST_MASK              0x8u
#define MC_RGM_DES_F_SOFT_DEST_SHIFT             3u
#define MC_RGM_DES_F_SOFT_DEST_WIDTH             1u
#define MC_RGM_DES_F_SOFT_DEST(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_SOFT_DEST_SHIFT))&MC_RGM_DES_F_SOFT_DEST_MASK)
#define MC_RGM_DES_F_FFRR_MASK                   0x10u
#define MC_RGM_DES_F_FFRR_SHIFT                  4u
#define MC_RGM_DES_F_FFRR_WIDTH                  1u
#define MC_RGM_DES_F_FFRR(x)                     (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_FFRR_SHIFT))&MC_RGM_DES_F_FFRR_MASK)
#define MC_RGM_DES_F_SUF_MASK                    0x20u
#define MC_RGM_DES_F_SUF_SHIFT                   5u
#define MC_RGM_DES_F_SUF_WIDTH                   1u
#define MC_RGM_DES_F_SUF(x)                      (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_SUF_SHIFT))&MC_RGM_DES_F_SUF_MASK)
#define MC_RGM_DES_F_EDR_MASK                    0x100u
#define MC_RGM_DES_F_EDR_SHIFT                   8u
#define MC_RGM_DES_F_EDR_WIDTH                   1u
#define MC_RGM_DES_F_EDR(x)                      (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_EDR_SHIFT))&MC_RGM_DES_F_EDR_MASK)
#define MC_RGM_DES_F_FIF_MASK                    0x200u
#define MC_RGM_DES_F_FIF_SHIFT                   9u
#define MC_RGM_DES_F_FIF_WIDTH                   1u
#define MC_RGM_DES_F_FIF(x)                      (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_FIF_SHIFT))&MC_RGM_DES_F_FIF_MASK)
#define MC_RGM_DES_F_TSR_DEST_MASK               0x800000u
#define MC_RGM_DES_F_TSR_DEST_SHIFT              23u
#define MC_RGM_DES_F_TSR_DEST_WIDTH              1u
#define MC_RGM_DES_F_TSR_DEST(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_TSR_DEST_SHIFT))&MC_RGM_DES_F_TSR_DEST_MASK)
#define MC_RGM_DES_F_VOR_DEST_MASK               0x1000000u
#define MC_RGM_DES_F_VOR_DEST_SHIFT              24u
#define MC_RGM_DES_F_VOR_DEST_WIDTH              1u
#define MC_RGM_DES_F_VOR_DEST(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_VOR_DEST_SHIFT))&MC_RGM_DES_F_VOR_DEST_MASK)
/* DERD Bit Fields */
#define MC_RGM_DERD_D_POR_MASK                   0x1u
#define MC_RGM_DERD_D_POR_SHIFT                  0u
#define MC_RGM_DERD_D_POR_WIDTH                  1u
#define MC_RGM_DERD_D_POR(x)                     (((uint32_t)(((uint32_t)(x))<<MC_RGM_DERD_D_POR_SHIFT))&MC_RGM_DERD_D_POR_MASK)
#define MC_RGM_DERD_D_SOF_DEST_MASK              0x8u
#define MC_RGM_DERD_D_SOF_DEST_SHIFT             3u
#define MC_RGM_DERD_D_SOF_DEST_WIDTH             1u
#define MC_RGM_DERD_D_SOF_DEST(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_DERD_D_SOF_DEST_SHIFT))&MC_RGM_DERD_D_SOF_DEST_MASK)
#define MC_RGM_DERD_D_FFRR_MASK                  0x10u
#define MC_RGM_DERD_D_FFRR_SHIFT                 4u
#define MC_RGM_DERD_D_FFRR_WIDTH                 1u
#define MC_RGM_DERD_D_FFRR(x)                    (((uint32_t)(((uint32_t)(x))<<MC_RGM_DERD_D_FFRR_SHIFT))&MC_RGM_DERD_D_FFRR_MASK)
#define MC_RGM_DERD_F_SUF_MASK                   0x20u
#define MC_RGM_DERD_F_SUF_SHIFT                  5u
#define MC_RGM_DERD_F_SUF_WIDTH                  1u
#define MC_RGM_DERD_F_SUF(x)                     (((uint32_t)(((uint32_t)(x))<<MC_RGM_DERD_F_SUF_SHIFT))&MC_RGM_DERD_F_SUF_MASK)
#define MC_RGM_DERD_D_EDR_MASK                   0x100u
#define MC_RGM_DERD_D_EDR_SHIFT                  8u
#define MC_RGM_DERD_D_EDR_WIDTH                  1u
#define MC_RGM_DERD_D_EDR(x)                     (((uint32_t)(((uint32_t)(x))<<MC_RGM_DERD_D_EDR_SHIFT))&MC_RGM_DERD_D_EDR_MASK)
#define MC_RGM_DERD_F_FIF_MASK                   0x200u
#define MC_RGM_DERD_F_FIF_SHIFT                  9u
#define MC_RGM_DERD_F_FIF_WIDTH                  1u
#define MC_RGM_DERD_F_FIF(x)                     (((uint32_t)(((uint32_t)(x))<<MC_RGM_DERD_F_FIF_SHIFT))&MC_RGM_DERD_F_FIF_MASK)
#define MC_RGM_DERD_D_TSR_DEST_MASK              0x800000u
#define MC_RGM_DERD_D_TSR_DEST_SHIFT             23u
#define MC_RGM_DERD_D_TSR_DEST_WIDTH             1u
#define MC_RGM_DERD_D_TSR_DEST(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_DERD_D_TSR_DEST_SHIFT))&MC_RGM_DERD_D_TSR_DEST_MASK)
#define MC_RGM_DERD_D_VOR_DEST_MASK              0x1000000u
#define MC_RGM_DERD_D_VOR_DEST_SHIFT             24u
#define MC_RGM_DERD_D_VOR_DEST_WIDTH             1u
#define MC_RGM_DERD_D_VOR_DEST(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_DERD_D_VOR_DEST_SHIFT))&MC_RGM_DERD_D_VOR_DEST_MASK)
/* DBRE Bit Fields */
#define MC_RGM_DBRE_BE_POR_MASK                  0x1u
#define MC_RGM_DBRE_BE_POR_SHIFT                 0u
#define MC_RGM_DBRE_BE_POR_WIDTH                 1u
#define MC_RGM_DBRE_BE_POR(x)                    (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_POR_SHIFT))&MC_RGM_DBRE_BE_POR_MASK)
#define MC_RGM_DBRE_BE_SOF_DEST_MASK             0x8u
#define MC_RGM_DBRE_BE_SOF_DEST_SHIFT            3u
#define MC_RGM_DBRE_BE_SOF_DEST_WIDTH            1u
#define MC_RGM_DBRE_BE_SOF_DEST(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_SOF_DEST_SHIFT))&MC_RGM_DBRE_BE_SOF_DEST_MASK)
#define MC_RGM_DBRE_BE_FFRR_MASK                 0x10u
#define MC_RGM_DBRE_BE_FFRR_SHIFT                4u
#define MC_RGM_DBRE_BE_FFRR_WIDTH                1u
#define MC_RGM_DBRE_BE_FFRR(x)                   (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_FFRR_SHIFT))&MC_RGM_DBRE_BE_FFRR_MASK)
#define MC_RGM_DBRE_F_SUF_MASK                   0x20u
#define MC_RGM_DBRE_F_SUF_SHIFT                  5u
#define MC_RGM_DBRE_F_SUF_WIDTH                  1u
#define MC_RGM_DBRE_F_SUF(x)                     (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_F_SUF_SHIFT))&MC_RGM_DBRE_F_SUF_MASK)
#define MC_RGM_DBRE_BE_EDR_MASK                  0x100u
#define MC_RGM_DBRE_BE_EDR_SHIFT                 8u
#define MC_RGM_DBRE_BE_EDR_WIDTH                 1u
#define MC_RGM_DBRE_BE_EDR(x)                    (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_EDR_SHIFT))&MC_RGM_DBRE_BE_EDR_MASK)
#define MC_RGM_DBRE_F_FIF_MASK                   0x200u
#define MC_RGM_DBRE_F_FIF_SHIFT                  9u
#define MC_RGM_DBRE_F_FIF_WIDTH                  1u
#define MC_RGM_DBRE_F_FIF(x)                     (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_F_FIF_SHIFT))&MC_RGM_DBRE_F_FIF_MASK)
#define MC_RGM_DBRE_BE_TSR_DEST_MASK             0x800000u
#define MC_RGM_DBRE_BE_TSR_DEST_SHIFT            23u
#define MC_RGM_DBRE_BE_TSR_DEST_WIDTH            1u
#define MC_RGM_DBRE_BE_TSR_DEST(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_TSR_DEST_SHIFT))&MC_RGM_DBRE_BE_TSR_DEST_MASK)
#define MC_RGM_DBRE_BE_VOR_DEST_MASK             0x1000000u
#define MC_RGM_DBRE_BE_VOR_DEST_SHIFT            24u
#define MC_RGM_DBRE_BE_VOR_DEST_WIDTH            1u
#define MC_RGM_DBRE_BE_VOR_DEST(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_VOR_DEST_SHIFT))&MC_RGM_DBRE_BE_VOR_DEST_MASK)
/* FES Bit Fields */
#define MC_RGM_FES_F_EXR_MASK                    0x1u
#define MC_RGM_FES_F_EXR_SHIFT                   0u
#define MC_RGM_FES_F_EXR_WIDTH                   1u
#define MC_RGM_FES_F_EXR(x)                      (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_EXR_SHIFT))&MC_RGM_FES_F_EXR_MASK)
#define MC_RGM_FES_F_ST_DONE_MASK                0x4u
#define MC_RGM_FES_F_ST_DONE_SHIFT               2u
#define MC_RGM_FES_F_ST_DONE_WIDTH               1u
#define MC_RGM_FES_F_ST_DONE(x)                  (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_ST_DONE_SHIFT))&MC_RGM_FES_F_ST_DONE_MASK)
#define MC_RGM_FES_F_SOFT_FUNC_MASK              0x8u
#define MC_RGM_FES_F_SOFT_FUNC_SHIFT             3u
#define MC_RGM_FES_F_SOFT_FUNC_WIDTH             1u
#define MC_RGM_FES_F_SOFT_FUNC(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_SOFT_FUNC_SHIFT))&MC_RGM_FES_F_SOFT_FUNC_MASK)
#define MC_RGM_FES_F_FCCU_HARD_MASK              0x20u
#define MC_RGM_FES_F_FCCU_HARD_SHIFT             5u
#define MC_RGM_FES_F_FCCU_HARD_WIDTH             1u
#define MC_RGM_FES_F_FCCU_HARD(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_FCCU_HARD_SHIFT))&MC_RGM_FES_F_FCCU_HARD_MASK)
#define MC_RGM_FES_F_FCCU_SOFT_MASK              0x40u
#define MC_RGM_FES_F_FCCU_SOFT_SHIFT             6u
#define MC_RGM_FES_F_FCCU_SOFT_WIDTH             1u
#define MC_RGM_FES_F_FCCU_SOFT(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_FCCU_SOFT_SHIFT))&MC_RGM_FES_F_FCCU_SOFT_MASK)
#define MC_RGM_FES_F_JTAG_FUNC_MASK              0x400u
#define MC_RGM_FES_F_JTAG_FUNC_SHIFT             10u
#define MC_RGM_FES_F_JTAG_FUNC_WIDTH             1u
#define MC_RGM_FES_F_JTAG_FUNC(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_JTAG_FUNC_SHIFT))&MC_RGM_FES_F_JTAG_FUNC_MASK)
#define MC_RGM_FES_F_TSR_FUNC_MASK               0x800000u
#define MC_RGM_FES_F_TSR_FUNC_SHIFT              23u
#define MC_RGM_FES_F_TSR_FUNC_WIDTH              1u
#define MC_RGM_FES_F_TSR_FUNC(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_TSR_FUNC_SHIFT))&MC_RGM_FES_F_TSR_FUNC_MASK)
#define MC_RGM_FES_F_VOR_FUNC_MASK               0x1000000u
#define MC_RGM_FES_F_VOR_FUNC_SHIFT              24u
#define MC_RGM_FES_F_VOR_FUNC_WIDTH              1u
#define MC_RGM_FES_F_VOR_FUNC(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_VOR_FUNC_SHIFT))&MC_RGM_FES_F_VOR_FUNC_MASK)
/* FERD Bit Fields */
#define MC_RGM_FERD_D_ST_DONE_MASK               0x4u
#define MC_RGM_FERD_D_ST_DONE_SHIFT              2u
#define MC_RGM_FERD_D_ST_DONE_WIDTH              1u
#define MC_RGM_FERD_D_ST_DONE(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_ST_DONE_SHIFT))&MC_RGM_FERD_D_ST_DONE_MASK)
#define MC_RGM_FERD_D_SOFT_FUNC_MASK             0x8u
#define MC_RGM_FERD_D_SOFT_FUNC_SHIFT            3u
#define MC_RGM_FERD_D_SOFT_FUNC_WIDTH            1u
#define MC_RGM_FERD_D_SOFT_FUNC(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_SOFT_FUNC_SHIFT))&MC_RGM_FERD_D_SOFT_FUNC_MASK)
#define MC_RGM_FERD_D_FCCU_HARD_MASK             0x20u
#define MC_RGM_FERD_D_FCCU_HARD_SHIFT            5u
#define MC_RGM_FERD_D_FCCU_HARD_WIDTH            1u
#define MC_RGM_FERD_D_FCCU_HARD(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_FCCU_HARD_SHIFT))&MC_RGM_FERD_D_FCCU_HARD_MASK)
#define MC_RGM_FERD_D_FCCU_SOFT_MASK             0x40u
#define MC_RGM_FERD_D_FCCU_SOFT_SHIFT            6u
#define MC_RGM_FERD_D_FCCU_SOFT_WIDTH            1u
#define MC_RGM_FERD_D_FCCU_SOFT(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_FCCU_SOFT_SHIFT))&MC_RGM_FERD_D_FCCU_SOFT_MASK)
#define MC_RGM_FERD_D_JTAG_FUNC_MASK             0x400u
#define MC_RGM_FERD_D_JTAG_FUNC_SHIFT            10u
#define MC_RGM_FERD_D_JTAG_FUNC_WIDTH            1u
#define MC_RGM_FERD_D_JTAG_FUNC(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_JTAG_FUNC_SHIFT))&MC_RGM_FERD_D_JTAG_FUNC_MASK)
#define MC_RGM_FERD_D_TSR_FUNC_MASK              0x800000u
#define MC_RGM_FERD_D_TSR_FUNC_SHIFT             23u
#define MC_RGM_FERD_D_TSR_FUNC_WIDTH             1u
#define MC_RGM_FERD_D_TSR_FUNC(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_TSR_FUNC_SHIFT))&MC_RGM_FERD_D_TSR_FUNC_MASK)
#define MC_RGM_FERD_D_VOR_FUNC_MASK              0x1000000u
#define MC_RGM_FERD_D_VOR_FUNC_SHIFT             24u
#define MC_RGM_FERD_D_VOR_FUNC_WIDTH             1u
#define MC_RGM_FERD_D_VOR_FUNC(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_VOR_FUNC_SHIFT))&MC_RGM_FERD_D_VOR_FUNC_MASK)
/* FEAR Bit Fields */
#define MC_RGM_FEAR_AR_JTAG_FUNC_MASK            0x400u
#define MC_RGM_FEAR_AR_JTAG_FUNC_SHIFT           10u
#define MC_RGM_FEAR_AR_JTAG_FUNC_WIDTH           1u
#define MC_RGM_FEAR_AR_JTAG_FUNC(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FEAR_AR_JTAG_FUNC_SHIFT))&MC_RGM_FEAR_AR_JTAG_FUNC_MASK)
#define MC_RGM_FEAR_AR_TSR_FUNC_MASK             0x800000u
#define MC_RGM_FEAR_AR_TSR_FUNC_SHIFT            23u
#define MC_RGM_FEAR_AR_TSR_FUNC_WIDTH            1u
#define MC_RGM_FEAR_AR_TSR_FUNC(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FEAR_AR_TSR_FUNC_SHIFT))&MC_RGM_FEAR_AR_TSR_FUNC_MASK)
#define MC_RGM_FEAR_AR_VOR_FUNC_MASK             0x1000000u
#define MC_RGM_FEAR_AR_VOR_FUNC_SHIFT            24u
#define MC_RGM_FEAR_AR_VOR_FUNC_WIDTH            1u
#define MC_RGM_FEAR_AR_VOR_FUNC(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FEAR_AR_VOR_FUNC_SHIFT))&MC_RGM_FEAR_AR_VOR_FUNC_MASK)
/* FBRE Bit Fields */
#define MC_RGM_FBRE_BE_EXR_MASK                  0x1u
#define MC_RGM_FBRE_BE_EXR_SHIFT                 0u
#define MC_RGM_FBRE_BE_EXR_WIDTH                 1u
#define MC_RGM_FBRE_BE_EXR(x)                    (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_EXR_SHIFT))&MC_RGM_FBRE_BE_EXR_MASK)
#define MC_RGM_FBRE_BE_ST_DONE_MASK              0x4u
#define MC_RGM_FBRE_BE_ST_DONE_SHIFT             2u
#define MC_RGM_FBRE_BE_ST_DONE_WIDTH             1u
#define MC_RGM_FBRE_BE_ST_DONE(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_ST_DONE_SHIFT))&MC_RGM_FBRE_BE_ST_DONE_MASK)
#define MC_RGM_FBRE_BE_SOFT_FUNC_MASK            0x8u
#define MC_RGM_FBRE_BE_SOFT_FUNC_SHIFT           3u
#define MC_RGM_FBRE_BE_SOFT_FUNC_WIDTH           1u
#define MC_RGM_FBRE_BE_SOFT_FUNC(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_SOFT_FUNC_SHIFT))&MC_RGM_FBRE_BE_SOFT_FUNC_MASK)
#define MC_RGM_FBRE_BE_FCCU_HARD_MASK            0x20u
#define MC_RGM_FBRE_BE_FCCU_HARD_SHIFT           5u
#define MC_RGM_FBRE_BE_FCCU_HARD_WIDTH           1u
#define MC_RGM_FBRE_BE_FCCU_HARD(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_FCCU_HARD_SHIFT))&MC_RGM_FBRE_BE_FCCU_HARD_MASK)
#define MC_RGM_FBRE_BE_FCCU_SOFT_MASK            0x40u
#define MC_RGM_FBRE_BE_FCCU_SOFT_SHIFT           6u
#define MC_RGM_FBRE_BE_FCCU_SOFT_WIDTH           1u
#define MC_RGM_FBRE_BE_FCCU_SOFT(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_FCCU_SOFT_SHIFT))&MC_RGM_FBRE_BE_FCCU_SOFT_MASK)
#define MC_RGM_FBRE_BE_JTAG_FUNC_MASK            0x400u
#define MC_RGM_FBRE_BE_JTAG_FUNC_SHIFT           10u
#define MC_RGM_FBRE_BE_JTAG_FUNC_WIDTH           1u
#define MC_RGM_FBRE_BE_JTAG_FUNC(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_JTAG_FUNC_SHIFT))&MC_RGM_FBRE_BE_JTAG_FUNC_MASK)
#define MC_RGM_FBRE_BE_TSR_FUNC_MASK             0x800000u
#define MC_RGM_FBRE_BE_TSR_FUNC_SHIFT            23u
#define MC_RGM_FBRE_BE_TSR_FUNC_WIDTH            1u
#define MC_RGM_FBRE_BE_TSR_FUNC(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_TSR_FUNC_SHIFT))&MC_RGM_FBRE_BE_TSR_FUNC_MASK)
#define MC_RGM_FBRE_BE_VOR_FUNC_MASK             0x1000000u
#define MC_RGM_FBRE_BE_VOR_FUNC_SHIFT            24u
#define MC_RGM_FBRE_BE_VOR_FUNC_WIDTH            1u
#define MC_RGM_FBRE_BE_VOR_FUNC(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_VOR_FUNC_SHIFT))&MC_RGM_FBRE_BE_VOR_FUNC_MASK)
/* FESS Bit Fields */
#define MC_RGM_FESS_SS_EXR_MASK                  0x1u
#define MC_RGM_FESS_SS_EXR_SHIFT                 0u
#define MC_RGM_FESS_SS_EXR_WIDTH                 1u
#define MC_RGM_FESS_SS_EXR(x)                    (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_EXR_SHIFT))&MC_RGM_FESS_SS_EXR_MASK)
#define MC_RGM_FESS_SS_ST_DONE_MASK              0x4u
#define MC_RGM_FESS_SS_ST_DONE_SHIFT             2u
#define MC_RGM_FESS_SS_ST_DONE_WIDTH             1u
#define MC_RGM_FESS_SS_ST_DONE(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_ST_DONE_SHIFT))&MC_RGM_FESS_SS_ST_DONE_MASK)
#define MC_RGM_FESS_SS_SOFT_FUNC_MASK            0x8u
#define MC_RGM_FESS_SS_SOFT_FUNC_SHIFT           3u
#define MC_RGM_FESS_SS_SOFT_FUNC_WIDTH           1u
#define MC_RGM_FESS_SS_SOFT_FUNC(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_SOFT_FUNC_SHIFT))&MC_RGM_FESS_SS_SOFT_FUNC_MASK)
#define MC_RGM_FESS_SS_FCCU_HARD_MASK            0x20u
#define MC_RGM_FESS_SS_FCCU_HARD_SHIFT           5u
#define MC_RGM_FESS_SS_FCCU_HARD_WIDTH           1u
#define MC_RGM_FESS_SS_FCCU_HARD(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_FCCU_HARD_SHIFT))&MC_RGM_FESS_SS_FCCU_HARD_MASK)
#define MC_RGM_FESS_SS_FCCU_SOFT_MASK            0x40u
#define MC_RGM_FESS_SS_FCCU_SOFT_SHIFT           6u
#define MC_RGM_FESS_SS_FCCU_SOFT_WIDTH           1u
#define MC_RGM_FESS_SS_FCCU_SOFT(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_FCCU_SOFT_SHIFT))&MC_RGM_FESS_SS_FCCU_SOFT_MASK)
#define MC_RGM_FESS_SS_JTAG_FUNC_MASK            0x400u
#define MC_RGM_FESS_SS_JTAG_FUNC_SHIFT           10u
#define MC_RGM_FESS_SS_JTAG_FUNC_WIDTH           1u
#define MC_RGM_FESS_SS_JTAG_FUNC(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_JTAG_FUNC_SHIFT))&MC_RGM_FESS_SS_JTAG_FUNC_MASK)
#define MC_RGM_FESS_SS_TSR_FUNC_MASK             0x800000u
#define MC_RGM_FESS_SS_TSR_FUNC_SHIFT            23u
#define MC_RGM_FESS_SS_TSR_FUNC_WIDTH            1u
#define MC_RGM_FESS_SS_TSR_FUNC(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_TSR_FUNC_SHIFT))&MC_RGM_FESS_SS_TSR_FUNC_MASK)
#define MC_RGM_FESS_SS_VOR_FUNC_MASK             0x1000000u
#define MC_RGM_FESS_SS_VOR_FUNC_SHIFT            24u
#define MC_RGM_FESS_SS_VOR_FUNC_WIDTH            1u
#define MC_RGM_FESS_SS_VOR_FUNC(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_VOR_FUNC_SHIFT))&MC_RGM_FESS_SS_VOR_FUNC_MASK)
/* FRET Bit Fields */
#define MC_RGM_FRET_FRET_MASK                    0xFu
#define MC_RGM_FRET_FRET_SHIFT                   0u
#define MC_RGM_FRET_FRET_WIDTH                   4u
#define MC_RGM_FRET_FRET(x)                      (((uint8_t)(((uint8_t)(x))<<MC_RGM_FRET_FRET_SHIFT))&MC_RGM_FRET_FRET_MASK)
/* DRET Bit Fields */
#define MC_RGM_DRET_DRET_MASK                    0xFu
#define MC_RGM_DRET_DRET_SHIFT                   0u
#define MC_RGM_DRET_DRET_WIDTH                   4u
#define MC_RGM_DRET_DRET(x)                      (((uint8_t)(((uint8_t)(x))<<MC_RGM_DRET_DRET_SHIFT))&MC_RGM_DRET_DRET_MASK)

/*!
 * @}
 */ /* end of group MC_RGM_Register_Masks */


/*!
 * @}
 */ /* end of group MC_RGM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MEMU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MEMU_Peripheral_Access_Layer MEMU Peripheral Access Layer
 * @{
 */


/** MEMU - Size of Registers Arrays */
#define MEMU_SYS_RAM_CERR_COUNT                  10u
#define MEMU_SYS_RAM_OFLW_COUNT                  3u
#define MEMU_PERIPH_RAM_CERR_COUNT               2u
#define MEMU_FLASH_CERR_COUNT                    20u

/** MEMU - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTRL;                              /**< Control register, offset: 0x0 */
  __IO uint32_t ERR_FLAG;                          /**< Error flag register, offset: 0x4 */
       uint8_t RESERVED_0[4];
  __IO uint32_t DEBUGr;                            /**< Debug register, offset: 0xC */
       uint8_t RESERVED_1[16];
  struct {                                         /* offset: 0x20, array step: 0x8 */
    __IO uint32_t STS;                               /**< System RAM correctable error reporting table status register, array offset: 0x20, array step: 0x8 */
    __IO uint32_t ADDR;                              /**< System RAM correctable error reporting table address register, array offset: 0x24, array step: 0x8 */
  } SYS_RAM_CERR[MEMU_SYS_RAM_CERR_COUNT];
  __IO uint32_t SYS_RAM_UNCERR_STS;                /**< System RAM uncorrectable error reporting table status register, offset: 0x70 */
  __IO uint32_t SYS_RAM_UNCERR_ADDR;               /**< System RAM uncorrectable error reporting table address register, offset: 0x74 */
  __IO uint32_t SYS_RAM_OFLW[MEMU_SYS_RAM_OFLW_COUNT]; /**< System RAM concurrent overflow register, array offset: 0x78, array step: 0x4 */
       uint8_t RESERVED_2[1436];
  struct {                                         /* offset: 0x620, array step: 0x8 */
    __IO uint32_t STS;                               /**< Peripheral RAM correctable error reporting table status register, array offset: 0x620, array step: 0x8 */
    __IO uint32_t ADDR;                              /**< Peripheral RAM correctable error reporting table address register, array offset: 0x624, array step: 0x8 */
  } PERIPH_RAM_CERR[MEMU_PERIPH_RAM_CERR_COUNT];
  __IO uint32_t PERIPH_RAM_UNCERR_STS;             /**< Peripheral RAM uncorrectable error reporting table status register, offset: 0x630 */
  __IO uint32_t PERIPH_RAM_UNCERR_ADDR;            /**< Peripheral RAM uncorrectable error reporting table address register, offset: 0x634 */
  __IO uint32_t PERIPH_RAM_OFLW0;                  /**< Peripheral RAM concurrent overflow register, offset: 0x638 */
       uint8_t RESERVED_3[1508];
  struct {                                         /* offset: 0xC20, array step: 0x8 */
    __IO uint32_t STS;                               /**< Flash memory correctable error reporting table status register, array offset: 0xC20, array step: 0x8 */
    __IO uint32_t ADDR;                              /**< Flash memory correctable error reporting table address register, array offset: 0xC24, array step: 0x8 */
  } FLASH_CERR[MEMU_FLASH_CERR_COUNT];
  __IO uint32_t FLASH_UNCERR_STS;                  /**< Flash memory uncorrectable error reporting table status register, offset: 0xCC0 */
  __IO uint32_t FLASH_UNCERR_ADDR;                 /**< Flash memory uncorrectable error reporting table address register, offset: 0xCC4 */
  __IO uint32_t FLASH_OFLW0;                       /**< Flash memory concurrent overflow register, offset: 0xCC8 */
} MEMU_Type, *MEMU_MemMapPtr;

 /** Number of instances of the MEMU module. */
#define MEMU_INSTANCE_COUNT                      (1u)


/* MEMU - Peripheral instance base addresses */
/** Peripheral MEMU base address */
#define MEMU_BASE                                (0xFFF50000u)
/** Peripheral MEMU base pointer */
#define MEMU                                     ((MEMU_Type *)MEMU_BASE)
/** Array initializer of MEMU peripheral base addresses */
#define MEMU_BASE_ADDRS                          { MEMU_BASE }
/** Array initializer of MEMU peripheral base pointers */
#define MEMU_BASE_PTRS                           { MEMU }

/* ----------------------------------------------------------------------------
   -- MEMU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MEMU_Register_Masks MEMU Register Masks
 * @{
 */

/* CTRL Bit Fields */
#define MEMU_CTRL_SWR_MASK                       0x8000u
#define MEMU_CTRL_SWR_SHIFT                      15u
#define MEMU_CTRL_SWR_WIDTH                      1u
#define MEMU_CTRL_SWR(x)                         (((uint32_t)(((uint32_t)(x))<<MEMU_CTRL_SWR_SHIFT))&MEMU_CTRL_SWR_MASK)
/* ERR_FLAG Bit Fields */
#define MEMU_ERR_FLAG_SR_EBO_MASK                0x1u
#define MEMU_ERR_FLAG_SR_EBO_SHIFT               0u
#define MEMU_ERR_FLAG_SR_EBO_WIDTH               1u
#define MEMU_ERR_FLAG_SR_EBO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_SR_EBO_SHIFT))&MEMU_ERR_FLAG_SR_EBO_MASK)
#define MEMU_ERR_FLAG_SR_UCO_MASK                0x2u
#define MEMU_ERR_FLAG_SR_UCO_SHIFT               1u
#define MEMU_ERR_FLAG_SR_UCO_WIDTH               1u
#define MEMU_ERR_FLAG_SR_UCO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_SR_UCO_SHIFT))&MEMU_ERR_FLAG_SR_UCO_MASK)
#define MEMU_ERR_FLAG_SR_CEO_MASK                0x4u
#define MEMU_ERR_FLAG_SR_CEO_SHIFT               2u
#define MEMU_ERR_FLAG_SR_CEO_WIDTH               1u
#define MEMU_ERR_FLAG_SR_CEO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_SR_CEO_SHIFT))&MEMU_ERR_FLAG_SR_CEO_MASK)
#define MEMU_ERR_FLAG_SR_UCE_MASK                0x8u
#define MEMU_ERR_FLAG_SR_UCE_SHIFT               3u
#define MEMU_ERR_FLAG_SR_UCE_WIDTH               1u
#define MEMU_ERR_FLAG_SR_UCE(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_SR_UCE_SHIFT))&MEMU_ERR_FLAG_SR_UCE_MASK)
#define MEMU_ERR_FLAG_SR_CE_MASK                 0x10u
#define MEMU_ERR_FLAG_SR_CE_SHIFT                4u
#define MEMU_ERR_FLAG_SR_CE_WIDTH                1u
#define MEMU_ERR_FLAG_SR_CE(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_SR_CE_SHIFT))&MEMU_ERR_FLAG_SR_CE_MASK)
#define MEMU_ERR_FLAG_F_EBO_MASK                 0x100u
#define MEMU_ERR_FLAG_F_EBO_SHIFT                8u
#define MEMU_ERR_FLAG_F_EBO_WIDTH                1u
#define MEMU_ERR_FLAG_F_EBO(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_F_EBO_SHIFT))&MEMU_ERR_FLAG_F_EBO_MASK)
#define MEMU_ERR_FLAG_F_UCO_MASK                 0x200u
#define MEMU_ERR_FLAG_F_UCO_SHIFT                9u
#define MEMU_ERR_FLAG_F_UCO_WIDTH                1u
#define MEMU_ERR_FLAG_F_UCO(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_F_UCO_SHIFT))&MEMU_ERR_FLAG_F_UCO_MASK)
#define MEMU_ERR_FLAG_F_CEO_MASK                 0x400u
#define MEMU_ERR_FLAG_F_CEO_SHIFT                10u
#define MEMU_ERR_FLAG_F_CEO_WIDTH                1u
#define MEMU_ERR_FLAG_F_CEO(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_F_CEO_SHIFT))&MEMU_ERR_FLAG_F_CEO_MASK)
#define MEMU_ERR_FLAG_F_UCE_MASK                 0x800u
#define MEMU_ERR_FLAG_F_UCE_SHIFT                11u
#define MEMU_ERR_FLAG_F_UCE_WIDTH                1u
#define MEMU_ERR_FLAG_F_UCE(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_F_UCE_SHIFT))&MEMU_ERR_FLAG_F_UCE_MASK)
#define MEMU_ERR_FLAG_F_CE_MASK                  0x1000u
#define MEMU_ERR_FLAG_F_CE_SHIFT                 12u
#define MEMU_ERR_FLAG_F_CE_WIDTH                 1u
#define MEMU_ERR_FLAG_F_CE(x)                    (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_F_CE_SHIFT))&MEMU_ERR_FLAG_F_CE_MASK)
#define MEMU_ERR_FLAG_PR_EBO_MASK                0x10000u
#define MEMU_ERR_FLAG_PR_EBO_SHIFT               16u
#define MEMU_ERR_FLAG_PR_EBO_WIDTH               1u
#define MEMU_ERR_FLAG_PR_EBO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_PR_EBO_SHIFT))&MEMU_ERR_FLAG_PR_EBO_MASK)
#define MEMU_ERR_FLAG_PR_UCO_MASK                0x20000u
#define MEMU_ERR_FLAG_PR_UCO_SHIFT               17u
#define MEMU_ERR_FLAG_PR_UCO_WIDTH               1u
#define MEMU_ERR_FLAG_PR_UCO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_PR_UCO_SHIFT))&MEMU_ERR_FLAG_PR_UCO_MASK)
#define MEMU_ERR_FLAG_PR_CEO_MASK                0x40000u
#define MEMU_ERR_FLAG_PR_CEO_SHIFT               18u
#define MEMU_ERR_FLAG_PR_CEO_WIDTH               1u
#define MEMU_ERR_FLAG_PR_CEO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_PR_CEO_SHIFT))&MEMU_ERR_FLAG_PR_CEO_MASK)
#define MEMU_ERR_FLAG_PR_UCE_MASK                0x80000u
#define MEMU_ERR_FLAG_PR_UCE_SHIFT               19u
#define MEMU_ERR_FLAG_PR_UCE_WIDTH               1u
#define MEMU_ERR_FLAG_PR_UCE(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_PR_UCE_SHIFT))&MEMU_ERR_FLAG_PR_UCE_MASK)
#define MEMU_ERR_FLAG_PR_CE_MASK                 0x100000u
#define MEMU_ERR_FLAG_PR_CE_SHIFT                20u
#define MEMU_ERR_FLAG_PR_CE_WIDTH                1u
#define MEMU_ERR_FLAG_PR_CE(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_PR_CE_SHIFT))&MEMU_ERR_FLAG_PR_CE_MASK)
/* DEBUG Bit Fields */
#define MEMU_DEBUG_FR_SR_EBO_MASK                0x1u
#define MEMU_DEBUG_FR_SR_EBO_SHIFT               0u
#define MEMU_DEBUG_FR_SR_EBO_WIDTH               1u
#define MEMU_DEBUG_FR_SR_EBO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_SR_EBO_SHIFT))&MEMU_DEBUG_FR_SR_EBO_MASK)
#define MEMU_DEBUG_FR_SR_UCO_MASK                0x2u
#define MEMU_DEBUG_FR_SR_UCO_SHIFT               1u
#define MEMU_DEBUG_FR_SR_UCO_WIDTH               1u
#define MEMU_DEBUG_FR_SR_UCO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_SR_UCO_SHIFT))&MEMU_DEBUG_FR_SR_UCO_MASK)
#define MEMU_DEBUG_FR_SR_CEO_MASK                0x4u
#define MEMU_DEBUG_FR_SR_CEO_SHIFT               2u
#define MEMU_DEBUG_FR_SR_CEO_WIDTH               1u
#define MEMU_DEBUG_FR_SR_CEO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_SR_CEO_SHIFT))&MEMU_DEBUG_FR_SR_CEO_MASK)
#define MEMU_DEBUG_FR_SR_UCE_MASK                0x8u
#define MEMU_DEBUG_FR_SR_UCE_SHIFT               3u
#define MEMU_DEBUG_FR_SR_UCE_WIDTH               1u
#define MEMU_DEBUG_FR_SR_UCE(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_SR_UCE_SHIFT))&MEMU_DEBUG_FR_SR_UCE_MASK)
#define MEMU_DEBUG_FR_SR_CE_MASK                 0x10u
#define MEMU_DEBUG_FR_SR_CE_SHIFT                4u
#define MEMU_DEBUG_FR_SR_CE_WIDTH                1u
#define MEMU_DEBUG_FR_SR_CE(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_SR_CE_SHIFT))&MEMU_DEBUG_FR_SR_CE_MASK)
#define MEMU_DEBUG_FR_F_EBO_MASK                 0x100u
#define MEMU_DEBUG_FR_F_EBO_SHIFT                8u
#define MEMU_DEBUG_FR_F_EBO_WIDTH                1u
#define MEMU_DEBUG_FR_F_EBO(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_F_EBO_SHIFT))&MEMU_DEBUG_FR_F_EBO_MASK)
#define MEMU_DEBUG_FR_F_UCO_MASK                 0x200u
#define MEMU_DEBUG_FR_F_UCO_SHIFT                9u
#define MEMU_DEBUG_FR_F_UCO_WIDTH                1u
#define MEMU_DEBUG_FR_F_UCO(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_F_UCO_SHIFT))&MEMU_DEBUG_FR_F_UCO_MASK)
#define MEMU_DEBUG_FR_F_CEO_MASK                 0x400u
#define MEMU_DEBUG_FR_F_CEO_SHIFT                10u
#define MEMU_DEBUG_FR_F_CEO_WIDTH                1u
#define MEMU_DEBUG_FR_F_CEO(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_F_CEO_SHIFT))&MEMU_DEBUG_FR_F_CEO_MASK)
#define MEMU_DEBUG_FR_F_UCE_MASK                 0x800u
#define MEMU_DEBUG_FR_F_UCE_SHIFT                11u
#define MEMU_DEBUG_FR_F_UCE_WIDTH                1u
#define MEMU_DEBUG_FR_F_UCE(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_F_UCE_SHIFT))&MEMU_DEBUG_FR_F_UCE_MASK)
#define MEMU_DEBUG_FR_F_CE_MASK                  0x1000u
#define MEMU_DEBUG_FR_F_CE_SHIFT                 12u
#define MEMU_DEBUG_FR_F_CE_WIDTH                 1u
#define MEMU_DEBUG_FR_F_CE(x)                    (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_F_CE_SHIFT))&MEMU_DEBUG_FR_F_CE_MASK)
#define MEMU_DEBUG_FR_PR_EBO_MASK                0x10000u
#define MEMU_DEBUG_FR_PR_EBO_SHIFT               16u
#define MEMU_DEBUG_FR_PR_EBO_WIDTH               1u
#define MEMU_DEBUG_FR_PR_EBO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_PR_EBO_SHIFT))&MEMU_DEBUG_FR_PR_EBO_MASK)
#define MEMU_DEBUG_FR_PR_UCO_MASK                0x20000u
#define MEMU_DEBUG_FR_PR_UCO_SHIFT               17u
#define MEMU_DEBUG_FR_PR_UCO_WIDTH               1u
#define MEMU_DEBUG_FR_PR_UCO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_PR_UCO_SHIFT))&MEMU_DEBUG_FR_PR_UCO_MASK)
#define MEMU_DEBUG_FR_PR_CEO_MASK                0x40000u
#define MEMU_DEBUG_FR_PR_CEO_SHIFT               18u
#define MEMU_DEBUG_FR_PR_CEO_WIDTH               1u
#define MEMU_DEBUG_FR_PR_CEO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_PR_CEO_SHIFT))&MEMU_DEBUG_FR_PR_CEO_MASK)
#define MEMU_DEBUG_FR_PR_UCE_MASK                0x80000u
#define MEMU_DEBUG_FR_PR_UCE_SHIFT               19u
#define MEMU_DEBUG_FR_PR_UCE_WIDTH               1u
#define MEMU_DEBUG_FR_PR_UCE(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_PR_UCE_SHIFT))&MEMU_DEBUG_FR_PR_UCE_MASK)
#define MEMU_DEBUG_FR_PR_CE_MASK                 0x100000u
#define MEMU_DEBUG_FR_PR_CE_SHIFT                20u
#define MEMU_DEBUG_FR_PR_CE_WIDTH                1u
#define MEMU_DEBUG_FR_PR_CE(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_PR_CE_SHIFT))&MEMU_DEBUG_FR_PR_CE_MASK)
/* STS Bit Fields */
#define MEMU_STS_BAD_BIT_MASK                    0xFFu
#define MEMU_STS_BAD_BIT_SHIFT                   0u
#define MEMU_STS_BAD_BIT_WIDTH                   8u
#define MEMU_STS_BAD_BIT(x)                      (((uint32_t)(((uint32_t)(x))<<MEMU_STS_BAD_BIT_SHIFT))&MEMU_STS_BAD_BIT_MASK)
#define MEMU_STS_VLD_MASK                        0x80000000u
#define MEMU_STS_VLD_SHIFT                       31u
#define MEMU_STS_VLD_WIDTH                       1u
#define MEMU_STS_VLD(x)                          (((uint32_t)(((uint32_t)(x))<<MEMU_STS_VLD_SHIFT))&MEMU_STS_VLD_MASK)
/* ADDR Bit Fields */
#define MEMU_ADDR_ERR_ADD_MASK                   0xFFFFFFFFu
#define MEMU_ADDR_ERR_ADD_SHIFT                  0u
#define MEMU_ADDR_ERR_ADD_WIDTH                  32u
#define MEMU_ADDR_ERR_ADD(x)                     (((uint32_t)(((uint32_t)(x))<<MEMU_ADDR_ERR_ADD_SHIFT))&MEMU_ADDR_ERR_ADD_MASK)
/* SYS_RAM_UNCERR_STS Bit Fields */
#define MEMU_SYS_RAM_UNCERR_STS_VLD_MASK         0x80000000u
#define MEMU_SYS_RAM_UNCERR_STS_VLD_SHIFT        31u
#define MEMU_SYS_RAM_UNCERR_STS_VLD_WIDTH        1u
#define MEMU_SYS_RAM_UNCERR_STS_VLD(x)           (((uint32_t)(((uint32_t)(x))<<MEMU_SYS_RAM_UNCERR_STS_VLD_SHIFT))&MEMU_SYS_RAM_UNCERR_STS_VLD_MASK)
/* SYS_RAM_UNCERR_ADDR Bit Fields */
#define MEMU_SYS_RAM_UNCERR_ADDR_ERR_ADD_MASK    0xFFFFFFFFu
#define MEMU_SYS_RAM_UNCERR_ADDR_ERR_ADD_SHIFT   0u
#define MEMU_SYS_RAM_UNCERR_ADDR_ERR_ADD_WIDTH   32u
#define MEMU_SYS_RAM_UNCERR_ADDR_ERR_ADD(x)      (((uint32_t)(((uint32_t)(x))<<MEMU_SYS_RAM_UNCERR_ADDR_ERR_ADD_SHIFT))&MEMU_SYS_RAM_UNCERR_ADDR_ERR_ADD_MASK)
/* SYS_RAM_OFLW Bit Fields */
#define MEMU_SYS_RAM_OFLW_OFLW_MASK              0xFFFFFFFFu
#define MEMU_SYS_RAM_OFLW_OFLW_SHIFT             0u
#define MEMU_SYS_RAM_OFLW_OFLW_WIDTH             32u
#define MEMU_SYS_RAM_OFLW_OFLW(x)                (((uint32_t)(((uint32_t)(x))<<MEMU_SYS_RAM_OFLW_OFLW_SHIFT))&MEMU_SYS_RAM_OFLW_OFLW_MASK)
/* STS Bit Fields */
#define MEMU_STS_BAD_BIT_MASK                    0xFFu
#define MEMU_STS_BAD_BIT_SHIFT                   0u
#define MEMU_STS_BAD_BIT_WIDTH                   8u
#define MEMU_STS_BAD_BIT(x)                      (((uint32_t)(((uint32_t)(x))<<MEMU_STS_BAD_BIT_SHIFT))&MEMU_STS_BAD_BIT_MASK)
#define MEMU_STS_VLD_MASK                        0x80000000u
#define MEMU_STS_VLD_SHIFT                       31u
#define MEMU_STS_VLD_WIDTH                       1u
#define MEMU_STS_VLD(x)                          (((uint32_t)(((uint32_t)(x))<<MEMU_STS_VLD_SHIFT))&MEMU_STS_VLD_MASK)
/* ADDR Bit Fields */
#define MEMU_ADDR_ERR_ADD_MASK                   0xFFFFFFFFu
#define MEMU_ADDR_ERR_ADD_SHIFT                  0u
#define MEMU_ADDR_ERR_ADD_WIDTH                  32u
#define MEMU_ADDR_ERR_ADD(x)                     (((uint32_t)(((uint32_t)(x))<<MEMU_ADDR_ERR_ADD_SHIFT))&MEMU_ADDR_ERR_ADD_MASK)
/* PERIPH_RAM_UNCERR_STS Bit Fields */
#define MEMU_PERIPH_RAM_UNCERR_STS_VLD_MASK      0x80000000u
#define MEMU_PERIPH_RAM_UNCERR_STS_VLD_SHIFT     31u
#define MEMU_PERIPH_RAM_UNCERR_STS_VLD_WIDTH     1u
#define MEMU_PERIPH_RAM_UNCERR_STS_VLD(x)        (((uint32_t)(((uint32_t)(x))<<MEMU_PERIPH_RAM_UNCERR_STS_VLD_SHIFT))&MEMU_PERIPH_RAM_UNCERR_STS_VLD_MASK)
/* PERIPH_RAM_UNCERR_ADDR Bit Fields */
#define MEMU_PERIPH_RAM_UNCERR_ADDR_ERR_ADD_MASK 0xFFFFFFFFu
#define MEMU_PERIPH_RAM_UNCERR_ADDR_ERR_ADD_SHIFT 0u
#define MEMU_PERIPH_RAM_UNCERR_ADDR_ERR_ADD_WIDTH 32u
#define MEMU_PERIPH_RAM_UNCERR_ADDR_ERR_ADD(x)   (((uint32_t)(((uint32_t)(x))<<MEMU_PERIPH_RAM_UNCERR_ADDR_ERR_ADD_SHIFT))&MEMU_PERIPH_RAM_UNCERR_ADDR_ERR_ADD_MASK)
/* PERIPH_RAM_OFLW0 Bit Fields */
#define MEMU_PERIPH_RAM_OFLW0_OFLW_MASK          0xFFFFFFFFu
#define MEMU_PERIPH_RAM_OFLW0_OFLW_SHIFT         0u
#define MEMU_PERIPH_RAM_OFLW0_OFLW_WIDTH         32u
#define MEMU_PERIPH_RAM_OFLW0_OFLW(x)            (((uint32_t)(((uint32_t)(x))<<MEMU_PERIPH_RAM_OFLW0_OFLW_SHIFT))&MEMU_PERIPH_RAM_OFLW0_OFLW_MASK)
/* STS Bit Fields */
#define MEMU_STS_BAD_BIT_MASK                    0xFFu
#define MEMU_STS_BAD_BIT_SHIFT                   0u
#define MEMU_STS_BAD_BIT_WIDTH                   8u
#define MEMU_STS_BAD_BIT(x)                      (((uint32_t)(((uint32_t)(x))<<MEMU_STS_BAD_BIT_SHIFT))&MEMU_STS_BAD_BIT_MASK)
#define MEMU_STS_VLD_MASK                        0x80000000u
#define MEMU_STS_VLD_SHIFT                       31u
#define MEMU_STS_VLD_WIDTH                       1u
#define MEMU_STS_VLD(x)                          (((uint32_t)(((uint32_t)(x))<<MEMU_STS_VLD_SHIFT))&MEMU_STS_VLD_MASK)
/* ADDR Bit Fields */
#define MEMU_ADDR_ERR_ADD_MASK                   0xFFFFFFFFu
#define MEMU_ADDR_ERR_ADD_SHIFT                  0u
#define MEMU_ADDR_ERR_ADD_WIDTH                  32u
#define MEMU_ADDR_ERR_ADD(x)                     (((uint32_t)(((uint32_t)(x))<<MEMU_ADDR_ERR_ADD_SHIFT))&MEMU_ADDR_ERR_ADD_MASK)
/* FLASH_UNCERR_STS Bit Fields */
#define MEMU_FLASH_UNCERR_STS_VLD_MASK           0x80000000u
#define MEMU_FLASH_UNCERR_STS_VLD_SHIFT          31u
#define MEMU_FLASH_UNCERR_STS_VLD_WIDTH          1u
#define MEMU_FLASH_UNCERR_STS_VLD(x)             (((uint32_t)(((uint32_t)(x))<<MEMU_FLASH_UNCERR_STS_VLD_SHIFT))&MEMU_FLASH_UNCERR_STS_VLD_MASK)
/* FLASH_UNCERR_ADDR Bit Fields */
#define MEMU_FLASH_UNCERR_ADDR_ERR_ADD_MASK      0xFFFFFFFFu
#define MEMU_FLASH_UNCERR_ADDR_ERR_ADD_SHIFT     0u
#define MEMU_FLASH_UNCERR_ADDR_ERR_ADD_WIDTH     32u
#define MEMU_FLASH_UNCERR_ADDR_ERR_ADD(x)        (((uint32_t)(((uint32_t)(x))<<MEMU_FLASH_UNCERR_ADDR_ERR_ADD_SHIFT))&MEMU_FLASH_UNCERR_ADDR_ERR_ADD_MASK)
/* FLASH_OFLW0 Bit Fields */
#define MEMU_FLASH_OFLW0_OFLW_MASK               0xFFFFFFFFu
#define MEMU_FLASH_OFLW0_OFLW_SHIFT              0u
#define MEMU_FLASH_OFLW0_OFLW_WIDTH              32u
#define MEMU_FLASH_OFLW0_OFLW(x)                 (((uint32_t)(((uint32_t)(x))<<MEMU_FLASH_OFLW0_OFLW_SHIFT))&MEMU_FLASH_OFLW0_OFLW_MASK)

/*!
 * @}
 */ /* end of group MEMU_Register_Masks */


/*!
 * @}
 */ /* end of group MEMU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PCM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PCM_Peripheral_Access_Layer PCM Peripheral Access Layer
 * @{
 */


/** PCM - Size of Registers Arrays */

/** PCM - Register Layout Typedef */
typedef struct {
       uint8_t RESERVED_0[4];
  __IO uint32_t IAHB_BE1;                          /**< Bus Bridge Configuration Register 1, offset: 0x4 */
  __IO uint32_t IAHB_BE2;                          /**< Bus Bridge Configuration Register 2, offset: 0x8 */
  __IO uint32_t IAHB_BE3;                          /**< Bus Bridge Configuration Register 3, offset: 0xC */
} PCM_Type, *PCM_MemMapPtr;

 /** Number of instances of the PCM module. */
#define PCM_INSTANCE_COUNT                       (1u)


/* PCM - Peripheral instance base addresses */
/** Peripheral PCM base address */
#define PCM_BASE                                 (0xFC028000u)
/** Peripheral PCM base pointer */
#define PCM                                      ((PCM_Type *)PCM_BASE)
/** Array initializer of PCM peripheral base addresses */
#define PCM_BASE_ADDRS                           { PCM_BASE }
/** Array initializer of PCM peripheral base pointers */
#define PCM_BASE_PTRS                            { PCM }

/* ----------------------------------------------------------------------------
   -- PCM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PCM_Register_Masks PCM Register Masks
 * @{
 */

/* IAHB_BE1 Bit Fields */
#define PCM_IAHB_BE1_BWE_MASK                    0x10000u
#define PCM_IAHB_BE1_BWE_SHIFT                   16u
#define PCM_IAHB_BE1_BWE_WIDTH                   1u
#define PCM_IAHB_BE1_BWE(x)                      (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE1_BWE_SHIFT))&PCM_IAHB_BE1_BWE_MASK)
#define PCM_IAHB_BE1_BRE_MASK                    0x20000u
#define PCM_IAHB_BE1_BRE_SHIFT                   17u
#define PCM_IAHB_BE1_BRE_WIDTH                   1u
#define PCM_IAHB_BE1_BRE(x)                      (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE1_BRE_SHIFT))&PCM_IAHB_BE1_BRE_MASK)
/* IAHB_BE2 Bit Fields */
#define PCM_IAHB_BE2_BWE_MASK                    0x100u
#define PCM_IAHB_BE2_BWE_SHIFT                   8u
#define PCM_IAHB_BE2_BWE_WIDTH                   1u
#define PCM_IAHB_BE2_BWE(x)                      (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE2_BWE_SHIFT))&PCM_IAHB_BE2_BWE_MASK)
#define PCM_IAHB_BE2_BRE_MASK                    0x200u
#define PCM_IAHB_BE2_BRE_SHIFT                   9u
#define PCM_IAHB_BE2_BRE_WIDTH                   1u
#define PCM_IAHB_BE2_BRE(x)                      (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE2_BRE_SHIFT))&PCM_IAHB_BE2_BRE_MASK)
/* IAHB_BE3 Bit Fields */
#define PCM_IAHB_BE3_BWE_A_MASK                  0x1u
#define PCM_IAHB_BE3_BWE_A_SHIFT                 0u
#define PCM_IAHB_BE3_BWE_A_WIDTH                 1u
#define PCM_IAHB_BE3_BWE_A(x)                    (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE3_BWE_A_SHIFT))&PCM_IAHB_BE3_BWE_A_MASK)
#define PCM_IAHB_BE3_BRE_A_MASK                  0x2u
#define PCM_IAHB_BE3_BRE_A_SHIFT                 1u
#define PCM_IAHB_BE3_BRE_A_WIDTH                 1u
#define PCM_IAHB_BE3_BRE_A(x)                    (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE3_BRE_A_SHIFT))&PCM_IAHB_BE3_BRE_A_MASK)
#define PCM_IAHB_BE3_PRE_A_MASK                  0x4u
#define PCM_IAHB_BE3_PRE_A_SHIFT                 2u
#define PCM_IAHB_BE3_PRE_A_WIDTH                 1u
#define PCM_IAHB_BE3_PRE_A(x)                    (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE3_PRE_A_SHIFT))&PCM_IAHB_BE3_PRE_A_MASK)
#define PCM_IAHB_BE3_BWE_B_MASK                  0x100u
#define PCM_IAHB_BE3_BWE_B_SHIFT                 8u
#define PCM_IAHB_BE3_BWE_B_WIDTH                 1u
#define PCM_IAHB_BE3_BWE_B(x)                    (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE3_BWE_B_SHIFT))&PCM_IAHB_BE3_BWE_B_MASK)
#define PCM_IAHB_BE3_BRE_B_MASK                  0x200u
#define PCM_IAHB_BE3_BRE_B_SHIFT                 9u
#define PCM_IAHB_BE3_BRE_B_WIDTH                 1u
#define PCM_IAHB_BE3_BRE_B(x)                    (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE3_BRE_B_SHIFT))&PCM_IAHB_BE3_BRE_B_MASK)
#define PCM_IAHB_BE3_PRE_B_MASK                  0x400u
#define PCM_IAHB_BE3_PRE_B_SHIFT                 10u
#define PCM_IAHB_BE3_PRE_B_WIDTH                 1u
#define PCM_IAHB_BE3_PRE_B(x)                    (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE3_PRE_B_SHIFT))&PCM_IAHB_BE3_PRE_B_MASK)

/*!
 * @}
 */ /* end of group PCM_Register_Masks */


/*!
 * @}
 */ /* end of group PCM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PFLASH Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PFLASH_Peripheral_Access_Layer PFLASH Peripheral Access Layer
 * @{
 */


/** PFLASH - Size of Registers Arrays */
#define PFLASH_PFCRD_COUNT                       8u

/** PFLASH - Register Layout Typedef */
typedef struct {
  __IO uint32_t PFCR1;                             /**< Platform Flash Configuration Register 1, offset: 0x0 */
       uint8_t RESERVED_0[4];
  __IO uint32_t PFCR3;                             /**< Platform Flash Configuration Register 3, offset: 0x8 */
  __IO uint32_t PFAPR;                             /**< Platform Flash Access Protection Register, offset: 0xC */
  __IO uint32_t PFCRCR;                            /**< Platform Flash Remap Control Register, offset: 0x10 */
  __IO uint32_t PFCRDE;                            /**< Platform Flash Remap Descriptor Enable Register, offset: 0x14 */
       uint8_t RESERVED_1[232];
  struct {                                         /* offset: 0x100, array step: 0x10 */
    __IO uint32_t Word0;                             /**< Platform Flash Calibration Region Descriptor n Word0, array offset: 0x100, array step: 0x10 */
    __IO uint32_t Word1;                             /**< Platform Flash Calibration Region Descriptor n Word1, array offset: 0x104, array step: 0x10 */
    __IO uint32_t Word2;                             /**< Platform Flash Calibration Region Descriptor n Word2, array offset: 0x108, array step: 0x10 */
         uint8_t RESERVED_0[4];
  } PFCRD[PFLASH_PFCRD_COUNT];
} PFLASH_Type, *PFLASH_MemMapPtr;

 /** Number of instances of the PFLASH module. */
#define PFLASH_INSTANCE_COUNT                    (1u)


/* PFLASH - Peripheral instance base addresses */
/** Peripheral PFLASH base address */
#define PFLASH_BASE                              (0xFC030000u)
/** Peripheral PFLASH base pointer */
#define PFLASH                                   ((PFLASH_Type *)PFLASH_BASE)
/** Array initializer of PFLASH peripheral base addresses */
#define PFLASH_BASE_ADDRS                        { PFLASH_BASE }
/** Array initializer of PFLASH peripheral base pointers */
#define PFLASH_BASE_PTRS                         { PFLASH }

/* ----------------------------------------------------------------------------
   -- PFLASH Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PFLASH_Register_Masks PFLASH Register Masks
 * @{
 */

/* PFCR1 Bit Fields */
#define PFLASH_PFCR1_P0_BFEN_MASK                0x1u
#define PFLASH_PFCR1_P0_BFEN_SHIFT               0u
#define PFLASH_PFCR1_P0_BFEN_WIDTH               1u
#define PFLASH_PFCR1_P0_BFEN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_BFEN_SHIFT))&PFLASH_PFCR1_P0_BFEN_MASK)
#define PFLASH_PFCR1_P0_PFLIM_MASK               0x6u
#define PFLASH_PFCR1_P0_PFLIM_SHIFT              1u
#define PFLASH_PFCR1_P0_PFLIM_WIDTH              2u
#define PFLASH_PFCR1_P0_PFLIM(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_PFLIM_SHIFT))&PFLASH_PFCR1_P0_PFLIM_MASK)
#define PFLASH_PFCR1_P0_IPFEN_MASK               0x10u
#define PFLASH_PFCR1_P0_IPFEN_SHIFT              4u
#define PFLASH_PFCR1_P0_IPFEN_WIDTH              1u
#define PFLASH_PFCR1_P0_IPFEN(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_IPFEN_SHIFT))&PFLASH_PFCR1_P0_IPFEN_MASK)
#define PFLASH_PFCR1_P0_DPFEN_MASK               0x40u
#define PFLASH_PFCR1_P0_DPFEN_SHIFT              6u
#define PFLASH_PFCR1_P0_DPFEN_WIDTH              1u
#define PFLASH_PFCR1_P0_DPFEN(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_DPFEN_SHIFT))&PFLASH_PFCR1_P0_DPFEN_MASK)
#define PFLASH_PFCR1_RWSC_MASK                   0xF00u
#define PFLASH_PFCR1_RWSC_SHIFT                  8u
#define PFLASH_PFCR1_RWSC_WIDTH                  4u
#define PFLASH_PFCR1_RWSC(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_RWSC_SHIFT))&PFLASH_PFCR1_RWSC_MASK)
#define PFLASH_PFCR1_APC_MASK                    0xE000u
#define PFLASH_PFCR1_APC_SHIFT                   13u
#define PFLASH_PFCR1_APC_WIDTH                   3u
#define PFLASH_PFCR1_APC(x)                      (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_APC_SHIFT))&PFLASH_PFCR1_APC_MASK)
#define PFLASH_PFCR1_P0_M0PFE_MASK               0x10000u
#define PFLASH_PFCR1_P0_M0PFE_SHIFT              16u
#define PFLASH_PFCR1_P0_M0PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M0PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M0PFE_SHIFT))&PFLASH_PFCR1_P0_M0PFE_MASK)
#define PFLASH_PFCR1_P0_M1PFE_MASK               0x20000u
#define PFLASH_PFCR1_P0_M1PFE_SHIFT              17u
#define PFLASH_PFCR1_P0_M1PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M1PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M1PFE_SHIFT))&PFLASH_PFCR1_P0_M1PFE_MASK)
#define PFLASH_PFCR1_P0_M2PFE_MASK               0x40000u
#define PFLASH_PFCR1_P0_M2PFE_SHIFT              18u
#define PFLASH_PFCR1_P0_M2PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M2PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M2PFE_SHIFT))&PFLASH_PFCR1_P0_M2PFE_MASK)
#define PFLASH_PFCR1_P0_M3PFE_MASK               0x80000u
#define PFLASH_PFCR1_P0_M3PFE_SHIFT              19u
#define PFLASH_PFCR1_P0_M3PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M3PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M3PFE_SHIFT))&PFLASH_PFCR1_P0_M3PFE_MASK)
#define PFLASH_PFCR1_P0_M4PFE_MASK               0x100000u
#define PFLASH_PFCR1_P0_M4PFE_SHIFT              20u
#define PFLASH_PFCR1_P0_M4PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M4PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M4PFE_SHIFT))&PFLASH_PFCR1_P0_M4PFE_MASK)
#define PFLASH_PFCR1_P0_M5PFE_MASK               0x200000u
#define PFLASH_PFCR1_P0_M5PFE_SHIFT              21u
#define PFLASH_PFCR1_P0_M5PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M5PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M5PFE_SHIFT))&PFLASH_PFCR1_P0_M5PFE_MASK)
#define PFLASH_PFCR1_P0_M6PFE_MASK               0x400000u
#define PFLASH_PFCR1_P0_M6PFE_SHIFT              22u
#define PFLASH_PFCR1_P0_M6PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M6PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M6PFE_SHIFT))&PFLASH_PFCR1_P0_M6PFE_MASK)
#define PFLASH_PFCR1_P0_M7PFE_MASK               0x800000u
#define PFLASH_PFCR1_P0_M7PFE_SHIFT              23u
#define PFLASH_PFCR1_P0_M7PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M7PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M7PFE_SHIFT))&PFLASH_PFCR1_P0_M7PFE_MASK)
#define PFLASH_PFCR1_P0_M8PFE_MASK               0x1000000u
#define PFLASH_PFCR1_P0_M8PFE_SHIFT              24u
#define PFLASH_PFCR1_P0_M8PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M8PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M8PFE_SHIFT))&PFLASH_PFCR1_P0_M8PFE_MASK)
#define PFLASH_PFCR1_P0_M9PFE_MASK               0x2000000u
#define PFLASH_PFCR1_P0_M9PFE_SHIFT              25u
#define PFLASH_PFCR1_P0_M9PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M9PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M9PFE_SHIFT))&PFLASH_PFCR1_P0_M9PFE_MASK)
#define PFLASH_PFCR1_P0_M10PFE_MASK              0x4000000u
#define PFLASH_PFCR1_P0_M10PFE_SHIFT             26u
#define PFLASH_PFCR1_P0_M10PFE_WIDTH             1u
#define PFLASH_PFCR1_P0_M10PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M10PFE_SHIFT))&PFLASH_PFCR1_P0_M10PFE_MASK)
#define PFLASH_PFCR1_P0_M11PFE_MASK              0x8000000u
#define PFLASH_PFCR1_P0_M11PFE_SHIFT             27u
#define PFLASH_PFCR1_P0_M11PFE_WIDTH             1u
#define PFLASH_PFCR1_P0_M11PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M11PFE_SHIFT))&PFLASH_PFCR1_P0_M11PFE_MASK)
#define PFLASH_PFCR1_P0_M12PFE_MASK              0x10000000u
#define PFLASH_PFCR1_P0_M12PFE_SHIFT             28u
#define PFLASH_PFCR1_P0_M12PFE_WIDTH             1u
#define PFLASH_PFCR1_P0_M12PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M12PFE_SHIFT))&PFLASH_PFCR1_P0_M12PFE_MASK)
#define PFLASH_PFCR1_P0_M13PFE_MASK              0x20000000u
#define PFLASH_PFCR1_P0_M13PFE_SHIFT             29u
#define PFLASH_PFCR1_P0_M13PFE_WIDTH             1u
#define PFLASH_PFCR1_P0_M13PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M13PFE_SHIFT))&PFLASH_PFCR1_P0_M13PFE_MASK)
#define PFLASH_PFCR1_P0_M14PFE_MASK              0x40000000u
#define PFLASH_PFCR1_P0_M14PFE_SHIFT             30u
#define PFLASH_PFCR1_P0_M14PFE_WIDTH             1u
#define PFLASH_PFCR1_P0_M14PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M14PFE_SHIFT))&PFLASH_PFCR1_P0_M14PFE_MASK)
#define PFLASH_PFCR1_P0_M15PFE_MASK              0x80000000u
#define PFLASH_PFCR1_P0_M15PFE_SHIFT             31u
#define PFLASH_PFCR1_P0_M15PFE_WIDTH             1u
#define PFLASH_PFCR1_P0_M15PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M15PFE_SHIFT))&PFLASH_PFCR1_P0_M15PFE_MASK)
/* PFCR3 Bit Fields */
#define PFLASH_PFCR3_BFEN_LK_MASK                0x10000u
#define PFLASH_PFCR3_BFEN_LK_SHIFT               16u
#define PFLASH_PFCR3_BFEN_LK_WIDTH               1u
#define PFLASH_PFCR3_BFEN_LK(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR3_BFEN_LK_SHIFT))&PFLASH_PFCR3_BFEN_LK_MASK)
#define PFLASH_PFCR3_P0_WCFG_MASK                0xC0000000u
#define PFLASH_PFCR3_P0_WCFG_SHIFT               30u
#define PFLASH_PFCR3_P0_WCFG_WIDTH               2u
#define PFLASH_PFCR3_P0_WCFG(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR3_P0_WCFG_SHIFT))&PFLASH_PFCR3_P0_WCFG_MASK)
/* PFAPR Bit Fields */
#define PFLASH_PFAPR_M15AP_MASK                  0x3u
#define PFLASH_PFAPR_M15AP_SHIFT                 0u
#define PFLASH_PFAPR_M15AP_WIDTH                 2u
#define PFLASH_PFAPR_M15AP(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M15AP_SHIFT))&PFLASH_PFAPR_M15AP_MASK)
#define PFLASH_PFAPR_M14AP_MASK                  0xCu
#define PFLASH_PFAPR_M14AP_SHIFT                 2u
#define PFLASH_PFAPR_M14AP_WIDTH                 2u
#define PFLASH_PFAPR_M14AP(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M14AP_SHIFT))&PFLASH_PFAPR_M14AP_MASK)
#define PFLASH_PFAPR_M13AP_MASK                  0x30u
#define PFLASH_PFAPR_M13AP_SHIFT                 4u
#define PFLASH_PFAPR_M13AP_WIDTH                 2u
#define PFLASH_PFAPR_M13AP(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M13AP_SHIFT))&PFLASH_PFAPR_M13AP_MASK)
#define PFLASH_PFAPR_M12AP_MASK                  0xC0u
#define PFLASH_PFAPR_M12AP_SHIFT                 6u
#define PFLASH_PFAPR_M12AP_WIDTH                 2u
#define PFLASH_PFAPR_M12AP(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M12AP_SHIFT))&PFLASH_PFAPR_M12AP_MASK)
#define PFLASH_PFAPR_M11AP_MASK                  0x300u
#define PFLASH_PFAPR_M11AP_SHIFT                 8u
#define PFLASH_PFAPR_M11AP_WIDTH                 2u
#define PFLASH_PFAPR_M11AP(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M11AP_SHIFT))&PFLASH_PFAPR_M11AP_MASK)
#define PFLASH_PFAPR_M10AP_MASK                  0xC00u
#define PFLASH_PFAPR_M10AP_SHIFT                 10u
#define PFLASH_PFAPR_M10AP_WIDTH                 2u
#define PFLASH_PFAPR_M10AP(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M10AP_SHIFT))&PFLASH_PFAPR_M10AP_MASK)
#define PFLASH_PFAPR_M9AP_MASK                   0x3000u
#define PFLASH_PFAPR_M9AP_SHIFT                  12u
#define PFLASH_PFAPR_M9AP_WIDTH                  2u
#define PFLASH_PFAPR_M9AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M9AP_SHIFT))&PFLASH_PFAPR_M9AP_MASK)
#define PFLASH_PFAPR_M8AP_MASK                   0xC000u
#define PFLASH_PFAPR_M8AP_SHIFT                  14u
#define PFLASH_PFAPR_M8AP_WIDTH                  2u
#define PFLASH_PFAPR_M8AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M8AP_SHIFT))&PFLASH_PFAPR_M8AP_MASK)
#define PFLASH_PFAPR_M7AP_MASK                   0x30000u
#define PFLASH_PFAPR_M7AP_SHIFT                  16u
#define PFLASH_PFAPR_M7AP_WIDTH                  2u
#define PFLASH_PFAPR_M7AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M7AP_SHIFT))&PFLASH_PFAPR_M7AP_MASK)
#define PFLASH_PFAPR_M6AP_MASK                   0xC0000u
#define PFLASH_PFAPR_M6AP_SHIFT                  18u
#define PFLASH_PFAPR_M6AP_WIDTH                  2u
#define PFLASH_PFAPR_M6AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M6AP_SHIFT))&PFLASH_PFAPR_M6AP_MASK)
#define PFLASH_PFAPR_M5AP_MASK                   0x300000u
#define PFLASH_PFAPR_M5AP_SHIFT                  20u
#define PFLASH_PFAPR_M5AP_WIDTH                  2u
#define PFLASH_PFAPR_M5AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M5AP_SHIFT))&PFLASH_PFAPR_M5AP_MASK)
#define PFLASH_PFAPR_M4AP_MASK                   0xC00000u
#define PFLASH_PFAPR_M4AP_SHIFT                  22u
#define PFLASH_PFAPR_M4AP_WIDTH                  2u
#define PFLASH_PFAPR_M4AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M4AP_SHIFT))&PFLASH_PFAPR_M4AP_MASK)
#define PFLASH_PFAPR_M3AP_MASK                   0x3000000u
#define PFLASH_PFAPR_M3AP_SHIFT                  24u
#define PFLASH_PFAPR_M3AP_WIDTH                  2u
#define PFLASH_PFAPR_M3AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M3AP_SHIFT))&PFLASH_PFAPR_M3AP_MASK)
#define PFLASH_PFAPR_M2AP_MASK                   0xC000000u
#define PFLASH_PFAPR_M2AP_SHIFT                  26u
#define PFLASH_PFAPR_M2AP_WIDTH                  2u
#define PFLASH_PFAPR_M2AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M2AP_SHIFT))&PFLASH_PFAPR_M2AP_MASK)
#define PFLASH_PFAPR_M1AP_MASK                   0x30000000u
#define PFLASH_PFAPR_M1AP_SHIFT                  28u
#define PFLASH_PFAPR_M1AP_WIDTH                  2u
#define PFLASH_PFAPR_M1AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M1AP_SHIFT))&PFLASH_PFAPR_M1AP_MASK)
#define PFLASH_PFAPR_M0AP_MASK                   0xC0000000u
#define PFLASH_PFAPR_M0AP_SHIFT                  30u
#define PFLASH_PFAPR_M0AP_WIDTH                  2u
#define PFLASH_PFAPR_M0AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M0AP_SHIFT))&PFLASH_PFAPR_M0AP_MASK)
/* PFCRCR Bit Fields */
#define PFLASH_PFCRCR_GRMEN_MASK                 0x1u
#define PFLASH_PFCRCR_GRMEN_SHIFT                0u
#define PFLASH_PFCRCR_GRMEN_WIDTH                1u
#define PFLASH_PFCRCR_GRMEN(x)                   (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRCR_GRMEN_SHIFT))&PFLASH_PFCRCR_GRMEN_MASK)
#define PFLASH_PFCRCR_IRMEN_MASK                 0x10u
#define PFLASH_PFCRCR_IRMEN_SHIFT                4u
#define PFLASH_PFCRCR_IRMEN_WIDTH                1u
#define PFLASH_PFCRCR_IRMEN(x)                   (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRCR_IRMEN_SHIFT))&PFLASH_PFCRCR_IRMEN_MASK)
#define PFLASH_PFCRCR_SAFE_CAL_MASK              0x100u
#define PFLASH_PFCRCR_SAFE_CAL_SHIFT             8u
#define PFLASH_PFCRCR_SAFE_CAL_WIDTH             1u
#define PFLASH_PFCRCR_SAFE_CAL(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRCR_SAFE_CAL_SHIFT))&PFLASH_PFCRCR_SAFE_CAL_MASK)
/* PFCRDE Bit Fields */
#define PFLASH_PFCRDE_CRD7EN_MASK                0x1000000u
#define PFLASH_PFCRDE_CRD7EN_SHIFT               24u
#define PFLASH_PFCRDE_CRD7EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD7EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD7EN_SHIFT))&PFLASH_PFCRDE_CRD7EN_MASK)
#define PFLASH_PFCRDE_CRD6EN_MASK                0x2000000u
#define PFLASH_PFCRDE_CRD6EN_SHIFT               25u
#define PFLASH_PFCRDE_CRD6EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD6EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD6EN_SHIFT))&PFLASH_PFCRDE_CRD6EN_MASK)
#define PFLASH_PFCRDE_CRD5EN_MASK                0x4000000u
#define PFLASH_PFCRDE_CRD5EN_SHIFT               26u
#define PFLASH_PFCRDE_CRD5EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD5EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD5EN_SHIFT))&PFLASH_PFCRDE_CRD5EN_MASK)
#define PFLASH_PFCRDE_CRD4EN_MASK                0x8000000u
#define PFLASH_PFCRDE_CRD4EN_SHIFT               27u
#define PFLASH_PFCRDE_CRD4EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD4EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD4EN_SHIFT))&PFLASH_PFCRDE_CRD4EN_MASK)
#define PFLASH_PFCRDE_CRD3EN_MASK                0x10000000u
#define PFLASH_PFCRDE_CRD3EN_SHIFT               28u
#define PFLASH_PFCRDE_CRD3EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD3EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD3EN_SHIFT))&PFLASH_PFCRDE_CRD3EN_MASK)
#define PFLASH_PFCRDE_CRD2EN_MASK                0x20000000u
#define PFLASH_PFCRDE_CRD2EN_SHIFT               29u
#define PFLASH_PFCRDE_CRD2EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD2EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD2EN_SHIFT))&PFLASH_PFCRDE_CRD2EN_MASK)
#define PFLASH_PFCRDE_CRD1EN_MASK                0x40000000u
#define PFLASH_PFCRDE_CRD1EN_SHIFT               30u
#define PFLASH_PFCRDE_CRD1EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD1EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD1EN_SHIFT))&PFLASH_PFCRDE_CRD1EN_MASK)
#define PFLASH_PFCRDE_CRD0EN_MASK                0x80000000u
#define PFLASH_PFCRDE_CRD0EN_SHIFT               31u
#define PFLASH_PFCRDE_CRD0EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD0EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD0EN_SHIFT))&PFLASH_PFCRDE_CRD0EN_MASK)
/* Word0 Bit Fields */
#define PFLASH_Word0_LSTARTADDR_MASK             0xFFFFFFF0u
#define PFLASH_Word0_LSTARTADDR_SHIFT            4u
#define PFLASH_Word0_LSTARTADDR_WIDTH            28u
#define PFLASH_Word0_LSTARTADDR(x)               (((uint32_t)(((uint32_t)(x))<<PFLASH_Word0_LSTARTADDR_SHIFT))&PFLASH_Word0_LSTARTADDR_MASK)
/* Word1 Bit Fields */
#define PFLASH_Word1_PSTARTADDR_MASK             0xFFFFFFF0u
#define PFLASH_Word1_PSTARTADDR_SHIFT            4u
#define PFLASH_Word1_PSTARTADDR_WIDTH            28u
#define PFLASH_Word1_PSTARTADDR(x)               (((uint32_t)(((uint32_t)(x))<<PFLASH_Word1_PSTARTADDR_SHIFT))&PFLASH_Word1_PSTARTADDR_MASK)
/* Word2 Bit Fields */
#define PFLASH_Word2_CRDSize_MASK                0x1Fu
#define PFLASH_Word2_CRDSize_SHIFT               0u
#define PFLASH_Word2_CRDSize_WIDTH               5u
#define PFLASH_Word2_CRDSize(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_CRDSize_SHIFT))&PFLASH_Word2_CRDSize_MASK)
#define PFLASH_Word2_M15EN_MASK                  0x10000u
#define PFLASH_Word2_M15EN_SHIFT                 16u
#define PFLASH_Word2_M15EN_WIDTH                 1u
#define PFLASH_Word2_M15EN(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M15EN_SHIFT))&PFLASH_Word2_M15EN_MASK)
#define PFLASH_Word2_M14EN_MASK                  0x20000u
#define PFLASH_Word2_M14EN_SHIFT                 17u
#define PFLASH_Word2_M14EN_WIDTH                 1u
#define PFLASH_Word2_M14EN(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M14EN_SHIFT))&PFLASH_Word2_M14EN_MASK)
#define PFLASH_Word2_M13EN_MASK                  0x40000u
#define PFLASH_Word2_M13EN_SHIFT                 18u
#define PFLASH_Word2_M13EN_WIDTH                 1u
#define PFLASH_Word2_M13EN(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M13EN_SHIFT))&PFLASH_Word2_M13EN_MASK)
#define PFLASH_Word2_M12EN_MASK                  0x80000u
#define PFLASH_Word2_M12EN_SHIFT                 19u
#define PFLASH_Word2_M12EN_WIDTH                 1u
#define PFLASH_Word2_M12EN(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M12EN_SHIFT))&PFLASH_Word2_M12EN_MASK)
#define PFLASH_Word2_M11EN_MASK                  0x100000u
#define PFLASH_Word2_M11EN_SHIFT                 20u
#define PFLASH_Word2_M11EN_WIDTH                 1u
#define PFLASH_Word2_M11EN(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M11EN_SHIFT))&PFLASH_Word2_M11EN_MASK)
#define PFLASH_Word2_M10EN_MASK                  0x200000u
#define PFLASH_Word2_M10EN_SHIFT                 21u
#define PFLASH_Word2_M10EN_WIDTH                 1u
#define PFLASH_Word2_M10EN(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M10EN_SHIFT))&PFLASH_Word2_M10EN_MASK)
#define PFLASH_Word2_M9EN_MASK                   0x400000u
#define PFLASH_Word2_M9EN_SHIFT                  22u
#define PFLASH_Word2_M9EN_WIDTH                  1u
#define PFLASH_Word2_M9EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M9EN_SHIFT))&PFLASH_Word2_M9EN_MASK)
#define PFLASH_Word2_M8EN_MASK                   0x800000u
#define PFLASH_Word2_M8EN_SHIFT                  23u
#define PFLASH_Word2_M8EN_WIDTH                  1u
#define PFLASH_Word2_M8EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M8EN_SHIFT))&PFLASH_Word2_M8EN_MASK)
#define PFLASH_Word2_M7EN_MASK                   0x1000000u
#define PFLASH_Word2_M7EN_SHIFT                  24u
#define PFLASH_Word2_M7EN_WIDTH                  1u
#define PFLASH_Word2_M7EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M7EN_SHIFT))&PFLASH_Word2_M7EN_MASK)
#define PFLASH_Word2_M6EN_MASK                   0x2000000u
#define PFLASH_Word2_M6EN_SHIFT                  25u
#define PFLASH_Word2_M6EN_WIDTH                  1u
#define PFLASH_Word2_M6EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M6EN_SHIFT))&PFLASH_Word2_M6EN_MASK)
#define PFLASH_Word2_M5EN_MASK                   0x4000000u
#define PFLASH_Word2_M5EN_SHIFT                  26u
#define PFLASH_Word2_M5EN_WIDTH                  1u
#define PFLASH_Word2_M5EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M5EN_SHIFT))&PFLASH_Word2_M5EN_MASK)
#define PFLASH_Word2_M4EN_MASK                   0x8000000u
#define PFLASH_Word2_M4EN_SHIFT                  27u
#define PFLASH_Word2_M4EN_WIDTH                  1u
#define PFLASH_Word2_M4EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M4EN_SHIFT))&PFLASH_Word2_M4EN_MASK)
#define PFLASH_Word2_M3EN_MASK                   0x10000000u
#define PFLASH_Word2_M3EN_SHIFT                  28u
#define PFLASH_Word2_M3EN_WIDTH                  1u
#define PFLASH_Word2_M3EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M3EN_SHIFT))&PFLASH_Word2_M3EN_MASK)
#define PFLASH_Word2_M2EN_MASK                   0x20000000u
#define PFLASH_Word2_M2EN_SHIFT                  29u
#define PFLASH_Word2_M2EN_WIDTH                  1u
#define PFLASH_Word2_M2EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M2EN_SHIFT))&PFLASH_Word2_M2EN_MASK)
#define PFLASH_Word2_M1EN_MASK                   0x40000000u
#define PFLASH_Word2_M1EN_SHIFT                  30u
#define PFLASH_Word2_M1EN_WIDTH                  1u
#define PFLASH_Word2_M1EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M1EN_SHIFT))&PFLASH_Word2_M1EN_MASK)
#define PFLASH_Word2_M0EN_MASK                   0x80000000u
#define PFLASH_Word2_M0EN_SHIFT                  31u
#define PFLASH_Word2_M0EN_WIDTH                  1u
#define PFLASH_Word2_M0EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M0EN_SHIFT))&PFLASH_Word2_M0EN_MASK)

/*!
 * @}
 */ /* end of group PFLASH_Register_Masks */


/*!
 * @}
 */ /* end of group PFLASH_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PIT Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PIT_Peripheral_Access_Layer PIT Peripheral Access Layer
 * @{
 */


/** PIT - Size of Registers Arrays */
#define PIT_TIMER_COUNT                          4u

/** PIT - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< PIT Module Control Register, offset: 0x0 */
       uint8_t RESERVED_0[220];
  __I  uint32_t LTMR64H;                           /**< PIT Upper Lifetime Timer Register, offset: 0xE0 */
  __I  uint32_t LTMR64L;                           /**< PIT Lower Lifetime Timer Register, offset: 0xE4 */
       uint8_t RESERVED_1[24];
  struct {                                         /* offset: 0x100, array step: 0x10 */
    __IO uint32_t LDVAL;                             /**< Timer Load Value Register, array offset: 0x100, array step: 0x10 */
    __I  uint32_t CVAL;                              /**< Current Timer Value Register, array offset: 0x104, array step: 0x10 */
    __IO uint32_t TCTRL;                             /**< Timer Control Register, array offset: 0x108, array step: 0x10 */
    __IO uint32_t TFLG;                              /**< Timer Flag Register, array offset: 0x10C, array step: 0x10 */
  } TIMER[PIT_TIMER_COUNT];
} PIT_Type, *PIT_MemMapPtr;

 /** Number of instances of the PIT module. */
#define PIT_INSTANCE_COUNT                       (1u)


/* PIT - Peripheral instance base addresses */
/** Peripheral PIT_0 base address */
#define PIT_0_BASE                               (0xFFF84000u)
/** Peripheral PIT_0 base pointer */
#define PIT_0                                    ((PIT_Type *)PIT_0_BASE)
/** Array initializer of PIT peripheral base addresses */
#define PIT_BASE_ADDRS                           { PIT_0_BASE }
/** Array initializer of PIT peripheral base pointers */
#define PIT_BASE_PTRS                            { PIT_0 }
/** Number of interrupt vector arrays for the PIT module. */
#define PIT_IRQS_ARR_COUNT                       (1u)
/** Number of interrupt channels for the PIT module. */
#define PIT_IRQS_CH_COUNT                        (4u)
/** Interrupt vectors for the PIT peripheral type */
#define PIT_IRQS                                 { { PIT_Ch0_IRQn, PIT_Ch1_IRQn, PIT_Ch2_IRQn, PIT_Ch3_IRQn } }
/* ----------------------------------------------------------------------------
   -- PIT Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PIT_Register_Masks PIT Register Masks
 * @{
 */

/* MCR Bit Fields */
#define PIT_MCR_FRZ_MASK                         0x1u
#define PIT_MCR_FRZ_SHIFT                        0u
#define PIT_MCR_FRZ_WIDTH                        1u
#define PIT_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<PIT_MCR_FRZ_SHIFT))&PIT_MCR_FRZ_MASK)
#define PIT_MCR_MDIS_MASK                        0x2u
#define PIT_MCR_MDIS_SHIFT                       1u
#define PIT_MCR_MDIS_WIDTH                       1u
#define PIT_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<PIT_MCR_MDIS_SHIFT))&PIT_MCR_MDIS_MASK)
/* LTMR64H Bit Fields */
#define PIT_LTMR64H_LTH_MASK                     0xFFFFFFFFu
#define PIT_LTMR64H_LTH_SHIFT                    0u
#define PIT_LTMR64H_LTH_WIDTH                    32u
#define PIT_LTMR64H_LTH(x)                       (((uint32_t)(((uint32_t)(x))<<PIT_LTMR64H_LTH_SHIFT))&PIT_LTMR64H_LTH_MASK)
/* LTMR64L Bit Fields */
#define PIT_LTMR64L_LTL_MASK                     0xFFFFFFFFu
#define PIT_LTMR64L_LTL_SHIFT                    0u
#define PIT_LTMR64L_LTL_WIDTH                    32u
#define PIT_LTMR64L_LTL(x)                       (((uint32_t)(((uint32_t)(x))<<PIT_LTMR64L_LTL_SHIFT))&PIT_LTMR64L_LTL_MASK)
/* LDVAL Bit Fields */
#define PIT_LDVAL_TSV_MASK                       0xFFFFFFFFu
#define PIT_LDVAL_TSV_SHIFT                      0u
#define PIT_LDVAL_TSV_WIDTH                      32u
#define PIT_LDVAL_TSV(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_LDVAL_TSV_SHIFT))&PIT_LDVAL_TSV_MASK)
/* CVAL Bit Fields */
#define PIT_CVAL_TVL_MASK                        0xFFFFFFFFu
#define PIT_CVAL_TVL_SHIFT                       0u
#define PIT_CVAL_TVL_WIDTH                       32u
#define PIT_CVAL_TVL(x)                          (((uint32_t)(((uint32_t)(x))<<PIT_CVAL_TVL_SHIFT))&PIT_CVAL_TVL_MASK)
/* TCTRL Bit Fields */
#define PIT_TCTRL_TEN_MASK                       0x1u
#define PIT_TCTRL_TEN_SHIFT                      0u
#define PIT_TCTRL_TEN_WIDTH                      1u
#define PIT_TCTRL_TEN(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_TCTRL_TEN_SHIFT))&PIT_TCTRL_TEN_MASK)
#define PIT_TCTRL_TIE_MASK                       0x2u
#define PIT_TCTRL_TIE_SHIFT                      1u
#define PIT_TCTRL_TIE_WIDTH                      1u
#define PIT_TCTRL_TIE(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_TCTRL_TIE_SHIFT))&PIT_TCTRL_TIE_MASK)
#define PIT_TCTRL_CHN_MASK                       0x4u
#define PIT_TCTRL_CHN_SHIFT                      2u
#define PIT_TCTRL_CHN_WIDTH                      1u
#define PIT_TCTRL_CHN(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_TCTRL_CHN_SHIFT))&PIT_TCTRL_CHN_MASK)
/* TFLG Bit Fields */
#define PIT_TFLG_TIF_MASK                        0x1u
#define PIT_TFLG_TIF_SHIFT                       0u
#define PIT_TFLG_TIF_WIDTH                       1u
#define PIT_TFLG_TIF(x)                          (((uint32_t)(((uint32_t)(x))<<PIT_TFLG_TIF_SHIFT))&PIT_TFLG_TIF_MASK)

/*!
 * @}
 */ /* end of group PIT_Register_Masks */


/*!
 * @}
 */ /* end of group PIT_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PLLDIG Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PLLDIG_Peripheral_Access_Layer PLLDIG Peripheral Access Layer
 * @{
 */


/** PLLDIG - Size of Registers Arrays */

/** PLLDIG - Register Layout Typedef */
typedef struct {
  __IO uint32_t PLL0CR;                            /**< PLLDIG PLL0 Control Register, offset: 0x0 */
  __IO uint32_t PLL0SR;                            /**< PLLDIG PLL0 Status Register, offset: 0x4 */
  __IO uint32_t PLL0DV;                            /**< PLLDIG PLL0 Divider Register, offset: 0x8 */
       uint8_t RESERVED_0[20];
  __IO uint32_t PLL1CR;                            /**< PLLDIG PLL1 Control Register, offset: 0x20 */
  __IO uint32_t PLL1SR;                            /**< PLLDIG PLL1 Status Register, offset: 0x24 */
  __IO uint32_t PLL1DV;                            /**< PLLDIG PLL1 Divider Register, offset: 0x28 */
  __IO uint32_t PLL1FM;                            /**< PLLDIG PLL1 Frequency Modulation Register, offset: 0x2C */
  __IO uint32_t PLL1FD;                            /**< PLLDIG PLL1 Fractional Divide Register, offset: 0x30 */
} PLLDIG_Type, *PLLDIG_MemMapPtr;

 /** Number of instances of the PLLDIG module. */
#define PLLDIG_INSTANCE_COUNT                    (1u)


/* PLLDIG - Peripheral instance base addresses */
/** Peripheral PLLDIG base address */
#define PLLDIG_BASE                              (0xFFFB0100u)
/** Peripheral PLLDIG base pointer */
#define PLLDIG                                   ((PLLDIG_Type *)PLLDIG_BASE)
/** Array initializer of PLLDIG peripheral base addresses */
#define PLLDIG_BASE_ADDRS                        { PLLDIG_BASE }
/** Array initializer of PLLDIG peripheral base pointers */
#define PLLDIG_BASE_PTRS                         { PLLDIG }

/* ----------------------------------------------------------------------------
   -- PLLDIG Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PLLDIG_Register_Masks PLLDIG Register Masks
 * @{
 */

/* PLL0CR Bit Fields */
#define PLLDIG_PLL0CR_LOLIE_MASK                 0x8u
#define PLLDIG_PLL0CR_LOLIE_SHIFT                3u
#define PLLDIG_PLL0CR_LOLIE_WIDTH                1u
#define PLLDIG_PLL0CR_LOLIE(x)                   (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL0CR_LOLIE_SHIFT))&PLLDIG_PLL0CR_LOLIE_MASK)
#define PLLDIG_PLL0CR_CLKCFG_MASK                0x300u
#define PLLDIG_PLL0CR_CLKCFG_SHIFT               8u
#define PLLDIG_PLL0CR_CLKCFG_WIDTH               2u
#define PLLDIG_PLL0CR_CLKCFG(x)                  (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL0CR_CLKCFG_SHIFT))&PLLDIG_PLL0CR_CLKCFG_MASK)
/* PLL0SR Bit Fields */
#define PLLDIG_PLL0SR_LOCK_MASK                  0x4u
#define PLLDIG_PLL0SR_LOCK_SHIFT                 2u
#define PLLDIG_PLL0SR_LOCK_WIDTH                 1u
#define PLLDIG_PLL0SR_LOCK(x)                    (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL0SR_LOCK_SHIFT))&PLLDIG_PLL0SR_LOCK_MASK)
#define PLLDIG_PLL0SR_LOLF_MASK                  0x8u
#define PLLDIG_PLL0SR_LOLF_SHIFT                 3u
#define PLLDIG_PLL0SR_LOLF_WIDTH                 1u
#define PLLDIG_PLL0SR_LOLF(x)                    (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL0SR_LOLF_SHIFT))&PLLDIG_PLL0SR_LOLF_MASK)
/* PLL0DV Bit Fields */
#define PLLDIG_PLL0DV_MFD_MASK                   0x7Fu
#define PLLDIG_PLL0DV_MFD_SHIFT                  0u
#define PLLDIG_PLL0DV_MFD_WIDTH                  7u
#define PLLDIG_PLL0DV_MFD(x)                     (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL0DV_MFD_SHIFT))&PLLDIG_PLL0DV_MFD_MASK)
#define PLLDIG_PLL0DV_PREDIV_MASK                0x7000u
#define PLLDIG_PLL0DV_PREDIV_SHIFT               12u
#define PLLDIG_PLL0DV_PREDIV_WIDTH               3u
#define PLLDIG_PLL0DV_PREDIV(x)                  (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL0DV_PREDIV_SHIFT))&PLLDIG_PLL0DV_PREDIV_MASK)
#define PLLDIG_PLL0DV_RFDPHI_MASK                0x3F0000u
#define PLLDIG_PLL0DV_RFDPHI_SHIFT               16u
#define PLLDIG_PLL0DV_RFDPHI_WIDTH               6u
#define PLLDIG_PLL0DV_RFDPHI(x)                  (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL0DV_RFDPHI_SHIFT))&PLLDIG_PLL0DV_RFDPHI_MASK)
#define PLLDIG_PLL0DV_RFDPHI1_MASK               0x78000000u
#define PLLDIG_PLL0DV_RFDPHI1_SHIFT              27u
#define PLLDIG_PLL0DV_RFDPHI1_WIDTH              4u
#define PLLDIG_PLL0DV_RFDPHI1(x)                 (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL0DV_RFDPHI1_SHIFT))&PLLDIG_PLL0DV_RFDPHI1_MASK)
/* PLL1CR Bit Fields */
#define PLLDIG_PLL1CR_LOLIE_MASK                 0x8u
#define PLLDIG_PLL1CR_LOLIE_SHIFT                3u
#define PLLDIG_PLL1CR_LOLIE_WIDTH                1u
#define PLLDIG_PLL1CR_LOLIE(x)                   (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL1CR_LOLIE_SHIFT))&PLLDIG_PLL1CR_LOLIE_MASK)
#define PLLDIG_PLL1CR_CLKCFG_MASK                0x300u
#define PLLDIG_PLL1CR_CLKCFG_SHIFT               8u
#define PLLDIG_PLL1CR_CLKCFG_WIDTH               2u
#define PLLDIG_PLL1CR_CLKCFG(x)                  (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL1CR_CLKCFG_SHIFT))&PLLDIG_PLL1CR_CLKCFG_MASK)
/* PLL1SR Bit Fields */
#define PLLDIG_PLL1SR_LOCK_MASK                  0x4u
#define PLLDIG_PLL1SR_LOCK_SHIFT                 2u
#define PLLDIG_PLL1SR_LOCK_WIDTH                 1u
#define PLLDIG_PLL1SR_LOCK(x)                    (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL1SR_LOCK_SHIFT))&PLLDIG_PLL1SR_LOCK_MASK)
#define PLLDIG_PLL1SR_LOLF_MASK                  0x8u
#define PLLDIG_PLL1SR_LOLF_SHIFT                 3u
#define PLLDIG_PLL1SR_LOLF_WIDTH                 1u
#define PLLDIG_PLL1SR_LOLF(x)                    (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL1SR_LOLF_SHIFT))&PLLDIG_PLL1SR_LOLF_MASK)
/* PLL1DV Bit Fields */
#define PLLDIG_PLL1DV_MFD_MASK                   0x7Fu
#define PLLDIG_PLL1DV_MFD_SHIFT                  0u
#define PLLDIG_PLL1DV_MFD_WIDTH                  7u
#define PLLDIG_PLL1DV_MFD(x)                     (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL1DV_MFD_SHIFT))&PLLDIG_PLL1DV_MFD_MASK)
#define PLLDIG_PLL1DV_RFDPHI_MASK                0x3F0000u
#define PLLDIG_PLL1DV_RFDPHI_SHIFT               16u
#define PLLDIG_PLL1DV_RFDPHI_WIDTH               6u
#define PLLDIG_PLL1DV_RFDPHI(x)                  (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL1DV_RFDPHI_SHIFT))&PLLDIG_PLL1DV_RFDPHI_MASK)
/* PLL1FM Bit Fields */
#define PLLDIG_PLL1FM_INCSTP_MASK                0x7FFFu
#define PLLDIG_PLL1FM_INCSTP_SHIFT               0u
#define PLLDIG_PLL1FM_INCSTP_WIDTH               15u
#define PLLDIG_PLL1FM_INCSTP(x)                  (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL1FM_INCSTP_SHIFT))&PLLDIG_PLL1FM_INCSTP_MASK)
#define PLLDIG_PLL1FM_MODPRD_MASK                0x1FFF0000u
#define PLLDIG_PLL1FM_MODPRD_SHIFT               16u
#define PLLDIG_PLL1FM_MODPRD_WIDTH               13u
#define PLLDIG_PLL1FM_MODPRD(x)                  (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL1FM_MODPRD_SHIFT))&PLLDIG_PLL1FM_MODPRD_MASK)
#define PLLDIG_PLL1FM_MODSEL_MASK                0x20000000u
#define PLLDIG_PLL1FM_MODSEL_SHIFT               29u
#define PLLDIG_PLL1FM_MODSEL_WIDTH               1u
#define PLLDIG_PLL1FM_MODSEL(x)                  (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL1FM_MODSEL_SHIFT))&PLLDIG_PLL1FM_MODSEL_MASK)
#define PLLDIG_PLL1FM_MODEN_MASK                 0x40000000u
#define PLLDIG_PLL1FM_MODEN_SHIFT                30u
#define PLLDIG_PLL1FM_MODEN_WIDTH                1u
#define PLLDIG_PLL1FM_MODEN(x)                   (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL1FM_MODEN_SHIFT))&PLLDIG_PLL1FM_MODEN_MASK)
/* PLL1FD Bit Fields */
#define PLLDIG_PLL1FD_FRCDIV_MASK                0xFFFu
#define PLLDIG_PLL1FD_FRCDIV_SHIFT               0u
#define PLLDIG_PLL1FD_FRCDIV_WIDTH               12u
#define PLLDIG_PLL1FD_FRCDIV(x)                  (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL1FD_FRCDIV_SHIFT))&PLLDIG_PLL1FD_FRCDIV_MASK)
#define PLLDIG_PLL1FD_FDEN_MASK                  0x40000000u
#define PLLDIG_PLL1FD_FDEN_SHIFT                 30u
#define PLLDIG_PLL1FD_FDEN_WIDTH                 1u
#define PLLDIG_PLL1FD_FDEN(x)                    (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLL1FD_FDEN_SHIFT))&PLLDIG_PLL1FD_FDEN_MASK)

/*!
 * @}
 */ /* end of group PLLDIG_Register_Masks */


/*!
 * @}
 */ /* end of group PLLDIG_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PMC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PMC_Peripheral_Access_Layer PMC Peripheral Access Layer
 * @{
 */


/** PMC - Size of Registers Arrays */

/** PMC - Register Layout Typedef */
typedef struct {
  __I  uint32_t PMCSR;                             /**< PMC Status Register, offset: 0x0 */
  __I  uint32_t RSSR;                              /**< Regulator Voltage Status Register, offset: 0x4 */
  __IO uint32_t PMCCR;                             /**< PMC Control Register, offset: 0x8 */
       uint8_t RESERVED_0[4];
  __IO uint32_t IER;                               /**< Interrupt Enable Register, offset: 0x10 */
       uint8_t RESERVED_1[12];
  __IO uint32_t ESR_0;                             /**< Event Status Register 0, offset: 0x20 */
       uint8_t RESERVED_2[12];
  __IO uint32_t REE_0;                             /**< Reset Event Enable 0, offset: 0x30 */
       uint8_t RESERVED_3[12];
  __IO uint32_t RES_0;                             /**< Reset Event Selection 0, offset: 0x40 */
       uint8_t RESERVED_4[44];
  __IO uint32_t FIR;                               /**< FCCU Fault Injection Register, offset: 0x70 */
       uint8_t RESERVED_5[140];
  __IO uint32_t ESR_TD;                            /**< Temperature Event Status register, offset: 0x100 */
  __IO uint32_t REE_TD;                            /**< Temperature Reset Event Enable register, offset: 0x104 */
  __IO uint32_t RES_TD;                            /**< Temperature Reset Event Selection register, offset: 0x108 */
  __IO uint32_t CTL_TD;                            /**< Temperature detector configuration register, offset: 0x10C */
       uint8_t RESERVED_6[44];
  __IO uint32_t STTW;                              /**< LVD Self Test Time Window Register, offset: 0x13C */
  __IO uint32_t VD_UTST;                           /**< Voltage Detect User Mode Test Register, offset: 0x140 */
} PMC_Type, *PMC_MemMapPtr;

 /** Number of instances of the PMC module. */
#define PMC_INSTANCE_COUNT                       (1u)


/* PMC - Peripheral instance base addresses */
/** Peripheral PMC base address */
#define PMC_BASE                                 (0xFFFA0400u)
/** Peripheral PMC base pointer */
#define PMC                                      ((PMC_Type *)PMC_BASE)
/** Array initializer of PMC peripheral base addresses */
#define PMC_BASE_ADDRS                           { PMC_BASE }
/** Array initializer of PMC peripheral base pointers */
#define PMC_BASE_PTRS                            { PMC }

/* ----------------------------------------------------------------------------
   -- PMC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PMC_Register_Masks PMC Register Masks
 * @{
 */

/* PMCSR Bit Fields */
#define PMC_PMCSR_EXT_INT_REG_MASK               0x1u
#define PMC_PMCSR_EXT_INT_REG_SHIFT              0u
#define PMC_PMCSR_EXT_INT_REG_WIDTH              1u
#define PMC_PMCSR_EXT_INT_REG(x)                 (((uint32_t)(((uint32_t)(x))<<PMC_PMCSR_EXT_INT_REG_SHIFT))&PMC_PMCSR_EXT_INT_REG_MASK)
/* RSSR Bit Fields */
#define PMC_RSSR_VD3_MASK                        0x8u
#define PMC_RSSR_VD3_SHIFT                       3u
#define PMC_RSSR_VD3_WIDTH                       1u
#define PMC_RSSR_VD3(x)                          (((uint32_t)(((uint32_t)(x))<<PMC_RSSR_VD3_SHIFT))&PMC_RSSR_VD3_MASK)
#define PMC_RSSR_VD4_MASK                        0x10u
#define PMC_RSSR_VD4_SHIFT                       4u
#define PMC_RSSR_VD4_WIDTH                       1u
#define PMC_RSSR_VD4(x)                          (((uint32_t)(((uint32_t)(x))<<PMC_RSSR_VD4_SHIFT))&PMC_RSSR_VD4_MASK)
#define PMC_RSSR_VD6_MASK                        0x40u
#define PMC_RSSR_VD6_SHIFT                       6u
#define PMC_RSSR_VD6_WIDTH                       1u
#define PMC_RSSR_VD6(x)                          (((uint32_t)(((uint32_t)(x))<<PMC_RSSR_VD6_SHIFT))&PMC_RSSR_VD6_MASK)
/* PMCCR Bit Fields */
#define PMC_PMCCR_INT_REG_BYPASS_MASK            0x3u
#define PMC_PMCCR_INT_REG_BYPASS_SHIFT           0u
#define PMC_PMCCR_INT_REG_BYPASS_WIDTH           2u
#define PMC_PMCCR_INT_REG_BYPASS(x)              (((uint32_t)(((uint32_t)(x))<<PMC_PMCCR_INT_REG_BYPASS_SHIFT))&PMC_PMCCR_INT_REG_BYPASS_MASK)
#define PMC_PMCCR_PMCCR_EN_MASK                  0x80000000u
#define PMC_PMCCR_PMCCR_EN_SHIFT                 31u
#define PMC_PMCCR_PMCCR_EN_WIDTH                 1u
#define PMC_PMCCR_PMCCR_EN(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_PMCCR_PMCCR_EN_SHIFT))&PMC_PMCCR_PMCCR_EN_MASK)
/* IER Bit Fields */
#define PMC_IER_VD3IE_C_MASK                     0x8u
#define PMC_IER_VD3IE_C_SHIFT                    3u
#define PMC_IER_VD3IE_C_WIDTH                    1u
#define PMC_IER_VD3IE_C(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_IER_VD3IE_C_SHIFT))&PMC_IER_VD3IE_C_MASK)
#define PMC_IER_VD3IE_H_MASK                     0x10u
#define PMC_IER_VD3IE_H_SHIFT                    4u
#define PMC_IER_VD3IE_H_WIDTH                    1u
#define PMC_IER_VD3IE_H(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_IER_VD3IE_H_SHIFT))&PMC_IER_VD3IE_H_MASK)
#define PMC_IER_VD4IE_C_MASK                     0x80u
#define PMC_IER_VD4IE_C_SHIFT                    7u
#define PMC_IER_VD4IE_C_WIDTH                    1u
#define PMC_IER_VD4IE_C(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_IER_VD4IE_C_SHIFT))&PMC_IER_VD4IE_C_MASK)
#define PMC_IER_VD6IE_C_MASK                     0x400u
#define PMC_IER_VD6IE_C_SHIFT                    10u
#define PMC_IER_VD6IE_C_WIDTH                    1u
#define PMC_IER_VD6IE_C(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_IER_VD6IE_C_SHIFT))&PMC_IER_VD6IE_C_MASK)
#define PMC_IER_VD6IE_F_MASK                     0x800u
#define PMC_IER_VD6IE_F_SHIFT                    11u
#define PMC_IER_VD6IE_F_WIDTH                    1u
#define PMC_IER_VD6IE_F(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_IER_VD6IE_F_SHIFT))&PMC_IER_VD6IE_F_MASK)
#define PMC_IER_VD6IE_IM_MASK                    0x1000u
#define PMC_IER_VD6IE_IM_SHIFT                   12u
#define PMC_IER_VD6IE_IM_WIDTH                   1u
#define PMC_IER_VD6IE_IM(x)                      (((uint32_t)(((uint32_t)(x))<<PMC_IER_VD6IE_IM_SHIFT))&PMC_IER_VD6IE_IM_MASK)
#define PMC_IER_VD6IE_ADC_MASK                   0x2000u
#define PMC_IER_VD6IE_ADC_SHIFT                  13u
#define PMC_IER_VD6IE_ADC_WIDTH                  1u
#define PMC_IER_VD6IE_ADC(x)                     (((uint32_t)(((uint32_t)(x))<<PMC_IER_VD6IE_ADC_SHIFT))&PMC_IER_VD6IE_ADC_MASK)
#define PMC_IER_VD6IE_O_MASK                     0x4000u
#define PMC_IER_VD6IE_O_SHIFT                    14u
#define PMC_IER_VD6IE_O_WIDTH                    1u
#define PMC_IER_VD6IE_O(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_IER_VD6IE_O_SHIFT))&PMC_IER_VD6IE_O_MASK)
#define PMC_IER_TS0_0IE_MASK                     0x1000000u
#define PMC_IER_TS0_0IE_SHIFT                    24u
#define PMC_IER_TS0_0IE_WIDTH                    1u
#define PMC_IER_TS0_0IE(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_IER_TS0_0IE_SHIFT))&PMC_IER_TS0_0IE_MASK)
#define PMC_IER_TS0_2IE_MASK                     0x2000000u
#define PMC_IER_TS0_2IE_SHIFT                    25u
#define PMC_IER_TS0_2IE_WIDTH                    1u
#define PMC_IER_TS0_2IE(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_IER_TS0_2IE_SHIFT))&PMC_IER_TS0_2IE_MASK)
#define PMC_IER_TS0_3IE_MASK                     0x4000000u
#define PMC_IER_TS0_3IE_SHIFT                    26u
#define PMC_IER_TS0_3IE_WIDTH                    1u
#define PMC_IER_TS0_3IE(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_IER_TS0_3IE_SHIFT))&PMC_IER_TS0_3IE_MASK)
#define PMC_IER_TS1_0IE_MASK                     0x8000000u
#define PMC_IER_TS1_0IE_SHIFT                    27u
#define PMC_IER_TS1_0IE_WIDTH                    1u
#define PMC_IER_TS1_0IE(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_IER_TS1_0IE_SHIFT))&PMC_IER_TS1_0IE_MASK)
#define PMC_IER_TS1_2IE_MASK                     0x10000000u
#define PMC_IER_TS1_2IE_SHIFT                    28u
#define PMC_IER_TS1_2IE_WIDTH                    1u
#define PMC_IER_TS1_2IE(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_IER_TS1_2IE_SHIFT))&PMC_IER_TS1_2IE_MASK)
#define PMC_IER_TS1_3IE_MASK                     0x20000000u
#define PMC_IER_TS1_3IE_SHIFT                    29u
#define PMC_IER_TS1_3IE_WIDTH                    1u
#define PMC_IER_TS1_3IE(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_IER_TS1_3IE_SHIFT))&PMC_IER_TS1_3IE_MASK)
#define PMC_IER_IE_EN_MASK                       0x80000000u
#define PMC_IER_IE_EN_SHIFT                      31u
#define PMC_IER_IE_EN_WIDTH                      1u
#define PMC_IER_IE_EN(x)                         (((uint32_t)(((uint32_t)(x))<<PMC_IER_IE_EN_SHIFT))&PMC_IER_IE_EN_MASK)
/* ESR_0 Bit Fields */
#define PMC_ESR_0_VD3_C_MASK                     0x8u
#define PMC_ESR_0_VD3_C_SHIFT                    3u
#define PMC_ESR_0_VD3_C_WIDTH                    1u
#define PMC_ESR_0_VD3_C(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_ESR_0_VD3_C_SHIFT))&PMC_ESR_0_VD3_C_MASK)
#define PMC_ESR_0_VD3_H_MASK                     0x10u
#define PMC_ESR_0_VD3_H_SHIFT                    4u
#define PMC_ESR_0_VD3_H_WIDTH                    1u
#define PMC_ESR_0_VD3_H(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_ESR_0_VD3_H_SHIFT))&PMC_ESR_0_VD3_H_MASK)
#define PMC_ESR_0_VD4_C_MASK                     0x80u
#define PMC_ESR_0_VD4_C_SHIFT                    7u
#define PMC_ESR_0_VD4_C_WIDTH                    1u
#define PMC_ESR_0_VD4_C(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_ESR_0_VD4_C_SHIFT))&PMC_ESR_0_VD4_C_MASK)
#define PMC_ESR_0_VD6_C_MASK                     0x400u
#define PMC_ESR_0_VD6_C_SHIFT                    10u
#define PMC_ESR_0_VD6_C_WIDTH                    1u
#define PMC_ESR_0_VD6_C(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_ESR_0_VD6_C_SHIFT))&PMC_ESR_0_VD6_C_MASK)
#define PMC_ESR_0_VD6_F_MASK                     0x800u
#define PMC_ESR_0_VD6_F_SHIFT                    11u
#define PMC_ESR_0_VD6_F_WIDTH                    1u
#define PMC_ESR_0_VD6_F(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_ESR_0_VD6_F_SHIFT))&PMC_ESR_0_VD6_F_MASK)
#define PMC_ESR_0_VD6_IM_MASK                    0x1000u
#define PMC_ESR_0_VD6_IM_SHIFT                   12u
#define PMC_ESR_0_VD6_IM_WIDTH                   1u
#define PMC_ESR_0_VD6_IM(x)                      (((uint32_t)(((uint32_t)(x))<<PMC_ESR_0_VD6_IM_SHIFT))&PMC_ESR_0_VD6_IM_MASK)
#define PMC_ESR_0_VD6_ADC_MASK                   0x2000u
#define PMC_ESR_0_VD6_ADC_SHIFT                  13u
#define PMC_ESR_0_VD6_ADC_WIDTH                  1u
#define PMC_ESR_0_VD6_ADC(x)                     (((uint32_t)(((uint32_t)(x))<<PMC_ESR_0_VD6_ADC_SHIFT))&PMC_ESR_0_VD6_ADC_MASK)
#define PMC_ESR_0_VD6_O_MASK                     0x4000u
#define PMC_ESR_0_VD6_O_SHIFT                    14u
#define PMC_ESR_0_VD6_O_WIDTH                    1u
#define PMC_ESR_0_VD6_O(x)                       (((uint32_t)(((uint32_t)(x))<<PMC_ESR_0_VD6_O_SHIFT))&PMC_ESR_0_VD6_O_MASK)
/* REE_0 Bit Fields */
#define PMC_REE_0_VD3RE_C_MASK                   0x8u
#define PMC_REE_0_VD3RE_C_SHIFT                  3u
#define PMC_REE_0_VD3RE_C_WIDTH                  1u
#define PMC_REE_0_VD3RE_C(x)                     (((uint32_t)(((uint32_t)(x))<<PMC_REE_0_VD3RE_C_SHIFT))&PMC_REE_0_VD3RE_C_MASK)
#define PMC_REE_0_VD3RE_H_MASK                   0x10u
#define PMC_REE_0_VD3RE_H_SHIFT                  4u
#define PMC_REE_0_VD3RE_H_WIDTH                  1u
#define PMC_REE_0_VD3RE_H(x)                     (((uint32_t)(((uint32_t)(x))<<PMC_REE_0_VD3RE_H_SHIFT))&PMC_REE_0_VD3RE_H_MASK)
#define PMC_REE_0_VD4RE_C_MASK                   0x80u
#define PMC_REE_0_VD4RE_C_SHIFT                  7u
#define PMC_REE_0_VD4RE_C_WIDTH                  1u
#define PMC_REE_0_VD4RE_C(x)                     (((uint32_t)(((uint32_t)(x))<<PMC_REE_0_VD4RE_C_SHIFT))&PMC_REE_0_VD4RE_C_MASK)
#define PMC_REE_0_VD6RE_C_MASK                   0x400u
#define PMC_REE_0_VD6RE_C_SHIFT                  10u
#define PMC_REE_0_VD6RE_C_WIDTH                  1u
#define PMC_REE_0_VD6RE_C(x)                     (((uint32_t)(((uint32_t)(x))<<PMC_REE_0_VD6RE_C_SHIFT))&PMC_REE_0_VD6RE_C_MASK)
#define PMC_REE_0_VD6RE_F_MASK                   0x800u
#define PMC_REE_0_VD6RE_F_SHIFT                  11u
#define PMC_REE_0_VD6RE_F_WIDTH                  1u
#define PMC_REE_0_VD6RE_F(x)                     (((uint32_t)(((uint32_t)(x))<<PMC_REE_0_VD6RE_F_SHIFT))&PMC_REE_0_VD6RE_F_MASK)
#define PMC_REE_0_VD6RE_IM_MASK                  0x1000u
#define PMC_REE_0_VD6RE_IM_SHIFT                 12u
#define PMC_REE_0_VD6RE_IM_WIDTH                 1u
#define PMC_REE_0_VD6RE_IM(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_REE_0_VD6RE_IM_SHIFT))&PMC_REE_0_VD6RE_IM_MASK)
#define PMC_REE_0_VD6RE_ADC_MASK                 0x2000u
#define PMC_REE_0_VD6RE_ADC_SHIFT                13u
#define PMC_REE_0_VD6RE_ADC_WIDTH                1u
#define PMC_REE_0_VD6RE_ADC(x)                   (((uint32_t)(((uint32_t)(x))<<PMC_REE_0_VD6RE_ADC_SHIFT))&PMC_REE_0_VD6RE_ADC_MASK)
#define PMC_REE_0_VD6RE_O_MASK                   0x4000u
#define PMC_REE_0_VD6RE_O_SHIFT                  14u
#define PMC_REE_0_VD6RE_O_WIDTH                  1u
#define PMC_REE_0_VD6RE_O(x)                     (((uint32_t)(((uint32_t)(x))<<PMC_REE_0_VD6RE_O_SHIFT))&PMC_REE_0_VD6RE_O_MASK)
/* RES_0 Bit Fields */
#define PMC_RES_0_VD3RES_C_MASK                  0x8u
#define PMC_RES_0_VD3RES_C_SHIFT                 3u
#define PMC_RES_0_VD3RES_C_WIDTH                 1u
#define PMC_RES_0_VD3RES_C(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_RES_0_VD3RES_C_SHIFT))&PMC_RES_0_VD3RES_C_MASK)
#define PMC_RES_0_VD3RES_H_MASK                  0x10u
#define PMC_RES_0_VD3RES_H_SHIFT                 4u
#define PMC_RES_0_VD3RES_H_WIDTH                 1u
#define PMC_RES_0_VD3RES_H(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_RES_0_VD3RES_H_SHIFT))&PMC_RES_0_VD3RES_H_MASK)
#define PMC_RES_0_VD4RES_C_MASK                  0x80u
#define PMC_RES_0_VD4RES_C_SHIFT                 7u
#define PMC_RES_0_VD4RES_C_WIDTH                 1u
#define PMC_RES_0_VD4RES_C(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_RES_0_VD4RES_C_SHIFT))&PMC_RES_0_VD4RES_C_MASK)
#define PMC_RES_0_VD6RES_C_MASK                  0x400u
#define PMC_RES_0_VD6RES_C_SHIFT                 10u
#define PMC_RES_0_VD6RES_C_WIDTH                 1u
#define PMC_RES_0_VD6RES_C(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_RES_0_VD6RES_C_SHIFT))&PMC_RES_0_VD6RES_C_MASK)
#define PMC_RES_0_VD6RES_F_MASK                  0x800u
#define PMC_RES_0_VD6RES_F_SHIFT                 11u
#define PMC_RES_0_VD6RES_F_WIDTH                 1u
#define PMC_RES_0_VD6RES_F(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_RES_0_VD6RES_F_SHIFT))&PMC_RES_0_VD6RES_F_MASK)
#define PMC_RES_0_VD6RES_IM_MASK                 0x1000u
#define PMC_RES_0_VD6RES_IM_SHIFT                12u
#define PMC_RES_0_VD6RES_IM_WIDTH                1u
#define PMC_RES_0_VD6RES_IM(x)                   (((uint32_t)(((uint32_t)(x))<<PMC_RES_0_VD6RES_IM_SHIFT))&PMC_RES_0_VD6RES_IM_MASK)
#define PMC_RES_0_VD6RES_ADC_MASK                0x2000u
#define PMC_RES_0_VD6RES_ADC_SHIFT               13u
#define PMC_RES_0_VD6RES_ADC_WIDTH               1u
#define PMC_RES_0_VD6RES_ADC(x)                  (((uint32_t)(((uint32_t)(x))<<PMC_RES_0_VD6RES_ADC_SHIFT))&PMC_RES_0_VD6RES_ADC_MASK)
#define PMC_RES_0_VD6RES_O_MASK                  0x4000u
#define PMC_RES_0_VD6RES_O_SHIFT                 14u
#define PMC_RES_0_VD6RES_O_WIDTH                 1u
#define PMC_RES_0_VD6RES_O(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_RES_0_VD6RES_O_SHIFT))&PMC_RES_0_VD6RES_O_MASK)
/* FIR Bit Fields */
#define PMC_FIR_LVD_Fault_MASK                   0x1u
#define PMC_FIR_LVD_Fault_SHIFT                  0u
#define PMC_FIR_LVD_Fault_WIDTH                  1u
#define PMC_FIR_LVD_Fault(x)                     (((uint32_t)(((uint32_t)(x))<<PMC_FIR_LVD_Fault_SHIFT))&PMC_FIR_LVD_Fault_MASK)
#define PMC_FIR_HVD_Fault_MASK                   0x2u
#define PMC_FIR_HVD_Fault_SHIFT                  1u
#define PMC_FIR_HVD_Fault_WIDTH                  1u
#define PMC_FIR_HVD_Fault(x)                     (((uint32_t)(((uint32_t)(x))<<PMC_FIR_HVD_Fault_SHIFT))&PMC_FIR_HVD_Fault_MASK)
#define PMC_FIR_TSNS_Fault_MASK                  0x4u
#define PMC_FIR_TSNS_Fault_SHIFT                 2u
#define PMC_FIR_TSNS_Fault_WIDTH                 1u
#define PMC_FIR_TSNS_Fault(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_FIR_TSNS_Fault_SHIFT))&PMC_FIR_TSNS_Fault_MASK)
#define PMC_FIR_STEST_Fault_MASK                 0x8u
#define PMC_FIR_STEST_Fault_SHIFT                3u
#define PMC_FIR_STEST_Fault_WIDTH                1u
#define PMC_FIR_STEST_Fault(x)                   (((uint32_t)(((uint32_t)(x))<<PMC_FIR_STEST_Fault_SHIFT))&PMC_FIR_STEST_Fault_MASK)
/* ESR_TD Bit Fields */
#define PMC_ESR_TD_TEMP0_0_MASK                  0x1u
#define PMC_ESR_TD_TEMP0_0_SHIFT                 0u
#define PMC_ESR_TD_TEMP0_0_WIDTH                 1u
#define PMC_ESR_TD_TEMP0_0(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_ESR_TD_TEMP0_0_SHIFT))&PMC_ESR_TD_TEMP0_0_MASK)
#define PMC_ESR_TD_TEMP0_2_MASK                  0x4u
#define PMC_ESR_TD_TEMP0_2_SHIFT                 2u
#define PMC_ESR_TD_TEMP0_2_WIDTH                 1u
#define PMC_ESR_TD_TEMP0_2(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_ESR_TD_TEMP0_2_SHIFT))&PMC_ESR_TD_TEMP0_2_MASK)
#define PMC_ESR_TD_TEMP0_3_MASK                  0x8u
#define PMC_ESR_TD_TEMP0_3_SHIFT                 3u
#define PMC_ESR_TD_TEMP0_3_WIDTH                 1u
#define PMC_ESR_TD_TEMP0_3(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_ESR_TD_TEMP0_3_SHIFT))&PMC_ESR_TD_TEMP0_3_MASK)
#define PMC_ESR_TD_TEMP1_0_MASK                  0x100u
#define PMC_ESR_TD_TEMP1_0_SHIFT                 8u
#define PMC_ESR_TD_TEMP1_0_WIDTH                 1u
#define PMC_ESR_TD_TEMP1_0(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_ESR_TD_TEMP1_0_SHIFT))&PMC_ESR_TD_TEMP1_0_MASK)
#define PMC_ESR_TD_TEMP1_2_MASK                  0x400u
#define PMC_ESR_TD_TEMP1_2_SHIFT                 10u
#define PMC_ESR_TD_TEMP1_2_WIDTH                 1u
#define PMC_ESR_TD_TEMP1_2(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_ESR_TD_TEMP1_2_SHIFT))&PMC_ESR_TD_TEMP1_2_MASK)
#define PMC_ESR_TD_TEMP1_3_MASK                  0x800u
#define PMC_ESR_TD_TEMP1_3_SHIFT                 11u
#define PMC_ESR_TD_TEMP1_3_WIDTH                 1u
#define PMC_ESR_TD_TEMP1_3(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_ESR_TD_TEMP1_3_SHIFT))&PMC_ESR_TD_TEMP1_3_MASK)
#define PMC_ESR_TD_TEMP0_0_OP_MASK               0x10000u
#define PMC_ESR_TD_TEMP0_0_OP_SHIFT              16u
#define PMC_ESR_TD_TEMP0_0_OP_WIDTH              1u
#define PMC_ESR_TD_TEMP0_0_OP(x)                 (((uint32_t)(((uint32_t)(x))<<PMC_ESR_TD_TEMP0_0_OP_SHIFT))&PMC_ESR_TD_TEMP0_0_OP_MASK)
#define PMC_ESR_TD_TEMP0_2_OP_MASK               0x40000u
#define PMC_ESR_TD_TEMP0_2_OP_SHIFT              18u
#define PMC_ESR_TD_TEMP0_2_OP_WIDTH              1u
#define PMC_ESR_TD_TEMP0_2_OP(x)                 (((uint32_t)(((uint32_t)(x))<<PMC_ESR_TD_TEMP0_2_OP_SHIFT))&PMC_ESR_TD_TEMP0_2_OP_MASK)
#define PMC_ESR_TD_TEMP0_3_OP_MASK               0x80000u
#define PMC_ESR_TD_TEMP0_3_OP_SHIFT              19u
#define PMC_ESR_TD_TEMP0_3_OP_WIDTH              1u
#define PMC_ESR_TD_TEMP0_3_OP(x)                 (((uint32_t)(((uint32_t)(x))<<PMC_ESR_TD_TEMP0_3_OP_SHIFT))&PMC_ESR_TD_TEMP0_3_OP_MASK)
#define PMC_ESR_TD_TEMP1_0_OP_MASK               0x1000000u
#define PMC_ESR_TD_TEMP1_0_OP_SHIFT              24u
#define PMC_ESR_TD_TEMP1_0_OP_WIDTH              1u
#define PMC_ESR_TD_TEMP1_0_OP(x)                 (((uint32_t)(((uint32_t)(x))<<PMC_ESR_TD_TEMP1_0_OP_SHIFT))&PMC_ESR_TD_TEMP1_0_OP_MASK)
#define PMC_ESR_TD_TEMP1_2_OP_MASK               0x4000000u
#define PMC_ESR_TD_TEMP1_2_OP_SHIFT              26u
#define PMC_ESR_TD_TEMP1_2_OP_WIDTH              1u
#define PMC_ESR_TD_TEMP1_2_OP(x)                 (((uint32_t)(((uint32_t)(x))<<PMC_ESR_TD_TEMP1_2_OP_SHIFT))&PMC_ESR_TD_TEMP1_2_OP_MASK)
#define PMC_ESR_TD_TEMP1_3_OP_MASK               0x8000000u
#define PMC_ESR_TD_TEMP1_3_OP_SHIFT              27u
#define PMC_ESR_TD_TEMP1_3_OP_WIDTH              1u
#define PMC_ESR_TD_TEMP1_3_OP(x)                 (((uint32_t)(((uint32_t)(x))<<PMC_ESR_TD_TEMP1_3_OP_SHIFT))&PMC_ESR_TD_TEMP1_3_OP_MASK)
/* REE_TD Bit Fields */
#define PMC_REE_TD_TEMP0_0_MASK                  0x1u
#define PMC_REE_TD_TEMP0_0_SHIFT                 0u
#define PMC_REE_TD_TEMP0_0_WIDTH                 1u
#define PMC_REE_TD_TEMP0_0(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_REE_TD_TEMP0_0_SHIFT))&PMC_REE_TD_TEMP0_0_MASK)
#define PMC_REE_TD_TEMP0_2_MASK                  0x4u
#define PMC_REE_TD_TEMP0_2_SHIFT                 2u
#define PMC_REE_TD_TEMP0_2_WIDTH                 1u
#define PMC_REE_TD_TEMP0_2(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_REE_TD_TEMP0_2_SHIFT))&PMC_REE_TD_TEMP0_2_MASK)
#define PMC_REE_TD_TEMP0_3_MASK                  0x8u
#define PMC_REE_TD_TEMP0_3_SHIFT                 3u
#define PMC_REE_TD_TEMP0_3_WIDTH                 1u
#define PMC_REE_TD_TEMP0_3(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_REE_TD_TEMP0_3_SHIFT))&PMC_REE_TD_TEMP0_3_MASK)
#define PMC_REE_TD_TEMP1_0_MASK                  0x100u
#define PMC_REE_TD_TEMP1_0_SHIFT                 8u
#define PMC_REE_TD_TEMP1_0_WIDTH                 1u
#define PMC_REE_TD_TEMP1_0(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_REE_TD_TEMP1_0_SHIFT))&PMC_REE_TD_TEMP1_0_MASK)
#define PMC_REE_TD_TEMP1_2_MASK                  0x400u
#define PMC_REE_TD_TEMP1_2_SHIFT                 10u
#define PMC_REE_TD_TEMP1_2_WIDTH                 1u
#define PMC_REE_TD_TEMP1_2(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_REE_TD_TEMP1_2_SHIFT))&PMC_REE_TD_TEMP1_2_MASK)
#define PMC_REE_TD_TEMP1_3_MASK                  0x800u
#define PMC_REE_TD_TEMP1_3_SHIFT                 11u
#define PMC_REE_TD_TEMP1_3_WIDTH                 1u
#define PMC_REE_TD_TEMP1_3(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_REE_TD_TEMP1_3_SHIFT))&PMC_REE_TD_TEMP1_3_MASK)
/* RES_TD Bit Fields */
#define PMC_RES_TD_TEMP0_0_MASK                  0x1u
#define PMC_RES_TD_TEMP0_0_SHIFT                 0u
#define PMC_RES_TD_TEMP0_0_WIDTH                 1u
#define PMC_RES_TD_TEMP0_0(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_RES_TD_TEMP0_0_SHIFT))&PMC_RES_TD_TEMP0_0_MASK)
#define PMC_RES_TD_TEMP0_2_MASK                  0x4u
#define PMC_RES_TD_TEMP0_2_SHIFT                 2u
#define PMC_RES_TD_TEMP0_2_WIDTH                 1u
#define PMC_RES_TD_TEMP0_2(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_RES_TD_TEMP0_2_SHIFT))&PMC_RES_TD_TEMP0_2_MASK)
#define PMC_RES_TD_TEMP0_3_MASK                  0x8u
#define PMC_RES_TD_TEMP0_3_SHIFT                 3u
#define PMC_RES_TD_TEMP0_3_WIDTH                 1u
#define PMC_RES_TD_TEMP0_3(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_RES_TD_TEMP0_3_SHIFT))&PMC_RES_TD_TEMP0_3_MASK)
#define PMC_RES_TD_TEMP1_0_MASK                  0x100u
#define PMC_RES_TD_TEMP1_0_SHIFT                 8u
#define PMC_RES_TD_TEMP1_0_WIDTH                 1u
#define PMC_RES_TD_TEMP1_0(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_RES_TD_TEMP1_0_SHIFT))&PMC_RES_TD_TEMP1_0_MASK)
#define PMC_RES_TD_TEMP1_2_MASK                  0x400u
#define PMC_RES_TD_TEMP1_2_SHIFT                 10u
#define PMC_RES_TD_TEMP1_2_WIDTH                 1u
#define PMC_RES_TD_TEMP1_2(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_RES_TD_TEMP1_2_SHIFT))&PMC_RES_TD_TEMP1_2_MASK)
#define PMC_RES_TD_TEMP1_3_MASK                  0x800u
#define PMC_RES_TD_TEMP1_3_SHIFT                 11u
#define PMC_RES_TD_TEMP1_3_WIDTH                 1u
#define PMC_RES_TD_TEMP1_3(x)                    (((uint32_t)(((uint32_t)(x))<<PMC_RES_TD_TEMP1_3_SHIFT))&PMC_RES_TD_TEMP1_3_MASK)
/* CTL_TD Bit Fields */
#define PMC_CTL_TD_TS0_AOUT_EN_MASK              0x1u
#define PMC_CTL_TD_TS0_AOUT_EN_SHIFT             0u
#define PMC_CTL_TD_TS0_AOUT_EN_WIDTH             1u
#define PMC_CTL_TD_TS0_AOUT_EN(x)                (((uint32_t)(((uint32_t)(x))<<PMC_CTL_TD_TS0_AOUT_EN_SHIFT))&PMC_CTL_TD_TS0_AOUT_EN_MASK)
#define PMC_CTL_TD_TS0_DOUT_EN_MASK              0x2u
#define PMC_CTL_TD_TS0_DOUT_EN_SHIFT             1u
#define PMC_CTL_TD_TS0_DOUT_EN_WIDTH             1u
#define PMC_CTL_TD_TS0_DOUT_EN(x)                (((uint32_t)(((uint32_t)(x))<<PMC_CTL_TD_TS0_DOUT_EN_SHIFT))&PMC_CTL_TD_TS0_DOUT_EN_MASK)
#define PMC_CTL_TD_TS0_ADJ_TEMP_SENS_MASK        0x7Cu
#define PMC_CTL_TD_TS0_ADJ_TEMP_SENS_SHIFT       2u
#define PMC_CTL_TD_TS0_ADJ_TEMP_SENS_WIDTH       5u
#define PMC_CTL_TD_TS0_ADJ_TEMP_SENS(x)          (((uint32_t)(((uint32_t)(x))<<PMC_CTL_TD_TS0_ADJ_TEMP_SENS_SHIFT))&PMC_CTL_TD_TS0_ADJ_TEMP_SENS_MASK)
#define PMC_CTL_TD_TS1_AOUT_EN_MASK              0x100u
#define PMC_CTL_TD_TS1_AOUT_EN_SHIFT             8u
#define PMC_CTL_TD_TS1_AOUT_EN_WIDTH             1u
#define PMC_CTL_TD_TS1_AOUT_EN(x)                (((uint32_t)(((uint32_t)(x))<<PMC_CTL_TD_TS1_AOUT_EN_SHIFT))&PMC_CTL_TD_TS1_AOUT_EN_MASK)
#define PMC_CTL_TD_TS1_DOUT_EN_MASK              0x200u
#define PMC_CTL_TD_TS1_DOUT_EN_SHIFT             9u
#define PMC_CTL_TD_TS1_DOUT_EN_WIDTH             1u
#define PMC_CTL_TD_TS1_DOUT_EN(x)                (((uint32_t)(((uint32_t)(x))<<PMC_CTL_TD_TS1_DOUT_EN_SHIFT))&PMC_CTL_TD_TS1_DOUT_EN_MASK)
#define PMC_CTL_TD_TS1_ADJ_TEMP_SENS_MASK        0x7C00u
#define PMC_CTL_TD_TS1_ADJ_TEMP_SENS_SHIFT       10u
#define PMC_CTL_TD_TS1_ADJ_TEMP_SENS_WIDTH       5u
#define PMC_CTL_TD_TS1_ADJ_TEMP_SENS(x)          (((uint32_t)(((uint32_t)(x))<<PMC_CTL_TD_TS1_ADJ_TEMP_SENS_SHIFT))&PMC_CTL_TD_TS1_ADJ_TEMP_SENS_MASK)
/* STTW Bit Fields */
#define PMC_STTW_STTW_MASK                       0xFFFu
#define PMC_STTW_STTW_SHIFT                      0u
#define PMC_STTW_STTW_WIDTH                      12u
#define PMC_STTW_STTW(x)                         (((uint32_t)(((uint32_t)(x))<<PMC_STTW_STTW_SHIFT))&PMC_STTW_STTW_MASK)
/* VD_UTST Bit Fields */
#define PMC_VD_UTST_VD_ST_CTRL_MASK              0x3Fu
#define PMC_VD_UTST_VD_ST_CTRL_SHIFT             0u
#define PMC_VD_UTST_VD_ST_CTRL_WIDTH             6u
#define PMC_VD_UTST_VD_ST_CTRL(x)                (((uint32_t)(((uint32_t)(x))<<PMC_VD_UTST_VD_ST_CTRL_SHIFT))&PMC_VD_UTST_VD_ST_CTRL_MASK)
#define PMC_VD_UTST_ST_MODE_MASK                 0xC0u
#define PMC_VD_UTST_ST_MODE_SHIFT                6u
#define PMC_VD_UTST_ST_MODE_WIDTH                2u
#define PMC_VD_UTST_ST_MODE(x)                   (((uint32_t)(((uint32_t)(x))<<PMC_VD_UTST_ST_MODE_SHIFT))&PMC_VD_UTST_ST_MODE_MASK)
#define PMC_VD_UTST_ST_DONE_MASK                 0x10000u
#define PMC_VD_UTST_ST_DONE_SHIFT                16u
#define PMC_VD_UTST_ST_DONE_WIDTH                1u
#define PMC_VD_UTST_ST_DONE(x)                   (((uint32_t)(((uint32_t)(x))<<PMC_VD_UTST_ST_DONE_SHIFT))&PMC_VD_UTST_ST_DONE_MASK)
#define PMC_VD_UTST_ST_RESULT_MASK               0x20000u
#define PMC_VD_UTST_ST_RESULT_SHIFT              17u
#define PMC_VD_UTST_ST_RESULT_WIDTH              1u
#define PMC_VD_UTST_ST_RESULT(x)                 (((uint32_t)(((uint32_t)(x))<<PMC_VD_UTST_ST_RESULT_SHIFT))&PMC_VD_UTST_ST_RESULT_MASK)

/*!
 * @}
 */ /* end of group PMC_Register_Masks */


/*!
 * @}
 */ /* end of group PMC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PRAMC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PRAMC_Peripheral_Access_Layer PRAMC Peripheral Access Layer
 * @{
 */


/** PRAMC - Size of Registers Arrays */

/** PRAMC - Register Layout Typedef */
typedef struct {
  __IO uint32_t PRCR1;                             /**< Platform RAM Configuration Register 1, offset: 0x0 */
} PRAMC_Type, *PRAMC_MemMapPtr;

 /** Number of instances of the PRAMC module. */
#define PRAMC_INSTANCE_COUNT                     (1u)


/* PRAMC - Peripheral instance base addresses */
/** Peripheral PRAMC base address */
#define PRAMC_BASE                               (0xFC020000u)
/** Peripheral PRAMC base pointer */
#define PRAMC                                    ((PRAMC_Type *)PRAMC_BASE)
/** Array initializer of PRAMC peripheral base addresses */
#define PRAMC_BASE_ADDRS                         { PRAMC_BASE }
/** Array initializer of PRAMC peripheral base pointers */
#define PRAMC_BASE_PTRS                          { PRAMC }

/* ----------------------------------------------------------------------------
   -- PRAMC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PRAMC_Register_Masks PRAMC Register Masks
 * @{
 */

/* PRCR1 Bit Fields */
#define PRAMC_PRCR1_FT_DIS_MASK                  0x1u
#define PRAMC_PRCR1_FT_DIS_SHIFT                 0u
#define PRAMC_PRCR1_FT_DIS_WIDTH                 1u
#define PRAMC_PRCR1_FT_DIS(x)                    (((uint32_t)(((uint32_t)(x))<<PRAMC_PRCR1_FT_DIS_SHIFT))&PRAMC_PRCR1_FT_DIS_MASK)
#define PRAMC_PRCR1_P0_BO_DIS_MASK               0x40u
#define PRAMC_PRCR1_P0_BO_DIS_SHIFT              6u
#define PRAMC_PRCR1_P0_BO_DIS_WIDTH              1u
#define PRAMC_PRCR1_P0_BO_DIS(x)                 (((uint32_t)(((uint32_t)(x))<<PRAMC_PRCR1_P0_BO_DIS_SHIFT))&PRAMC_PRCR1_P0_BO_DIS_MASK)
#define PRAMC_PRCR1_P1_BO_DIS_MASK               0x80u
#define PRAMC_PRCR1_P1_BO_DIS_SHIFT              7u
#define PRAMC_PRCR1_P1_BO_DIS_WIDTH              1u
#define PRAMC_PRCR1_P1_BO_DIS(x)                 (((uint32_t)(((uint32_t)(x))<<PRAMC_PRCR1_P1_BO_DIS_SHIFT))&PRAMC_PRCR1_P1_BO_DIS_MASK)
#define PRAMC_PRCR1_PRI_MASK                     0x300u
#define PRAMC_PRCR1_PRI_SHIFT                    8u
#define PRAMC_PRCR1_PRI_WIDTH                    2u
#define PRAMC_PRCR1_PRI(x)                       (((uint32_t)(((uint32_t)(x))<<PRAMC_PRCR1_PRI_SHIFT))&PRAMC_PRCR1_PRI_MASK)

/*!
 * @}
 */ /* end of group PRAMC_Register_Masks */


/*!
 * @}
 */ /* end of group PRAMC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SGEN Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SGEN_Peripheral_Access_Layer SGEN Peripheral Access Layer
 * @{
 */


/** SGEN - Size of Registers Arrays */

/** SGEN - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTRL;                              /**< Control Register, offset: 0x0 */
  __IO uint32_t STAT;                              /**< Status Register, offset: 0x4 */
} SGEN_Type, *SGEN_MemMapPtr;

 /** Number of instances of the SGEN module. */
#define SGEN_INSTANCE_COUNT                      (1u)


/* SGEN - Peripheral instance base addresses */
/** Peripheral SGEN_0 base address */
#define SGEN_0_BASE                              (0xFBC40000u)
/** Peripheral SGEN_0 base pointer */
#define SGEN_0                                   ((SGEN_Type *)SGEN_0_BASE)
/** Array initializer of SGEN peripheral base addresses */
#define SGEN_BASE_ADDRS                          { SGEN_0_BASE }
/** Array initializer of SGEN peripheral base pointers */
#define SGEN_BASE_PTRS                           { SGEN_0 }

/* ----------------------------------------------------------------------------
   -- SGEN Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SGEN_Register_Masks SGEN Register Masks
 * @{
 */

/* CTRL Bit Fields */
#define SGEN_CTRL_IOFREQ_MASK                    0xFFFFu
#define SGEN_CTRL_IOFREQ_SHIFT                   0u
#define SGEN_CTRL_IOFREQ_WIDTH                   16u
#define SGEN_CTRL_IOFREQ(x)                      (((uint32_t)(((uint32_t)(x))<<SGEN_CTRL_IOFREQ_SHIFT))&SGEN_CTRL_IOFREQ_MASK)
#define SGEN_CTRL_PDS_MASK                       0x10000u
#define SGEN_CTRL_PDS_SHIFT                      16u
#define SGEN_CTRL_PDS_WIDTH                      1u
#define SGEN_CTRL_PDS(x)                         (((uint32_t)(((uint32_t)(x))<<SGEN_CTRL_PDS_SHIFT))&SGEN_CTRL_PDS_MASK)
#define SGEN_CTRL_S0H1_MASK                      0x20000u
#define SGEN_CTRL_S0H1_SHIFT                     17u
#define SGEN_CTRL_S0H1_WIDTH                     1u
#define SGEN_CTRL_S0H1(x)                        (((uint32_t)(((uint32_t)(x))<<SGEN_CTRL_S0H1_SHIFT))&SGEN_CTRL_S0H1_MASK)
#define SGEN_CTRL_TRIG_EN_MASK                   0x40000u
#define SGEN_CTRL_TRIG_EN_SHIFT                  18u
#define SGEN_CTRL_TRIG_EN_WIDTH                  1u
#define SGEN_CTRL_TRIG_EN(x)                     (((uint32_t)(((uint32_t)(x))<<SGEN_CTRL_TRIG_EN_SHIFT))&SGEN_CTRL_TRIG_EN_MASK)
#define SGEN_CTRL_TRIG_SEL_MASK                  0x80000u
#define SGEN_CTRL_TRIG_SEL_SHIFT                 19u
#define SGEN_CTRL_TRIG_SEL_WIDTH                 1u
#define SGEN_CTRL_TRIG_SEL(x)                    (((uint32_t)(((uint32_t)(x))<<SGEN_CTRL_TRIG_SEL_SHIFT))&SGEN_CTRL_TRIG_SEL_MASK)
#define SGEN_CTRL_SEMASK_MASK                    0x800000u
#define SGEN_CTRL_SEMASK_SHIFT                   23u
#define SGEN_CTRL_SEMASK_WIDTH                   1u
#define SGEN_CTRL_SEMASK(x)                      (((uint32_t)(((uint32_t)(x))<<SGEN_CTRL_SEMASK_SHIFT))&SGEN_CTRL_SEMASK_MASK)
#define SGEN_CTRL_IOAMPL_MASK                    0x3C000000u
#define SGEN_CTRL_IOAMPL_SHIFT                   26u
#define SGEN_CTRL_IOAMPL_WIDTH                   4u
#define SGEN_CTRL_IOAMPL(x)                      (((uint32_t)(((uint32_t)(x))<<SGEN_CTRL_IOAMPL_SHIFT))&SGEN_CTRL_IOAMPL_MASK)
#define SGEN_CTRL_LDOS_MASK                      0x80000000u
#define SGEN_CTRL_LDOS_SHIFT                     31u
#define SGEN_CTRL_LDOS_WIDTH                     1u
#define SGEN_CTRL_LDOS(x)                        (((uint32_t)(((uint32_t)(x))<<SGEN_CTRL_LDOS_SHIFT))&SGEN_CTRL_LDOS_MASK)
/* STAT Bit Fields */
#define SGEN_STAT_PHERR_MASK                     0x40000u
#define SGEN_STAT_PHERR_SHIFT                    18u
#define SGEN_STAT_PHERR_WIDTH                    1u
#define SGEN_STAT_PHERR(x)                       (((uint32_t)(((uint32_t)(x))<<SGEN_STAT_PHERR_SHIFT))&SGEN_STAT_PHERR_MASK)
#define SGEN_STAT_FERR_MASK                      0x80000u
#define SGEN_STAT_FERR_SHIFT                     19u
#define SGEN_STAT_FERR_WIDTH                     1u
#define SGEN_STAT_FERR(x)                        (((uint32_t)(((uint32_t)(x))<<SGEN_STAT_FERR_SHIFT))&SGEN_STAT_FERR_MASK)
#define SGEN_STAT_SERR_MASK                      0x800000u
#define SGEN_STAT_SERR_SHIFT                     23u
#define SGEN_STAT_SERR_WIDTH                     1u
#define SGEN_STAT_SERR(x)                        (((uint32_t)(((uint32_t)(x))<<SGEN_STAT_SERR_SHIFT))&SGEN_STAT_SERR_MASK)

/*!
 * @}
 */ /* end of group SGEN_Register_Masks */


/*!
 * @}
 */ /* end of group SGEN_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SIPI Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SIPI_Peripheral_Access_Layer SIPI Peripheral Access Layer
 * @{
 */


/** SIPI - Size of Registers Arrays */
#define SIPI_CDR2__COUNT                         8u

/** SIPI - Register Layout Typedef */
typedef struct {
  __IO uint32_t CCR0;                              /**< SIPI Channel Control Register 0, offset: 0x0 */
  __IO uint32_t CSR0;                              /**< SIPI Channel Status Register 0, offset: 0x4 */
       uint8_t RESERVED_0[4];
  __IO uint32_t CIR0;                              /**< SIPI Channel Interrupt Register 0, offset: 0xC */
  __IO uint32_t CTOR0;                             /**< SIPI Channel Timeout Register 0, offset: 0x10 */
  __I  uint32_t CCRC0;                             /**< SIPI Channel CRC Register 0, offset: 0x14 */
  __IO uint32_t CAR0;                              /**< SIPI Channel Address Register 0, offset: 0x18 */
  __IO uint32_t CDR0;                              /**< SIPI Channel Data Register 0, offset: 0x1C */
  __IO uint32_t CCR1;                              /**< SIPI Channel Control Register 1, offset: 0x20 */
  __IO uint32_t CSR1;                              /**< SIPI Channel Status Register 1, offset: 0x24 */
       uint8_t RESERVED_1[4];
  __IO uint32_t CIR1;                              /**< SIPI Channel Interrupt Register 1, offset: 0x2C */
  __IO uint32_t CTOR1;                             /**< SIPI Channel Timeout Register 1, offset: 0x30 */
  __I  uint32_t CCRC1;                             /**< SIPI Channel CRC Register 1, offset: 0x34 */
  __IO uint32_t CAR1;                              /**< SIPI Channel Address Register 1, offset: 0x38 */
  __IO uint32_t CDR1;                              /**< SIPI Channel Data Register 1, offset: 0x3C */
  __IO uint32_t CCR2;                              /**< SIPI Channel Control Register 2, offset: 0x40 */
  __IO uint32_t CSR2;                              /**< SIPI Channel Status Register 2, offset: 0x44 */
       uint8_t RESERVED_2[4];
  __IO uint32_t CIR2;                              /**< SIPI Channel Interrupt Register 2, offset: 0x4C */
  __IO uint32_t CTOR2;                             /**< SIPI Channel Timeout Register 2, offset: 0x50 */
  __I  uint32_t CCRC2;                             /**< SIPI Channel CRC Register 2, offset: 0x54 */
  __IO uint32_t CAR2;                              /**< SIPI Channel Address Register 2, offset: 0x58 */
  __IO uint32_t CDR2_[SIPI_CDR2__COUNT];           /**< SIPI Channel Data Register 2, array offset: 0x5C, array step: 0x4 */
  __IO uint32_t CCR3;                              /**< SIPI Channel Control Register 3, offset: 0x7C */
  __I  uint32_t CSR3;                              /**< SIPI Channel Status Register 3, offset: 0x80 */
       uint8_t RESERVED_3[4];
  __IO uint32_t CIR3;                              /**< SIPI Channel Interrupt Register 3, offset: 0x88 */
  __IO uint32_t CTOR3;                             /**< SIPI Channel Timeout Register 3, offset: 0x8C */
  __I  uint32_t CCRC3;                             /**< SIPI Channel CRC Register 3, offset: 0x90 */
  __IO uint32_t CAR3;                              /**< SIPI Channel Address Register 3, offset: 0x94 */
  __IO uint32_t CDR3;                              /**< SIPI Channel Data Register 3, offset: 0x98 */
  __IO uint32_t MCR;                               /**< SIPI Module Configuration Register, offset: 0x9C */
  __IO uint32_t SR;                                /**< SIPI Status Register, offset: 0xA0 */
  __IO uint32_t MAXCR;                             /**< SIPI Max Count Register, offset: 0xA4 */
  __IO uint32_t ARR;                               /**< SIPI Address Reload Register, offset: 0xA8 */
  __IO uint32_t ACR;                               /**< SIPI Address Count Register, offset: 0xAC */
  __IO uint32_t ERR;                               /**< SIPI Error Register, offset: 0xB0 */
} SIPI_Type, *SIPI_MemMapPtr;

 /** Number of instances of the SIPI module. */
#define SIPI_INSTANCE_COUNT                      (1u)


/* SIPI - Peripheral instance base addresses */
/** Peripheral SIPI_0 base address */
#define SIPI_0_BASE                              (0xFFFD0000u)
/** Peripheral SIPI_0 base pointer */
#define SIPI_0                                   ((SIPI_Type *)SIPI_0_BASE)
/** Array initializer of SIPI peripheral base addresses */
#define SIPI_BASE_ADDRS                          { SIPI_0_BASE }
/** Array initializer of SIPI peripheral base pointers */
#define SIPI_BASE_PTRS                           { SIPI_0 }

/* ----------------------------------------------------------------------------
   -- SIPI Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SIPI_Register_Masks SIPI Register Masks
 * @{
 */

/* CCR0 Bit Fields */
#define SIPI_CCR0_DEN_MASK                       0x1u
#define SIPI_CCR0_DEN_SHIFT                      0u
#define SIPI_CCR0_DEN_WIDTH                      1u
#define SIPI_CCR0_DEN(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR0_DEN_SHIFT))&SIPI_CCR0_DEN_MASK)
#define SIPI_CCR0_WRT_MASK                       0x2u
#define SIPI_CCR0_WRT_SHIFT                      1u
#define SIPI_CCR0_WRT_WIDTH                      1u
#define SIPI_CCR0_WRT(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR0_WRT_SHIFT))&SIPI_CCR0_WRT_MASK)
#define SIPI_CCR0_RRT_MASK                       0x4u
#define SIPI_CCR0_RRT_SHIFT                      2u
#define SIPI_CCR0_RRT_WIDTH                      1u
#define SIPI_CCR0_RRT(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR0_RRT_SHIFT))&SIPI_CCR0_RRT_MASK)
#define SIPI_CCR0_IDT_MASK                       0x8u
#define SIPI_CCR0_IDT_SHIFT                      3u
#define SIPI_CCR0_IDT_WIDTH                      1u
#define SIPI_CCR0_IDT(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR0_IDT_SHIFT))&SIPI_CCR0_IDT_MASK)
#define SIPI_CCR0_ST_MASK                        0x10u
#define SIPI_CCR0_ST_SHIFT                       4u
#define SIPI_CCR0_ST_WIDTH                       1u
#define SIPI_CCR0_ST(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CCR0_ST_SHIFT))&SIPI_CCR0_ST_MASK)
#define SIPI_CCR0_CHEN_MASK                      0x20u
#define SIPI_CCR0_CHEN_SHIFT                     5u
#define SIPI_CCR0_CHEN_WIDTH                     1u
#define SIPI_CCR0_CHEN(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CCR0_CHEN_SHIFT))&SIPI_CCR0_CHEN_MASK)
#define SIPI_CCR0_WL_MASK                        0xC0u
#define SIPI_CCR0_WL_SHIFT                       6u
#define SIPI_CCR0_WL_WIDTH                       2u
#define SIPI_CCR0_WL(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CCR0_WL_SHIFT))&SIPI_CCR0_WL_MASK)
#define SIPI_CCR0_TC_MASK                        0x10000u
#define SIPI_CCR0_TC_SHIFT                       16u
#define SIPI_CCR0_TC_WIDTH                       1u
#define SIPI_CCR0_TC(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CCR0_TC_SHIFT))&SIPI_CCR0_TC_MASK)
/* CSR0 Bit Fields */
#define SIPI_CSR0_CB_MASK                        0x4u
#define SIPI_CSR0_CB_SHIFT                       2u
#define SIPI_CSR0_CB_WIDTH                       1u
#define SIPI_CSR0_CB(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CSR0_CB_SHIFT))&SIPI_CSR0_CB_MASK)
#define SIPI_CSR0_ACKR_MASK                      0x8u
#define SIPI_CSR0_ACKR_SHIFT                     3u
#define SIPI_CSR0_ACKR_WIDTH                     1u
#define SIPI_CSR0_ACKR(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CSR0_ACKR_SHIFT))&SIPI_CSR0_ACKR_MASK)
#define SIPI_CSR0_TID_MASK                       0x70u
#define SIPI_CSR0_TID_SHIFT                      4u
#define SIPI_CSR0_TID_WIDTH                      3u
#define SIPI_CSR0_TID(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CSR0_TID_SHIFT))&SIPI_CSR0_TID_MASK)
#define SIPI_CSR0_RAR_MASK                       0x80u
#define SIPI_CSR0_RAR_SHIFT                      7u
#define SIPI_CSR0_RAR_WIDTH                      1u
#define SIPI_CSR0_RAR(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CSR0_RAR_SHIFT))&SIPI_CSR0_RAR_MASK)
/* CIR0 Bit Fields */
#define SIPI_CIR0_ACKIE_MASK                     0x1u
#define SIPI_CIR0_ACKIE_SHIFT                    0u
#define SIPI_CIR0_ACKIE_WIDTH                    1u
#define SIPI_CIR0_ACKIE(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CIR0_ACKIE_SHIFT))&SIPI_CIR0_ACKIE_MASK)
#define SIPI_CIR0_TIDIE_MASK                     0x2u
#define SIPI_CIR0_TIDIE_SHIFT                    1u
#define SIPI_CIR0_TIDIE_WIDTH                    1u
#define SIPI_CIR0_TIDIE(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CIR0_TIDIE_SHIFT))&SIPI_CIR0_TIDIE_MASK)
#define SIPI_CIR0_TOIE_MASK                      0x4u
#define SIPI_CIR0_TOIE_SHIFT                     2u
#define SIPI_CIR0_TOIE_WIDTH                     1u
#define SIPI_CIR0_TOIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR0_TOIE_SHIFT))&SIPI_CIR0_TOIE_MASK)
#define SIPI_CIR0_TCIE_MASK                      0x8u
#define SIPI_CIR0_TCIE_SHIFT                     3u
#define SIPI_CIR0_TCIE_WIDTH                     1u
#define SIPI_CIR0_TCIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR0_TCIE_SHIFT))&SIPI_CIR0_TCIE_MASK)
#define SIPI_CIR0_RAIE_MASK                      0x10u
#define SIPI_CIR0_RAIE_SHIFT                     4u
#define SIPI_CIR0_RAIE_WIDTH                     1u
#define SIPI_CIR0_RAIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR0_RAIE_SHIFT))&SIPI_CIR0_RAIE_MASK)
#define SIPI_CIR0_WAIE_MASK                      0x20u
#define SIPI_CIR0_WAIE_SHIFT                     5u
#define SIPI_CIR0_WAIE_WIDTH                     1u
#define SIPI_CIR0_WAIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR0_WAIE_SHIFT))&SIPI_CIR0_WAIE_MASK)
/* CTOR0 Bit Fields */
#define SIPI_CTOR0_TOR_MASK                      0xFFu
#define SIPI_CTOR0_TOR_SHIFT                     0u
#define SIPI_CTOR0_TOR_WIDTH                     8u
#define SIPI_CTOR0_TOR(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CTOR0_TOR_SHIFT))&SIPI_CTOR0_TOR_MASK)
/* CCRC0 Bit Fields */
#define SIPI_CCRC0_CRCT_MASK                     0xFFFFu
#define SIPI_CCRC0_CRCT_SHIFT                    0u
#define SIPI_CCRC0_CRCT_WIDTH                    16u
#define SIPI_CCRC0_CRCT(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CCRC0_CRCT_SHIFT))&SIPI_CCRC0_CRCT_MASK)
#define SIPI_CCRC0_CRCI_MASK                     0xFFFF0000u
#define SIPI_CCRC0_CRCI_SHIFT                    16u
#define SIPI_CCRC0_CRCI_WIDTH                    16u
#define SIPI_CCRC0_CRCI(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CCRC0_CRCI_SHIFT))&SIPI_CCRC0_CRCI_MASK)
/* CAR0 Bit Fields */
#define SIPI_CAR0_CAR_MASK                       0xFFFFFFFFu
#define SIPI_CAR0_CAR_SHIFT                      0u
#define SIPI_CAR0_CAR_WIDTH                      32u
#define SIPI_CAR0_CAR(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CAR0_CAR_SHIFT))&SIPI_CAR0_CAR_MASK)
/* CDR0 Bit Fields */
#define SIPI_CDR0_CDR_MASK                       0xFFFFFFFFu
#define SIPI_CDR0_CDR_SHIFT                      0u
#define SIPI_CDR0_CDR_WIDTH                      32u
#define SIPI_CDR0_CDR(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CDR0_CDR_SHIFT))&SIPI_CDR0_CDR_MASK)
/* CCR1 Bit Fields */
#define SIPI_CCR1_DEN_MASK                       0x1u
#define SIPI_CCR1_DEN_SHIFT                      0u
#define SIPI_CCR1_DEN_WIDTH                      1u
#define SIPI_CCR1_DEN(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR1_DEN_SHIFT))&SIPI_CCR1_DEN_MASK)
#define SIPI_CCR1_WRT_MASK                       0x2u
#define SIPI_CCR1_WRT_SHIFT                      1u
#define SIPI_CCR1_WRT_WIDTH                      1u
#define SIPI_CCR1_WRT(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR1_WRT_SHIFT))&SIPI_CCR1_WRT_MASK)
#define SIPI_CCR1_RRT_MASK                       0x4u
#define SIPI_CCR1_RRT_SHIFT                      2u
#define SIPI_CCR1_RRT_WIDTH                      1u
#define SIPI_CCR1_RRT(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR1_RRT_SHIFT))&SIPI_CCR1_RRT_MASK)
#define SIPI_CCR1_IDT_MASK                       0x8u
#define SIPI_CCR1_IDT_SHIFT                      3u
#define SIPI_CCR1_IDT_WIDTH                      1u
#define SIPI_CCR1_IDT(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR1_IDT_SHIFT))&SIPI_CCR1_IDT_MASK)
#define SIPI_CCR1_ST_MASK                        0x10u
#define SIPI_CCR1_ST_SHIFT                       4u
#define SIPI_CCR1_ST_WIDTH                       1u
#define SIPI_CCR1_ST(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CCR1_ST_SHIFT))&SIPI_CCR1_ST_MASK)
#define SIPI_CCR1_CHEN_MASK                      0x20u
#define SIPI_CCR1_CHEN_SHIFT                     5u
#define SIPI_CCR1_CHEN_WIDTH                     1u
#define SIPI_CCR1_CHEN(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CCR1_CHEN_SHIFT))&SIPI_CCR1_CHEN_MASK)
#define SIPI_CCR1_WL_MASK                        0xC0u
#define SIPI_CCR1_WL_SHIFT                       6u
#define SIPI_CCR1_WL_WIDTH                       2u
#define SIPI_CCR1_WL(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CCR1_WL_SHIFT))&SIPI_CCR1_WL_MASK)
#define SIPI_CCR1_TC_MASK                        0x10000u
#define SIPI_CCR1_TC_SHIFT                       16u
#define SIPI_CCR1_TC_WIDTH                       1u
#define SIPI_CCR1_TC(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CCR1_TC_SHIFT))&SIPI_CCR1_TC_MASK)
/* CSR1 Bit Fields */
#define SIPI_CSR1_CB_MASK                        0x4u
#define SIPI_CSR1_CB_SHIFT                       2u
#define SIPI_CSR1_CB_WIDTH                       1u
#define SIPI_CSR1_CB(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CSR1_CB_SHIFT))&SIPI_CSR1_CB_MASK)
#define SIPI_CSR1_ACKR_MASK                      0x8u
#define SIPI_CSR1_ACKR_SHIFT                     3u
#define SIPI_CSR1_ACKR_WIDTH                     1u
#define SIPI_CSR1_ACKR(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CSR1_ACKR_SHIFT))&SIPI_CSR1_ACKR_MASK)
#define SIPI_CSR1_TID_MASK                       0x70u
#define SIPI_CSR1_TID_SHIFT                      4u
#define SIPI_CSR1_TID_WIDTH                      3u
#define SIPI_CSR1_TID(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CSR1_TID_SHIFT))&SIPI_CSR1_TID_MASK)
#define SIPI_CSR1_RAR_MASK                       0x80u
#define SIPI_CSR1_RAR_SHIFT                      7u
#define SIPI_CSR1_RAR_WIDTH                      1u
#define SIPI_CSR1_RAR(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CSR1_RAR_SHIFT))&SIPI_CSR1_RAR_MASK)
/* CIR1 Bit Fields */
#define SIPI_CIR1_ACKIE_MASK                     0x1u
#define SIPI_CIR1_ACKIE_SHIFT                    0u
#define SIPI_CIR1_ACKIE_WIDTH                    1u
#define SIPI_CIR1_ACKIE(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CIR1_ACKIE_SHIFT))&SIPI_CIR1_ACKIE_MASK)
#define SIPI_CIR1_TIDIE_MASK                     0x2u
#define SIPI_CIR1_TIDIE_SHIFT                    1u
#define SIPI_CIR1_TIDIE_WIDTH                    1u
#define SIPI_CIR1_TIDIE(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CIR1_TIDIE_SHIFT))&SIPI_CIR1_TIDIE_MASK)
#define SIPI_CIR1_TOIE_MASK                      0x4u
#define SIPI_CIR1_TOIE_SHIFT                     2u
#define SIPI_CIR1_TOIE_WIDTH                     1u
#define SIPI_CIR1_TOIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR1_TOIE_SHIFT))&SIPI_CIR1_TOIE_MASK)
#define SIPI_CIR1_TCIE_MASK                      0x8u
#define SIPI_CIR1_TCIE_SHIFT                     3u
#define SIPI_CIR1_TCIE_WIDTH                     1u
#define SIPI_CIR1_TCIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR1_TCIE_SHIFT))&SIPI_CIR1_TCIE_MASK)
#define SIPI_CIR1_RAIE_MASK                      0x10u
#define SIPI_CIR1_RAIE_SHIFT                     4u
#define SIPI_CIR1_RAIE_WIDTH                     1u
#define SIPI_CIR1_RAIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR1_RAIE_SHIFT))&SIPI_CIR1_RAIE_MASK)
#define SIPI_CIR1_WAIE_MASK                      0x20u
#define SIPI_CIR1_WAIE_SHIFT                     5u
#define SIPI_CIR1_WAIE_WIDTH                     1u
#define SIPI_CIR1_WAIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR1_WAIE_SHIFT))&SIPI_CIR1_WAIE_MASK)
/* CTOR1 Bit Fields */
#define SIPI_CTOR1_TOR_MASK                      0xFFu
#define SIPI_CTOR1_TOR_SHIFT                     0u
#define SIPI_CTOR1_TOR_WIDTH                     8u
#define SIPI_CTOR1_TOR(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CTOR1_TOR_SHIFT))&SIPI_CTOR1_TOR_MASK)
/* CCRC1 Bit Fields */
#define SIPI_CCRC1_CRCT_MASK                     0xFFFFu
#define SIPI_CCRC1_CRCT_SHIFT                    0u
#define SIPI_CCRC1_CRCT_WIDTH                    16u
#define SIPI_CCRC1_CRCT(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CCRC1_CRCT_SHIFT))&SIPI_CCRC1_CRCT_MASK)
#define SIPI_CCRC1_CRCI_MASK                     0xFFFF0000u
#define SIPI_CCRC1_CRCI_SHIFT                    16u
#define SIPI_CCRC1_CRCI_WIDTH                    16u
#define SIPI_CCRC1_CRCI(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CCRC1_CRCI_SHIFT))&SIPI_CCRC1_CRCI_MASK)
/* CAR1 Bit Fields */
#define SIPI_CAR1_CAR_MASK                       0xFFFFFFFFu
#define SIPI_CAR1_CAR_SHIFT                      0u
#define SIPI_CAR1_CAR_WIDTH                      32u
#define SIPI_CAR1_CAR(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CAR1_CAR_SHIFT))&SIPI_CAR1_CAR_MASK)
/* CDR1 Bit Fields */
#define SIPI_CDR1_CDR_MASK                       0xFFFFFFFFu
#define SIPI_CDR1_CDR_SHIFT                      0u
#define SIPI_CDR1_CDR_WIDTH                      32u
#define SIPI_CDR1_CDR(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CDR1_CDR_SHIFT))&SIPI_CDR1_CDR_MASK)
/* CCR2 Bit Fields */
#define SIPI_CCR2_DEN_MASK                       0x1u
#define SIPI_CCR2_DEN_SHIFT                      0u
#define SIPI_CCR2_DEN_WIDTH                      1u
#define SIPI_CCR2_DEN(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR2_DEN_SHIFT))&SIPI_CCR2_DEN_MASK)
#define SIPI_CCR2_WRT_MASK                       0x2u
#define SIPI_CCR2_WRT_SHIFT                      1u
#define SIPI_CCR2_WRT_WIDTH                      1u
#define SIPI_CCR2_WRT(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR2_WRT_SHIFT))&SIPI_CCR2_WRT_MASK)
#define SIPI_CCR2_RRT_MASK                       0x4u
#define SIPI_CCR2_RRT_SHIFT                      2u
#define SIPI_CCR2_RRT_WIDTH                      1u
#define SIPI_CCR2_RRT(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR2_RRT_SHIFT))&SIPI_CCR2_RRT_MASK)
#define SIPI_CCR2_IDT_MASK                       0x8u
#define SIPI_CCR2_IDT_SHIFT                      3u
#define SIPI_CCR2_IDT_WIDTH                      1u
#define SIPI_CCR2_IDT(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR2_IDT_SHIFT))&SIPI_CCR2_IDT_MASK)
#define SIPI_CCR2_ST_MASK                        0x10u
#define SIPI_CCR2_ST_SHIFT                       4u
#define SIPI_CCR2_ST_WIDTH                       1u
#define SIPI_CCR2_ST(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CCR2_ST_SHIFT))&SIPI_CCR2_ST_MASK)
#define SIPI_CCR2_CHEN_MASK                      0x20u
#define SIPI_CCR2_CHEN_SHIFT                     5u
#define SIPI_CCR2_CHEN_WIDTH                     1u
#define SIPI_CCR2_CHEN(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CCR2_CHEN_SHIFT))&SIPI_CCR2_CHEN_MASK)
#define SIPI_CCR2_WL_MASK                        0xC0u
#define SIPI_CCR2_WL_SHIFT                       6u
#define SIPI_CCR2_WL_WIDTH                       2u
#define SIPI_CCR2_WL(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CCR2_WL_SHIFT))&SIPI_CCR2_WL_MASK)
#define SIPI_CCR2_TC_MASK                        0x10000u
#define SIPI_CCR2_TC_SHIFT                       16u
#define SIPI_CCR2_TC_WIDTH                       1u
#define SIPI_CCR2_TC(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CCR2_TC_SHIFT))&SIPI_CCR2_TC_MASK)
/* CSR2 Bit Fields */
#define SIPI_CSR2_CB_MASK                        0x4u
#define SIPI_CSR2_CB_SHIFT                       2u
#define SIPI_CSR2_CB_WIDTH                       1u
#define SIPI_CSR2_CB(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CSR2_CB_SHIFT))&SIPI_CSR2_CB_MASK)
#define SIPI_CSR2_ACKR_MASK                      0x8u
#define SIPI_CSR2_ACKR_SHIFT                     3u
#define SIPI_CSR2_ACKR_WIDTH                     1u
#define SIPI_CSR2_ACKR(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CSR2_ACKR_SHIFT))&SIPI_CSR2_ACKR_MASK)
#define SIPI_CSR2_TID_MASK                       0x70u
#define SIPI_CSR2_TID_SHIFT                      4u
#define SIPI_CSR2_TID_WIDTH                      3u
#define SIPI_CSR2_TID(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CSR2_TID_SHIFT))&SIPI_CSR2_TID_MASK)
#define SIPI_CSR2_RAR_MASK                       0x80u
#define SIPI_CSR2_RAR_SHIFT                      7u
#define SIPI_CSR2_RAR_WIDTH                      1u
#define SIPI_CSR2_RAR(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CSR2_RAR_SHIFT))&SIPI_CSR2_RAR_MASK)
/* CIR2 Bit Fields */
#define SIPI_CIR2_ACKIE_MASK                     0x1u
#define SIPI_CIR2_ACKIE_SHIFT                    0u
#define SIPI_CIR2_ACKIE_WIDTH                    1u
#define SIPI_CIR2_ACKIE(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CIR2_ACKIE_SHIFT))&SIPI_CIR2_ACKIE_MASK)
#define SIPI_CIR2_TIDIE_MASK                     0x2u
#define SIPI_CIR2_TIDIE_SHIFT                    1u
#define SIPI_CIR2_TIDIE_WIDTH                    1u
#define SIPI_CIR2_TIDIE(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CIR2_TIDIE_SHIFT))&SIPI_CIR2_TIDIE_MASK)
#define SIPI_CIR2_TOIE_MASK                      0x4u
#define SIPI_CIR2_TOIE_SHIFT                     2u
#define SIPI_CIR2_TOIE_WIDTH                     1u
#define SIPI_CIR2_TOIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR2_TOIE_SHIFT))&SIPI_CIR2_TOIE_MASK)
#define SIPI_CIR2_TCIE_MASK                      0x8u
#define SIPI_CIR2_TCIE_SHIFT                     3u
#define SIPI_CIR2_TCIE_WIDTH                     1u
#define SIPI_CIR2_TCIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR2_TCIE_SHIFT))&SIPI_CIR2_TCIE_MASK)
#define SIPI_CIR2_RAIE_MASK                      0x10u
#define SIPI_CIR2_RAIE_SHIFT                     4u
#define SIPI_CIR2_RAIE_WIDTH                     1u
#define SIPI_CIR2_RAIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR2_RAIE_SHIFT))&SIPI_CIR2_RAIE_MASK)
#define SIPI_CIR2_WAIE_MASK                      0x20u
#define SIPI_CIR2_WAIE_SHIFT                     5u
#define SIPI_CIR2_WAIE_WIDTH                     1u
#define SIPI_CIR2_WAIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR2_WAIE_SHIFT))&SIPI_CIR2_WAIE_MASK)
/* CTOR2 Bit Fields */
#define SIPI_CTOR2_TOR_MASK                      0xFFu
#define SIPI_CTOR2_TOR_SHIFT                     0u
#define SIPI_CTOR2_TOR_WIDTH                     8u
#define SIPI_CTOR2_TOR(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CTOR2_TOR_SHIFT))&SIPI_CTOR2_TOR_MASK)
/* CCRC2 Bit Fields */
#define SIPI_CCRC2_CRCT_MASK                     0xFFFFu
#define SIPI_CCRC2_CRCT_SHIFT                    0u
#define SIPI_CCRC2_CRCT_WIDTH                    16u
#define SIPI_CCRC2_CRCT(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CCRC2_CRCT_SHIFT))&SIPI_CCRC2_CRCT_MASK)
#define SIPI_CCRC2_CRCI_MASK                     0xFFFF0000u
#define SIPI_CCRC2_CRCI_SHIFT                    16u
#define SIPI_CCRC2_CRCI_WIDTH                    16u
#define SIPI_CCRC2_CRCI(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CCRC2_CRCI_SHIFT))&SIPI_CCRC2_CRCI_MASK)
/* CAR2 Bit Fields */
#define SIPI_CAR2_CAR_MASK                       0xFFFFFFFFu
#define SIPI_CAR2_CAR_SHIFT                      0u
#define SIPI_CAR2_CAR_WIDTH                      32u
#define SIPI_CAR2_CAR(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CAR2_CAR_SHIFT))&SIPI_CAR2_CAR_MASK)
/* CDR2_ Bit Fields */
#define SIPI_CDR2__CDR2_MASK                     0xFFFFFFFFu
#define SIPI_CDR2__CDR2_SHIFT                    0u
#define SIPI_CDR2__CDR2_WIDTH                    32u
#define SIPI_CDR2__CDR2(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CDR2__CDR2_SHIFT))&SIPI_CDR2__CDR2_MASK)
/* CCR3 Bit Fields */
#define SIPI_CCR3_DEN_MASK                       0x1u
#define SIPI_CCR3_DEN_SHIFT                      0u
#define SIPI_CCR3_DEN_WIDTH                      1u
#define SIPI_CCR3_DEN(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR3_DEN_SHIFT))&SIPI_CCR3_DEN_MASK)
#define SIPI_CCR3_WRT_MASK                       0x2u
#define SIPI_CCR3_WRT_SHIFT                      1u
#define SIPI_CCR3_WRT_WIDTH                      1u
#define SIPI_CCR3_WRT(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR3_WRT_SHIFT))&SIPI_CCR3_WRT_MASK)
#define SIPI_CCR3_RRT_MASK                       0x4u
#define SIPI_CCR3_RRT_SHIFT                      2u
#define SIPI_CCR3_RRT_WIDTH                      1u
#define SIPI_CCR3_RRT(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR3_RRT_SHIFT))&SIPI_CCR3_RRT_MASK)
#define SIPI_CCR3_IDT_MASK                       0x8u
#define SIPI_CCR3_IDT_SHIFT                      3u
#define SIPI_CCR3_IDT_WIDTH                      1u
#define SIPI_CCR3_IDT(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CCR3_IDT_SHIFT))&SIPI_CCR3_IDT_MASK)
#define SIPI_CCR3_ST_MASK                        0x10u
#define SIPI_CCR3_ST_SHIFT                       4u
#define SIPI_CCR3_ST_WIDTH                       1u
#define SIPI_CCR3_ST(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CCR3_ST_SHIFT))&SIPI_CCR3_ST_MASK)
#define SIPI_CCR3_CHEN_MASK                      0x20u
#define SIPI_CCR3_CHEN_SHIFT                     5u
#define SIPI_CCR3_CHEN_WIDTH                     1u
#define SIPI_CCR3_CHEN(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CCR3_CHEN_SHIFT))&SIPI_CCR3_CHEN_MASK)
#define SIPI_CCR3_WL_MASK                        0xC0u
#define SIPI_CCR3_WL_SHIFT                       6u
#define SIPI_CCR3_WL_WIDTH                       2u
#define SIPI_CCR3_WL(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CCR3_WL_SHIFT))&SIPI_CCR3_WL_MASK)
#define SIPI_CCR3_TC_MASK                        0x10000u
#define SIPI_CCR3_TC_SHIFT                       16u
#define SIPI_CCR3_TC_WIDTH                       1u
#define SIPI_CCR3_TC(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CCR3_TC_SHIFT))&SIPI_CCR3_TC_MASK)
/* CSR3 Bit Fields */
#define SIPI_CSR3_CB_MASK                        0x4u
#define SIPI_CSR3_CB_SHIFT                       2u
#define SIPI_CSR3_CB_WIDTH                       1u
#define SIPI_CSR3_CB(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_CSR3_CB_SHIFT))&SIPI_CSR3_CB_MASK)
#define SIPI_CSR3_ACKR_MASK                      0x8u
#define SIPI_CSR3_ACKR_SHIFT                     3u
#define SIPI_CSR3_ACKR_WIDTH                     1u
#define SIPI_CSR3_ACKR(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CSR3_ACKR_SHIFT))&SIPI_CSR3_ACKR_MASK)
#define SIPI_CSR3_TID_MASK                       0x70u
#define SIPI_CSR3_TID_SHIFT                      4u
#define SIPI_CSR3_TID_WIDTH                      3u
#define SIPI_CSR3_TID(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CSR3_TID_SHIFT))&SIPI_CSR3_TID_MASK)
#define SIPI_CSR3_RAR_MASK                       0x80u
#define SIPI_CSR3_RAR_SHIFT                      7u
#define SIPI_CSR3_RAR_WIDTH                      1u
#define SIPI_CSR3_RAR(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CSR3_RAR_SHIFT))&SIPI_CSR3_RAR_MASK)
/* CIR3 Bit Fields */
#define SIPI_CIR3_ACKIE_MASK                     0x1u
#define SIPI_CIR3_ACKIE_SHIFT                    0u
#define SIPI_CIR3_ACKIE_WIDTH                    1u
#define SIPI_CIR3_ACKIE(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CIR3_ACKIE_SHIFT))&SIPI_CIR3_ACKIE_MASK)
#define SIPI_CIR3_TIDIE_MASK                     0x2u
#define SIPI_CIR3_TIDIE_SHIFT                    1u
#define SIPI_CIR3_TIDIE_WIDTH                    1u
#define SIPI_CIR3_TIDIE(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CIR3_TIDIE_SHIFT))&SIPI_CIR3_TIDIE_MASK)
#define SIPI_CIR3_TOIE_MASK                      0x4u
#define SIPI_CIR3_TOIE_SHIFT                     2u
#define SIPI_CIR3_TOIE_WIDTH                     1u
#define SIPI_CIR3_TOIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR3_TOIE_SHIFT))&SIPI_CIR3_TOIE_MASK)
#define SIPI_CIR3_TCIE_MASK                      0x8u
#define SIPI_CIR3_TCIE_SHIFT                     3u
#define SIPI_CIR3_TCIE_WIDTH                     1u
#define SIPI_CIR3_TCIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR3_TCIE_SHIFT))&SIPI_CIR3_TCIE_MASK)
#define SIPI_CIR3_RAIE_MASK                      0x10u
#define SIPI_CIR3_RAIE_SHIFT                     4u
#define SIPI_CIR3_RAIE_WIDTH                     1u
#define SIPI_CIR3_RAIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR3_RAIE_SHIFT))&SIPI_CIR3_RAIE_MASK)
#define SIPI_CIR3_WAIE_MASK                      0x20u
#define SIPI_CIR3_WAIE_SHIFT                     5u
#define SIPI_CIR3_WAIE_WIDTH                     1u
#define SIPI_CIR3_WAIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CIR3_WAIE_SHIFT))&SIPI_CIR3_WAIE_MASK)
/* CTOR3 Bit Fields */
#define SIPI_CTOR3_TOR_MASK                      0xFFu
#define SIPI_CTOR3_TOR_SHIFT                     0u
#define SIPI_CTOR3_TOR_WIDTH                     8u
#define SIPI_CTOR3_TOR(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_CTOR3_TOR_SHIFT))&SIPI_CTOR3_TOR_MASK)
/* CCRC3 Bit Fields */
#define SIPI_CCRC3_CRCT_MASK                     0xFFFFu
#define SIPI_CCRC3_CRCT_SHIFT                    0u
#define SIPI_CCRC3_CRCT_WIDTH                    16u
#define SIPI_CCRC3_CRCT(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CCRC3_CRCT_SHIFT))&SIPI_CCRC3_CRCT_MASK)
#define SIPI_CCRC3_CRCI_MASK                     0xFFFF0000u
#define SIPI_CCRC3_CRCI_SHIFT                    16u
#define SIPI_CCRC3_CRCI_WIDTH                    16u
#define SIPI_CCRC3_CRCI(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_CCRC3_CRCI_SHIFT))&SIPI_CCRC3_CRCI_MASK)
/* CAR3 Bit Fields */
#define SIPI_CAR3_CAR_MASK                       0xFFFFFFFFu
#define SIPI_CAR3_CAR_SHIFT                      0u
#define SIPI_CAR3_CAR_WIDTH                      32u
#define SIPI_CAR3_CAR(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CAR3_CAR_SHIFT))&SIPI_CAR3_CAR_MASK)
/* CDR3 Bit Fields */
#define SIPI_CDR3_CDR_MASK                       0xFFFFFFFFu
#define SIPI_CDR3_CDR_SHIFT                      0u
#define SIPI_CDR3_CDR_WIDTH                      32u
#define SIPI_CDR3_CDR(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_CDR3_CDR_SHIFT))&SIPI_CDR3_CDR_MASK)
/* MCR Bit Fields */
#define SIPI_MCR_SR_MASK                         0x1u
#define SIPI_MCR_SR_SHIFT                        0u
#define SIPI_MCR_SR_WIDTH                        1u
#define SIPI_MCR_SR(x)                           (((uint32_t)(((uint32_t)(x))<<SIPI_MCR_SR_SHIFT))&SIPI_MCR_SR_MASK)
#define SIPI_MCR_MOEN_MASK                       0x2u
#define SIPI_MCR_MOEN_SHIFT                      1u
#define SIPI_MCR_MOEN_WIDTH                      1u
#define SIPI_MCR_MOEN(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_MCR_MOEN_SHIFT))&SIPI_MCR_MOEN_MASK)
#define SIPI_MCR_INIT_MASK                       0x4u
#define SIPI_MCR_INIT_SHIFT                      2u
#define SIPI_MCR_INIT_WIDTH                      1u
#define SIPI_MCR_INIT(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_MCR_INIT_SHIFT))&SIPI_MCR_INIT_MASK)
#define SIPI_MCR_TEN_MASK                        0x8u
#define SIPI_MCR_TEN_SHIFT                       3u
#define SIPI_MCR_TEN_WIDTH                       1u
#define SIPI_MCR_TEN(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_MCR_TEN_SHIFT))&SIPI_MCR_TEN_MASK)
#define SIPI_MCR_CHNSB_MASK                      0x10u
#define SIPI_MCR_CHNSB_SHIFT                     4u
#define SIPI_MCR_CHNSB_WIDTH                     1u
#define SIPI_MCR_CHNSB(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_MCR_CHNSB_SHIFT))&SIPI_MCR_CHNSB_MASK)
#define SIPI_MCR_MCRIE_MASK                      0x200u
#define SIPI_MCR_MCRIE_SHIFT                     9u
#define SIPI_MCR_MCRIE_WIDTH                     1u
#define SIPI_MCR_MCRIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_MCR_MCRIE_SHIFT))&SIPI_MCR_MCRIE_MASK)
#define SIPI_MCR_CRCIE_MASK                      0x400u
#define SIPI_MCR_CRCIE_SHIFT                     10u
#define SIPI_MCR_CRCIE_WIDTH                     1u
#define SIPI_MCR_CRCIE(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_MCR_CRCIE_SHIFT))&SIPI_MCR_CRCIE_MASK)
#define SIPI_MCR_AID_MASK                        0xC000u
#define SIPI_MCR_AID_SHIFT                       14u
#define SIPI_MCR_AID_WIDTH                       2u
#define SIPI_MCR_AID(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_MCR_AID_SHIFT))&SIPI_MCR_AID_MASK)
#define SIPI_MCR_PRSCLR_MASK                     0x7FF0000u
#define SIPI_MCR_PRSCLR_SHIFT                    16u
#define SIPI_MCR_PRSCLR_WIDTH                    11u
#define SIPI_MCR_PRSCLR(x)                       (((uint32_t)(((uint32_t)(x))<<SIPI_MCR_PRSCLR_SHIFT))&SIPI_MCR_PRSCLR_MASK)
#define SIPI_MCR_HALT_MASK                       0x20000000u
#define SIPI_MCR_HALT_SHIFT                      29u
#define SIPI_MCR_HALT_WIDTH                      1u
#define SIPI_MCR_HALT(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_MCR_HALT_SHIFT))&SIPI_MCR_HALT_MASK)
#define SIPI_MCR_FRZ_MASK                        0x80000000u
#define SIPI_MCR_FRZ_SHIFT                       31u
#define SIPI_MCR_FRZ_WIDTH                       1u
#define SIPI_MCR_FRZ(x)                          (((uint32_t)(((uint32_t)(x))<<SIPI_MCR_FRZ_SHIFT))&SIPI_MCR_FRZ_MASK)
/* SR Bit Fields */
#define SIPI_SR_STATE_MASK                       0xFu
#define SIPI_SR_STATE_SHIFT                      0u
#define SIPI_SR_STATE_WIDTH                      4u
#define SIPI_SR_STATE(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_SR_STATE_SHIFT))&SIPI_SR_STATE_MASK)
#define SIPI_SR_TE_MASK                          0xF0u
#define SIPI_SR_TE_SHIFT                         4u
#define SIPI_SR_TE_WIDTH                         4u
#define SIPI_SR_TE(x)                            (((uint32_t)(((uint32_t)(x))<<SIPI_SR_TE_SHIFT))&SIPI_SR_TE_MASK)
#define SIPI_SR_MCR_MASK                         0x200u
#define SIPI_SR_MCR_SHIFT                        9u
#define SIPI_SR_MCR_WIDTH                        1u
#define SIPI_SR_MCR(x)                           (((uint32_t)(((uint32_t)(x))<<SIPI_SR_MCR_SHIFT))&SIPI_SR_MCR_MASK)
#define SIPI_SR_GCRCE_MASK                       0x400u
#define SIPI_SR_GCRCE_SHIFT                      10u
#define SIPI_SR_GCRCE_WIDTH                      1u
#define SIPI_SR_GCRCE(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_SR_GCRCE_SHIFT))&SIPI_SR_GCRCE_MASK)
#define SIPI_SR_LPMACK_MASK                      0x40000000u
#define SIPI_SR_LPMACK_SHIFT                     30u
#define SIPI_SR_LPMACK_WIDTH                     1u
#define SIPI_SR_LPMACK(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_SR_LPMACK_SHIFT))&SIPI_SR_LPMACK_MASK)
#define SIPI_SR_FRZACK_MASK                      0x80000000u
#define SIPI_SR_FRZACK_SHIFT                     31u
#define SIPI_SR_FRZACK_WIDTH                     1u
#define SIPI_SR_FRZACK(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_SR_FRZACK_SHIFT))&SIPI_SR_FRZACK_MASK)
/* MAXCR Bit Fields */
#define SIPI_MAXCR_MXCNT_MASK                    0xFFFFFFFCu
#define SIPI_MAXCR_MXCNT_SHIFT                   2u
#define SIPI_MAXCR_MXCNT_WIDTH                   30u
#define SIPI_MAXCR_MXCNT(x)                      (((uint32_t)(((uint32_t)(x))<<SIPI_MAXCR_MXCNT_SHIFT))&SIPI_MAXCR_MXCNT_MASK)
/* ARR Bit Fields */
#define SIPI_ARR_ADRLD_MASK                      0xFFFFFFFCu
#define SIPI_ARR_ADRLD_SHIFT                     2u
#define SIPI_ARR_ADRLD_WIDTH                     30u
#define SIPI_ARR_ADRLD(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_ARR_ADRLD_SHIFT))&SIPI_ARR_ADRLD_MASK)
/* ACR Bit Fields */
#define SIPI_ACR_ADCNT_MASK                      0xFFFFFFFCu
#define SIPI_ACR_ADCNT_SHIFT                     2u
#define SIPI_ACR_ADCNT_WIDTH                     30u
#define SIPI_ACR_ADCNT(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_ACR_ADCNT_SHIFT))&SIPI_ACR_ADCNT_MASK)
/* ERR Bit Fields */
#define SIPI_ERR_ACKE0_MASK                      0x1u
#define SIPI_ERR_ACKE0_SHIFT                     0u
#define SIPI_ERR_ACKE0_WIDTH                     1u
#define SIPI_ERR_ACKE0(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_ERR_ACKE0_SHIFT))&SIPI_ERR_ACKE0_MASK)
#define SIPI_ERR_TIDE0_MASK                      0x2u
#define SIPI_ERR_TIDE0_SHIFT                     1u
#define SIPI_ERR_TIDE0_WIDTH                     1u
#define SIPI_ERR_TIDE0(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_ERR_TIDE0_SHIFT))&SIPI_ERR_TIDE0_MASK)
#define SIPI_ERR_TOE0_MASK                       0x4u
#define SIPI_ERR_TOE0_SHIFT                      2u
#define SIPI_ERR_TOE0_WIDTH                      1u
#define SIPI_ERR_TOE0(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_ERR_TOE0_SHIFT))&SIPI_ERR_TOE0_MASK)
#define SIPI_ERR_ACKE1_MASK                      0x100u
#define SIPI_ERR_ACKE1_SHIFT                     8u
#define SIPI_ERR_ACKE1_WIDTH                     1u
#define SIPI_ERR_ACKE1(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_ERR_ACKE1_SHIFT))&SIPI_ERR_ACKE1_MASK)
#define SIPI_ERR_TIDE1_MASK                      0x200u
#define SIPI_ERR_TIDE1_SHIFT                     9u
#define SIPI_ERR_TIDE1_WIDTH                     1u
#define SIPI_ERR_TIDE1(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_ERR_TIDE1_SHIFT))&SIPI_ERR_TIDE1_MASK)
#define SIPI_ERR_TOE1_MASK                       0x400u
#define SIPI_ERR_TOE1_SHIFT                      10u
#define SIPI_ERR_TOE1_WIDTH                      1u
#define SIPI_ERR_TOE1(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_ERR_TOE1_SHIFT))&SIPI_ERR_TOE1_MASK)
#define SIPI_ERR_ACKE2_MASK                      0x10000u
#define SIPI_ERR_ACKE2_SHIFT                     16u
#define SIPI_ERR_ACKE2_WIDTH                     1u
#define SIPI_ERR_ACKE2(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_ERR_ACKE2_SHIFT))&SIPI_ERR_ACKE2_MASK)
#define SIPI_ERR_TIDE2_MASK                      0x20000u
#define SIPI_ERR_TIDE2_SHIFT                     17u
#define SIPI_ERR_TIDE2_WIDTH                     1u
#define SIPI_ERR_TIDE2(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_ERR_TIDE2_SHIFT))&SIPI_ERR_TIDE2_MASK)
#define SIPI_ERR_TOE2_MASK                       0x40000u
#define SIPI_ERR_TOE2_SHIFT                      18u
#define SIPI_ERR_TOE2_WIDTH                      1u
#define SIPI_ERR_TOE2(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_ERR_TOE2_SHIFT))&SIPI_ERR_TOE2_MASK)
#define SIPI_ERR_ACKE3_MASK                      0x1000000u
#define SIPI_ERR_ACKE3_SHIFT                     24u
#define SIPI_ERR_ACKE3_WIDTH                     1u
#define SIPI_ERR_ACKE3(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_ERR_ACKE3_SHIFT))&SIPI_ERR_ACKE3_MASK)
#define SIPI_ERR_TIDE3_MASK                      0x2000000u
#define SIPI_ERR_TIDE3_SHIFT                     25u
#define SIPI_ERR_TIDE3_WIDTH                     1u
#define SIPI_ERR_TIDE3(x)                        (((uint32_t)(((uint32_t)(x))<<SIPI_ERR_TIDE3_SHIFT))&SIPI_ERR_TIDE3_MASK)
#define SIPI_ERR_TOE3_MASK                       0x4000000u
#define SIPI_ERR_TOE3_SHIFT                      26u
#define SIPI_ERR_TOE3_WIDTH                      1u
#define SIPI_ERR_TOE3(x)                         (((uint32_t)(((uint32_t)(x))<<SIPI_ERR_TOE3_SHIFT))&SIPI_ERR_TOE3_MASK)

/*!
 * @}
 */ /* end of group SIPI_Register_Masks */


/*!
 * @}
 */ /* end of group SIPI_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SIUL2 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SIUL2_Peripheral_Access_Layer SIUL2 Peripheral Access Layer
 * @{
 */


/** SIUL2 - Size of Registers Arrays */
#define SIUL2_IFMCR_COUNT                        32u
#define SIUL2_MSCR_COUNT                         155u
#define SIUL2_IMCR_COUNT                         234u
#define SIUL2_GPDO_COUNT                         39u
#define SIUL2_GPDI_COUNT                         39u
#define SIUL2_PGPDO_COUNT                        10u
#define SIUL2_PGPDI_COUNT                        10u
#define SIUL2_MPGPDO_COUNT                       10u

/** SIUL2 - Register Layout Typedef */
typedef struct {
       uint8_t RESERVED_0[4];
  __I  uint32_t MIDR1;                             /**< SIUL2 MCU ID Register #1, offset: 0x4 */
  __I  uint32_t MIDR2;                             /**< SIUL2 MCU ID Register #2, offset: 0x8 */
       uint8_t RESERVED_1[4];
  __IO uint32_t DISR0;                             /**< SIUL2 DMA/Interrupt Status Flag Register0, offset: 0x10 */
       uint8_t RESERVED_2[4];
  __IO uint32_t DIRER0;                            /**< SIUL2 DMA/Interrupt Request Enable Register0, offset: 0x18 */
       uint8_t RESERVED_3[4];
  __IO uint32_t DIRSR0;                            /**< SIUL2 DMA/Interrupt Request Select Register0, offset: 0x20 */
       uint8_t RESERVED_4[4];
  __IO uint32_t IREER0;                            /**< SIUL2 Interrupt Rising-Edge Event Enable Register 0, offset: 0x28 */
       uint8_t RESERVED_5[4];
  __IO uint32_t IFEER0;                            /**< SIUL2 Interrupt Falling-Edge Event Enable Register 0, offset: 0x30 */
       uint8_t RESERVED_6[4];
  __IO uint32_t IFER0;                             /**< SIUL2 Interrupt Filter Enable Register 0, offset: 0x38 */
       uint8_t RESERVED_7[4];
  __IO uint32_t IFMCR[SIUL2_IFMCR_COUNT];          /**< SIUL2 Interrupt Filter Maximum Counter Register, array offset: 0x40, array step: 0x4 */
  __IO uint32_t IFCPR;                             /**< SIUL2 Interrupt Filter Clock Prescaler Register, offset: 0xC0 */
       uint8_t RESERVED_8[380];
  __IO uint32_t MSCR[SIUL2_MSCR_COUNT];            /**< SIUL2 Multiplexed Signal Configuration Register, array offset: 0x240, array step: 0x4 */
       uint8_t RESERVED_9[1428];
  __IO uint32_t IMCR[SIUL2_IMCR_COUNT];            /**< SIUL2_IMCR0..SIUL2 Input Multiplexed Signal Configuration Register, array offset: 0xA40, array step: 0x4 */
       uint8_t RESERVED_10[1304];
  __IO uint32_t GPDO[SIUL2_GPDO_COUNT];            /**< SIUL2 GPIO Pad Data Output Register, array offset: 0x1300, array step: 0x4 */
       uint8_t RESERVED_11[356];
  __I  uint32_t GPDI[SIUL2_GPDI_COUNT];            /**< SIUL2 GPIO Pad Data Input Register, array offset: 0x1500, array step: 0x4 */
       uint8_t RESERVED_12[356];
  __IO uint16_t PGPDO[SIUL2_PGPDO_COUNT];          /**< SIUL2 Parallel GPIO Pad Data Out Register, array offset: 0x1700, array step: 0x2 */
       uint8_t RESERVED_13[44];
  __I  uint16_t PGPDI[SIUL2_PGPDI_COUNT];          /**< SIUL2 Parallel GPIO Pad Data In Register, array offset: 0x1740, array step: 0x2 */
       uint8_t RESERVED_14[44];
  __O  uint32_t MPGPDO[SIUL2_MPGPDO_COUNT];        /**< SIUL2 Masked Parallel GPIO Pad Data Out Register, array offset: 0x1780, array step: 0x4 */
} SIUL2_Type, *SIUL2_MemMapPtr;

 /** Number of instances of the SIUL2 module. */
#define SIUL2_INSTANCE_COUNT                     (1u)


/* SIUL2 - Peripheral instance base addresses */
/** Peripheral SIUL2 base address */
#define SIUL2_BASE                               (0xFFFC0000u)
/** Peripheral SIUL2 base pointer */
#define SIUL2                                    ((SIUL2_Type *)SIUL2_BASE)
/** Array initializer of SIUL2 peripheral base addresses */
#define SIUL2_BASE_ADDRS                         { SIUL2_BASE }
/** Array initializer of SIUL2 peripheral base pointers */
#define SIUL2_BASE_PTRS                          { SIUL2 }

/* ----------------------------------------------------------------------------
   -- SIUL2 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SIUL2_Register_Masks SIUL2 Register Masks
 * @{
 */

/* MIDR1 Bit Fields */
#define SIUL2_MIDR1_MINOR_MASK_MASK              0xFu
#define SIUL2_MIDR1_MINOR_MASK_SHIFT             0u
#define SIUL2_MIDR1_MINOR_MASK_WIDTH             4u
#define SIUL2_MIDR1_MINOR_MASK(x)                (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR1_MINOR_MASK_SHIFT))&SIUL2_MIDR1_MINOR_MASK_MASK)
#define SIUL2_MIDR1_MAJOR_MASK_MASK              0xF0u
#define SIUL2_MIDR1_MAJOR_MASK_SHIFT             4u
#define SIUL2_MIDR1_MAJOR_MASK_WIDTH             4u
#define SIUL2_MIDR1_MAJOR_MASK(x)                (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR1_MAJOR_MASK_SHIFT))&SIUL2_MIDR1_MAJOR_MASK_MASK)
#define SIUL2_MIDR1_PKG_MASK                     0x7C00u
#define SIUL2_MIDR1_PKG_SHIFT                    10u
#define SIUL2_MIDR1_PKG_WIDTH                    5u
#define SIUL2_MIDR1_PKG(x)                       (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR1_PKG_SHIFT))&SIUL2_MIDR1_PKG_MASK)
#define SIUL2_MIDR1_ED_MASK                      0x8000u
#define SIUL2_MIDR1_ED_SHIFT                     15u
#define SIUL2_MIDR1_ED_WIDTH                     1u
#define SIUL2_MIDR1_ED(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR1_ED_SHIFT))&SIUL2_MIDR1_ED_MASK)
#define SIUL2_MIDR1_PARTNUM_MASK                 0xFFFF0000u
#define SIUL2_MIDR1_PARTNUM_SHIFT                16u
#define SIUL2_MIDR1_PARTNUM_WIDTH                16u
#define SIUL2_MIDR1_PARTNUM(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR1_PARTNUM_SHIFT))&SIUL2_MIDR1_PARTNUM_MASK)
/* MIDR2 Bit Fields */
#define SIUL2_MIDR2_PARTNUM_MASK                 0xFF00u
#define SIUL2_MIDR2_PARTNUM_SHIFT                8u
#define SIUL2_MIDR2_PARTNUM_WIDTH                8u
#define SIUL2_MIDR2_PARTNUM(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR2_PARTNUM_SHIFT))&SIUL2_MIDR2_PARTNUM_MASK)
#define SIUL2_MIDR2_FLASH_SIZE_2_MASK            0x7800000u
#define SIUL2_MIDR2_FLASH_SIZE_2_SHIFT           23u
#define SIUL2_MIDR2_FLASH_SIZE_2_WIDTH           4u
#define SIUL2_MIDR2_FLASH_SIZE_2(x)              (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR2_FLASH_SIZE_2_SHIFT))&SIUL2_MIDR2_FLASH_SIZE_2_MASK)
#define SIUL2_MIDR2_FLASH_SIZE_1_MASK            0x78000000u
#define SIUL2_MIDR2_FLASH_SIZE_1_SHIFT           27u
#define SIUL2_MIDR2_FLASH_SIZE_1_WIDTH           4u
#define SIUL2_MIDR2_FLASH_SIZE_1(x)              (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR2_FLASH_SIZE_1_SHIFT))&SIUL2_MIDR2_FLASH_SIZE_1_MASK)
#define SIUL2_MIDR2_SF_MASK                      0x80000000u
#define SIUL2_MIDR2_SF_SHIFT                     31u
#define SIUL2_MIDR2_SF_WIDTH                     1u
#define SIUL2_MIDR2_SF(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR2_SF_SHIFT))&SIUL2_MIDR2_SF_MASK)
/* DISR0 Bit Fields */
#define SIUL2_DISR0_EIF0_MASK                    0x1u
#define SIUL2_DISR0_EIF0_SHIFT                   0u
#define SIUL2_DISR0_EIF0_WIDTH                   1u
#define SIUL2_DISR0_EIF0(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF0_SHIFT))&SIUL2_DISR0_EIF0_MASK)
#define SIUL2_DISR0_EIF1_MASK                    0x2u
#define SIUL2_DISR0_EIF1_SHIFT                   1u
#define SIUL2_DISR0_EIF1_WIDTH                   1u
#define SIUL2_DISR0_EIF1(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF1_SHIFT))&SIUL2_DISR0_EIF1_MASK)
#define SIUL2_DISR0_EIF2_MASK                    0x4u
#define SIUL2_DISR0_EIF2_SHIFT                   2u
#define SIUL2_DISR0_EIF2_WIDTH                   1u
#define SIUL2_DISR0_EIF2(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF2_SHIFT))&SIUL2_DISR0_EIF2_MASK)
#define SIUL2_DISR0_EIF3_MASK                    0x8u
#define SIUL2_DISR0_EIF3_SHIFT                   3u
#define SIUL2_DISR0_EIF3_WIDTH                   1u
#define SIUL2_DISR0_EIF3(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF3_SHIFT))&SIUL2_DISR0_EIF3_MASK)
#define SIUL2_DISR0_EIF4_MASK                    0x10u
#define SIUL2_DISR0_EIF4_SHIFT                   4u
#define SIUL2_DISR0_EIF4_WIDTH                   1u
#define SIUL2_DISR0_EIF4(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF4_SHIFT))&SIUL2_DISR0_EIF4_MASK)
#define SIUL2_DISR0_EIF5_MASK                    0x20u
#define SIUL2_DISR0_EIF5_SHIFT                   5u
#define SIUL2_DISR0_EIF5_WIDTH                   1u
#define SIUL2_DISR0_EIF5(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF5_SHIFT))&SIUL2_DISR0_EIF5_MASK)
#define SIUL2_DISR0_EIF6_MASK                    0x40u
#define SIUL2_DISR0_EIF6_SHIFT                   6u
#define SIUL2_DISR0_EIF6_WIDTH                   1u
#define SIUL2_DISR0_EIF6(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF6_SHIFT))&SIUL2_DISR0_EIF6_MASK)
#define SIUL2_DISR0_EIF7_MASK                    0x80u
#define SIUL2_DISR0_EIF7_SHIFT                   7u
#define SIUL2_DISR0_EIF7_WIDTH                   1u
#define SIUL2_DISR0_EIF7(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF7_SHIFT))&SIUL2_DISR0_EIF7_MASK)
#define SIUL2_DISR0_EIF8_MASK                    0x100u
#define SIUL2_DISR0_EIF8_SHIFT                   8u
#define SIUL2_DISR0_EIF8_WIDTH                   1u
#define SIUL2_DISR0_EIF8(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF8_SHIFT))&SIUL2_DISR0_EIF8_MASK)
#define SIUL2_DISR0_EIF9_MASK                    0x200u
#define SIUL2_DISR0_EIF9_SHIFT                   9u
#define SIUL2_DISR0_EIF9_WIDTH                   1u
#define SIUL2_DISR0_EIF9(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF9_SHIFT))&SIUL2_DISR0_EIF9_MASK)
#define SIUL2_DISR0_EIF10_MASK                   0x400u
#define SIUL2_DISR0_EIF10_SHIFT                  10u
#define SIUL2_DISR0_EIF10_WIDTH                  1u
#define SIUL2_DISR0_EIF10(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF10_SHIFT))&SIUL2_DISR0_EIF10_MASK)
#define SIUL2_DISR0_EIF11_MASK                   0x800u
#define SIUL2_DISR0_EIF11_SHIFT                  11u
#define SIUL2_DISR0_EIF11_WIDTH                  1u
#define SIUL2_DISR0_EIF11(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF11_SHIFT))&SIUL2_DISR0_EIF11_MASK)
#define SIUL2_DISR0_EIF12_MASK                   0x1000u
#define SIUL2_DISR0_EIF12_SHIFT                  12u
#define SIUL2_DISR0_EIF12_WIDTH                  1u
#define SIUL2_DISR0_EIF12(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF12_SHIFT))&SIUL2_DISR0_EIF12_MASK)
#define SIUL2_DISR0_EIF13_MASK                   0x2000u
#define SIUL2_DISR0_EIF13_SHIFT                  13u
#define SIUL2_DISR0_EIF13_WIDTH                  1u
#define SIUL2_DISR0_EIF13(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF13_SHIFT))&SIUL2_DISR0_EIF13_MASK)
#define SIUL2_DISR0_EIF14_MASK                   0x4000u
#define SIUL2_DISR0_EIF14_SHIFT                  14u
#define SIUL2_DISR0_EIF14_WIDTH                  1u
#define SIUL2_DISR0_EIF14(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF14_SHIFT))&SIUL2_DISR0_EIF14_MASK)
#define SIUL2_DISR0_EIF15_MASK                   0x8000u
#define SIUL2_DISR0_EIF15_SHIFT                  15u
#define SIUL2_DISR0_EIF15_WIDTH                  1u
#define SIUL2_DISR0_EIF15(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF15_SHIFT))&SIUL2_DISR0_EIF15_MASK)
#define SIUL2_DISR0_EIF16_MASK                   0x10000u
#define SIUL2_DISR0_EIF16_SHIFT                  16u
#define SIUL2_DISR0_EIF16_WIDTH                  1u
#define SIUL2_DISR0_EIF16(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF16_SHIFT))&SIUL2_DISR0_EIF16_MASK)
#define SIUL2_DISR0_EIF17_MASK                   0x20000u
#define SIUL2_DISR0_EIF17_SHIFT                  17u
#define SIUL2_DISR0_EIF17_WIDTH                  1u
#define SIUL2_DISR0_EIF17(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF17_SHIFT))&SIUL2_DISR0_EIF17_MASK)
#define SIUL2_DISR0_EIF18_MASK                   0x40000u
#define SIUL2_DISR0_EIF18_SHIFT                  18u
#define SIUL2_DISR0_EIF18_WIDTH                  1u
#define SIUL2_DISR0_EIF18(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF18_SHIFT))&SIUL2_DISR0_EIF18_MASK)
#define SIUL2_DISR0_EIF19_MASK                   0x80000u
#define SIUL2_DISR0_EIF19_SHIFT                  19u
#define SIUL2_DISR0_EIF19_WIDTH                  1u
#define SIUL2_DISR0_EIF19(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF19_SHIFT))&SIUL2_DISR0_EIF19_MASK)
#define SIUL2_DISR0_EIF20_MASK                   0x100000u
#define SIUL2_DISR0_EIF20_SHIFT                  20u
#define SIUL2_DISR0_EIF20_WIDTH                  1u
#define SIUL2_DISR0_EIF20(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF20_SHIFT))&SIUL2_DISR0_EIF20_MASK)
#define SIUL2_DISR0_EIF21_MASK                   0x200000u
#define SIUL2_DISR0_EIF21_SHIFT                  21u
#define SIUL2_DISR0_EIF21_WIDTH                  1u
#define SIUL2_DISR0_EIF21(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF21_SHIFT))&SIUL2_DISR0_EIF21_MASK)
#define SIUL2_DISR0_EIF22_MASK                   0x400000u
#define SIUL2_DISR0_EIF22_SHIFT                  22u
#define SIUL2_DISR0_EIF22_WIDTH                  1u
#define SIUL2_DISR0_EIF22(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF22_SHIFT))&SIUL2_DISR0_EIF22_MASK)
#define SIUL2_DISR0_EIF23_MASK                   0x800000u
#define SIUL2_DISR0_EIF23_SHIFT                  23u
#define SIUL2_DISR0_EIF23_WIDTH                  1u
#define SIUL2_DISR0_EIF23(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF23_SHIFT))&SIUL2_DISR0_EIF23_MASK)
#define SIUL2_DISR0_EIF24_MASK                   0x1000000u
#define SIUL2_DISR0_EIF24_SHIFT                  24u
#define SIUL2_DISR0_EIF24_WIDTH                  1u
#define SIUL2_DISR0_EIF24(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF24_SHIFT))&SIUL2_DISR0_EIF24_MASK)
#define SIUL2_DISR0_EIF25_MASK                   0x2000000u
#define SIUL2_DISR0_EIF25_SHIFT                  25u
#define SIUL2_DISR0_EIF25_WIDTH                  1u
#define SIUL2_DISR0_EIF25(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF25_SHIFT))&SIUL2_DISR0_EIF25_MASK)
#define SIUL2_DISR0_EIF26_MASK                   0x4000000u
#define SIUL2_DISR0_EIF26_SHIFT                  26u
#define SIUL2_DISR0_EIF26_WIDTH                  1u
#define SIUL2_DISR0_EIF26(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF26_SHIFT))&SIUL2_DISR0_EIF26_MASK)
#define SIUL2_DISR0_EIF27_MASK                   0x8000000u
#define SIUL2_DISR0_EIF27_SHIFT                  27u
#define SIUL2_DISR0_EIF27_WIDTH                  1u
#define SIUL2_DISR0_EIF27(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF27_SHIFT))&SIUL2_DISR0_EIF27_MASK)
#define SIUL2_DISR0_EIF28_MASK                   0x10000000u
#define SIUL2_DISR0_EIF28_SHIFT                  28u
#define SIUL2_DISR0_EIF28_WIDTH                  1u
#define SIUL2_DISR0_EIF28(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF28_SHIFT))&SIUL2_DISR0_EIF28_MASK)
#define SIUL2_DISR0_EIF29_MASK                   0x20000000u
#define SIUL2_DISR0_EIF29_SHIFT                  29u
#define SIUL2_DISR0_EIF29_WIDTH                  1u
#define SIUL2_DISR0_EIF29(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF29_SHIFT))&SIUL2_DISR0_EIF29_MASK)
#define SIUL2_DISR0_EIF30_MASK                   0x40000000u
#define SIUL2_DISR0_EIF30_SHIFT                  30u
#define SIUL2_DISR0_EIF30_WIDTH                  1u
#define SIUL2_DISR0_EIF30(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF30_SHIFT))&SIUL2_DISR0_EIF30_MASK)
#define SIUL2_DISR0_EIF31_MASK                   0x80000000u
#define SIUL2_DISR0_EIF31_SHIFT                  31u
#define SIUL2_DISR0_EIF31_WIDTH                  1u
#define SIUL2_DISR0_EIF31(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_DISR0_EIF31_SHIFT))&SIUL2_DISR0_EIF31_MASK)
/* DIRER0 Bit Fields */
#define SIUL2_DIRER0_EIRE0_MASK                  0x1u
#define SIUL2_DIRER0_EIRE0_SHIFT                 0u
#define SIUL2_DIRER0_EIRE0_WIDTH                 1u
#define SIUL2_DIRER0_EIRE0(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE0_SHIFT))&SIUL2_DIRER0_EIRE0_MASK)
#define SIUL2_DIRER0_EIRE1_MASK                  0x2u
#define SIUL2_DIRER0_EIRE1_SHIFT                 1u
#define SIUL2_DIRER0_EIRE1_WIDTH                 1u
#define SIUL2_DIRER0_EIRE1(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE1_SHIFT))&SIUL2_DIRER0_EIRE1_MASK)
#define SIUL2_DIRER0_EIRE2_MASK                  0x4u
#define SIUL2_DIRER0_EIRE2_SHIFT                 2u
#define SIUL2_DIRER0_EIRE2_WIDTH                 1u
#define SIUL2_DIRER0_EIRE2(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE2_SHIFT))&SIUL2_DIRER0_EIRE2_MASK)
#define SIUL2_DIRER0_EIRE3_MASK                  0x8u
#define SIUL2_DIRER0_EIRE3_SHIFT                 3u
#define SIUL2_DIRER0_EIRE3_WIDTH                 1u
#define SIUL2_DIRER0_EIRE3(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE3_SHIFT))&SIUL2_DIRER0_EIRE3_MASK)
#define SIUL2_DIRER0_EIRE4_MASK                  0x10u
#define SIUL2_DIRER0_EIRE4_SHIFT                 4u
#define SIUL2_DIRER0_EIRE4_WIDTH                 1u
#define SIUL2_DIRER0_EIRE4(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE4_SHIFT))&SIUL2_DIRER0_EIRE4_MASK)
#define SIUL2_DIRER0_EIRE5_MASK                  0x20u
#define SIUL2_DIRER0_EIRE5_SHIFT                 5u
#define SIUL2_DIRER0_EIRE5_WIDTH                 1u
#define SIUL2_DIRER0_EIRE5(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE5_SHIFT))&SIUL2_DIRER0_EIRE5_MASK)
#define SIUL2_DIRER0_EIRE6_MASK                  0x40u
#define SIUL2_DIRER0_EIRE6_SHIFT                 6u
#define SIUL2_DIRER0_EIRE6_WIDTH                 1u
#define SIUL2_DIRER0_EIRE6(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE6_SHIFT))&SIUL2_DIRER0_EIRE6_MASK)
#define SIUL2_DIRER0_EIRE7_MASK                  0x80u
#define SIUL2_DIRER0_EIRE7_SHIFT                 7u
#define SIUL2_DIRER0_EIRE7_WIDTH                 1u
#define SIUL2_DIRER0_EIRE7(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE7_SHIFT))&SIUL2_DIRER0_EIRE7_MASK)
#define SIUL2_DIRER0_EIRE8_MASK                  0x100u
#define SIUL2_DIRER0_EIRE8_SHIFT                 8u
#define SIUL2_DIRER0_EIRE8_WIDTH                 1u
#define SIUL2_DIRER0_EIRE8(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE8_SHIFT))&SIUL2_DIRER0_EIRE8_MASK)
#define SIUL2_DIRER0_EIRE9_MASK                  0x200u
#define SIUL2_DIRER0_EIRE9_SHIFT                 9u
#define SIUL2_DIRER0_EIRE9_WIDTH                 1u
#define SIUL2_DIRER0_EIRE9(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE9_SHIFT))&SIUL2_DIRER0_EIRE9_MASK)
#define SIUL2_DIRER0_EIRE10_MASK                 0x400u
#define SIUL2_DIRER0_EIRE10_SHIFT                10u
#define SIUL2_DIRER0_EIRE10_WIDTH                1u
#define SIUL2_DIRER0_EIRE10(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE10_SHIFT))&SIUL2_DIRER0_EIRE10_MASK)
#define SIUL2_DIRER0_EIRE11_MASK                 0x800u
#define SIUL2_DIRER0_EIRE11_SHIFT                11u
#define SIUL2_DIRER0_EIRE11_WIDTH                1u
#define SIUL2_DIRER0_EIRE11(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE11_SHIFT))&SIUL2_DIRER0_EIRE11_MASK)
#define SIUL2_DIRER0_EIRE12_MASK                 0x1000u
#define SIUL2_DIRER0_EIRE12_SHIFT                12u
#define SIUL2_DIRER0_EIRE12_WIDTH                1u
#define SIUL2_DIRER0_EIRE12(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE12_SHIFT))&SIUL2_DIRER0_EIRE12_MASK)
#define SIUL2_DIRER0_EIRE13_MASK                 0x2000u
#define SIUL2_DIRER0_EIRE13_SHIFT                13u
#define SIUL2_DIRER0_EIRE13_WIDTH                1u
#define SIUL2_DIRER0_EIRE13(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE13_SHIFT))&SIUL2_DIRER0_EIRE13_MASK)
#define SIUL2_DIRER0_EIRE14_MASK                 0x4000u
#define SIUL2_DIRER0_EIRE14_SHIFT                14u
#define SIUL2_DIRER0_EIRE14_WIDTH                1u
#define SIUL2_DIRER0_EIRE14(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE14_SHIFT))&SIUL2_DIRER0_EIRE14_MASK)
#define SIUL2_DIRER0_EIRE15_MASK                 0x8000u
#define SIUL2_DIRER0_EIRE15_SHIFT                15u
#define SIUL2_DIRER0_EIRE15_WIDTH                1u
#define SIUL2_DIRER0_EIRE15(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE15_SHIFT))&SIUL2_DIRER0_EIRE15_MASK)
#define SIUL2_DIRER0_EIRE16_MASK                 0x10000u
#define SIUL2_DIRER0_EIRE16_SHIFT                16u
#define SIUL2_DIRER0_EIRE16_WIDTH                1u
#define SIUL2_DIRER0_EIRE16(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE16_SHIFT))&SIUL2_DIRER0_EIRE16_MASK)
#define SIUL2_DIRER0_EIRE17_MASK                 0x20000u
#define SIUL2_DIRER0_EIRE17_SHIFT                17u
#define SIUL2_DIRER0_EIRE17_WIDTH                1u
#define SIUL2_DIRER0_EIRE17(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE17_SHIFT))&SIUL2_DIRER0_EIRE17_MASK)
#define SIUL2_DIRER0_EIRE18_MASK                 0x40000u
#define SIUL2_DIRER0_EIRE18_SHIFT                18u
#define SIUL2_DIRER0_EIRE18_WIDTH                1u
#define SIUL2_DIRER0_EIRE18(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE18_SHIFT))&SIUL2_DIRER0_EIRE18_MASK)
#define SIUL2_DIRER0_EIRE19_MASK                 0x80000u
#define SIUL2_DIRER0_EIRE19_SHIFT                19u
#define SIUL2_DIRER0_EIRE19_WIDTH                1u
#define SIUL2_DIRER0_EIRE19(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE19_SHIFT))&SIUL2_DIRER0_EIRE19_MASK)
#define SIUL2_DIRER0_EIRE20_MASK                 0x100000u
#define SIUL2_DIRER0_EIRE20_SHIFT                20u
#define SIUL2_DIRER0_EIRE20_WIDTH                1u
#define SIUL2_DIRER0_EIRE20(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE20_SHIFT))&SIUL2_DIRER0_EIRE20_MASK)
#define SIUL2_DIRER0_EIRE21_MASK                 0x200000u
#define SIUL2_DIRER0_EIRE21_SHIFT                21u
#define SIUL2_DIRER0_EIRE21_WIDTH                1u
#define SIUL2_DIRER0_EIRE21(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE21_SHIFT))&SIUL2_DIRER0_EIRE21_MASK)
#define SIUL2_DIRER0_EIRE22_MASK                 0x400000u
#define SIUL2_DIRER0_EIRE22_SHIFT                22u
#define SIUL2_DIRER0_EIRE22_WIDTH                1u
#define SIUL2_DIRER0_EIRE22(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE22_SHIFT))&SIUL2_DIRER0_EIRE22_MASK)
#define SIUL2_DIRER0_EIRE23_MASK                 0x800000u
#define SIUL2_DIRER0_EIRE23_SHIFT                23u
#define SIUL2_DIRER0_EIRE23_WIDTH                1u
#define SIUL2_DIRER0_EIRE23(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE23_SHIFT))&SIUL2_DIRER0_EIRE23_MASK)
#define SIUL2_DIRER0_EIRE24_MASK                 0x1000000u
#define SIUL2_DIRER0_EIRE24_SHIFT                24u
#define SIUL2_DIRER0_EIRE24_WIDTH                1u
#define SIUL2_DIRER0_EIRE24(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE24_SHIFT))&SIUL2_DIRER0_EIRE24_MASK)
#define SIUL2_DIRER0_EIRE25_MASK                 0x2000000u
#define SIUL2_DIRER0_EIRE25_SHIFT                25u
#define SIUL2_DIRER0_EIRE25_WIDTH                1u
#define SIUL2_DIRER0_EIRE25(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE25_SHIFT))&SIUL2_DIRER0_EIRE25_MASK)
#define SIUL2_DIRER0_EIRE26_MASK                 0x4000000u
#define SIUL2_DIRER0_EIRE26_SHIFT                26u
#define SIUL2_DIRER0_EIRE26_WIDTH                1u
#define SIUL2_DIRER0_EIRE26(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE26_SHIFT))&SIUL2_DIRER0_EIRE26_MASK)
#define SIUL2_DIRER0_EIRE27_MASK                 0x8000000u
#define SIUL2_DIRER0_EIRE27_SHIFT                27u
#define SIUL2_DIRER0_EIRE27_WIDTH                1u
#define SIUL2_DIRER0_EIRE27(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE27_SHIFT))&SIUL2_DIRER0_EIRE27_MASK)
#define SIUL2_DIRER0_EIRE28_MASK                 0x10000000u
#define SIUL2_DIRER0_EIRE28_SHIFT                28u
#define SIUL2_DIRER0_EIRE28_WIDTH                1u
#define SIUL2_DIRER0_EIRE28(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE28_SHIFT))&SIUL2_DIRER0_EIRE28_MASK)
#define SIUL2_DIRER0_EIRE29_MASK                 0x20000000u
#define SIUL2_DIRER0_EIRE29_SHIFT                29u
#define SIUL2_DIRER0_EIRE29_WIDTH                1u
#define SIUL2_DIRER0_EIRE29(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE29_SHIFT))&SIUL2_DIRER0_EIRE29_MASK)
#define SIUL2_DIRER0_EIRE30_MASK                 0x40000000u
#define SIUL2_DIRER0_EIRE30_SHIFT                30u
#define SIUL2_DIRER0_EIRE30_WIDTH                1u
#define SIUL2_DIRER0_EIRE30(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE30_SHIFT))&SIUL2_DIRER0_EIRE30_MASK)
#define SIUL2_DIRER0_EIRE31_MASK                 0x80000000u
#define SIUL2_DIRER0_EIRE31_SHIFT                31u
#define SIUL2_DIRER0_EIRE31_WIDTH                1u
#define SIUL2_DIRER0_EIRE31(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRER0_EIRE31_SHIFT))&SIUL2_DIRER0_EIRE31_MASK)
/* DIRSR0 Bit Fields */
#define SIUL2_DIRSR0_DIRSR0_MASK                 0x1u
#define SIUL2_DIRSR0_DIRSR0_SHIFT                0u
#define SIUL2_DIRSR0_DIRSR0_WIDTH                1u
#define SIUL2_DIRSR0_DIRSR0(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR0_SHIFT))&SIUL2_DIRSR0_DIRSR0_MASK)
#define SIUL2_DIRSR0_DIRSR1_MASK                 0x2u
#define SIUL2_DIRSR0_DIRSR1_SHIFT                1u
#define SIUL2_DIRSR0_DIRSR1_WIDTH                1u
#define SIUL2_DIRSR0_DIRSR1(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR1_SHIFT))&SIUL2_DIRSR0_DIRSR1_MASK)
#define SIUL2_DIRSR0_DIRSR2_MASK                 0x4u
#define SIUL2_DIRSR0_DIRSR2_SHIFT                2u
#define SIUL2_DIRSR0_DIRSR2_WIDTH                1u
#define SIUL2_DIRSR0_DIRSR2(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR2_SHIFT))&SIUL2_DIRSR0_DIRSR2_MASK)
#define SIUL2_DIRSR0_DIRSR3_MASK                 0x8u
#define SIUL2_DIRSR0_DIRSR3_SHIFT                3u
#define SIUL2_DIRSR0_DIRSR3_WIDTH                1u
#define SIUL2_DIRSR0_DIRSR3(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR3_SHIFT))&SIUL2_DIRSR0_DIRSR3_MASK)
#define SIUL2_DIRSR0_DIRSR4_MASK                 0x10u
#define SIUL2_DIRSR0_DIRSR4_SHIFT                4u
#define SIUL2_DIRSR0_DIRSR4_WIDTH                1u
#define SIUL2_DIRSR0_DIRSR4(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR4_SHIFT))&SIUL2_DIRSR0_DIRSR4_MASK)
#define SIUL2_DIRSR0_DIRSR5_MASK                 0x20u
#define SIUL2_DIRSR0_DIRSR5_SHIFT                5u
#define SIUL2_DIRSR0_DIRSR5_WIDTH                1u
#define SIUL2_DIRSR0_DIRSR5(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR5_SHIFT))&SIUL2_DIRSR0_DIRSR5_MASK)
#define SIUL2_DIRSR0_DIRSR6_MASK                 0x40u
#define SIUL2_DIRSR0_DIRSR6_SHIFT                6u
#define SIUL2_DIRSR0_DIRSR6_WIDTH                1u
#define SIUL2_DIRSR0_DIRSR6(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR6_SHIFT))&SIUL2_DIRSR0_DIRSR6_MASK)
#define SIUL2_DIRSR0_DIRSR7_MASK                 0x80u
#define SIUL2_DIRSR0_DIRSR7_SHIFT                7u
#define SIUL2_DIRSR0_DIRSR7_WIDTH                1u
#define SIUL2_DIRSR0_DIRSR7(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR7_SHIFT))&SIUL2_DIRSR0_DIRSR7_MASK)
#define SIUL2_DIRSR0_DIRSR8_MASK                 0x100u
#define SIUL2_DIRSR0_DIRSR8_SHIFT                8u
#define SIUL2_DIRSR0_DIRSR8_WIDTH                1u
#define SIUL2_DIRSR0_DIRSR8(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR8_SHIFT))&SIUL2_DIRSR0_DIRSR8_MASK)
#define SIUL2_DIRSR0_DIRSR9_MASK                 0x200u
#define SIUL2_DIRSR0_DIRSR9_SHIFT                9u
#define SIUL2_DIRSR0_DIRSR9_WIDTH                1u
#define SIUL2_DIRSR0_DIRSR9(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR9_SHIFT))&SIUL2_DIRSR0_DIRSR9_MASK)
#define SIUL2_DIRSR0_DIRSR10_MASK                0x400u
#define SIUL2_DIRSR0_DIRSR10_SHIFT               10u
#define SIUL2_DIRSR0_DIRSR10_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR10(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR10_SHIFT))&SIUL2_DIRSR0_DIRSR10_MASK)
#define SIUL2_DIRSR0_DIRSR11_MASK                0x800u
#define SIUL2_DIRSR0_DIRSR11_SHIFT               11u
#define SIUL2_DIRSR0_DIRSR11_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR11(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR11_SHIFT))&SIUL2_DIRSR0_DIRSR11_MASK)
#define SIUL2_DIRSR0_DIRSR12_MASK                0x1000u
#define SIUL2_DIRSR0_DIRSR12_SHIFT               12u
#define SIUL2_DIRSR0_DIRSR12_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR12(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR12_SHIFT))&SIUL2_DIRSR0_DIRSR12_MASK)
#define SIUL2_DIRSR0_DIRSR13_MASK                0x2000u
#define SIUL2_DIRSR0_DIRSR13_SHIFT               13u
#define SIUL2_DIRSR0_DIRSR13_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR13(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR13_SHIFT))&SIUL2_DIRSR0_DIRSR13_MASK)
#define SIUL2_DIRSR0_DIRSR14_MASK                0x4000u
#define SIUL2_DIRSR0_DIRSR14_SHIFT               14u
#define SIUL2_DIRSR0_DIRSR14_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR14(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR14_SHIFT))&SIUL2_DIRSR0_DIRSR14_MASK)
#define SIUL2_DIRSR0_DIRSR15_MASK                0x8000u
#define SIUL2_DIRSR0_DIRSR15_SHIFT               15u
#define SIUL2_DIRSR0_DIRSR15_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR15(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR15_SHIFT))&SIUL2_DIRSR0_DIRSR15_MASK)
#define SIUL2_DIRSR0_DIRSR16_MASK                0x10000u
#define SIUL2_DIRSR0_DIRSR16_SHIFT               16u
#define SIUL2_DIRSR0_DIRSR16_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR16(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR16_SHIFT))&SIUL2_DIRSR0_DIRSR16_MASK)
#define SIUL2_DIRSR0_DIRSR17_MASK                0x20000u
#define SIUL2_DIRSR0_DIRSR17_SHIFT               17u
#define SIUL2_DIRSR0_DIRSR17_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR17(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR17_SHIFT))&SIUL2_DIRSR0_DIRSR17_MASK)
#define SIUL2_DIRSR0_DIRSR18_MASK                0x40000u
#define SIUL2_DIRSR0_DIRSR18_SHIFT               18u
#define SIUL2_DIRSR0_DIRSR18_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR18(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR18_SHIFT))&SIUL2_DIRSR0_DIRSR18_MASK)
#define SIUL2_DIRSR0_DIRSR19_MASK                0x80000u
#define SIUL2_DIRSR0_DIRSR19_SHIFT               19u
#define SIUL2_DIRSR0_DIRSR19_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR19(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR19_SHIFT))&SIUL2_DIRSR0_DIRSR19_MASK)
#define SIUL2_DIRSR0_DIRSR20_MASK                0x100000u
#define SIUL2_DIRSR0_DIRSR20_SHIFT               20u
#define SIUL2_DIRSR0_DIRSR20_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR20(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR20_SHIFT))&SIUL2_DIRSR0_DIRSR20_MASK)
#define SIUL2_DIRSR0_DIRSR21_MASK                0x200000u
#define SIUL2_DIRSR0_DIRSR21_SHIFT               21u
#define SIUL2_DIRSR0_DIRSR21_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR21(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR21_SHIFT))&SIUL2_DIRSR0_DIRSR21_MASK)
#define SIUL2_DIRSR0_DIRSR22_MASK                0x400000u
#define SIUL2_DIRSR0_DIRSR22_SHIFT               22u
#define SIUL2_DIRSR0_DIRSR22_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR22(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR22_SHIFT))&SIUL2_DIRSR0_DIRSR22_MASK)
#define SIUL2_DIRSR0_DIRSR23_MASK                0x800000u
#define SIUL2_DIRSR0_DIRSR23_SHIFT               23u
#define SIUL2_DIRSR0_DIRSR23_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR23(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR23_SHIFT))&SIUL2_DIRSR0_DIRSR23_MASK)
#define SIUL2_DIRSR0_DIRSR24_MASK                0x1000000u
#define SIUL2_DIRSR0_DIRSR24_SHIFT               24u
#define SIUL2_DIRSR0_DIRSR24_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR24(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR24_SHIFT))&SIUL2_DIRSR0_DIRSR24_MASK)
#define SIUL2_DIRSR0_DIRSR25_MASK                0x2000000u
#define SIUL2_DIRSR0_DIRSR25_SHIFT               25u
#define SIUL2_DIRSR0_DIRSR25_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR25(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR25_SHIFT))&SIUL2_DIRSR0_DIRSR25_MASK)
#define SIUL2_DIRSR0_DIRSR26_MASK                0x4000000u
#define SIUL2_DIRSR0_DIRSR26_SHIFT               26u
#define SIUL2_DIRSR0_DIRSR26_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR26(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR26_SHIFT))&SIUL2_DIRSR0_DIRSR26_MASK)
#define SIUL2_DIRSR0_DIRSR27_MASK                0x8000000u
#define SIUL2_DIRSR0_DIRSR27_SHIFT               27u
#define SIUL2_DIRSR0_DIRSR27_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR27(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR27_SHIFT))&SIUL2_DIRSR0_DIRSR27_MASK)
#define SIUL2_DIRSR0_DIRSR28_MASK                0x10000000u
#define SIUL2_DIRSR0_DIRSR28_SHIFT               28u
#define SIUL2_DIRSR0_DIRSR28_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR28(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR28_SHIFT))&SIUL2_DIRSR0_DIRSR28_MASK)
#define SIUL2_DIRSR0_DIRSR29_MASK                0x20000000u
#define SIUL2_DIRSR0_DIRSR29_SHIFT               29u
#define SIUL2_DIRSR0_DIRSR29_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR29(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR29_SHIFT))&SIUL2_DIRSR0_DIRSR29_MASK)
#define SIUL2_DIRSR0_DIRSR30_MASK                0x40000000u
#define SIUL2_DIRSR0_DIRSR30_SHIFT               30u
#define SIUL2_DIRSR0_DIRSR30_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR30(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR30_SHIFT))&SIUL2_DIRSR0_DIRSR30_MASK)
#define SIUL2_DIRSR0_DIRSR31_MASK                0x80000000u
#define SIUL2_DIRSR0_DIRSR31_SHIFT               31u
#define SIUL2_DIRSR0_DIRSR31_WIDTH               1u
#define SIUL2_DIRSR0_DIRSR31(x)                  (((uint32_t)(((uint32_t)(x))<<SIUL2_DIRSR0_DIRSR31_SHIFT))&SIUL2_DIRSR0_DIRSR31_MASK)
/* IREER0 Bit Fields */
#define SIUL2_IREER0_IREE0_MASK                  0x1u
#define SIUL2_IREER0_IREE0_SHIFT                 0u
#define SIUL2_IREER0_IREE0_WIDTH                 1u
#define SIUL2_IREER0_IREE0(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE0_SHIFT))&SIUL2_IREER0_IREE0_MASK)
#define SIUL2_IREER0_IREE1_MASK                  0x2u
#define SIUL2_IREER0_IREE1_SHIFT                 1u
#define SIUL2_IREER0_IREE1_WIDTH                 1u
#define SIUL2_IREER0_IREE1(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE1_SHIFT))&SIUL2_IREER0_IREE1_MASK)
#define SIUL2_IREER0_IREE2_MASK                  0x4u
#define SIUL2_IREER0_IREE2_SHIFT                 2u
#define SIUL2_IREER0_IREE2_WIDTH                 1u
#define SIUL2_IREER0_IREE2(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE2_SHIFT))&SIUL2_IREER0_IREE2_MASK)
#define SIUL2_IREER0_IREE3_MASK                  0x8u
#define SIUL2_IREER0_IREE3_SHIFT                 3u
#define SIUL2_IREER0_IREE3_WIDTH                 1u
#define SIUL2_IREER0_IREE3(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE3_SHIFT))&SIUL2_IREER0_IREE3_MASK)
#define SIUL2_IREER0_IREE4_MASK                  0x10u
#define SIUL2_IREER0_IREE4_SHIFT                 4u
#define SIUL2_IREER0_IREE4_WIDTH                 1u
#define SIUL2_IREER0_IREE4(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE4_SHIFT))&SIUL2_IREER0_IREE4_MASK)
#define SIUL2_IREER0_IREE5_MASK                  0x20u
#define SIUL2_IREER0_IREE5_SHIFT                 5u
#define SIUL2_IREER0_IREE5_WIDTH                 1u
#define SIUL2_IREER0_IREE5(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE5_SHIFT))&SIUL2_IREER0_IREE5_MASK)
#define SIUL2_IREER0_IREE6_MASK                  0x40u
#define SIUL2_IREER0_IREE6_SHIFT                 6u
#define SIUL2_IREER0_IREE6_WIDTH                 1u
#define SIUL2_IREER0_IREE6(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE6_SHIFT))&SIUL2_IREER0_IREE6_MASK)
#define SIUL2_IREER0_IREE7_MASK                  0x80u
#define SIUL2_IREER0_IREE7_SHIFT                 7u
#define SIUL2_IREER0_IREE7_WIDTH                 1u
#define SIUL2_IREER0_IREE7(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE7_SHIFT))&SIUL2_IREER0_IREE7_MASK)
#define SIUL2_IREER0_IREE8_MASK                  0x100u
#define SIUL2_IREER0_IREE8_SHIFT                 8u
#define SIUL2_IREER0_IREE8_WIDTH                 1u
#define SIUL2_IREER0_IREE8(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE8_SHIFT))&SIUL2_IREER0_IREE8_MASK)
#define SIUL2_IREER0_IREE9_MASK                  0x200u
#define SIUL2_IREER0_IREE9_SHIFT                 9u
#define SIUL2_IREER0_IREE9_WIDTH                 1u
#define SIUL2_IREER0_IREE9(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE9_SHIFT))&SIUL2_IREER0_IREE9_MASK)
#define SIUL2_IREER0_IREE10_MASK                 0x400u
#define SIUL2_IREER0_IREE10_SHIFT                10u
#define SIUL2_IREER0_IREE10_WIDTH                1u
#define SIUL2_IREER0_IREE10(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE10_SHIFT))&SIUL2_IREER0_IREE10_MASK)
#define SIUL2_IREER0_IREE11_MASK                 0x800u
#define SIUL2_IREER0_IREE11_SHIFT                11u
#define SIUL2_IREER0_IREE11_WIDTH                1u
#define SIUL2_IREER0_IREE11(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE11_SHIFT))&SIUL2_IREER0_IREE11_MASK)
#define SIUL2_IREER0_IREE12_MASK                 0x1000u
#define SIUL2_IREER0_IREE12_SHIFT                12u
#define SIUL2_IREER0_IREE12_WIDTH                1u
#define SIUL2_IREER0_IREE12(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE12_SHIFT))&SIUL2_IREER0_IREE12_MASK)
#define SIUL2_IREER0_IREE13_MASK                 0x2000u
#define SIUL2_IREER0_IREE13_SHIFT                13u
#define SIUL2_IREER0_IREE13_WIDTH                1u
#define SIUL2_IREER0_IREE13(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE13_SHIFT))&SIUL2_IREER0_IREE13_MASK)
#define SIUL2_IREER0_IREE14_MASK                 0x4000u
#define SIUL2_IREER0_IREE14_SHIFT                14u
#define SIUL2_IREER0_IREE14_WIDTH                1u
#define SIUL2_IREER0_IREE14(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE14_SHIFT))&SIUL2_IREER0_IREE14_MASK)
#define SIUL2_IREER0_IREE15_MASK                 0x8000u
#define SIUL2_IREER0_IREE15_SHIFT                15u
#define SIUL2_IREER0_IREE15_WIDTH                1u
#define SIUL2_IREER0_IREE15(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE15_SHIFT))&SIUL2_IREER0_IREE15_MASK)
#define SIUL2_IREER0_IREE16_MASK                 0x10000u
#define SIUL2_IREER0_IREE16_SHIFT                16u
#define SIUL2_IREER0_IREE16_WIDTH                1u
#define SIUL2_IREER0_IREE16(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE16_SHIFT))&SIUL2_IREER0_IREE16_MASK)
#define SIUL2_IREER0_IREE17_MASK                 0x20000u
#define SIUL2_IREER0_IREE17_SHIFT                17u
#define SIUL2_IREER0_IREE17_WIDTH                1u
#define SIUL2_IREER0_IREE17(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE17_SHIFT))&SIUL2_IREER0_IREE17_MASK)
#define SIUL2_IREER0_IREE18_MASK                 0x40000u
#define SIUL2_IREER0_IREE18_SHIFT                18u
#define SIUL2_IREER0_IREE18_WIDTH                1u
#define SIUL2_IREER0_IREE18(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE18_SHIFT))&SIUL2_IREER0_IREE18_MASK)
#define SIUL2_IREER0_IREE19_MASK                 0x80000u
#define SIUL2_IREER0_IREE19_SHIFT                19u
#define SIUL2_IREER0_IREE19_WIDTH                1u
#define SIUL2_IREER0_IREE19(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE19_SHIFT))&SIUL2_IREER0_IREE19_MASK)
#define SIUL2_IREER0_IREE20_MASK                 0x100000u
#define SIUL2_IREER0_IREE20_SHIFT                20u
#define SIUL2_IREER0_IREE20_WIDTH                1u
#define SIUL2_IREER0_IREE20(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE20_SHIFT))&SIUL2_IREER0_IREE20_MASK)
#define SIUL2_IREER0_IREE21_MASK                 0x200000u
#define SIUL2_IREER0_IREE21_SHIFT                21u
#define SIUL2_IREER0_IREE21_WIDTH                1u
#define SIUL2_IREER0_IREE21(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE21_SHIFT))&SIUL2_IREER0_IREE21_MASK)
#define SIUL2_IREER0_IREE22_MASK                 0x400000u
#define SIUL2_IREER0_IREE22_SHIFT                22u
#define SIUL2_IREER0_IREE22_WIDTH                1u
#define SIUL2_IREER0_IREE22(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE22_SHIFT))&SIUL2_IREER0_IREE22_MASK)
#define SIUL2_IREER0_IREE23_MASK                 0x800000u
#define SIUL2_IREER0_IREE23_SHIFT                23u
#define SIUL2_IREER0_IREE23_WIDTH                1u
#define SIUL2_IREER0_IREE23(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE23_SHIFT))&SIUL2_IREER0_IREE23_MASK)
#define SIUL2_IREER0_IREE24_MASK                 0x1000000u
#define SIUL2_IREER0_IREE24_SHIFT                24u
#define SIUL2_IREER0_IREE24_WIDTH                1u
#define SIUL2_IREER0_IREE24(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE24_SHIFT))&SIUL2_IREER0_IREE24_MASK)
#define SIUL2_IREER0_IREE25_MASK                 0x2000000u
#define SIUL2_IREER0_IREE25_SHIFT                25u
#define SIUL2_IREER0_IREE25_WIDTH                1u
#define SIUL2_IREER0_IREE25(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE25_SHIFT))&SIUL2_IREER0_IREE25_MASK)
#define SIUL2_IREER0_IREE26_MASK                 0x4000000u
#define SIUL2_IREER0_IREE26_SHIFT                26u
#define SIUL2_IREER0_IREE26_WIDTH                1u
#define SIUL2_IREER0_IREE26(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE26_SHIFT))&SIUL2_IREER0_IREE26_MASK)
#define SIUL2_IREER0_IREE27_MASK                 0x8000000u
#define SIUL2_IREER0_IREE27_SHIFT                27u
#define SIUL2_IREER0_IREE27_WIDTH                1u
#define SIUL2_IREER0_IREE27(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE27_SHIFT))&SIUL2_IREER0_IREE27_MASK)
#define SIUL2_IREER0_IREE28_MASK                 0x10000000u
#define SIUL2_IREER0_IREE28_SHIFT                28u
#define SIUL2_IREER0_IREE28_WIDTH                1u
#define SIUL2_IREER0_IREE28(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE28_SHIFT))&SIUL2_IREER0_IREE28_MASK)
#define SIUL2_IREER0_IREE29_MASK                 0x20000000u
#define SIUL2_IREER0_IREE29_SHIFT                29u
#define SIUL2_IREER0_IREE29_WIDTH                1u
#define SIUL2_IREER0_IREE29(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE29_SHIFT))&SIUL2_IREER0_IREE29_MASK)
#define SIUL2_IREER0_IREE30_MASK                 0x40000000u
#define SIUL2_IREER0_IREE30_SHIFT                30u
#define SIUL2_IREER0_IREE30_WIDTH                1u
#define SIUL2_IREER0_IREE30(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE30_SHIFT))&SIUL2_IREER0_IREE30_MASK)
#define SIUL2_IREER0_IREE31_MASK                 0x80000000u
#define SIUL2_IREER0_IREE31_SHIFT                31u
#define SIUL2_IREER0_IREE31_WIDTH                1u
#define SIUL2_IREER0_IREE31(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE31_SHIFT))&SIUL2_IREER0_IREE31_MASK)
/* IFEER0 Bit Fields */
#define SIUL2_IFEER0_IFEE0_MASK                  0x1u
#define SIUL2_IFEER0_IFEE0_SHIFT                 0u
#define SIUL2_IFEER0_IFEE0_WIDTH                 1u
#define SIUL2_IFEER0_IFEE0(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE0_SHIFT))&SIUL2_IFEER0_IFEE0_MASK)
#define SIUL2_IFEER0_IFEE1_MASK                  0x2u
#define SIUL2_IFEER0_IFEE1_SHIFT                 1u
#define SIUL2_IFEER0_IFEE1_WIDTH                 1u
#define SIUL2_IFEER0_IFEE1(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE1_SHIFT))&SIUL2_IFEER0_IFEE1_MASK)
#define SIUL2_IFEER0_IFEE2_MASK                  0x4u
#define SIUL2_IFEER0_IFEE2_SHIFT                 2u
#define SIUL2_IFEER0_IFEE2_WIDTH                 1u
#define SIUL2_IFEER0_IFEE2(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE2_SHIFT))&SIUL2_IFEER0_IFEE2_MASK)
#define SIUL2_IFEER0_IFEE3_MASK                  0x8u
#define SIUL2_IFEER0_IFEE3_SHIFT                 3u
#define SIUL2_IFEER0_IFEE3_WIDTH                 1u
#define SIUL2_IFEER0_IFEE3(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE3_SHIFT))&SIUL2_IFEER0_IFEE3_MASK)
#define SIUL2_IFEER0_IFEE4_MASK                  0x10u
#define SIUL2_IFEER0_IFEE4_SHIFT                 4u
#define SIUL2_IFEER0_IFEE4_WIDTH                 1u
#define SIUL2_IFEER0_IFEE4(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE4_SHIFT))&SIUL2_IFEER0_IFEE4_MASK)
#define SIUL2_IFEER0_IFEE5_MASK                  0x20u
#define SIUL2_IFEER0_IFEE5_SHIFT                 5u
#define SIUL2_IFEER0_IFEE5_WIDTH                 1u
#define SIUL2_IFEER0_IFEE5(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE5_SHIFT))&SIUL2_IFEER0_IFEE5_MASK)
#define SIUL2_IFEER0_IFEE6_MASK                  0x40u
#define SIUL2_IFEER0_IFEE6_SHIFT                 6u
#define SIUL2_IFEER0_IFEE6_WIDTH                 1u
#define SIUL2_IFEER0_IFEE6(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE6_SHIFT))&SIUL2_IFEER0_IFEE6_MASK)
#define SIUL2_IFEER0_IFEE7_MASK                  0x80u
#define SIUL2_IFEER0_IFEE7_SHIFT                 7u
#define SIUL2_IFEER0_IFEE7_WIDTH                 1u
#define SIUL2_IFEER0_IFEE7(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE7_SHIFT))&SIUL2_IFEER0_IFEE7_MASK)
#define SIUL2_IFEER0_IFEE8_MASK                  0x100u
#define SIUL2_IFEER0_IFEE8_SHIFT                 8u
#define SIUL2_IFEER0_IFEE8_WIDTH                 1u
#define SIUL2_IFEER0_IFEE8(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE8_SHIFT))&SIUL2_IFEER0_IFEE8_MASK)
#define SIUL2_IFEER0_IFEE9_MASK                  0x200u
#define SIUL2_IFEER0_IFEE9_SHIFT                 9u
#define SIUL2_IFEER0_IFEE9_WIDTH                 1u
#define SIUL2_IFEER0_IFEE9(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE9_SHIFT))&SIUL2_IFEER0_IFEE9_MASK)
#define SIUL2_IFEER0_IFEE10_MASK                 0x400u
#define SIUL2_IFEER0_IFEE10_SHIFT                10u
#define SIUL2_IFEER0_IFEE10_WIDTH                1u
#define SIUL2_IFEER0_IFEE10(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE10_SHIFT))&SIUL2_IFEER0_IFEE10_MASK)
#define SIUL2_IFEER0_IFEE11_MASK                 0x800u
#define SIUL2_IFEER0_IFEE11_SHIFT                11u
#define SIUL2_IFEER0_IFEE11_WIDTH                1u
#define SIUL2_IFEER0_IFEE11(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE11_SHIFT))&SIUL2_IFEER0_IFEE11_MASK)
#define SIUL2_IFEER0_IFEE12_MASK                 0x1000u
#define SIUL2_IFEER0_IFEE12_SHIFT                12u
#define SIUL2_IFEER0_IFEE12_WIDTH                1u
#define SIUL2_IFEER0_IFEE12(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE12_SHIFT))&SIUL2_IFEER0_IFEE12_MASK)
#define SIUL2_IFEER0_IFEE13_MASK                 0x2000u
#define SIUL2_IFEER0_IFEE13_SHIFT                13u
#define SIUL2_IFEER0_IFEE13_WIDTH                1u
#define SIUL2_IFEER0_IFEE13(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE13_SHIFT))&SIUL2_IFEER0_IFEE13_MASK)
#define SIUL2_IFEER0_IFEE14_MASK                 0x4000u
#define SIUL2_IFEER0_IFEE14_SHIFT                14u
#define SIUL2_IFEER0_IFEE14_WIDTH                1u
#define SIUL2_IFEER0_IFEE14(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE14_SHIFT))&SIUL2_IFEER0_IFEE14_MASK)
#define SIUL2_IFEER0_IFEE15_MASK                 0x8000u
#define SIUL2_IFEER0_IFEE15_SHIFT                15u
#define SIUL2_IFEER0_IFEE15_WIDTH                1u
#define SIUL2_IFEER0_IFEE15(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE15_SHIFT))&SIUL2_IFEER0_IFEE15_MASK)
#define SIUL2_IFEER0_IFEE16_MASK                 0x10000u
#define SIUL2_IFEER0_IFEE16_SHIFT                16u
#define SIUL2_IFEER0_IFEE16_WIDTH                1u
#define SIUL2_IFEER0_IFEE16(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE16_SHIFT))&SIUL2_IFEER0_IFEE16_MASK)
#define SIUL2_IFEER0_IFEE17_MASK                 0x20000u
#define SIUL2_IFEER0_IFEE17_SHIFT                17u
#define SIUL2_IFEER0_IFEE17_WIDTH                1u
#define SIUL2_IFEER0_IFEE17(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE17_SHIFT))&SIUL2_IFEER0_IFEE17_MASK)
#define SIUL2_IFEER0_IFEE18_MASK                 0x40000u
#define SIUL2_IFEER0_IFEE18_SHIFT                18u
#define SIUL2_IFEER0_IFEE18_WIDTH                1u
#define SIUL2_IFEER0_IFEE18(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE18_SHIFT))&SIUL2_IFEER0_IFEE18_MASK)
#define SIUL2_IFEER0_IFEE19_MASK                 0x80000u
#define SIUL2_IFEER0_IFEE19_SHIFT                19u
#define SIUL2_IFEER0_IFEE19_WIDTH                1u
#define SIUL2_IFEER0_IFEE19(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE19_SHIFT))&SIUL2_IFEER0_IFEE19_MASK)
#define SIUL2_IFEER0_IFEE20_MASK                 0x100000u
#define SIUL2_IFEER0_IFEE20_SHIFT                20u
#define SIUL2_IFEER0_IFEE20_WIDTH                1u
#define SIUL2_IFEER0_IFEE20(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE20_SHIFT))&SIUL2_IFEER0_IFEE20_MASK)
#define SIUL2_IFEER0_IFEE21_MASK                 0x200000u
#define SIUL2_IFEER0_IFEE21_SHIFT                21u
#define SIUL2_IFEER0_IFEE21_WIDTH                1u
#define SIUL2_IFEER0_IFEE21(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE21_SHIFT))&SIUL2_IFEER0_IFEE21_MASK)
#define SIUL2_IFEER0_IFEE22_MASK                 0x400000u
#define SIUL2_IFEER0_IFEE22_SHIFT                22u
#define SIUL2_IFEER0_IFEE22_WIDTH                1u
#define SIUL2_IFEER0_IFEE22(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE22_SHIFT))&SIUL2_IFEER0_IFEE22_MASK)
#define SIUL2_IFEER0_IFEE23_MASK                 0x800000u
#define SIUL2_IFEER0_IFEE23_SHIFT                23u
#define SIUL2_IFEER0_IFEE23_WIDTH                1u
#define SIUL2_IFEER0_IFEE23(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE23_SHIFT))&SIUL2_IFEER0_IFEE23_MASK)
#define SIUL2_IFEER0_IFEE24_MASK                 0x1000000u
#define SIUL2_IFEER0_IFEE24_SHIFT                24u
#define SIUL2_IFEER0_IFEE24_WIDTH                1u
#define SIUL2_IFEER0_IFEE24(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE24_SHIFT))&SIUL2_IFEER0_IFEE24_MASK)
#define SIUL2_IFEER0_IFEE25_MASK                 0x2000000u
#define SIUL2_IFEER0_IFEE25_SHIFT                25u
#define SIUL2_IFEER0_IFEE25_WIDTH                1u
#define SIUL2_IFEER0_IFEE25(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE25_SHIFT))&SIUL2_IFEER0_IFEE25_MASK)
#define SIUL2_IFEER0_IFEE26_MASK                 0x4000000u
#define SIUL2_IFEER0_IFEE26_SHIFT                26u
#define SIUL2_IFEER0_IFEE26_WIDTH                1u
#define SIUL2_IFEER0_IFEE26(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE26_SHIFT))&SIUL2_IFEER0_IFEE26_MASK)
#define SIUL2_IFEER0_IFEE27_MASK                 0x8000000u
#define SIUL2_IFEER0_IFEE27_SHIFT                27u
#define SIUL2_IFEER0_IFEE27_WIDTH                1u
#define SIUL2_IFEER0_IFEE27(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE27_SHIFT))&SIUL2_IFEER0_IFEE27_MASK)
#define SIUL2_IFEER0_IFEE28_MASK                 0x10000000u
#define SIUL2_IFEER0_IFEE28_SHIFT                28u
#define SIUL2_IFEER0_IFEE28_WIDTH                1u
#define SIUL2_IFEER0_IFEE28(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE28_SHIFT))&SIUL2_IFEER0_IFEE28_MASK)
#define SIUL2_IFEER0_IFEE29_MASK                 0x20000000u
#define SIUL2_IFEER0_IFEE29_SHIFT                29u
#define SIUL2_IFEER0_IFEE29_WIDTH                1u
#define SIUL2_IFEER0_IFEE29(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE29_SHIFT))&SIUL2_IFEER0_IFEE29_MASK)
#define SIUL2_IFEER0_IFEE30_MASK                 0x40000000u
#define SIUL2_IFEER0_IFEE30_SHIFT                30u
#define SIUL2_IFEER0_IFEE30_WIDTH                1u
#define SIUL2_IFEER0_IFEE30(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE30_SHIFT))&SIUL2_IFEER0_IFEE30_MASK)
#define SIUL2_IFEER0_IFEE31_MASK                 0x80000000u
#define SIUL2_IFEER0_IFEE31_SHIFT                31u
#define SIUL2_IFEER0_IFEE31_WIDTH                1u
#define SIUL2_IFEER0_IFEE31(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE31_SHIFT))&SIUL2_IFEER0_IFEE31_MASK)
/* IFER0 Bit Fields */
#define SIUL2_IFER0_IFE0_MASK                    0x1u
#define SIUL2_IFER0_IFE0_SHIFT                   0u
#define SIUL2_IFER0_IFE0_WIDTH                   1u
#define SIUL2_IFER0_IFE0(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE0_SHIFT))&SIUL2_IFER0_IFE0_MASK)
#define SIUL2_IFER0_IFE1_MASK                    0x2u
#define SIUL2_IFER0_IFE1_SHIFT                   1u
#define SIUL2_IFER0_IFE1_WIDTH                   1u
#define SIUL2_IFER0_IFE1(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE1_SHIFT))&SIUL2_IFER0_IFE1_MASK)
#define SIUL2_IFER0_IFE2_MASK                    0x4u
#define SIUL2_IFER0_IFE2_SHIFT                   2u
#define SIUL2_IFER0_IFE2_WIDTH                   1u
#define SIUL2_IFER0_IFE2(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE2_SHIFT))&SIUL2_IFER0_IFE2_MASK)
#define SIUL2_IFER0_IFE3_MASK                    0x8u
#define SIUL2_IFER0_IFE3_SHIFT                   3u
#define SIUL2_IFER0_IFE3_WIDTH                   1u
#define SIUL2_IFER0_IFE3(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE3_SHIFT))&SIUL2_IFER0_IFE3_MASK)
#define SIUL2_IFER0_IFE4_MASK                    0x10u
#define SIUL2_IFER0_IFE4_SHIFT                   4u
#define SIUL2_IFER0_IFE4_WIDTH                   1u
#define SIUL2_IFER0_IFE4(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE4_SHIFT))&SIUL2_IFER0_IFE4_MASK)
#define SIUL2_IFER0_IFE5_MASK                    0x20u
#define SIUL2_IFER0_IFE5_SHIFT                   5u
#define SIUL2_IFER0_IFE5_WIDTH                   1u
#define SIUL2_IFER0_IFE5(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE5_SHIFT))&SIUL2_IFER0_IFE5_MASK)
#define SIUL2_IFER0_IFE6_MASK                    0x40u
#define SIUL2_IFER0_IFE6_SHIFT                   6u
#define SIUL2_IFER0_IFE6_WIDTH                   1u
#define SIUL2_IFER0_IFE6(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE6_SHIFT))&SIUL2_IFER0_IFE6_MASK)
#define SIUL2_IFER0_IFE7_MASK                    0x80u
#define SIUL2_IFER0_IFE7_SHIFT                   7u
#define SIUL2_IFER0_IFE7_WIDTH                   1u
#define SIUL2_IFER0_IFE7(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE7_SHIFT))&SIUL2_IFER0_IFE7_MASK)
#define SIUL2_IFER0_IFE8_MASK                    0x100u
#define SIUL2_IFER0_IFE8_SHIFT                   8u
#define SIUL2_IFER0_IFE8_WIDTH                   1u
#define SIUL2_IFER0_IFE8(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE8_SHIFT))&SIUL2_IFER0_IFE8_MASK)
#define SIUL2_IFER0_IFE9_MASK                    0x200u
#define SIUL2_IFER0_IFE9_SHIFT                   9u
#define SIUL2_IFER0_IFE9_WIDTH                   1u
#define SIUL2_IFER0_IFE9(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE9_SHIFT))&SIUL2_IFER0_IFE9_MASK)
#define SIUL2_IFER0_IFE10_MASK                   0x400u
#define SIUL2_IFER0_IFE10_SHIFT                  10u
#define SIUL2_IFER0_IFE10_WIDTH                  1u
#define SIUL2_IFER0_IFE10(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE10_SHIFT))&SIUL2_IFER0_IFE10_MASK)
#define SIUL2_IFER0_IFE11_MASK                   0x800u
#define SIUL2_IFER0_IFE11_SHIFT                  11u
#define SIUL2_IFER0_IFE11_WIDTH                  1u
#define SIUL2_IFER0_IFE11(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE11_SHIFT))&SIUL2_IFER0_IFE11_MASK)
#define SIUL2_IFER0_IFE12_MASK                   0x1000u
#define SIUL2_IFER0_IFE12_SHIFT                  12u
#define SIUL2_IFER0_IFE12_WIDTH                  1u
#define SIUL2_IFER0_IFE12(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE12_SHIFT))&SIUL2_IFER0_IFE12_MASK)
#define SIUL2_IFER0_IFE13_MASK                   0x2000u
#define SIUL2_IFER0_IFE13_SHIFT                  13u
#define SIUL2_IFER0_IFE13_WIDTH                  1u
#define SIUL2_IFER0_IFE13(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE13_SHIFT))&SIUL2_IFER0_IFE13_MASK)
#define SIUL2_IFER0_IFE14_MASK                   0x4000u
#define SIUL2_IFER0_IFE14_SHIFT                  14u
#define SIUL2_IFER0_IFE14_WIDTH                  1u
#define SIUL2_IFER0_IFE14(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE14_SHIFT))&SIUL2_IFER0_IFE14_MASK)
#define SIUL2_IFER0_IFE15_MASK                   0x8000u
#define SIUL2_IFER0_IFE15_SHIFT                  15u
#define SIUL2_IFER0_IFE15_WIDTH                  1u
#define SIUL2_IFER0_IFE15(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE15_SHIFT))&SIUL2_IFER0_IFE15_MASK)
#define SIUL2_IFER0_IFE16_MASK                   0x10000u
#define SIUL2_IFER0_IFE16_SHIFT                  16u
#define SIUL2_IFER0_IFE16_WIDTH                  1u
#define SIUL2_IFER0_IFE16(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE16_SHIFT))&SIUL2_IFER0_IFE16_MASK)
#define SIUL2_IFER0_IFE17_MASK                   0x20000u
#define SIUL2_IFER0_IFE17_SHIFT                  17u
#define SIUL2_IFER0_IFE17_WIDTH                  1u
#define SIUL2_IFER0_IFE17(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE17_SHIFT))&SIUL2_IFER0_IFE17_MASK)
#define SIUL2_IFER0_IFE18_MASK                   0x40000u
#define SIUL2_IFER0_IFE18_SHIFT                  18u
#define SIUL2_IFER0_IFE18_WIDTH                  1u
#define SIUL2_IFER0_IFE18(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE18_SHIFT))&SIUL2_IFER0_IFE18_MASK)
#define SIUL2_IFER0_IFE19_MASK                   0x80000u
#define SIUL2_IFER0_IFE19_SHIFT                  19u
#define SIUL2_IFER0_IFE19_WIDTH                  1u
#define SIUL2_IFER0_IFE19(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE19_SHIFT))&SIUL2_IFER0_IFE19_MASK)
#define SIUL2_IFER0_IFE20_MASK                   0x100000u
#define SIUL2_IFER0_IFE20_SHIFT                  20u
#define SIUL2_IFER0_IFE20_WIDTH                  1u
#define SIUL2_IFER0_IFE20(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE20_SHIFT))&SIUL2_IFER0_IFE20_MASK)
#define SIUL2_IFER0_IFE21_MASK                   0x200000u
#define SIUL2_IFER0_IFE21_SHIFT                  21u
#define SIUL2_IFER0_IFE21_WIDTH                  1u
#define SIUL2_IFER0_IFE21(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE21_SHIFT))&SIUL2_IFER0_IFE21_MASK)
#define SIUL2_IFER0_IFE22_MASK                   0x400000u
#define SIUL2_IFER0_IFE22_SHIFT                  22u
#define SIUL2_IFER0_IFE22_WIDTH                  1u
#define SIUL2_IFER0_IFE22(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE22_SHIFT))&SIUL2_IFER0_IFE22_MASK)
#define SIUL2_IFER0_IFE23_MASK                   0x800000u
#define SIUL2_IFER0_IFE23_SHIFT                  23u
#define SIUL2_IFER0_IFE23_WIDTH                  1u
#define SIUL2_IFER0_IFE23(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE23_SHIFT))&SIUL2_IFER0_IFE23_MASK)
#define SIUL2_IFER0_IFE24_MASK                   0x1000000u
#define SIUL2_IFER0_IFE24_SHIFT                  24u
#define SIUL2_IFER0_IFE24_WIDTH                  1u
#define SIUL2_IFER0_IFE24(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE24_SHIFT))&SIUL2_IFER0_IFE24_MASK)
#define SIUL2_IFER0_IFE25_MASK                   0x2000000u
#define SIUL2_IFER0_IFE25_SHIFT                  25u
#define SIUL2_IFER0_IFE25_WIDTH                  1u
#define SIUL2_IFER0_IFE25(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE25_SHIFT))&SIUL2_IFER0_IFE25_MASK)
#define SIUL2_IFER0_IFE26_MASK                   0x4000000u
#define SIUL2_IFER0_IFE26_SHIFT                  26u
#define SIUL2_IFER0_IFE26_WIDTH                  1u
#define SIUL2_IFER0_IFE26(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE26_SHIFT))&SIUL2_IFER0_IFE26_MASK)
#define SIUL2_IFER0_IFE27_MASK                   0x8000000u
#define SIUL2_IFER0_IFE27_SHIFT                  27u
#define SIUL2_IFER0_IFE27_WIDTH                  1u
#define SIUL2_IFER0_IFE27(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE27_SHIFT))&SIUL2_IFER0_IFE27_MASK)
#define SIUL2_IFER0_IFE28_MASK                   0x10000000u
#define SIUL2_IFER0_IFE28_SHIFT                  28u
#define SIUL2_IFER0_IFE28_WIDTH                  1u
#define SIUL2_IFER0_IFE28(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE28_SHIFT))&SIUL2_IFER0_IFE28_MASK)
#define SIUL2_IFER0_IFE29_MASK                   0x20000000u
#define SIUL2_IFER0_IFE29_SHIFT                  29u
#define SIUL2_IFER0_IFE29_WIDTH                  1u
#define SIUL2_IFER0_IFE29(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE29_SHIFT))&SIUL2_IFER0_IFE29_MASK)
#define SIUL2_IFER0_IFE30_MASK                   0x40000000u
#define SIUL2_IFER0_IFE30_SHIFT                  30u
#define SIUL2_IFER0_IFE30_WIDTH                  1u
#define SIUL2_IFER0_IFE30(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE30_SHIFT))&SIUL2_IFER0_IFE30_MASK)
#define SIUL2_IFER0_IFE31_MASK                   0x80000000u
#define SIUL2_IFER0_IFE31_SHIFT                  31u
#define SIUL2_IFER0_IFE31_WIDTH                  1u
#define SIUL2_IFER0_IFE31(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE31_SHIFT))&SIUL2_IFER0_IFE31_MASK)
/* IFMCR Bit Fields */
#define SIUL2_IFMCR_MAXCNT_MASK                  0xFu
#define SIUL2_IFMCR_MAXCNT_SHIFT                 0u
#define SIUL2_IFMCR_MAXCNT_WIDTH                 4u
#define SIUL2_IFMCR_MAXCNT(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFMCR_MAXCNT_SHIFT))&SIUL2_IFMCR_MAXCNT_MASK)
/* IFCPR Bit Fields */
#define SIUL2_IFCPR_IFCP_MASK                    0xFu
#define SIUL2_IFCPR_IFCP_SHIFT                   0u
#define SIUL2_IFCPR_IFCP_WIDTH                   4u
#define SIUL2_IFCPR_IFCP(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFCPR_IFCP_SHIFT))&SIUL2_IFCPR_IFCP_MASK)
/* MSCR Bit Fields */
#define SIUL2_MSCR_SSS_MASK                      0xFu
#define SIUL2_MSCR_SSS_SHIFT                     0u
#define SIUL2_MSCR_SSS_WIDTH                     4u
#define SIUL2_MSCR_SSS(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_SSS_SHIFT))&SIUL2_MSCR_SSS_MASK)
#define SIUL2_MSCR_INV_MASK                      0x8000u
#define SIUL2_MSCR_INV_SHIFT                     15u
#define SIUL2_MSCR_INV_WIDTH                     1u
#define SIUL2_MSCR_INV(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_INV_SHIFT))&SIUL2_MSCR_INV_MASK)
#define SIUL2_MSCR_PUE_MASK                      0x10000u
#define SIUL2_MSCR_PUE_SHIFT                     16u
#define SIUL2_MSCR_PUE_WIDTH                     1u
#define SIUL2_MSCR_PUE(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_PUE_SHIFT))&SIUL2_MSCR_PUE_MASK)
#define SIUL2_MSCR_PUS_MASK                      0x20000u
#define SIUL2_MSCR_PUS_SHIFT                     17u
#define SIUL2_MSCR_PUS_WIDTH                     1u
#define SIUL2_MSCR_PUS(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_PUS_SHIFT))&SIUL2_MSCR_PUS_MASK)
#define SIUL2_MSCR_HYS_MASK                      0x40000u
#define SIUL2_MSCR_HYS_SHIFT                     18u
#define SIUL2_MSCR_HYS_WIDTH                     1u
#define SIUL2_MSCR_HYS(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_HYS_SHIFT))&SIUL2_MSCR_HYS_MASK)
#define SIUL2_MSCR_IBE_MASK                      0x80000u
#define SIUL2_MSCR_IBE_SHIFT                     19u
#define SIUL2_MSCR_IBE_WIDTH                     1u
#define SIUL2_MSCR_IBE(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_IBE_SHIFT))&SIUL2_MSCR_IBE_MASK)
#define SIUL2_MSCR_APC_MASK                      0x400000u
#define SIUL2_MSCR_APC_SHIFT                     22u
#define SIUL2_MSCR_APC_WIDTH                     1u
#define SIUL2_MSCR_APC(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_APC_SHIFT))&SIUL2_MSCR_APC_MASK)
#define SIUL2_MSCR_SMC_MASK                      0x800000u
#define SIUL2_MSCR_SMC_SHIFT                     23u
#define SIUL2_MSCR_SMC_WIDTH                     1u
#define SIUL2_MSCR_SMC(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_SMC_SHIFT))&SIUL2_MSCR_SMC_MASK)
#define SIUL2_MSCR_ODE_MASK                      0x1000000u
#define SIUL2_MSCR_ODE_SHIFT                     24u
#define SIUL2_MSCR_ODE_WIDTH                     1u
#define SIUL2_MSCR_ODE(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_ODE_SHIFT))&SIUL2_MSCR_ODE_MASK)
#define SIUL2_MSCR_OBE_MASK                      0x2000000u
#define SIUL2_MSCR_OBE_SHIFT                     25u
#define SIUL2_MSCR_OBE_WIDTH                     1u
#define SIUL2_MSCR_OBE(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_OBE_SHIFT))&SIUL2_MSCR_OBE_MASK)
#define SIUL2_MSCR_SRC_MASK                      0x30000000u
#define SIUL2_MSCR_SRC_SHIFT                     28u
#define SIUL2_MSCR_SRC_WIDTH                     2u
#define SIUL2_MSCR_SRC(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_SRC_SHIFT))&SIUL2_MSCR_SRC_MASK)
/* IMCR Bit Fields */
#define SIUL2_IMCR_SSS_MASK                      0xFu
#define SIUL2_IMCR_SSS_SHIFT                     0u
#define SIUL2_IMCR_SSS_WIDTH                     4u
#define SIUL2_IMCR_SSS(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_IMCR_SSS_SHIFT))&SIUL2_IMCR_SSS_MASK)
#define SIUL2_IMCR_INV_MASK                      0x8000u
#define SIUL2_IMCR_INV_SHIFT                     15u
#define SIUL2_IMCR_INV_WIDTH                     1u
#define SIUL2_IMCR_INV(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_IMCR_INV_SHIFT))&SIUL2_IMCR_INV_MASK)
/* GPDO Bit Fields */
#define SIUL2_GPDO_PDO_4n3_MASK                  0x1u
#define SIUL2_GPDO_PDO_4n3_SHIFT                 0u
#define SIUL2_GPDO_PDO_4n3_WIDTH                 1u
#define SIUL2_GPDO_PDO_4n3(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDO_PDO_4n3_SHIFT))&SIUL2_GPDO_PDO_4n3_MASK)
#define SIUL2_GPDO_PDO_4n2_MASK                  0x100u
#define SIUL2_GPDO_PDO_4n2_SHIFT                 8u
#define SIUL2_GPDO_PDO_4n2_WIDTH                 1u
#define SIUL2_GPDO_PDO_4n2(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDO_PDO_4n2_SHIFT))&SIUL2_GPDO_PDO_4n2_MASK)
#define SIUL2_GPDO_PDO_4n1_MASK                  0x10000u
#define SIUL2_GPDO_PDO_4n1_SHIFT                 16u
#define SIUL2_GPDO_PDO_4n1_WIDTH                 1u
#define SIUL2_GPDO_PDO_4n1(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDO_PDO_4n1_SHIFT))&SIUL2_GPDO_PDO_4n1_MASK)
#define SIUL2_GPDO_PDO_4n_MASK                   0x1000000u
#define SIUL2_GPDO_PDO_4n_SHIFT                  24u
#define SIUL2_GPDO_PDO_4n_WIDTH                  1u
#define SIUL2_GPDO_PDO_4n(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDO_PDO_4n_SHIFT))&SIUL2_GPDO_PDO_4n_MASK)
/* GPDI Bit Fields */
#define SIUL2_GPDI_PDI_4n3_MASK                  0x1u
#define SIUL2_GPDI_PDI_4n3_SHIFT                 0u
#define SIUL2_GPDI_PDI_4n3_WIDTH                 1u
#define SIUL2_GPDI_PDI_4n3(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDI_PDI_4n3_SHIFT))&SIUL2_GPDI_PDI_4n3_MASK)
#define SIUL2_GPDI_PDI_4n2_MASK                  0x100u
#define SIUL2_GPDI_PDI_4n2_SHIFT                 8u
#define SIUL2_GPDI_PDI_4n2_WIDTH                 1u
#define SIUL2_GPDI_PDI_4n2(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDI_PDI_4n2_SHIFT))&SIUL2_GPDI_PDI_4n2_MASK)
#define SIUL2_GPDI_PDI_4n1_MASK                  0x10000u
#define SIUL2_GPDI_PDI_4n1_SHIFT                 16u
#define SIUL2_GPDI_PDI_4n1_WIDTH                 1u
#define SIUL2_GPDI_PDI_4n1(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDI_PDI_4n1_SHIFT))&SIUL2_GPDI_PDI_4n1_MASK)
#define SIUL2_GPDI_PDI_4n_MASK                   0x1000000u
#define SIUL2_GPDI_PDI_4n_SHIFT                  24u
#define SIUL2_GPDI_PDI_4n_WIDTH                  1u
#define SIUL2_GPDI_PDI_4n(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDI_PDI_4n_SHIFT))&SIUL2_GPDI_PDI_4n_MASK)
/* PGPDO Bit Fields */
#define SIUL2_PGPDO_PPDO_MASK                    0xFFFFu
#define SIUL2_PGPDO_PPDO_SHIFT                   0u
#define SIUL2_PGPDO_PPDO_WIDTH                   16u
#define SIUL2_PGPDO_PPDO(x)                      (((uint16_t)(((uint16_t)(x))<<SIUL2_PGPDO_PPDO_SHIFT))&SIUL2_PGPDO_PPDO_MASK)
/* PGPDI Bit Fields */
#define SIUL2_PGPDI_PPDI_MASK                    0xFFFFu
#define SIUL2_PGPDI_PPDI_SHIFT                   0u
#define SIUL2_PGPDI_PPDI_WIDTH                   16u
#define SIUL2_PGPDI_PPDI(x)                      (((uint16_t)(((uint16_t)(x))<<SIUL2_PGPDI_PPDI_SHIFT))&SIUL2_PGPDI_PPDI_MASK)
/* MPGPDO Bit Fields */
#define SIUL2_MPGPDO_MPPDO_MASK                  0xFFFFu
#define SIUL2_MPGPDO_MPPDO_SHIFT                 0u
#define SIUL2_MPGPDO_MPPDO_WIDTH                 16u
#define SIUL2_MPGPDO_MPPDO(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_MPGPDO_MPPDO_SHIFT))&SIUL2_MPGPDO_MPPDO_MASK)
#define SIUL2_MPGPDO_MASK_MASK                   0xFFFF0000u
#define SIUL2_MPGPDO_MASK_SHIFT                  16u
#define SIUL2_MPGPDO_MASK_WIDTH                  16u
#define SIUL2_MPGPDO_MASK(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_MPGPDO_MASK_SHIFT))&SIUL2_MPGPDO_MASK_MASK)

/*!
 * @}
 */ /* end of group SIUL2_Register_Masks */


/*!
 * @}
 */ /* end of group SIUL2_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SMPU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SMPU_Peripheral_Access_Layer SMPU Peripheral Access Layer
 * @{
 */


/** SMPU - Size of Registers Arrays */
#define SMPU_ERROR_COUNT                         16u
#define SMPU_RGD_COUNT                           16u

/** SMPU - Register Layout Typedef */
typedef struct {
  __IO uint32_t CESR0;                             /**< Control/Error Status Register 0, offset: 0x0 */
  __I  uint32_t CESR1;                             /**< Control/Error Status Register 1, offset: 0x4 */
       uint8_t RESERVED_0[248];
  struct {                                         /* offset: 0x100, array step: 0x8 */
    __I  uint32_t EAR;                               /**< Error Address Register, Bus Master n, array offset: 0x100, array step: 0x8 */
    __I  uint32_t EDR;                               /**< Error Detail Register, Bus Master n, array offset: 0x104, array step: 0x8 */
  } ERROR[SMPU_ERROR_COUNT];
       uint8_t RESERVED_1[640];
  struct {                                         /* offset: 0x400, array step: 0x10 */
    __IO uint32_t WORD0;                             /**< Region Descriptor n, Word 0, array offset: 0x400, array step: 0x10 */
    __IO uint32_t WORD1;                             /**< Region Descriptor n, Word 1, array offset: 0x404, array step: 0x10 */
    __IO uint32_t WORD2;                             /**< Region Descriptor n, Word 2, array offset: 0x408, array step: 0x10 */
    __IO uint32_t WORD3;                             /**< Region Descriptor n, Word 3, array offset: 0x40C, array step: 0x10 */
  } RGD[SMPU_RGD_COUNT];
} SMPU_Type, *SMPU_MemMapPtr;

 /** Number of instances of the SMPU module. */
#define SMPU_INSTANCE_COUNT                      (1u)


/* SMPU - Peripheral instance base addresses */
/** Peripheral SMPU_0 base address */
#define SMPU_0_BASE                              (0xFC010000u)
/** Peripheral SMPU_0 base pointer */
#define SMPU_0                                   ((SMPU_Type *)SMPU_0_BASE)
/** Array initializer of SMPU peripheral base addresses */
#define SMPU_BASE_ADDRS                          { SMPU_0_BASE }
/** Array initializer of SMPU peripheral base pointers */
#define SMPU_BASE_PTRS                           { SMPU_0 }

/* ----------------------------------------------------------------------------
   -- SMPU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SMPU_Register_Masks SMPU Register Masks
 * @{
 */

/* CESR0 Bit Fields */
#define SMPU_CESR0_GVLD_MASK                     0x1u
#define SMPU_CESR0_GVLD_SHIFT                    0u
#define SMPU_CESR0_GVLD_WIDTH                    1u
#define SMPU_CESR0_GVLD(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_CESR0_GVLD_SHIFT))&SMPU_CESR0_GVLD_MASK)
#define SMPU_CESR0_HRL_MASK                      0xEu
#define SMPU_CESR0_HRL_SHIFT                     1u
#define SMPU_CESR0_HRL_WIDTH                     3u
#define SMPU_CESR0_HRL(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_CESR0_HRL_SHIFT))&SMPU_CESR0_HRL_MASK)
#define SMPU_CESR0_MERR_MASK                     0xFFFF0000u
#define SMPU_CESR0_MERR_SHIFT                    16u
#define SMPU_CESR0_MERR_WIDTH                    16u
#define SMPU_CESR0_MERR(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_CESR0_MERR_SHIFT))&SMPU_CESR0_MERR_MASK)
/* CESR1 Bit Fields */
#define SMPU_CESR1_NRGD_MASK                     0xFu
#define SMPU_CESR1_NRGD_SHIFT                    0u
#define SMPU_CESR1_NRGD_WIDTH                    4u
#define SMPU_CESR1_NRGD(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_CESR1_NRGD_SHIFT))&SMPU_CESR1_NRGD_MASK)
#define SMPU_CESR1_MEOVR_MASK                    0xFFFF0000u
#define SMPU_CESR1_MEOVR_SHIFT                   16u
#define SMPU_CESR1_MEOVR_WIDTH                   16u
#define SMPU_CESR1_MEOVR(x)                      (((uint32_t)(((uint32_t)(x))<<SMPU_CESR1_MEOVR_SHIFT))&SMPU_CESR1_MEOVR_MASK)
/* EAR Bit Fields */
#define SMPU_EAR_EADDR_MASK                      0xFFFFFFFFu
#define SMPU_EAR_EADDR_SHIFT                     0u
#define SMPU_EAR_EADDR_WIDTH                     32u
#define SMPU_EAR_EADDR(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_EAR_EADDR_SHIFT))&SMPU_EAR_EADDR_MASK)
/* EDR Bit Fields */
#define SMPU_EDR_EMN_MASK                        0xFu
#define SMPU_EDR_EMN_SHIFT                       0u
#define SMPU_EDR_EMN_WIDTH                       4u
#define SMPU_EDR_EMN(x)                          (((uint32_t)(((uint32_t)(x))<<SMPU_EDR_EMN_SHIFT))&SMPU_EDR_EMN_MASK)
#define SMPU_EDR_ERW_MASK                        0x10u
#define SMPU_EDR_ERW_SHIFT                       4u
#define SMPU_EDR_ERW_WIDTH                       1u
#define SMPU_EDR_ERW(x)                          (((uint32_t)(((uint32_t)(x))<<SMPU_EDR_ERW_SHIFT))&SMPU_EDR_ERW_MASK)
#define SMPU_EDR_EATTR_MASK                      0x60u
#define SMPU_EDR_EATTR_SHIFT                     5u
#define SMPU_EDR_EATTR_WIDTH                     2u
#define SMPU_EDR_EATTR(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_EDR_EATTR_SHIFT))&SMPU_EDR_EATTR_MASK)
#define SMPU_EDR_EACD_MASK                       0xFFFFFF00u
#define SMPU_EDR_EACD_SHIFT                      8u
#define SMPU_EDR_EACD_WIDTH                      24u
#define SMPU_EDR_EACD(x)                         (((uint32_t)(((uint32_t)(x))<<SMPU_EDR_EACD_SHIFT))&SMPU_EDR_EACD_MASK)
/* WORD0 Bit Fields */
#define SMPU_WORD0_SRTADDR_MASK                  0xFFFFFFFFu
#define SMPU_WORD0_SRTADDR_SHIFT                 0u
#define SMPU_WORD0_SRTADDR_WIDTH                 32u
#define SMPU_WORD0_SRTADDR(x)                    (((uint32_t)(((uint32_t)(x))<<SMPU_WORD0_SRTADDR_SHIFT))&SMPU_WORD0_SRTADDR_MASK)
/* WORD1 Bit Fields */
#define SMPU_WORD1_ENDADDR_MASK                  0xFFFFFFFFu
#define SMPU_WORD1_ENDADDR_SHIFT                 0u
#define SMPU_WORD1_ENDADDR_WIDTH                 32u
#define SMPU_WORD1_ENDADDR(x)                    (((uint32_t)(((uint32_t)(x))<<SMPU_WORD1_ENDADDR_SHIFT))&SMPU_WORD1_ENDADDR_MASK)
/* WORD2 Bit Fields */
#define SMPU_WORD2_M15P_MASK                     0x3u
#define SMPU_WORD2_M15P_SHIFT                    0u
#define SMPU_WORD2_M15P_WIDTH                    2u
#define SMPU_WORD2_M15P(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M15P_SHIFT))&SMPU_WORD2_M15P_MASK)
#define SMPU_WORD2_M14P_MASK                     0xCu
#define SMPU_WORD2_M14P_SHIFT                    2u
#define SMPU_WORD2_M14P_WIDTH                    2u
#define SMPU_WORD2_M14P(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M14P_SHIFT))&SMPU_WORD2_M14P_MASK)
#define SMPU_WORD2_M13P_MASK                     0x30u
#define SMPU_WORD2_M13P_SHIFT                    4u
#define SMPU_WORD2_M13P_WIDTH                    2u
#define SMPU_WORD2_M13P(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M13P_SHIFT))&SMPU_WORD2_M13P_MASK)
#define SMPU_WORD2_M12P_MASK                     0xC0u
#define SMPU_WORD2_M12P_SHIFT                    6u
#define SMPU_WORD2_M12P_WIDTH                    2u
#define SMPU_WORD2_M12P(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M12P_SHIFT))&SMPU_WORD2_M12P_MASK)
#define SMPU_WORD2_M11P_MASK                     0x300u
#define SMPU_WORD2_M11P_SHIFT                    8u
#define SMPU_WORD2_M11P_WIDTH                    2u
#define SMPU_WORD2_M11P(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M11P_SHIFT))&SMPU_WORD2_M11P_MASK)
#define SMPU_WORD2_M10P_MASK                     0xC00u
#define SMPU_WORD2_M10P_SHIFT                    10u
#define SMPU_WORD2_M10P_WIDTH                    2u
#define SMPU_WORD2_M10P(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M10P_SHIFT))&SMPU_WORD2_M10P_MASK)
#define SMPU_WORD2_M9P_MASK                      0x3000u
#define SMPU_WORD2_M9P_SHIFT                     12u
#define SMPU_WORD2_M9P_WIDTH                     2u
#define SMPU_WORD2_M9P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M9P_SHIFT))&SMPU_WORD2_M9P_MASK)
#define SMPU_WORD2_M8P_MASK                      0xC000u
#define SMPU_WORD2_M8P_SHIFT                     14u
#define SMPU_WORD2_M8P_WIDTH                     2u
#define SMPU_WORD2_M8P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M8P_SHIFT))&SMPU_WORD2_M8P_MASK)
#define SMPU_WORD2_M7P_MASK                      0x30000u
#define SMPU_WORD2_M7P_SHIFT                     16u
#define SMPU_WORD2_M7P_WIDTH                     2u
#define SMPU_WORD2_M7P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M7P_SHIFT))&SMPU_WORD2_M7P_MASK)
#define SMPU_WORD2_M6P_MASK                      0xC0000u
#define SMPU_WORD2_M6P_SHIFT                     18u
#define SMPU_WORD2_M6P_WIDTH                     2u
#define SMPU_WORD2_M6P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M6P_SHIFT))&SMPU_WORD2_M6P_MASK)
#define SMPU_WORD2_M5P_MASK                      0x300000u
#define SMPU_WORD2_M5P_SHIFT                     20u
#define SMPU_WORD2_M5P_WIDTH                     2u
#define SMPU_WORD2_M5P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M5P_SHIFT))&SMPU_WORD2_M5P_MASK)
#define SMPU_WORD2_M4P_MASK                      0xC00000u
#define SMPU_WORD2_M4P_SHIFT                     22u
#define SMPU_WORD2_M4P_WIDTH                     2u
#define SMPU_WORD2_M4P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M4P_SHIFT))&SMPU_WORD2_M4P_MASK)
#define SMPU_WORD2_M3P_MASK                      0x3000000u
#define SMPU_WORD2_M3P_SHIFT                     24u
#define SMPU_WORD2_M3P_WIDTH                     2u
#define SMPU_WORD2_M3P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M3P_SHIFT))&SMPU_WORD2_M3P_MASK)
#define SMPU_WORD2_M2P_MASK                      0xC000000u
#define SMPU_WORD2_M2P_SHIFT                     26u
#define SMPU_WORD2_M2P_WIDTH                     2u
#define SMPU_WORD2_M2P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M2P_SHIFT))&SMPU_WORD2_M2P_MASK)
#define SMPU_WORD2_M1P_MASK                      0x30000000u
#define SMPU_WORD2_M1P_SHIFT                     28u
#define SMPU_WORD2_M1P_WIDTH                     2u
#define SMPU_WORD2_M1P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M1P_SHIFT))&SMPU_WORD2_M1P_MASK)
#define SMPU_WORD2_M0P_MASK                      0xC0000000u
#define SMPU_WORD2_M0P_SHIFT                     30u
#define SMPU_WORD2_M0P_WIDTH                     2u
#define SMPU_WORD2_M0P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M0P_SHIFT))&SMPU_WORD2_M0P_MASK)
/* WORD3 Bit Fields */
#define SMPU_WORD3_VLD_MASK                      0x1u
#define SMPU_WORD3_VLD_SHIFT                     0u
#define SMPU_WORD3_VLD_WIDTH                     1u
#define SMPU_WORD3_VLD(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD3_VLD_SHIFT))&SMPU_WORD3_VLD_MASK)
#define SMPU_WORD3_CI_MASK                       0x2u
#define SMPU_WORD3_CI_SHIFT                      1u
#define SMPU_WORD3_CI_WIDTH                      1u
#define SMPU_WORD3_CI(x)                         (((uint32_t)(((uint32_t)(x))<<SMPU_WORD3_CI_SHIFT))&SMPU_WORD3_CI_MASK)
#define SMPU_WORD3_RO_MASK                       0x8u
#define SMPU_WORD3_RO_SHIFT                      3u
#define SMPU_WORD3_RO_WIDTH                      1u
#define SMPU_WORD3_RO(x)                         (((uint32_t)(((uint32_t)(x))<<SMPU_WORD3_RO_SHIFT))&SMPU_WORD3_RO_MASK)

/*!
 * @}
 */ /* end of group SMPU_Register_Masks */


/*!
 * @}
 */ /* end of group SMPU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SPI Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SPI_Peripheral_Access_Layer SPI Peripheral Access Layer
 * @{
 */


/** SPI - Size of Registers Arrays */
#define SPI_CTAR_COUNT                           4u
#define SPI_CTAR_SLAVE_COUNT                     1u
#define SPI_TXFR_COUNT                           5u
#define SPI_RXFR_COUNT                           5u

/** SPI - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< Module Configuration Register, offset: 0x0 */
       uint8_t RESERVED_0[4];
  __IO uint32_t TCR;                               /**< Transfer Count Register, offset: 0x8 */
  union {                                          /* offset: 0xC */
    __IO uint32_t CTAR[SPI_CTAR_COUNT];              /**< Clock and Transfer Attributes Register (In Master Mode), array offset: 0xC, array step: 0x4 */
    __IO uint32_t CTAR_SLAVE[SPI_CTAR_SLAVE_COUNT];  /**< Clock and Transfer Attributes Register (In Slave Mode), array offset: 0xC, array step: 0x4 */
  } MODE;
       uint8_t RESERVED_1[16];
  __IO uint32_t SR;                                /**< Status Register, offset: 0x2C */
  __IO uint32_t RSER;                              /**< DMA/Interrupt Request Select and Enable Register, offset: 0x30 */
  union {                                          /* offset: 0x34 */
    struct {                                         /* offset: 0x34 */
      __IO uint16_t CMD;                               /**< SPI_2_PUSHR_FIFO_CMD register...SPI_1_PUSHR_FIFO_CMD register., offset: 0x34 */
      __IO uint16_t TX;                                /**< SPI_2_PUSHR_FIFO_TX register...SPI_1_PUSHR_FIFO_TX register., offset: 0x36 */
    } FIFO;
    __IO uint32_t PUSHR;                             /**< PUSH TX FIFO Register In Master Mode, offset: 0x34 */
    __IO uint32_t SLAVE;                             /**< PUSH TX FIFO Register In Slave Mode, offset: 0x34 */
  } PUSHR;
  __I  uint32_t POPR;                              /**< POP RX FIFO Register, offset: 0x38 */
  __I  uint32_t TXFR[SPI_TXFR_COUNT];              /**< Transmit FIFO Registers, array offset: 0x3C, array step: 0x4 */
       uint8_t RESERVED_2[44];
  __I  uint32_t RXFR[SPI_RXFR_COUNT];              /**< Receive FIFO Registers, array offset: 0x7C, array step: 0x4 */
} SPI_Type, *SPI_MemMapPtr;

 /** Number of instances of the SPI module. */
#define SPI_INSTANCE_COUNT                       (4u)


/* SPI - Peripheral instance base addresses */
/** Peripheral SPI_0 base address */
#define SPI_0_BASE                               (0xFFE70000u)
/** Peripheral SPI_0 base pointer */
#define SPI_0                                    ((SPI_Type *)SPI_0_BASE)
/** Peripheral SPI_1 base address */
#define SPI_1_BASE                               (0xFFE74000u)
/** Peripheral SPI_1 base pointer */
#define SPI_1                                    ((SPI_Type *)SPI_1_BASE)
/** Peripheral SPI_2 base address */
#define SPI_2_BASE                               (0xFBE70000u)
/** Peripheral SPI_2 base pointer */
#define SPI_2                                    ((SPI_Type *)SPI_2_BASE)
/** Peripheral SPI_3 base address */
#define SPI_3_BASE                               (0xFBE74000u)
/** Peripheral SPI_3 base pointer */
#define SPI_3                                    ((SPI_Type *)SPI_3_BASE)
/** Array initializer of SPI peripheral base addresses */
#define SPI_BASE_ADDRS                           { SPI_0_BASE, SPI_1_BASE, SPI_2_BASE, SPI_3_BASE }
/** Array initializer of SPI peripheral base pointers */
#define SPI_BASE_PTRS                            { SPI_0, SPI_1, SPI_2, SPI_3 }

/* ----------------------------------------------------------------------------
   -- SPI Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SPI_Register_Masks SPI Register Masks
 * @{
 */

/* MCR Bit Fields */
#define SPI_MCR_HALT_MASK                        0x1u
#define SPI_MCR_HALT_SHIFT                       0u
#define SPI_MCR_HALT_WIDTH                       1u
#define SPI_MCR_HALT(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_HALT_SHIFT))&SPI_MCR_HALT_MASK)
#define SPI_MCR_SMPL_PT_MASK                     0x300u
#define SPI_MCR_SMPL_PT_SHIFT                    8u
#define SPI_MCR_SMPL_PT_WIDTH                    2u
#define SPI_MCR_SMPL_PT(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_SMPL_PT_SHIFT))&SPI_MCR_SMPL_PT_MASK)
#define SPI_MCR_CLR_RXF_MASK                     0x400u
#define SPI_MCR_CLR_RXF_SHIFT                    10u
#define SPI_MCR_CLR_RXF_WIDTH                    1u
#define SPI_MCR_CLR_RXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_CLR_RXF_SHIFT))&SPI_MCR_CLR_RXF_MASK)
#define SPI_MCR_CLR_TXF_MASK                     0x800u
#define SPI_MCR_CLR_TXF_SHIFT                    11u
#define SPI_MCR_CLR_TXF_WIDTH                    1u
#define SPI_MCR_CLR_TXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_CLR_TXF_SHIFT))&SPI_MCR_CLR_TXF_MASK)
#define SPI_MCR_DIS_RXF_MASK                     0x1000u
#define SPI_MCR_DIS_RXF_SHIFT                    12u
#define SPI_MCR_DIS_RXF_WIDTH                    1u
#define SPI_MCR_DIS_RXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DIS_RXF_SHIFT))&SPI_MCR_DIS_RXF_MASK)
#define SPI_MCR_DIS_TXF_MASK                     0x2000u
#define SPI_MCR_DIS_TXF_SHIFT                    13u
#define SPI_MCR_DIS_TXF_WIDTH                    1u
#define SPI_MCR_DIS_TXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DIS_TXF_SHIFT))&SPI_MCR_DIS_TXF_MASK)
#define SPI_MCR_MDIS_MASK                        0x4000u
#define SPI_MCR_MDIS_SHIFT                       14u
#define SPI_MCR_MDIS_WIDTH                       1u
#define SPI_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_MDIS_SHIFT))&SPI_MCR_MDIS_MASK)
#define SPI_MCR_PCSIS_MASK                       0xFF0000u
#define SPI_MCR_PCSIS_SHIFT                      16u
#define SPI_MCR_PCSIS_WIDTH                      8u
#define SPI_MCR_PCSIS(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_MCR_PCSIS_SHIFT))&SPI_MCR_PCSIS_MASK)
#define SPI_MCR_ROOE_MASK                        0x1000000u
#define SPI_MCR_ROOE_SHIFT                       24u
#define SPI_MCR_ROOE_WIDTH                       1u
#define SPI_MCR_ROOE(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_ROOE_SHIFT))&SPI_MCR_ROOE_MASK)
#define SPI_MCR_PCSSE_MASK                       0x2000000u
#define SPI_MCR_PCSSE_SHIFT                      25u
#define SPI_MCR_PCSSE_WIDTH                      1u
#define SPI_MCR_PCSSE(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_MCR_PCSSE_SHIFT))&SPI_MCR_PCSSE_MASK)
#define SPI_MCR_MTFE_MASK                        0x4000000u
#define SPI_MCR_MTFE_SHIFT                       26u
#define SPI_MCR_MTFE_WIDTH                       1u
#define SPI_MCR_MTFE(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_MTFE_SHIFT))&SPI_MCR_MTFE_MASK)
#define SPI_MCR_FRZ_MASK                         0x8000000u
#define SPI_MCR_FRZ_SHIFT                        27u
#define SPI_MCR_FRZ_WIDTH                        1u
#define SPI_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_MCR_FRZ_SHIFT))&SPI_MCR_FRZ_MASK)
#define SPI_MCR_DCONF_MASK                       0x30000000u
#define SPI_MCR_DCONF_SHIFT                      28u
#define SPI_MCR_DCONF_WIDTH                      2u
#define SPI_MCR_DCONF(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DCONF_SHIFT))&SPI_MCR_DCONF_MASK)
#define SPI_MCR_CONT_SCKE_MASK                   0x40000000u
#define SPI_MCR_CONT_SCKE_SHIFT                  30u
#define SPI_MCR_CONT_SCKE_WIDTH                  1u
#define SPI_MCR_CONT_SCKE(x)                     (((uint32_t)(((uint32_t)(x))<<SPI_MCR_CONT_SCKE_SHIFT))&SPI_MCR_CONT_SCKE_MASK)
#define SPI_MCR_MSTR_MASK                        0x80000000u
#define SPI_MCR_MSTR_SHIFT                       31u
#define SPI_MCR_MSTR_WIDTH                       1u
#define SPI_MCR_MSTR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_MSTR_SHIFT))&SPI_MCR_MSTR_MASK)
/* TCR Bit Fields */
#define SPI_TCR_SPI_TCNT_MASK                    0xFFFF0000u
#define SPI_TCR_SPI_TCNT_SHIFT                   16u
#define SPI_TCR_SPI_TCNT_WIDTH                   16u
#define SPI_TCR_SPI_TCNT(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_TCR_SPI_TCNT_SHIFT))&SPI_TCR_SPI_TCNT_MASK)
/* CTAR Bit Fields */
#define SPI_CTAR_BR_MASK                         0xFu
#define SPI_CTAR_BR_SHIFT                        0u
#define SPI_CTAR_BR_WIDTH                        4u
#define SPI_CTAR_BR(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_BR_SHIFT))&SPI_CTAR_BR_MASK)
#define SPI_CTAR_DT_MASK                         0xF0u
#define SPI_CTAR_DT_SHIFT                        4u
#define SPI_CTAR_DT_WIDTH                        4u
#define SPI_CTAR_DT(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_DT_SHIFT))&SPI_CTAR_DT_MASK)
#define SPI_CTAR_ASC_MASK                        0xF00u
#define SPI_CTAR_ASC_SHIFT                       8u
#define SPI_CTAR_ASC_WIDTH                       4u
#define SPI_CTAR_ASC(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_ASC_SHIFT))&SPI_CTAR_ASC_MASK)
#define SPI_CTAR_CSSCK_MASK                      0xF000u
#define SPI_CTAR_CSSCK_SHIFT                     12u
#define SPI_CTAR_CSSCK_WIDTH                     4u
#define SPI_CTAR_CSSCK(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_CSSCK_SHIFT))&SPI_CTAR_CSSCK_MASK)
#define SPI_CTAR_PBR_MASK                        0x30000u
#define SPI_CTAR_PBR_SHIFT                       16u
#define SPI_CTAR_PBR_WIDTH                       2u
#define SPI_CTAR_PBR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PBR_SHIFT))&SPI_CTAR_PBR_MASK)
#define SPI_CTAR_PDT_MASK                        0xC0000u
#define SPI_CTAR_PDT_SHIFT                       18u
#define SPI_CTAR_PDT_WIDTH                       2u
#define SPI_CTAR_PDT(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PDT_SHIFT))&SPI_CTAR_PDT_MASK)
#define SPI_CTAR_PASC_MASK                       0x300000u
#define SPI_CTAR_PASC_SHIFT                      20u
#define SPI_CTAR_PASC_WIDTH                      2u
#define SPI_CTAR_PASC(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PASC_SHIFT))&SPI_CTAR_PASC_MASK)
#define SPI_CTAR_PCSSCK_MASK                     0xC00000u
#define SPI_CTAR_PCSSCK_SHIFT                    22u
#define SPI_CTAR_PCSSCK_WIDTH                    2u
#define SPI_CTAR_PCSSCK(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PCSSCK_SHIFT))&SPI_CTAR_PCSSCK_MASK)
#define SPI_CTAR_LSBFE_MASK                      0x1000000u
#define SPI_CTAR_LSBFE_SHIFT                     24u
#define SPI_CTAR_LSBFE_WIDTH                     1u
#define SPI_CTAR_LSBFE(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_LSBFE_SHIFT))&SPI_CTAR_LSBFE_MASK)
#define SPI_CTAR_CPHA_MASK                       0x2000000u
#define SPI_CTAR_CPHA_SHIFT                      25u
#define SPI_CTAR_CPHA_WIDTH                      1u
#define SPI_CTAR_CPHA(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_CPHA_SHIFT))&SPI_CTAR_CPHA_MASK)
#define SPI_CTAR_CPOL_MASK                       0x4000000u
#define SPI_CTAR_CPOL_SHIFT                      26u
#define SPI_CTAR_CPOL_WIDTH                      1u
#define SPI_CTAR_CPOL(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_CPOL_SHIFT))&SPI_CTAR_CPOL_MASK)
#define SPI_CTAR_FMSZ_MASK                       0x78000000u
#define SPI_CTAR_FMSZ_SHIFT                      27u
#define SPI_CTAR_FMSZ_WIDTH                      4u
#define SPI_CTAR_FMSZ(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_FMSZ_SHIFT))&SPI_CTAR_FMSZ_MASK)
#define SPI_CTAR_DBR_MASK                        0x80000000u
#define SPI_CTAR_DBR_SHIFT                       31u
#define SPI_CTAR_DBR_WIDTH                       1u
#define SPI_CTAR_DBR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_DBR_SHIFT))&SPI_CTAR_DBR_MASK)
/* CTAR_SLAVE Bit Fields */
#define SPI_CTAR_SLAVE_CPHA_MASK                 0x2000000u
#define SPI_CTAR_SLAVE_CPHA_SHIFT                25u
#define SPI_CTAR_SLAVE_CPHA_WIDTH                1u
#define SPI_CTAR_SLAVE_CPHA(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_CPHA_SHIFT))&SPI_CTAR_SLAVE_CPHA_MASK)
#define SPI_CTAR_SLAVE_CPOL_MASK                 0x4000000u
#define SPI_CTAR_SLAVE_CPOL_SHIFT                26u
#define SPI_CTAR_SLAVE_CPOL_WIDTH                1u
#define SPI_CTAR_SLAVE_CPOL(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_CPOL_SHIFT))&SPI_CTAR_SLAVE_CPOL_MASK)
#define SPI_CTAR_SLAVE_FMSZ_MASK                 0x78000000u
#define SPI_CTAR_SLAVE_FMSZ_SHIFT                27u
#define SPI_CTAR_SLAVE_FMSZ_WIDTH                4u
#define SPI_CTAR_SLAVE_FMSZ(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_FMSZ_SHIFT))&SPI_CTAR_SLAVE_FMSZ_MASK)
/* SR Bit Fields */
#define SPI_SR_POPNXTPTR_MASK                    0xFu
#define SPI_SR_POPNXTPTR_SHIFT                   0u
#define SPI_SR_POPNXTPTR_WIDTH                   4u
#define SPI_SR_POPNXTPTR(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_SR_POPNXTPTR_SHIFT))&SPI_SR_POPNXTPTR_MASK)
#define SPI_SR_RXCTR_MASK                        0xF0u
#define SPI_SR_RXCTR_SHIFT                       4u
#define SPI_SR_RXCTR_WIDTH                       4u
#define SPI_SR_RXCTR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_RXCTR_SHIFT))&SPI_SR_RXCTR_MASK)
#define SPI_SR_TXNXTPTR_MASK                     0xF00u
#define SPI_SR_TXNXTPTR_SHIFT                    8u
#define SPI_SR_TXNXTPTR_WIDTH                    4u
#define SPI_SR_TXNXTPTR(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_SR_TXNXTPTR_SHIFT))&SPI_SR_TXNXTPTR_MASK)
#define SPI_SR_TXCTR_MASK                        0xF000u
#define SPI_SR_TXCTR_SHIFT                       12u
#define SPI_SR_TXCTR_WIDTH                       4u
#define SPI_SR_TXCTR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_TXCTR_SHIFT))&SPI_SR_TXCTR_MASK)
#define SPI_SR_RFDF_MASK                         0x20000u
#define SPI_SR_RFDF_SHIFT                        17u
#define SPI_SR_RFDF_WIDTH                        1u
#define SPI_SR_RFDF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_RFDF_SHIFT))&SPI_SR_RFDF_MASK)
#define SPI_SR_RFOF_MASK                         0x80000u
#define SPI_SR_RFOF_SHIFT                        19u
#define SPI_SR_RFOF_WIDTH                        1u
#define SPI_SR_RFOF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_RFOF_SHIFT))&SPI_SR_RFOF_MASK)
#define SPI_SR_TFFF_MASK                         0x2000000u
#define SPI_SR_TFFF_SHIFT                        25u
#define SPI_SR_TFFF_WIDTH                        1u
#define SPI_SR_TFFF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_TFFF_SHIFT))&SPI_SR_TFFF_MASK)
#define SPI_SR_TFUF_MASK                         0x8000000u
#define SPI_SR_TFUF_SHIFT                        27u
#define SPI_SR_TFUF_WIDTH                        1u
#define SPI_SR_TFUF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_TFUF_SHIFT))&SPI_SR_TFUF_MASK)
#define SPI_SR_EOQF_MASK                         0x10000000u
#define SPI_SR_EOQF_SHIFT                        28u
#define SPI_SR_EOQF_WIDTH                        1u
#define SPI_SR_EOQF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_EOQF_SHIFT))&SPI_SR_EOQF_MASK)
#define SPI_SR_TXRXS_MASK                        0x40000000u
#define SPI_SR_TXRXS_SHIFT                       30u
#define SPI_SR_TXRXS_WIDTH                       1u
#define SPI_SR_TXRXS(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_TXRXS_SHIFT))&SPI_SR_TXRXS_MASK)
#define SPI_SR_TCF_MASK                          0x80000000u
#define SPI_SR_TCF_SHIFT                         31u
#define SPI_SR_TCF_WIDTH                         1u
#define SPI_SR_TCF(x)                            (((uint32_t)(((uint32_t)(x))<<SPI_SR_TCF_SHIFT))&SPI_SR_TCF_MASK)
/* RSER Bit Fields */
#define SPI_RSER_RFDF_DIRS_MASK                  0x10000u
#define SPI_RSER_RFDF_DIRS_SHIFT                 16u
#define SPI_RSER_RFDF_DIRS_WIDTH                 1u
#define SPI_RSER_RFDF_DIRS(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_RSER_RFDF_DIRS_SHIFT))&SPI_RSER_RFDF_DIRS_MASK)
#define SPI_RSER_RFDF_RE_MASK                    0x20000u
#define SPI_RSER_RFDF_RE_SHIFT                   17u
#define SPI_RSER_RFDF_RE_WIDTH                   1u
#define SPI_RSER_RFDF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_RFDF_RE_SHIFT))&SPI_RSER_RFDF_RE_MASK)
#define SPI_RSER_RFOF_RE_MASK                    0x80000u
#define SPI_RSER_RFOF_RE_SHIFT                   19u
#define SPI_RSER_RFOF_RE_WIDTH                   1u
#define SPI_RSER_RFOF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_RFOF_RE_SHIFT))&SPI_RSER_RFOF_RE_MASK)
#define SPI_RSER_TFFF_DIRS_MASK                  0x1000000u
#define SPI_RSER_TFFF_DIRS_SHIFT                 24u
#define SPI_RSER_TFFF_DIRS_WIDTH                 1u
#define SPI_RSER_TFFF_DIRS(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TFFF_DIRS_SHIFT))&SPI_RSER_TFFF_DIRS_MASK)
#define SPI_RSER_TFFF_RE_MASK                    0x2000000u
#define SPI_RSER_TFFF_RE_SHIFT                   25u
#define SPI_RSER_TFFF_RE_WIDTH                   1u
#define SPI_RSER_TFFF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TFFF_RE_SHIFT))&SPI_RSER_TFFF_RE_MASK)
#define SPI_RSER_TFUF_RE_MASK                    0x8000000u
#define SPI_RSER_TFUF_RE_SHIFT                   27u
#define SPI_RSER_TFUF_RE_WIDTH                   1u
#define SPI_RSER_TFUF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TFUF_RE_SHIFT))&SPI_RSER_TFUF_RE_MASK)
#define SPI_RSER_EOQF_RE_MASK                    0x10000000u
#define SPI_RSER_EOQF_RE_SHIFT                   28u
#define SPI_RSER_EOQF_RE_WIDTH                   1u
#define SPI_RSER_EOQF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_EOQF_RE_SHIFT))&SPI_RSER_EOQF_RE_MASK)
#define SPI_RSER_TCF_RE_MASK                     0x80000000u
#define SPI_RSER_TCF_RE_SHIFT                    31u
#define SPI_RSER_TCF_RE_WIDTH                    1u
#define SPI_RSER_TCF_RE(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TCF_RE_SHIFT))&SPI_RSER_TCF_RE_MASK)
/* PUSHR_FIFO_CMD Bit Fields */
#define SPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_MASK   0xFFFFu
#define SPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_SHIFT  0u
#define SPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_WIDTH  16u
#define SPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD(x)     (((uint16_t)(((uint16_t)(x))<<SPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_SHIFT))&SPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_MASK)
/* PUSHR_FIFO_TX Bit Fields */
#define SPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_MASK     0xFFFFu
#define SPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_SHIFT    0u
#define SPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_WIDTH    16u
#define SPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX(x)       (((uint16_t)(((uint16_t)(x))<<SPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_SHIFT))&SPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_MASK)
/* PUSHR Bit Fields */
#define SPI_PUSHR_TXDATA_MASK                    0xFFFFu
#define SPI_PUSHR_TXDATA_SHIFT                   0u
#define SPI_PUSHR_TXDATA_WIDTH                   16u
#define SPI_PUSHR_TXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_TXDATA_SHIFT))&SPI_PUSHR_TXDATA_MASK)
#define SPI_PUSHR_PCS_MASK                       0xFF0000u
#define SPI_PUSHR_PCS_SHIFT                      16u
#define SPI_PUSHR_PCS_WIDTH                      8u
#define SPI_PUSHR_PCS(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_PCS_SHIFT))&SPI_PUSHR_PCS_MASK)
#define SPI_PUSHR_CTCNT_MASK                     0x4000000u
#define SPI_PUSHR_CTCNT_SHIFT                    26u
#define SPI_PUSHR_CTCNT_WIDTH                    1u
#define SPI_PUSHR_CTCNT(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_CTCNT_SHIFT))&SPI_PUSHR_CTCNT_MASK)
#define SPI_PUSHR_EOQ_MASK                       0x8000000u
#define SPI_PUSHR_EOQ_SHIFT                      27u
#define SPI_PUSHR_EOQ_WIDTH                      1u
#define SPI_PUSHR_EOQ(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_EOQ_SHIFT))&SPI_PUSHR_EOQ_MASK)
#define SPI_PUSHR_CTAS_MASK                      0x70000000u
#define SPI_PUSHR_CTAS_SHIFT                     28u
#define SPI_PUSHR_CTAS_WIDTH                     3u
#define SPI_PUSHR_CTAS(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_CTAS_SHIFT))&SPI_PUSHR_CTAS_MASK)
#define SPI_PUSHR_CONT_MASK                      0x80000000u
#define SPI_PUSHR_CONT_SHIFT                     31u
#define SPI_PUSHR_CONT_WIDTH                     1u
#define SPI_PUSHR_CONT(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_CONT_SHIFT))&SPI_PUSHR_CONT_MASK)
/* PUSHR_SLAVE Bit Fields */
#define SPI_PUSHR_SLAVE_TXDATA_MASK              0xFFFFu
#define SPI_PUSHR_SLAVE_TXDATA_SHIFT             0u
#define SPI_PUSHR_SLAVE_TXDATA_WIDTH             16u
#define SPI_PUSHR_SLAVE_TXDATA(x)                (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_SLAVE_TXDATA_SHIFT))&SPI_PUSHR_SLAVE_TXDATA_MASK)
/* POPR Bit Fields */
#define SPI_POPR_RXDATA_MASK                     0xFFFFFFFFu
#define SPI_POPR_RXDATA_SHIFT                    0u
#define SPI_POPR_RXDATA_WIDTH                    32u
#define SPI_POPR_RXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_POPR_RXDATA_SHIFT))&SPI_POPR_RXDATA_MASK)
/* TXFR Bit Fields */
#define SPI_TXFR_TXDATA_MASK                     0xFFFFu
#define SPI_TXFR_TXDATA_SHIFT                    0u
#define SPI_TXFR_TXDATA_WIDTH                    16u
#define SPI_TXFR_TXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_TXFR_TXDATA_SHIFT))&SPI_TXFR_TXDATA_MASK)
#define SPI_TXFR_TXCMD_TXDATA_MASK               0xFFFF0000u
#define SPI_TXFR_TXCMD_TXDATA_SHIFT              16u
#define SPI_TXFR_TXCMD_TXDATA_WIDTH              16u
#define SPI_TXFR_TXCMD_TXDATA(x)                 (((uint32_t)(((uint32_t)(x))<<SPI_TXFR_TXCMD_TXDATA_SHIFT))&SPI_TXFR_TXCMD_TXDATA_MASK)
/* RXFR Bit Fields */
#define SPI_RXFR_RXDATA_MASK                     0xFFFFFFFFu
#define SPI_RXFR_RXDATA_SHIFT                    0u
#define SPI_RXFR_RXDATA_WIDTH                    32u
#define SPI_RXFR_RXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_RXFR_RXDATA_SHIFT))&SPI_RXFR_RXDATA_MASK)

/*!
 * @}
 */ /* end of group SPI_Register_Masks */


/*!
 * @}
 */ /* end of group SPI_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SRX Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SRX_Peripheral_Access_Layer SRX Peripheral Access Layer
 * @{
 */


/** SRX - Size of Registers Arrays */
#define SRX_CH_COUNT                             2u
#define SRX_CHANNEL_COUNT                        2u

/** SRX - Register Layout Typedef */
typedef struct {
  __IO uint32_t GBL_CTRL;                          /**< Global Control Register, offset: 0x0 */
  __IO uint32_t CHNL_EN;                           /**< Channel Enable Register, offset: 0x4 */
  __IO uint32_t GBL_STATUS;                        /**< Global Status Register, offset: 0x8 */
  __IO uint32_t FMSG_RDY;                          /**< Fast Message Ready Status Register, offset: 0xC */
  __IO uint32_t SMSG_RDY;                          /**< Slow Serial Message Ready Status Register, offset: 0x10 */
       uint8_t RESERVED_0[4];
  __IO uint32_t DATA_CTRL1;                        /**< Data Control Register 1, offset: 0x18 */
       uint8_t RESERVED_1[12];
  __IO uint32_t FDMA_CTRL;                         /**< Fast Message DMA Control Register, offset: 0x28 */
  __IO uint32_t SDMA_CTRL;                         /**< Slow Serial Message DMA Control Register, offset: 0x2C */
       uint8_t RESERVED_2[4];
  __IO uint32_t FRDY_IE;                           /**< Fast Message Ready Interrupt Control Register, offset: 0x34 */
  __IO uint32_t SRDY_IE;                           /**< Slow Serial Message Ready Interrupt Enable Register, offset: 0x38 */
       uint8_t RESERVED_3[4];
  __I  uint32_t DMA_FMSG_DATA;                     /**< DMA Fast Message Data Read Register, offset: 0x40 */
  __I  uint32_t DMA_FMSG_CRC;                      /**< DMA Fast Message CRC Read Register, offset: 0x44 */
  __I  uint32_t DMA_FMSG_TS;                       /**< DMA Fast Message Time Stamp Read Register, offset: 0x48 */
       uint8_t RESERVED_4[4];
  __I  uint32_t DMA_SMSG_BIT3;                     /**< DMA Slow Serial Message Bit3 Read Register, offset: 0x50 */
  __I  uint32_t DMA_SMSG_BIT2;                     /**< DMA Slow Serial Message Bit2 Read Register, offset: 0x54 */
  __I  uint32_t DMA_SMSG_TS;                       /**< DMA Slow Serial Message Time Stamp Read Register, offset: 0x58 */
       uint8_t RESERVED_5[4];
  struct {                                         /* offset: 0x60, array step: 0x10 */
    __IO uint32_t CLK_CTRL;                          /**< Channel 'n' Clock Control Register (n = 0 to (CH-1)), array offset: 0x60, array step: 0x10 */
    __IO uint32_t STATUS;                            /**< Channel 'n' Status Register (n=0 to (CH-1)), array offset: 0x64, array step: 0x10 */
    __IO uint32_t CONFIG;                            /**< Channel 'n' Configuration Register (n=0 to (CH-1)), array offset: 0x68, array step: 0x10 */
         uint8_t RESERVED_0[4];
  } CH[SRX_CH_COUNT];
       uint8_t RESERVED_6[224];
  struct {                                         /* offset: 0x160, array step: 0x18 */
    __I  uint32_t FMSG_DATA;                         /**< Channel 'n' Fast Message Data Read Register (n=0 to (CH-1)), array offset: 0x160, array step: 0x18 */
    __I  uint32_t FMSG_CRC;                          /**< Channel 'n' Fast Message CRC Read Register (n=0 to (CH-1)), array offset: 0x164, array step: 0x18 */
    __I  uint32_t FMSG_TS;                           /**< Channel 'n' Fast Message Time Stamp Read Register (n=0 to (CH-1)), array offset: 0x168, array step: 0x18 */
    __I  uint32_t SMSG_BIT3;                         /**< Channel 'n' Serial Message Read Register (Bit 3) (n=0 to (CH-1)), array offset: 0x16C, array step: 0x18 */
    __I  uint32_t SMSG_BIT2;                         /**< Channel 'n' Serial Message Read Register (Bit 2)(n=0 to (CH-1)), array offset: 0x170, array step: 0x18 */
    __I  uint32_t SMSG_TS;                           /**< Channel 'n' Serial Message Time Stamp Read Register (n=0 to (CH-1)), array offset: 0x174, array step: 0x18 */
  } CHANNEL[SRX_CHANNEL_COUNT];
} SRX_Type, *SRX_MemMapPtr;

 /** Number of instances of the SRX module. */
#define SRX_INSTANCE_COUNT                       (2u)


/* SRX - Peripheral instance base addresses */
/** Peripheral SRX_0 base address */
#define SRX_0_BASE                               (0xFFE5C000u)
/** Peripheral SRX_0 base pointer */
#define SRX_0                                    ((SRX_Type *)SRX_0_BASE)
/** Peripheral SRX_1 base address */
#define SRX_1_BASE                               (0xFBE5C000u)
/** Peripheral SRX_1 base pointer */
#define SRX_1                                    ((SRX_Type *)SRX_1_BASE)
/** Array initializer of SRX peripheral base addresses */
#define SRX_BASE_ADDRS                           { SRX_0_BASE, SRX_1_BASE }
/** Array initializer of SRX peripheral base pointers */
#define SRX_BASE_PTRS                            { SRX_0, SRX_1 }

/* ----------------------------------------------------------------------------
   -- SRX Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SRX_Register_Masks SRX Register Masks
 * @{
 */

/* GBL_CTRL Bit Fields */
#define SRX_GBL_CTRL_SENT_EN_MASK                0x1u
#define SRX_GBL_CTRL_SENT_EN_SHIFT               0u
#define SRX_GBL_CTRL_SENT_EN_WIDTH               1u
#define SRX_GBL_CTRL_SENT_EN(x)                  (((uint32_t)(((uint32_t)(x))<<SRX_GBL_CTRL_SENT_EN_SHIFT))&SRX_GBL_CTRL_SENT_EN_MASK)
#define SRX_GBL_CTRL_DBG_FRZ_MASK                0x4u
#define SRX_GBL_CTRL_DBG_FRZ_SHIFT               2u
#define SRX_GBL_CTRL_DBG_FRZ_WIDTH               1u
#define SRX_GBL_CTRL_DBG_FRZ(x)                  (((uint32_t)(((uint32_t)(x))<<SRX_GBL_CTRL_DBG_FRZ_SHIFT))&SRX_GBL_CTRL_DBG_FRZ_MASK)
#define SRX_GBL_CTRL_FAST_CLR_MASK               0x10u
#define SRX_GBL_CTRL_FAST_CLR_SHIFT              4u
#define SRX_GBL_CTRL_FAST_CLR_WIDTH              1u
#define SRX_GBL_CTRL_FAST_CLR(x)                 (((uint32_t)(((uint32_t)(x))<<SRX_GBL_CTRL_FAST_CLR_SHIFT))&SRX_GBL_CTRL_FAST_CLR_MASK)
#define SRX_GBL_CTRL_FIFO_EN_MASK                0x40u
#define SRX_GBL_CTRL_FIFO_EN_SHIFT               6u
#define SRX_GBL_CTRL_FIFO_EN_WIDTH               1u
#define SRX_GBL_CTRL_FIFO_EN(x)                  (((uint32_t)(((uint32_t)(x))<<SRX_GBL_CTRL_FIFO_EN_SHIFT))&SRX_GBL_CTRL_FIFO_EN_MASK)
#define SRX_GBL_CTRL_FIFOWM_MASK                 0x1F0000u
#define SRX_GBL_CTRL_FIFOWM_SHIFT                16u
#define SRX_GBL_CTRL_FIFOWM_WIDTH                5u
#define SRX_GBL_CTRL_FIFOWM(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_GBL_CTRL_FIFOWM_SHIFT))&SRX_GBL_CTRL_FIFOWM_MASK)
#define SRX_GBL_CTRL_TSPRSC_MASK                 0xFF000000u
#define SRX_GBL_CTRL_TSPRSC_SHIFT                24u
#define SRX_GBL_CTRL_TSPRSC_WIDTH                8u
#define SRX_GBL_CTRL_TSPRSC(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_GBL_CTRL_TSPRSC_SHIFT))&SRX_GBL_CTRL_TSPRSC_MASK)
/* CHNL_EN Bit Fields */
#define SRX_CHNL_EN_EN_CH_MASK                   0x3u
#define SRX_CHNL_EN_EN_CH_SHIFT                  0u
#define SRX_CHNL_EN_EN_CH_WIDTH                  2u
#define SRX_CHNL_EN_EN_CH(x)                     (((uint32_t)(((uint32_t)(x))<<SRX_CHNL_EN_EN_CH_SHIFT))&SRX_CHNL_EN_EN_CH_MASK)
/* GBL_STATUS Bit Fields */
#define SRX_GBL_STATUS_SMDU_MASK                 0x100u
#define SRX_GBL_STATUS_SMDU_SHIFT                8u
#define SRX_GBL_STATUS_SMDU_WIDTH                1u
#define SRX_GBL_STATUS_SMDU(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_GBL_STATUS_SMDU_SHIFT))&SRX_GBL_STATUS_SMDU_MASK)
#define SRX_GBL_STATUS_FMDU_MASK                 0x200u
#define SRX_GBL_STATUS_FMDU_SHIFT                9u
#define SRX_GBL_STATUS_FMDU_WIDTH                1u
#define SRX_GBL_STATUS_FMDU(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_GBL_STATUS_FMDU_SHIFT))&SRX_GBL_STATUS_FMDU_MASK)
#define SRX_GBL_STATUS_FMFO_MASK                 0x400u
#define SRX_GBL_STATUS_FMFO_SHIFT                10u
#define SRX_GBL_STATUS_FMFO_WIDTH                1u
#define SRX_GBL_STATUS_FMFO(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_GBL_STATUS_FMFO_SHIFT))&SRX_GBL_STATUS_FMFO_MASK)
/* FMSG_RDY Bit Fields */
#define SRX_FMSG_RDY_F_RDY_MASK                  0x3u
#define SRX_FMSG_RDY_F_RDY_SHIFT                 0u
#define SRX_FMSG_RDY_F_RDY_WIDTH                 2u
#define SRX_FMSG_RDY_F_RDY(x)                    (((uint32_t)(((uint32_t)(x))<<SRX_FMSG_RDY_F_RDY_SHIFT))&SRX_FMSG_RDY_F_RDY_MASK)
/* SMSG_RDY Bit Fields */
#define SRX_SMSG_RDY_S_RDY_MASK                  0x3u
#define SRX_SMSG_RDY_S_RDY_SHIFT                 0u
#define SRX_SMSG_RDY_S_RDY_WIDTH                 2u
#define SRX_SMSG_RDY_S_RDY(x)                    (((uint32_t)(((uint32_t)(x))<<SRX_SMSG_RDY_S_RDY_SHIFT))&SRX_SMSG_RDY_S_RDY_MASK)
/* DATA_CTRL1 Bit Fields */
#define SRX_DATA_CTRL1_NIBBCH1_MASK              0x7000000u
#define SRX_DATA_CTRL1_NIBBCH1_SHIFT             24u
#define SRX_DATA_CTRL1_NIBBCH1_WIDTH             3u
#define SRX_DATA_CTRL1_NIBBCH1(x)                (((uint32_t)(((uint32_t)(x))<<SRX_DATA_CTRL1_NIBBCH1_SHIFT))&SRX_DATA_CTRL1_NIBBCH1_MASK)
#define SRX_DATA_CTRL1_NIBBCH0_MASK              0x70000000u
#define SRX_DATA_CTRL1_NIBBCH0_SHIFT             28u
#define SRX_DATA_CTRL1_NIBBCH0_WIDTH             3u
#define SRX_DATA_CTRL1_NIBBCH0(x)                (((uint32_t)(((uint32_t)(x))<<SRX_DATA_CTRL1_NIBBCH0_SHIFT))&SRX_DATA_CTRL1_NIBBCH0_MASK)
/* FDMA_CTRL Bit Fields */
#define SRX_FDMA_CTRL_FDMA_EN_MASK               0x3u
#define SRX_FDMA_CTRL_FDMA_EN_SHIFT              0u
#define SRX_FDMA_CTRL_FDMA_EN_WIDTH              2u
#define SRX_FDMA_CTRL_FDMA_EN(x)                 (((uint32_t)(((uint32_t)(x))<<SRX_FDMA_CTRL_FDMA_EN_SHIFT))&SRX_FDMA_CTRL_FDMA_EN_MASK)
/* SDMA_CTRL Bit Fields */
#define SRX_SDMA_CTRL_SDMA_EN_MASK               0x3u
#define SRX_SDMA_CTRL_SDMA_EN_SHIFT              0u
#define SRX_SDMA_CTRL_SDMA_EN_WIDTH              2u
#define SRX_SDMA_CTRL_SDMA_EN(x)                 (((uint32_t)(((uint32_t)(x))<<SRX_SDMA_CTRL_SDMA_EN_SHIFT))&SRX_SDMA_CTRL_SDMA_EN_MASK)
/* FRDY_IE Bit Fields */
#define SRX_FRDY_IE_FRDY_IE_MASK                 0x3u
#define SRX_FRDY_IE_FRDY_IE_SHIFT                0u
#define SRX_FRDY_IE_FRDY_IE_WIDTH                2u
#define SRX_FRDY_IE_FRDY_IE(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_FRDY_IE_FRDY_IE_SHIFT))&SRX_FRDY_IE_FRDY_IE_MASK)
/* SRDY_IE Bit Fields */
#define SRX_SRDY_IE_SRDY_IE_MASK                 0x3u
#define SRX_SRDY_IE_SRDY_IE_SHIFT                0u
#define SRX_SRDY_IE_SRDY_IE_WIDTH                2u
#define SRX_SRDY_IE_SRDY_IE(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_SRDY_IE_SRDY_IE_SHIFT))&SRX_SRDY_IE_SRDY_IE_MASK)
/* DMA_FMSG_DATA Bit Fields */
#define SRX_DMA_FMSG_DATA_DNIB6_MASK             0xFu
#define SRX_DMA_FMSG_DATA_DNIB6_SHIFT            0u
#define SRX_DMA_FMSG_DATA_DNIB6_WIDTH            4u
#define SRX_DMA_FMSG_DATA_DNIB6(x)               (((uint32_t)(((uint32_t)(x))<<SRX_DMA_FMSG_DATA_DNIB6_SHIFT))&SRX_DMA_FMSG_DATA_DNIB6_MASK)
#define SRX_DMA_FMSG_DATA_DNIB5_MASK             0xF0u
#define SRX_DMA_FMSG_DATA_DNIB5_SHIFT            4u
#define SRX_DMA_FMSG_DATA_DNIB5_WIDTH            4u
#define SRX_DMA_FMSG_DATA_DNIB5(x)               (((uint32_t)(((uint32_t)(x))<<SRX_DMA_FMSG_DATA_DNIB5_SHIFT))&SRX_DMA_FMSG_DATA_DNIB5_MASK)
#define SRX_DMA_FMSG_DATA_DNIB4_MASK             0xF00u
#define SRX_DMA_FMSG_DATA_DNIB4_SHIFT            8u
#define SRX_DMA_FMSG_DATA_DNIB4_WIDTH            4u
#define SRX_DMA_FMSG_DATA_DNIB4(x)               (((uint32_t)(((uint32_t)(x))<<SRX_DMA_FMSG_DATA_DNIB4_SHIFT))&SRX_DMA_FMSG_DATA_DNIB4_MASK)
#define SRX_DMA_FMSG_DATA_DNIB3_MASK             0xF000u
#define SRX_DMA_FMSG_DATA_DNIB3_SHIFT            12u
#define SRX_DMA_FMSG_DATA_DNIB3_WIDTH            4u
#define SRX_DMA_FMSG_DATA_DNIB3(x)               (((uint32_t)(((uint32_t)(x))<<SRX_DMA_FMSG_DATA_DNIB3_SHIFT))&SRX_DMA_FMSG_DATA_DNIB3_MASK)
#define SRX_DMA_FMSG_DATA_DNIB2_MASK             0xF0000u
#define SRX_DMA_FMSG_DATA_DNIB2_SHIFT            16u
#define SRX_DMA_FMSG_DATA_DNIB2_WIDTH            4u
#define SRX_DMA_FMSG_DATA_DNIB2(x)               (((uint32_t)(((uint32_t)(x))<<SRX_DMA_FMSG_DATA_DNIB2_SHIFT))&SRX_DMA_FMSG_DATA_DNIB2_MASK)
#define SRX_DMA_FMSG_DATA_DNIB1_MASK             0xF00000u
#define SRX_DMA_FMSG_DATA_DNIB1_SHIFT            20u
#define SRX_DMA_FMSG_DATA_DNIB1_WIDTH            4u
#define SRX_DMA_FMSG_DATA_DNIB1(x)               (((uint32_t)(((uint32_t)(x))<<SRX_DMA_FMSG_DATA_DNIB1_SHIFT))&SRX_DMA_FMSG_DATA_DNIB1_MASK)
#define SRX_DMA_FMSG_DATA_SCNIB_MASK             0xF000000u
#define SRX_DMA_FMSG_DATA_SCNIB_SHIFT            24u
#define SRX_DMA_FMSG_DATA_SCNIB_WIDTH            4u
#define SRX_DMA_FMSG_DATA_SCNIB(x)               (((uint32_t)(((uint32_t)(x))<<SRX_DMA_FMSG_DATA_SCNIB_SHIFT))&SRX_DMA_FMSG_DATA_SCNIB_MASK)
#define SRX_DMA_FMSG_DATA_CHNUM_MASK             0xF0000000u
#define SRX_DMA_FMSG_DATA_CHNUM_SHIFT            28u
#define SRX_DMA_FMSG_DATA_CHNUM_WIDTH            4u
#define SRX_DMA_FMSG_DATA_CHNUM(x)               (((uint32_t)(((uint32_t)(x))<<SRX_DMA_FMSG_DATA_CHNUM_SHIFT))&SRX_DMA_FMSG_DATA_CHNUM_MASK)
/* DMA_FMSG_CRC Bit Fields */
#define SRX_DMA_FMSG_CRC_CRC4b_MASK              0xF0000u
#define SRX_DMA_FMSG_CRC_CRC4b_SHIFT             16u
#define SRX_DMA_FMSG_CRC_CRC4b_WIDTH             4u
#define SRX_DMA_FMSG_CRC_CRC4b(x)                (((uint32_t)(((uint32_t)(x))<<SRX_DMA_FMSG_CRC_CRC4b_SHIFT))&SRX_DMA_FMSG_CRC_CRC4b_MASK)
/* DMA_FMSG_TS Bit Fields */
#define SRX_DMA_FMSG_TS_TS_MASK                  0xFFFFFFFFu
#define SRX_DMA_FMSG_TS_TS_SHIFT                 0u
#define SRX_DMA_FMSG_TS_TS_WIDTH                 32u
#define SRX_DMA_FMSG_TS_TS(x)                    (((uint32_t)(((uint32_t)(x))<<SRX_DMA_FMSG_TS_TS_SHIFT))&SRX_DMA_FMSG_TS_TS_MASK)
/* DMA_SMSG_BIT3 Bit Fields */
#define SRX_DMA_SMSG_BIT3_ID3_0_DATA15_12_MASK   0x1Eu
#define SRX_DMA_SMSG_BIT3_ID3_0_DATA15_12_SHIFT  1u
#define SRX_DMA_SMSG_BIT3_ID3_0_DATA15_12_WIDTH  4u
#define SRX_DMA_SMSG_BIT3_ID3_0_DATA15_12(x)     (((uint32_t)(((uint32_t)(x))<<SRX_DMA_SMSG_BIT3_ID3_0_DATA15_12_SHIFT))&SRX_DMA_SMSG_BIT3_ID3_0_DATA15_12_MASK)
#define SRX_DMA_SMSG_BIT3_ID7_4_ID3_0_MASK       0x3C0u
#define SRX_DMA_SMSG_BIT3_ID7_4_ID3_0_SHIFT      6u
#define SRX_DMA_SMSG_BIT3_ID7_4_ID3_0_WIDTH      4u
#define SRX_DMA_SMSG_BIT3_ID7_4_ID3_0(x)         (((uint32_t)(((uint32_t)(x))<<SRX_DMA_SMSG_BIT3_ID7_4_ID3_0_SHIFT))&SRX_DMA_SMSG_BIT3_ID7_4_ID3_0_MASK)
#define SRX_DMA_SMSG_BIT3_CFG_MASK               0x400u
#define SRX_DMA_SMSG_BIT3_CFG_SHIFT              10u
#define SRX_DMA_SMSG_BIT3_CFG_WIDTH              1u
#define SRX_DMA_SMSG_BIT3_CFG(x)                 (((uint32_t)(((uint32_t)(x))<<SRX_DMA_SMSG_BIT3_CFG_SHIFT))&SRX_DMA_SMSG_BIT3_CFG_MASK)
#define SRX_DMA_SMSG_BIT3_TYPE_MASK              0x8000000u
#define SRX_DMA_SMSG_BIT3_TYPE_SHIFT             27u
#define SRX_DMA_SMSG_BIT3_TYPE_WIDTH             1u
#define SRX_DMA_SMSG_BIT3_TYPE(x)                (((uint32_t)(((uint32_t)(x))<<SRX_DMA_SMSG_BIT3_TYPE_SHIFT))&SRX_DMA_SMSG_BIT3_TYPE_MASK)
#define SRX_DMA_SMSG_BIT3_CHNUM_MASK             0xF0000000u
#define SRX_DMA_SMSG_BIT3_CHNUM_SHIFT            28u
#define SRX_DMA_SMSG_BIT3_CHNUM_WIDTH            4u
#define SRX_DMA_SMSG_BIT3_CHNUM(x)               (((uint32_t)(((uint32_t)(x))<<SRX_DMA_SMSG_BIT3_CHNUM_SHIFT))&SRX_DMA_SMSG_BIT3_CHNUM_MASK)
/* DMA_SMSG_BIT2 Bit Fields */
#define SRX_DMA_SMSG_BIT2_DATA_MASK              0xFFFu
#define SRX_DMA_SMSG_BIT2_DATA_SHIFT             0u
#define SRX_DMA_SMSG_BIT2_DATA_WIDTH             12u
#define SRX_DMA_SMSG_BIT2_DATA(x)                (((uint32_t)(((uint32_t)(x))<<SRX_DMA_SMSG_BIT2_DATA_SHIFT))&SRX_DMA_SMSG_BIT2_DATA_MASK)
#define SRX_DMA_SMSG_BIT2_SMCRC_MASK             0x3F0000u
#define SRX_DMA_SMSG_BIT2_SMCRC_SHIFT            16u
#define SRX_DMA_SMSG_BIT2_SMCRC_WIDTH            6u
#define SRX_DMA_SMSG_BIT2_SMCRC(x)               (((uint32_t)(((uint32_t)(x))<<SRX_DMA_SMSG_BIT2_SMCRC_SHIFT))&SRX_DMA_SMSG_BIT2_SMCRC_MASK)
/* DMA_SMSG_TS Bit Fields */
#define SRX_DMA_SMSG_TS_TS_MASK                  0xFFFFFFFFu
#define SRX_DMA_SMSG_TS_TS_SHIFT                 0u
#define SRX_DMA_SMSG_TS_TS_WIDTH                 32u
#define SRX_DMA_SMSG_TS_TS(x)                    (((uint32_t)(((uint32_t)(x))<<SRX_DMA_SMSG_TS_TS_SHIFT))&SRX_DMA_SMSG_TS_TS_MASK)
/* CLK_CTRL Bit Fields */
#define SRX_CLK_CTRL_PRSC_MASK                   0x3FFFu
#define SRX_CLK_CTRL_PRSC_SHIFT                  0u
#define SRX_CLK_CTRL_PRSC_WIDTH                  14u
#define SRX_CLK_CTRL_PRSC(x)                     (((uint32_t)(((uint32_t)(x))<<SRX_CLK_CTRL_PRSC_SHIFT))&SRX_CLK_CTRL_PRSC_MASK)
#define SRX_CLK_CTRL_COMP_EN_MASK                0x8000u
#define SRX_CLK_CTRL_COMP_EN_SHIFT               15u
#define SRX_CLK_CTRL_COMP_EN_WIDTH               1u
#define SRX_CLK_CTRL_COMP_EN(x)                  (((uint32_t)(((uint32_t)(x))<<SRX_CLK_CTRL_COMP_EN_SHIFT))&SRX_CLK_CTRL_COMP_EN_MASK)
#define SRX_CLK_CTRL_CM_PRSC_MASK                0x7FFF0000u
#define SRX_CLK_CTRL_CM_PRSC_SHIFT               16u
#define SRX_CLK_CTRL_CM_PRSC_WIDTH               15u
#define SRX_CLK_CTRL_CM_PRSC(x)                  (((uint32_t)(((uint32_t)(x))<<SRX_CLK_CTRL_CM_PRSC_SHIFT))&SRX_CLK_CTRL_CM_PRSC_MASK)
/* STATUS Bit Fields */
#define SRX_STATUS_NUM_EDGES_ERR_MASK            0x10000u
#define SRX_STATUS_NUM_EDGES_ERR_SHIFT           16u
#define SRX_STATUS_NUM_EDGES_ERR_WIDTH           1u
#define SRX_STATUS_NUM_EDGES_ERR(x)              (((uint32_t)(((uint32_t)(x))<<SRX_STATUS_NUM_EDGES_ERR_SHIFT))&SRX_STATUS_NUM_EDGES_ERR_MASK)
#define SRX_STATUS_FMSG_CRC_ERR_MASK             0x20000u
#define SRX_STATUS_FMSG_CRC_ERR_SHIFT            17u
#define SRX_STATUS_FMSG_CRC_ERR_WIDTH            1u
#define SRX_STATUS_FMSG_CRC_ERR(x)               (((uint32_t)(((uint32_t)(x))<<SRX_STATUS_FMSG_CRC_ERR_SHIFT))&SRX_STATUS_FMSG_CRC_ERR_MASK)
#define SRX_STATUS_SMSG_CRC_ERR_MASK             0x40000u
#define SRX_STATUS_SMSG_CRC_ERR_SHIFT            18u
#define SRX_STATUS_SMSG_CRC_ERR_WIDTH            1u
#define SRX_STATUS_SMSG_CRC_ERR(x)               (((uint32_t)(((uint32_t)(x))<<SRX_STATUS_SMSG_CRC_ERR_SHIFT))&SRX_STATUS_SMSG_CRC_ERR_MASK)
#define SRX_STATUS_NIB_VAL_ERR_MASK              0x80000u
#define SRX_STATUS_NIB_VAL_ERR_SHIFT             19u
#define SRX_STATUS_NIB_VAL_ERR_WIDTH             1u
#define SRX_STATUS_NIB_VAL_ERR(x)                (((uint32_t)(((uint32_t)(x))<<SRX_STATUS_NIB_VAL_ERR_SHIFT))&SRX_STATUS_NIB_VAL_ERR_MASK)
#define SRX_STATUS_CAL_DIAG_ERR_MASK             0x100000u
#define SRX_STATUS_CAL_DIAG_ERR_SHIFT            20u
#define SRX_STATUS_CAL_DIAG_ERR_WIDTH            1u
#define SRX_STATUS_CAL_DIAG_ERR(x)               (((uint32_t)(((uint32_t)(x))<<SRX_STATUS_CAL_DIAG_ERR_SHIFT))&SRX_STATUS_CAL_DIAG_ERR_MASK)
#define SRX_STATUS_CAL_LEN_ERR_MASK              0x200000u
#define SRX_STATUS_CAL_LEN_ERR_SHIFT             21u
#define SRX_STATUS_CAL_LEN_ERR_WIDTH             1u
#define SRX_STATUS_CAL_LEN_ERR(x)                (((uint32_t)(((uint32_t)(x))<<SRX_STATUS_CAL_LEN_ERR_SHIFT))&SRX_STATUS_CAL_LEN_ERR_MASK)
#define SRX_STATUS_PP_DIAG_ERR_MASK              0x400000u
#define SRX_STATUS_PP_DIAG_ERR_SHIFT             22u
#define SRX_STATUS_PP_DIAG_ERR_WIDTH             1u
#define SRX_STATUS_PP_DIAG_ERR(x)                (((uint32_t)(((uint32_t)(x))<<SRX_STATUS_PP_DIAG_ERR_SHIFT))&SRX_STATUS_PP_DIAG_ERR_MASK)
#define SRX_STATUS_FMSG_OFLW_MASK                0x1000000u
#define SRX_STATUS_FMSG_OFLW_SHIFT               24u
#define SRX_STATUS_FMSG_OFLW_WIDTH               1u
#define SRX_STATUS_FMSG_OFLW(x)                  (((uint32_t)(((uint32_t)(x))<<SRX_STATUS_FMSG_OFLW_SHIFT))&SRX_STATUS_FMSG_OFLW_MASK)
#define SRX_STATUS_SMSG_OFLW_MASK                0x2000000u
#define SRX_STATUS_SMSG_OFLW_SHIFT               25u
#define SRX_STATUS_SMSG_OFLW_WIDTH               1u
#define SRX_STATUS_SMSG_OFLW(x)                  (((uint32_t)(((uint32_t)(x))<<SRX_STATUS_SMSG_OFLW_SHIFT))&SRX_STATUS_SMSG_OFLW_MASK)
#define SRX_STATUS_CAL_20_25_MASK                0x4000000u
#define SRX_STATUS_CAL_20_25_SHIFT               26u
#define SRX_STATUS_CAL_20_25_WIDTH               1u
#define SRX_STATUS_CAL_20_25(x)                  (((uint32_t)(((uint32_t)(x))<<SRX_STATUS_CAL_20_25_SHIFT))&SRX_STATUS_CAL_20_25_MASK)
#define SRX_STATUS_CAL_RESYNC_MASK               0x8000000u
#define SRX_STATUS_CAL_RESYNC_SHIFT              27u
#define SRX_STATUS_CAL_RESYNC_WIDTH              1u
#define SRX_STATUS_CAL_RESYNC(x)                 (((uint32_t)(((uint32_t)(x))<<SRX_STATUS_CAL_RESYNC_SHIFT))&SRX_STATUS_CAL_RESYNC_MASK)
#define SRX_STATUS_BUS_IDLE_MASK                 0x80000000u
#define SRX_STATUS_BUS_IDLE_SHIFT                31u
#define SRX_STATUS_BUS_IDLE_WIDTH                1u
#define SRX_STATUS_BUS_IDLE(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_STATUS_BUS_IDLE_SHIFT))&SRX_STATUS_BUS_IDLE_MASK)
/* CONFIG Bit Fields */
#define SRX_CONFIG_FIL_CNT_MASK                  0xFFu
#define SRX_CONFIG_FIL_CNT_SHIFT                 0u
#define SRX_CONFIG_FIL_CNT_WIDTH                 8u
#define SRX_CONFIG_FIL_CNT(x)                    (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_FIL_CNT_SHIFT))&SRX_CONFIG_FIL_CNT_MASK)
#define SRX_CONFIG_SUCC_CAL_CHK_MASK             0x100u
#define SRX_CONFIG_SUCC_CAL_CHK_SHIFT            8u
#define SRX_CONFIG_SUCC_CAL_CHK_WIDTH            1u
#define SRX_CONFIG_SUCC_CAL_CHK(x)               (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_SUCC_CAL_CHK_SHIFT))&SRX_CONFIG_SUCC_CAL_CHK_MASK)
#define SRX_CONFIG_PAUSE_EN_MASK                 0x200u
#define SRX_CONFIG_PAUSE_EN_SHIFT                9u
#define SRX_CONFIG_PAUSE_EN_WIDTH                1u
#define SRX_CONFIG_PAUSE_EN(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_PAUSE_EN_SHIFT))&SRX_CONFIG_PAUSE_EN_MASK)
#define SRX_CONFIG_SCRC_TYPE_MASK                0x400u
#define SRX_CONFIG_SCRC_TYPE_SHIFT               10u
#define SRX_CONFIG_SCRC_TYPE_WIDTH               1u
#define SRX_CONFIG_SCRC_TYPE(x)                  (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_SCRC_TYPE_SHIFT))&SRX_CONFIG_SCRC_TYPE_MASK)
#define SRX_CONFIG_FCRC_SC_EN_MASK               0x800u
#define SRX_CONFIG_FCRC_SC_EN_SHIFT              11u
#define SRX_CONFIG_FCRC_SC_EN_WIDTH              1u
#define SRX_CONFIG_FCRC_SC_EN(x)                 (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_FCRC_SC_EN_SHIFT))&SRX_CONFIG_FCRC_SC_EN_MASK)
#define SRX_CONFIG_FCRC_TYPE_MASK                0x1000u
#define SRX_CONFIG_FCRC_TYPE_SHIFT               12u
#define SRX_CONFIG_FCRC_TYPE_WIDTH               1u
#define SRX_CONFIG_FCRC_TYPE(x)                  (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_FCRC_TYPE_SHIFT))&SRX_CONFIG_FCRC_TYPE_MASK)
#define SRX_CONFIG_PP_CHKSEL_MASK                0x2000u
#define SRX_CONFIG_PP_CHKSEL_SHIFT               13u
#define SRX_CONFIG_PP_CHKSEL_WIDTH               1u
#define SRX_CONFIG_PP_CHKSEL(x)                  (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_PP_CHKSEL_SHIFT))&SRX_CONFIG_PP_CHKSEL_MASK)
#define SRX_CONFIG_CAL_RNG_MASK                  0x4000u
#define SRX_CONFIG_CAL_RNG_SHIFT                 14u
#define SRX_CONFIG_CAL_RNG_WIDTH                 1u
#define SRX_CONFIG_CAL_RNG(x)                    (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_CAL_RNG_SHIFT))&SRX_CONFIG_CAL_RNG_MASK)
#define SRX_CONFIG_DCHNG_INT_MASK                0x8000u
#define SRX_CONFIG_DCHNG_INT_SHIFT               15u
#define SRX_CONFIG_DCHNG_INT_WIDTH               1u
#define SRX_CONFIG_DCHNG_INT(x)                  (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_DCHNG_INT_SHIFT))&SRX_CONFIG_DCHNG_INT_MASK)
#define SRX_CONFIG_IE_NUM_EDGES_ERR_MASK         0x10000u
#define SRX_CONFIG_IE_NUM_EDGES_ERR_SHIFT        16u
#define SRX_CONFIG_IE_NUM_EDGES_ERR_WIDTH        1u
#define SRX_CONFIG_IE_NUM_EDGES_ERR(x)           (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_IE_NUM_EDGES_ERR_SHIFT))&SRX_CONFIG_IE_NUM_EDGES_ERR_MASK)
#define SRX_CONFIG_IE_FMSG_CRC_ERR_MASK          0x20000u
#define SRX_CONFIG_IE_FMSG_CRC_ERR_SHIFT         17u
#define SRX_CONFIG_IE_FMSG_CRC_ERR_WIDTH         1u
#define SRX_CONFIG_IE_FMSG_CRC_ERR(x)            (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_IE_FMSG_CRC_ERR_SHIFT))&SRX_CONFIG_IE_FMSG_CRC_ERR_MASK)
#define SRX_CONFIG_IE_SMSG_CRC_ERR_MASK          0x40000u
#define SRX_CONFIG_IE_SMSG_CRC_ERR_SHIFT         18u
#define SRX_CONFIG_IE_SMSG_CRC_ERR_WIDTH         1u
#define SRX_CONFIG_IE_SMSG_CRC_ERR(x)            (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_IE_SMSG_CRC_ERR_SHIFT))&SRX_CONFIG_IE_SMSG_CRC_ERR_MASK)
#define SRX_CONFIG_IE_NIB_VAL_ERR_MASK           0x80000u
#define SRX_CONFIG_IE_NIB_VAL_ERR_SHIFT          19u
#define SRX_CONFIG_IE_NIB_VAL_ERR_WIDTH          1u
#define SRX_CONFIG_IE_NIB_VAL_ERR(x)             (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_IE_NIB_VAL_ERR_SHIFT))&SRX_CONFIG_IE_NIB_VAL_ERR_MASK)
#define SRX_CONFIG_IE_CAL_DIAG_ERR_MASK          0x100000u
#define SRX_CONFIG_IE_CAL_DIAG_ERR_SHIFT         20u
#define SRX_CONFIG_IE_CAL_DIAG_ERR_WIDTH         1u
#define SRX_CONFIG_IE_CAL_DIAG_ERR(x)            (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_IE_CAL_DIAG_ERR_SHIFT))&SRX_CONFIG_IE_CAL_DIAG_ERR_MASK)
#define SRX_CONFIG_IE_CAL_LEN_ERR_MASK           0x200000u
#define SRX_CONFIG_IE_CAL_LEN_ERR_SHIFT          21u
#define SRX_CONFIG_IE_CAL_LEN_ERR_WIDTH          1u
#define SRX_CONFIG_IE_CAL_LEN_ERR(x)             (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_IE_CAL_LEN_ERR_SHIFT))&SRX_CONFIG_IE_CAL_LEN_ERR_MASK)
#define SRX_CONFIG_IE_PP_DIAG_ERR_MASK           0x400000u
#define SRX_CONFIG_IE_PP_DIAG_ERR_SHIFT          22u
#define SRX_CONFIG_IE_PP_DIAG_ERR_WIDTH          1u
#define SRX_CONFIG_IE_PP_DIAG_ERR(x)             (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_IE_PP_DIAG_ERR_SHIFT))&SRX_CONFIG_IE_PP_DIAG_ERR_MASK)
#define SRX_CONFIG_FCRC_CHK_OFF_MASK             0x800000u
#define SRX_CONFIG_FCRC_CHK_OFF_SHIFT            23u
#define SRX_CONFIG_FCRC_CHK_OFF_WIDTH            1u
#define SRX_CONFIG_FCRC_CHK_OFF(x)               (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_FCRC_CHK_OFF_SHIFT))&SRX_CONFIG_FCRC_CHK_OFF_MASK)
#define SRX_CONFIG_IE_FMSG_OFLW_MASK             0x1000000u
#define SRX_CONFIG_IE_FMSG_OFLW_SHIFT            24u
#define SRX_CONFIG_IE_FMSG_OFLW_WIDTH            1u
#define SRX_CONFIG_IE_FMSG_OFLW(x)               (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_IE_FMSG_OFLW_SHIFT))&SRX_CONFIG_IE_FMSG_OFLW_MASK)
#define SRX_CONFIG_IE_SMSG_OFLW_MASK             0x2000000u
#define SRX_CONFIG_IE_SMSG_OFLW_SHIFT            25u
#define SRX_CONFIG_IE_SMSG_OFLW_WIDTH            1u
#define SRX_CONFIG_IE_SMSG_OFLW(x)               (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_IE_SMSG_OFLW_SHIFT))&SRX_CONFIG_IE_SMSG_OFLW_MASK)
#define SRX_CONFIG_IE_CAL_20_25_MASK             0x4000000u
#define SRX_CONFIG_IE_CAL_20_25_SHIFT            26u
#define SRX_CONFIG_IE_CAL_20_25_WIDTH            1u
#define SRX_CONFIG_IE_CAL_20_25(x)               (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_IE_CAL_20_25_SHIFT))&SRX_CONFIG_IE_CAL_20_25_MASK)
#define SRX_CONFIG_IE_CAL_RESYNC_MASK            0x8000000u
#define SRX_CONFIG_IE_CAL_RESYNC_SHIFT           27u
#define SRX_CONFIG_IE_CAL_RESYNC_WIDTH           1u
#define SRX_CONFIG_IE_CAL_RESYNC(x)              (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_IE_CAL_RESYNC_SHIFT))&SRX_CONFIG_IE_CAL_RESYNC_MASK)
#define SRX_CONFIG_BUS_IDLE_CNT_MASK             0xF0000000u
#define SRX_CONFIG_BUS_IDLE_CNT_SHIFT            28u
#define SRX_CONFIG_BUS_IDLE_CNT_WIDTH            4u
#define SRX_CONFIG_BUS_IDLE_CNT(x)               (((uint32_t)(((uint32_t)(x))<<SRX_CONFIG_BUS_IDLE_CNT_SHIFT))&SRX_CONFIG_BUS_IDLE_CNT_MASK)
/* FMSG_DATA Bit Fields */
#define SRX_FMSG_DATA_DNIB6_MASK                 0xFu
#define SRX_FMSG_DATA_DNIB6_SHIFT                0u
#define SRX_FMSG_DATA_DNIB6_WIDTH                4u
#define SRX_FMSG_DATA_DNIB6(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_FMSG_DATA_DNIB6_SHIFT))&SRX_FMSG_DATA_DNIB6_MASK)
#define SRX_FMSG_DATA_DNIB5_MASK                 0xF0u
#define SRX_FMSG_DATA_DNIB5_SHIFT                4u
#define SRX_FMSG_DATA_DNIB5_WIDTH                4u
#define SRX_FMSG_DATA_DNIB5(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_FMSG_DATA_DNIB5_SHIFT))&SRX_FMSG_DATA_DNIB5_MASK)
#define SRX_FMSG_DATA_DNIB4_MASK                 0xF00u
#define SRX_FMSG_DATA_DNIB4_SHIFT                8u
#define SRX_FMSG_DATA_DNIB4_WIDTH                4u
#define SRX_FMSG_DATA_DNIB4(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_FMSG_DATA_DNIB4_SHIFT))&SRX_FMSG_DATA_DNIB4_MASK)
#define SRX_FMSG_DATA_DNIB3_MASK                 0xF000u
#define SRX_FMSG_DATA_DNIB3_SHIFT                12u
#define SRX_FMSG_DATA_DNIB3_WIDTH                4u
#define SRX_FMSG_DATA_DNIB3(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_FMSG_DATA_DNIB3_SHIFT))&SRX_FMSG_DATA_DNIB3_MASK)
#define SRX_FMSG_DATA_DNIB2_MASK                 0xF0000u
#define SRX_FMSG_DATA_DNIB2_SHIFT                16u
#define SRX_FMSG_DATA_DNIB2_WIDTH                4u
#define SRX_FMSG_DATA_DNIB2(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_FMSG_DATA_DNIB2_SHIFT))&SRX_FMSG_DATA_DNIB2_MASK)
#define SRX_FMSG_DATA_DNIB1_MASK                 0xF00000u
#define SRX_FMSG_DATA_DNIB1_SHIFT                20u
#define SRX_FMSG_DATA_DNIB1_WIDTH                4u
#define SRX_FMSG_DATA_DNIB1(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_FMSG_DATA_DNIB1_SHIFT))&SRX_FMSG_DATA_DNIB1_MASK)
#define SRX_FMSG_DATA_SCNIB_MASK                 0xF000000u
#define SRX_FMSG_DATA_SCNIB_SHIFT                24u
#define SRX_FMSG_DATA_SCNIB_WIDTH                4u
#define SRX_FMSG_DATA_SCNIB(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_FMSG_DATA_SCNIB_SHIFT))&SRX_FMSG_DATA_SCNIB_MASK)
#define SRX_FMSG_DATA_CHNUM_MASK                 0xF0000000u
#define SRX_FMSG_DATA_CHNUM_SHIFT                28u
#define SRX_FMSG_DATA_CHNUM_WIDTH                4u
#define SRX_FMSG_DATA_CHNUM(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_FMSG_DATA_CHNUM_SHIFT))&SRX_FMSG_DATA_CHNUM_MASK)
/* FMSG_CRC Bit Fields */
#define SRX_FMSG_CRC_CRC4b_MASK                  0xF0000u
#define SRX_FMSG_CRC_CRC4b_SHIFT                 16u
#define SRX_FMSG_CRC_CRC4b_WIDTH                 4u
#define SRX_FMSG_CRC_CRC4b(x)                    (((uint32_t)(((uint32_t)(x))<<SRX_FMSG_CRC_CRC4b_SHIFT))&SRX_FMSG_CRC_CRC4b_MASK)
/* FMSG_TS Bit Fields */
#define SRX_FMSG_TS_TS_MASK                      0xFFFFFFFFu
#define SRX_FMSG_TS_TS_SHIFT                     0u
#define SRX_FMSG_TS_TS_WIDTH                     32u
#define SRX_FMSG_TS_TS(x)                        (((uint32_t)(((uint32_t)(x))<<SRX_FMSG_TS_TS_SHIFT))&SRX_FMSG_TS_TS_MASK)
/* SMSG_BIT3 Bit Fields */
#define SRX_SMSG_BIT3_ID3_0_DATA15_12_MASK       0x1Eu
#define SRX_SMSG_BIT3_ID3_0_DATA15_12_SHIFT      1u
#define SRX_SMSG_BIT3_ID3_0_DATA15_12_WIDTH      4u
#define SRX_SMSG_BIT3_ID3_0_DATA15_12(x)         (((uint32_t)(((uint32_t)(x))<<SRX_SMSG_BIT3_ID3_0_DATA15_12_SHIFT))&SRX_SMSG_BIT3_ID3_0_DATA15_12_MASK)
#define SRX_SMSG_BIT3_ID7_4_ID3_0_MASK           0x3C0u
#define SRX_SMSG_BIT3_ID7_4_ID3_0_SHIFT          6u
#define SRX_SMSG_BIT3_ID7_4_ID3_0_WIDTH          4u
#define SRX_SMSG_BIT3_ID7_4_ID3_0(x)             (((uint32_t)(((uint32_t)(x))<<SRX_SMSG_BIT3_ID7_4_ID3_0_SHIFT))&SRX_SMSG_BIT3_ID7_4_ID3_0_MASK)
#define SRX_SMSG_BIT3_CFG_MASK                   0x400u
#define SRX_SMSG_BIT3_CFG_SHIFT                  10u
#define SRX_SMSG_BIT3_CFG_WIDTH                  1u
#define SRX_SMSG_BIT3_CFG(x)                     (((uint32_t)(((uint32_t)(x))<<SRX_SMSG_BIT3_CFG_SHIFT))&SRX_SMSG_BIT3_CFG_MASK)
#define SRX_SMSG_BIT3_TYPE_MASK                  0x8000000u
#define SRX_SMSG_BIT3_TYPE_SHIFT                 27u
#define SRX_SMSG_BIT3_TYPE_WIDTH                 1u
#define SRX_SMSG_BIT3_TYPE(x)                    (((uint32_t)(((uint32_t)(x))<<SRX_SMSG_BIT3_TYPE_SHIFT))&SRX_SMSG_BIT3_TYPE_MASK)
#define SRX_SMSG_BIT3_CHNUM_MASK                 0xF0000000u
#define SRX_SMSG_BIT3_CHNUM_SHIFT                28u
#define SRX_SMSG_BIT3_CHNUM_WIDTH                4u
#define SRX_SMSG_BIT3_CHNUM(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_SMSG_BIT3_CHNUM_SHIFT))&SRX_SMSG_BIT3_CHNUM_MASK)
/* SMSG_BIT2 Bit Fields */
#define SRX_SMSG_BIT2_DATA_MASK                  0xFFFu
#define SRX_SMSG_BIT2_DATA_SHIFT                 0u
#define SRX_SMSG_BIT2_DATA_WIDTH                 12u
#define SRX_SMSG_BIT2_DATA(x)                    (((uint32_t)(((uint32_t)(x))<<SRX_SMSG_BIT2_DATA_SHIFT))&SRX_SMSG_BIT2_DATA_MASK)
#define SRX_SMSG_BIT2_SMCRC_MASK                 0x3F0000u
#define SRX_SMSG_BIT2_SMCRC_SHIFT                16u
#define SRX_SMSG_BIT2_SMCRC_WIDTH                6u
#define SRX_SMSG_BIT2_SMCRC(x)                   (((uint32_t)(((uint32_t)(x))<<SRX_SMSG_BIT2_SMCRC_SHIFT))&SRX_SMSG_BIT2_SMCRC_MASK)
/* SMSG_TS Bit Fields */
#define SRX_SMSG_TS_TS_MASK                      0xFFFFFFFFu
#define SRX_SMSG_TS_TS_SHIFT                     0u
#define SRX_SMSG_TS_TS_WIDTH                     32u
#define SRX_SMSG_TS_TS(x)                        (((uint32_t)(((uint32_t)(x))<<SRX_SMSG_TS_TS_SHIFT))&SRX_SMSG_TS_TS_MASK)

/*!
 * @}
 */ /* end of group SRX_Register_Masks */


/*!
 * @}
 */ /* end of group SRX_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SSCM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SSCM_Peripheral_Access_Layer SSCM Peripheral Access Layer
 * @{
 */


/** SSCM - Size of Registers Arrays */

/** SSCM - Register Layout Typedef */
typedef struct {
  __IO uint16_t STATUS;                            /**< SSCM System Status, offset: 0x0 */
  __I  uint16_t MEMCONFIG;                         /**< SSCM System Memory and ID Register, offset: 0x2 */
       uint8_t RESERVED_0[2];
  __IO uint16_t ERROR;                             /**< SSCM Error Configuration Register, offset: 0x6 */
  __IO uint16_t DEBUGPORT;                         /**< SSCM Debug Status Port Register, offset: 0x8 */
       uint8_t RESERVED_1[22];
  __I  uint32_t UOPS;                              /**< User Option Status Register, offset: 0x20 */
       uint8_t RESERVED_2[4];
  __I  uint32_t PSA;                               /**< Processor Start Address Register, offset: 0x28 */
} SSCM_Type, *SSCM_MemMapPtr;

 /** Number of instances of the SSCM module. */
#define SSCM_INSTANCE_COUNT                      (1u)


/* SSCM - Peripheral instance base addresses */
/** Peripheral SSCM base address */
#define SSCM_BASE                                (0xFFFF8000u)
/** Peripheral SSCM base pointer */
#define SSCM                                     ((SSCM_Type *)SSCM_BASE)
/** Array initializer of SSCM peripheral base addresses */
#define SSCM_BASE_ADDRS                          { SSCM_BASE }
/** Array initializer of SSCM peripheral base pointers */
#define SSCM_BASE_PTRS                           { SSCM }

/* ----------------------------------------------------------------------------
   -- SSCM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SSCM_Register_Masks SSCM Register Masks
 * @{
 */

/* STATUS Bit Fields */
#define SSCM_STATUS_VLE_MASK                     0x10u
#define SSCM_STATUS_VLE_SHIFT                    4u
#define SSCM_STATUS_VLE_WIDTH                    1u
#define SSCM_STATUS_VLE(x)                       (((uint16_t)(((uint16_t)(x))<<SSCM_STATUS_VLE_SHIFT))&SSCM_STATUS_VLE_MASK)
#define SSCM_STATUS_BMODE_MASK                   0xE0u
#define SSCM_STATUS_BMODE_SHIFT                  5u
#define SSCM_STATUS_BMODE_WIDTH                  3u
#define SSCM_STATUS_BMODE(x)                     (((uint16_t)(((uint16_t)(x))<<SSCM_STATUS_BMODE_SHIFT))&SSCM_STATUS_BMODE_MASK)
#define SSCM_STATUS_SEC_MASK                     0x200u
#define SSCM_STATUS_SEC_SHIFT                    9u
#define SSCM_STATUS_SEC_WIDTH                    1u
#define SSCM_STATUS_SEC(x)                       (((uint16_t)(((uint16_t)(x))<<SSCM_STATUS_SEC_SHIFT))&SSCM_STATUS_SEC_MASK)
#define SSCM_STATUS_PUB_MASK                     0x400u
#define SSCM_STATUS_PUB_SHIFT                    10u
#define SSCM_STATUS_PUB_WIDTH                    1u
#define SSCM_STATUS_PUB(x)                       (((uint16_t)(((uint16_t)(x))<<SSCM_STATUS_PUB_SHIFT))&SSCM_STATUS_PUB_MASK)
#define SSCM_STATUS_NXEN_MASK                    0x800u
#define SSCM_STATUS_NXEN_SHIFT                   11u
#define SSCM_STATUS_NXEN_WIDTH                   1u
#define SSCM_STATUS_NXEN(x)                      (((uint16_t)(((uint16_t)(x))<<SSCM_STATUS_NXEN_SHIFT))&SSCM_STATUS_NXEN_MASK)
#define SSCM_STATUS_CERS_MASK                    0x2000u
#define SSCM_STATUS_CERS_SHIFT                   13u
#define SSCM_STATUS_CERS_WIDTH                   1u
#define SSCM_STATUS_CERS(x)                      (((uint16_t)(((uint16_t)(x))<<SSCM_STATUS_CERS_SHIFT))&SSCM_STATUS_CERS_MASK)
#define SSCM_STATUS_CER_MASK                     0x4000u
#define SSCM_STATUS_CER_SHIFT                    14u
#define SSCM_STATUS_CER_WIDTH                    1u
#define SSCM_STATUS_CER(x)                       (((uint16_t)(((uint16_t)(x))<<SSCM_STATUS_CER_SHIFT))&SSCM_STATUS_CER_MASK)
/* MEMCONFIG Bit Fields */
#define SSCM_MEMCONFIG_DVLD_MASK                 0x1u
#define SSCM_MEMCONFIG_DVLD_SHIFT                0u
#define SSCM_MEMCONFIG_DVLD_WIDTH                1u
#define SSCM_MEMCONFIG_DVLD(x)                   (((uint16_t)(((uint16_t)(x))<<SSCM_MEMCONFIG_DVLD_SHIFT))&SSCM_MEMCONFIG_DVLD_MASK)
#define SSCM_MEMCONFIG_MREV_MASK                 0x1Eu
#define SSCM_MEMCONFIG_MREV_SHIFT                1u
#define SSCM_MEMCONFIG_MREV_WIDTH                4u
#define SSCM_MEMCONFIG_MREV(x)                   (((uint16_t)(((uint16_t)(x))<<SSCM_MEMCONFIG_MREV_SHIFT))&SSCM_MEMCONFIG_MREV_MASK)
#define SSCM_MEMCONFIG_IVLD_MASK                 0x20u
#define SSCM_MEMCONFIG_IVLD_SHIFT                5u
#define SSCM_MEMCONFIG_IVLD_WIDTH                1u
#define SSCM_MEMCONFIG_IVLD(x)                   (((uint16_t)(((uint16_t)(x))<<SSCM_MEMCONFIG_IVLD_SHIFT))&SSCM_MEMCONFIG_IVLD_MASK)
#define SSCM_MEMCONFIG_JPIN_MASK                 0xFFC0u
#define SSCM_MEMCONFIG_JPIN_SHIFT                6u
#define SSCM_MEMCONFIG_JPIN_WIDTH                10u
#define SSCM_MEMCONFIG_JPIN(x)                   (((uint16_t)(((uint16_t)(x))<<SSCM_MEMCONFIG_JPIN_SHIFT))&SSCM_MEMCONFIG_JPIN_MASK)
/* ERROR Bit Fields */
#define SSCM_ERROR_RAE_MASK                      0x1u
#define SSCM_ERROR_RAE_SHIFT                     0u
#define SSCM_ERROR_RAE_WIDTH                     1u
#define SSCM_ERROR_RAE(x)                        (((uint16_t)(((uint16_t)(x))<<SSCM_ERROR_RAE_SHIFT))&SSCM_ERROR_RAE_MASK)
#define SSCM_ERROR_PAE_MASK                      0x2u
#define SSCM_ERROR_PAE_SHIFT                     1u
#define SSCM_ERROR_PAE_WIDTH                     1u
#define SSCM_ERROR_PAE(x)                        (((uint16_t)(((uint16_t)(x))<<SSCM_ERROR_PAE_SHIFT))&SSCM_ERROR_PAE_MASK)
/* DEBUGPORT Bit Fields */
#define SSCM_DEBUGPORT_DEBUG_MODE_MASK           0x7u
#define SSCM_DEBUGPORT_DEBUG_MODE_SHIFT          0u
#define SSCM_DEBUGPORT_DEBUG_MODE_WIDTH          3u
#define SSCM_DEBUGPORT_DEBUG_MODE(x)             (((uint16_t)(((uint16_t)(x))<<SSCM_DEBUGPORT_DEBUG_MODE_SHIFT))&SSCM_DEBUGPORT_DEBUG_MODE_MASK)
/* UOPS Bit Fields */
#define SSCM_UOPS_UOPT_MASK                      0xFFFFFFFFu
#define SSCM_UOPS_UOPT_SHIFT                     0u
#define SSCM_UOPS_UOPT_WIDTH                     32u
#define SSCM_UOPS_UOPT(x)                        (((uint32_t)(((uint32_t)(x))<<SSCM_UOPS_UOPT_SHIFT))&SSCM_UOPS_UOPT_MASK)
/* PSA Bit Fields */
#define SSCM_PSA_SADR_MASK                       0xFFFFFFFFu
#define SSCM_PSA_SADR_SHIFT                      0u
#define SSCM_PSA_SADR_WIDTH                      32u
#define SSCM_PSA_SADR(x)                         (((uint32_t)(((uint32_t)(x))<<SSCM_PSA_SADR_SHIFT))&SSCM_PSA_SADR_MASK)

/*!
 * @}
 */ /* end of group SSCM_Register_Masks */


/*!
 * @}
 */ /* end of group SSCM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- STCU2 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup STCU2_Peripheral_Access_Layer STCU2 Peripheral Access Layer
 * @{
 */


/** STCU2 - Size of Registers Arrays */
#define STCU2_LB_COUNT                           4u
#define STCU2_MB_CTRL_COUNT                      27u

/** STCU2 - Register Layout Typedef */
typedef struct {
       uint8_t RESERVED_0[4];
  __IO uint32_t RUNSW;                             /**< STCU2 Run Software Register, offset: 0x4 */
  __O  uint32_t SKC;                               /**< STCU2 SK Code Register, offset: 0x8 */
  __IO uint32_t CFG;                               /**< STCU2 Configuration Register, offset: 0xC */
       uint8_t RESERVED_1[4];
  __IO uint32_t WDG;                               /**< STCU2 Watchdog Register Granularity, offset: 0x14 */
       uint8_t RESERVED_2[12];
  __IO uint32_t ERR_STAT;                          /**< STCU2 Error Register, offset: 0x24 */
       uint8_t RESERVED_3[4];
  __I  uint32_t LBS;                               /**< STCU2 Startup LBIST Status Register, offset: 0x2C */
  __I  uint32_t LBE;                               /**< STCU2 Startup LBIST End Flag Register, offset: 0x30 */
  __I  uint32_t LBSSW;                             /**< STCU2 Shutdown LBIST Status Register, offset: 0x34 */
  __I  uint32_t LBESW;                             /**< STCU2 Shutdown LBIST End Flag Register, offset: 0x38 */
  __IO uint32_t LBRMSW;                            /**< STCU2 Shutdown LBIST Reset Management, offset: 0x3C */
       uint8_t RESERVED_4[4];
  __I  uint32_t MBSL;                              /**< STCU2 Startup MBIST Status Low Register, offset: 0x44 */
       uint8_t RESERVED_5[8];
  __I  uint32_t MBEL;                              /**< STCU2 Startup MBIST End Flag Low Register, offset: 0x50 */
       uint8_t RESERVED_6[8];
  __I  uint32_t MBSLSW;                            /**< STCU2 Shutdown MBIST Status Low Register, offset: 0x5C */
       uint8_t RESERVED_7[8];
  __I  uint32_t MBELSW;                            /**< STCU2 Shutdown MBIST End Flag Low Register, offset: 0x68 */
       uint8_t RESERVED_8[148];
  struct {                                         /* offset: 0x100, array step: 0x40 */
    __IO uint32_t CTRL;                              /**< STCU2 LBIST Control Register, array offset: 0x100, array step: 0x40 */
    __IO uint32_t PCS;                               /**< STCU2 LBIST PC Stop Register, array offset: 0x104, array step: 0x40 */
         uint8_t RESERVED_0[24];
    __IO uint32_t MISRELSW;                          /**< STCU2 Shutdown LBIST MISR Expected Low Register, array offset: 0x120, array step: 0x40 */
    __IO uint32_t MISREHSW;                          /**< STCU2 Shutdown LBIST MISR Expected High Register, array offset: 0x124, array step: 0x40 */
         uint8_t RESERVED_1[24];
  } LB[STCU2_LB_COUNT];
       uint8_t RESERVED_9[1024];
  __IO uint32_t MB_CTRL[STCU2_MB_CTRL_COUNT];      /**< STCU2 MBIST Control Register, array offset: 0x600, array step: 0x4 */
} STCU2_Type, *STCU2_MemMapPtr;

 /** Number of instances of the STCU2 module. */
#define STCU2_INSTANCE_COUNT                     (1u)


/* STCU2 - Peripheral instance base addresses */
/** Peripheral STCU2 base address */
#define STCU2_BASE                               (0xFFF44000u)
/** Peripheral STCU2 base pointer */
#define STCU2                                    ((STCU2_Type *)STCU2_BASE)
/** Array initializer of STCU2 peripheral base addresses */
#define STCU2_BASE_ADDRS                         { STCU2_BASE }
/** Array initializer of STCU2 peripheral base pointers */
#define STCU2_BASE_PTRS                          { STCU2 }

/* ----------------------------------------------------------------------------
   -- STCU2 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup STCU2_Register_Masks STCU2 Register Masks
 * @{
 */

/* RUNSW Bit Fields */
#define STCU2_RUNSW_RUNSW_MASK                   0x1u
#define STCU2_RUNSW_RUNSW_SHIFT                  0u
#define STCU2_RUNSW_RUNSW_WIDTH                  1u
#define STCU2_RUNSW_RUNSW(x)                     (((uint32_t)(((uint32_t)(x))<<STCU2_RUNSW_RUNSW_SHIFT))&STCU2_RUNSW_RUNSW_MASK)
#define STCU2_RUNSW_LBSWPLLEN_MASK               0x100u
#define STCU2_RUNSW_LBSWPLLEN_SHIFT              8u
#define STCU2_RUNSW_LBSWPLLEN_WIDTH              1u
#define STCU2_RUNSW_LBSWPLLEN(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_RUNSW_LBSWPLLEN_SHIFT))&STCU2_RUNSW_LBSWPLLEN_MASK)
#define STCU2_RUNSW_MBSWPLLEN_MASK               0x200u
#define STCU2_RUNSW_MBSWPLLEN_SHIFT              9u
#define STCU2_RUNSW_MBSWPLLEN_WIDTH              1u
#define STCU2_RUNSW_MBSWPLLEN(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_RUNSW_MBSWPLLEN_SHIFT))&STCU2_RUNSW_MBSWPLLEN_MASK)
/* SKC Bit Fields */
#define STCU2_SKC_SKC_MASK                       0xFFFFFFFFu
#define STCU2_SKC_SKC_SHIFT                      0u
#define STCU2_SKC_SKC_WIDTH                      32u
#define STCU2_SKC_SKC(x)                         (((uint32_t)(((uint32_t)(x))<<STCU2_SKC_SKC_SHIFT))&STCU2_SKC_SKC_MASK)
/* CFG Bit Fields */
#define STCU2_CFG_CLK_CFG_MASK                   0x7u
#define STCU2_CFG_CLK_CFG_SHIFT                  0u
#define STCU2_CFG_CLK_CFG_WIDTH                  3u
#define STCU2_CFG_CLK_CFG(x)                     (((uint32_t)(((uint32_t)(x))<<STCU2_CFG_CLK_CFG_SHIFT))&STCU2_CFG_CLK_CFG_MASK)
#define STCU2_CFG_MBU_MASK                       0x8u
#define STCU2_CFG_MBU_SHIFT                      3u
#define STCU2_CFG_MBU_WIDTH                      1u
#define STCU2_CFG_MBU(x)                         (((uint32_t)(((uint32_t)(x))<<STCU2_CFG_MBU_SHIFT))&STCU2_CFG_MBU_MASK)
#define STCU2_CFG_PMOSEN_MASK                    0x10u
#define STCU2_CFG_PMOSEN_SHIFT                   4u
#define STCU2_CFG_PMOSEN_WIDTH                   1u
#define STCU2_CFG_PMOSEN(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_CFG_PMOSEN_SHIFT))&STCU2_CFG_PMOSEN_MASK)
#define STCU2_CFG_WRP_MASK                       0x100u
#define STCU2_CFG_WRP_SHIFT                      8u
#define STCU2_CFG_WRP_WIDTH                      1u
#define STCU2_CFG_WRP(x)                         (((uint32_t)(((uint32_t)(x))<<STCU2_CFG_WRP_SHIFT))&STCU2_CFG_WRP_MASK)
#define STCU2_CFG_LB_DELAY_MASK                  0xFF0000u
#define STCU2_CFG_LB_DELAY_SHIFT                 16u
#define STCU2_CFG_LB_DELAY_WIDTH                 8u
#define STCU2_CFG_LB_DELAY(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_CFG_LB_DELAY_SHIFT))&STCU2_CFG_LB_DELAY_MASK)
#define STCU2_CFG_PTR_MASK                       0x7F000000u
#define STCU2_CFG_PTR_SHIFT                      24u
#define STCU2_CFG_PTR_WIDTH                      7u
#define STCU2_CFG_PTR(x)                         (((uint32_t)(((uint32_t)(x))<<STCU2_CFG_PTR_SHIFT))&STCU2_CFG_PTR_MASK)
/* WDG Bit Fields */
#define STCU2_WDG_WDGEOC_MASK                    0xFFFFFFFFu
#define STCU2_WDG_WDGEOC_SHIFT                   0u
#define STCU2_WDG_WDGEOC_WIDTH                   32u
#define STCU2_WDG_WDGEOC(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_WDG_WDGEOC_SHIFT))&STCU2_WDG_WDGEOC_MASK)
/* ERR_STAT Bit Fields */
#define STCU2_ERR_STAT_INVP_MASK                 0x1u
#define STCU2_ERR_STAT_INVP_SHIFT                0u
#define STCU2_ERR_STAT_INVP_WIDTH                1u
#define STCU2_ERR_STAT_INVP(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_INVP_SHIFT))&STCU2_ERR_STAT_INVP_MASK)
#define STCU2_ERR_STAT_ENGE_MASK                 0x2u
#define STCU2_ERR_STAT_ENGE_SHIFT                1u
#define STCU2_ERR_STAT_ENGE_WIDTH                1u
#define STCU2_ERR_STAT_ENGE(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_ENGE_SHIFT))&STCU2_ERR_STAT_ENGE_MASK)
#define STCU2_ERR_STAT_WDTO_MASK                 0x8u
#define STCU2_ERR_STAT_WDTO_SHIFT                3u
#define STCU2_ERR_STAT_WDTO_WIDTH                1u
#define STCU2_ERR_STAT_WDTO(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_WDTO_SHIFT))&STCU2_ERR_STAT_WDTO_MASK)
#define STCU2_ERR_STAT_LOCKE_MASK                0x10u
#define STCU2_ERR_STAT_LOCKE_SHIFT               4u
#define STCU2_ERR_STAT_LOCKE_WIDTH               1u
#define STCU2_ERR_STAT_LOCKE(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_LOCKE_SHIFT))&STCU2_ERR_STAT_LOCKE_MASK)
#define STCU2_ERR_STAT_NCFSF_MASK                0x100u
#define STCU2_ERR_STAT_NCFSF_SHIFT               8u
#define STCU2_ERR_STAT_NCFSF_WIDTH               1u
#define STCU2_ERR_STAT_NCFSF(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_NCFSF_SHIFT))&STCU2_ERR_STAT_NCFSF_MASK)
#define STCU2_ERR_STAT_CFSF_MASK                 0x200u
#define STCU2_ERR_STAT_CFSF_SHIFT                9u
#define STCU2_ERR_STAT_CFSF_WIDTH                1u
#define STCU2_ERR_STAT_CFSF(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_CFSF_SHIFT))&STCU2_ERR_STAT_CFSF_MASK)
#define STCU2_ERR_STAT_INVPSW_MASK               0x10000u
#define STCU2_ERR_STAT_INVPSW_SHIFT              16u
#define STCU2_ERR_STAT_INVPSW_WIDTH              1u
#define STCU2_ERR_STAT_INVPSW(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_INVPSW_SHIFT))&STCU2_ERR_STAT_INVPSW_MASK)
#define STCU2_ERR_STAT_ENGESW_MASK               0x20000u
#define STCU2_ERR_STAT_ENGESW_SHIFT              17u
#define STCU2_ERR_STAT_ENGESW_WIDTH              1u
#define STCU2_ERR_STAT_ENGESW(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_ENGESW_SHIFT))&STCU2_ERR_STAT_ENGESW_MASK)
#define STCU2_ERR_STAT_WDTOSW_MASK               0x80000u
#define STCU2_ERR_STAT_WDTOSW_SHIFT              19u
#define STCU2_ERR_STAT_WDTOSW_WIDTH              1u
#define STCU2_ERR_STAT_WDTOSW(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_WDTOSW_SHIFT))&STCU2_ERR_STAT_WDTOSW_MASK)
#define STCU2_ERR_STAT_LOCKESW_MASK              0x100000u
#define STCU2_ERR_STAT_LOCKESW_SHIFT             20u
#define STCU2_ERR_STAT_LOCKESW_WIDTH             1u
#define STCU2_ERR_STAT_LOCKESW(x)                (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_LOCKESW_SHIFT))&STCU2_ERR_STAT_LOCKESW_MASK)
/* LBS Bit Fields */
#define STCU2_LBS_LBS0_MASK                      0x1u
#define STCU2_LBS_LBS0_SHIFT                     0u
#define STCU2_LBS_LBS0_WIDTH                     1u
#define STCU2_LBS_LBS0(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_LBS_LBS0_SHIFT))&STCU2_LBS_LBS0_MASK)
#define STCU2_LBS_LBS1_MASK                      0x2u
#define STCU2_LBS_LBS1_SHIFT                     1u
#define STCU2_LBS_LBS1_WIDTH                     1u
#define STCU2_LBS_LBS1(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_LBS_LBS1_SHIFT))&STCU2_LBS_LBS1_MASK)
#define STCU2_LBS_LBS2_MASK                      0x4u
#define STCU2_LBS_LBS2_SHIFT                     2u
#define STCU2_LBS_LBS2_WIDTH                     1u
#define STCU2_LBS_LBS2(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_LBS_LBS2_SHIFT))&STCU2_LBS_LBS2_MASK)
#define STCU2_LBS_LBS3_MASK                      0x8u
#define STCU2_LBS_LBS3_SHIFT                     3u
#define STCU2_LBS_LBS3_WIDTH                     1u
#define STCU2_LBS_LBS3(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_LBS_LBS3_SHIFT))&STCU2_LBS_LBS3_MASK)
/* LBE Bit Fields */
#define STCU2_LBE_LBE0_MASK                      0x1u
#define STCU2_LBE_LBE0_SHIFT                     0u
#define STCU2_LBE_LBE0_WIDTH                     1u
#define STCU2_LBE_LBE0(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_LBE_LBE0_SHIFT))&STCU2_LBE_LBE0_MASK)
#define STCU2_LBE_LBE1_MASK                      0x2u
#define STCU2_LBE_LBE1_SHIFT                     1u
#define STCU2_LBE_LBE1_WIDTH                     1u
#define STCU2_LBE_LBE1(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_LBE_LBE1_SHIFT))&STCU2_LBE_LBE1_MASK)
#define STCU2_LBE_LBE2_MASK                      0x4u
#define STCU2_LBE_LBE2_SHIFT                     2u
#define STCU2_LBE_LBE2_WIDTH                     1u
#define STCU2_LBE_LBE2(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_LBE_LBE2_SHIFT))&STCU2_LBE_LBE2_MASK)
#define STCU2_LBE_LBE3_MASK                      0x8u
#define STCU2_LBE_LBE3_SHIFT                     3u
#define STCU2_LBE_LBE3_WIDTH                     1u
#define STCU2_LBE_LBE3(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_LBE_LBE3_SHIFT))&STCU2_LBE_LBE3_MASK)
/* LBSSW Bit Fields */
#define STCU2_LBSSW_LBSSW0_MASK                  0x1u
#define STCU2_LBSSW_LBSSW0_SHIFT                 0u
#define STCU2_LBSSW_LBSSW0_WIDTH                 1u
#define STCU2_LBSSW_LBSSW0(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBSSW_LBSSW0_SHIFT))&STCU2_LBSSW_LBSSW0_MASK)
#define STCU2_LBSSW_LBSSW1_MASK                  0x2u
#define STCU2_LBSSW_LBSSW1_SHIFT                 1u
#define STCU2_LBSSW_LBSSW1_WIDTH                 1u
#define STCU2_LBSSW_LBSSW1(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBSSW_LBSSW1_SHIFT))&STCU2_LBSSW_LBSSW1_MASK)
#define STCU2_LBSSW_LBSSW2_MASK                  0x4u
#define STCU2_LBSSW_LBSSW2_SHIFT                 2u
#define STCU2_LBSSW_LBSSW2_WIDTH                 1u
#define STCU2_LBSSW_LBSSW2(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBSSW_LBSSW2_SHIFT))&STCU2_LBSSW_LBSSW2_MASK)
#define STCU2_LBSSW_LBSSW3_MASK                  0x8u
#define STCU2_LBSSW_LBSSW3_SHIFT                 3u
#define STCU2_LBSSW_LBSSW3_WIDTH                 1u
#define STCU2_LBSSW_LBSSW3(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBSSW_LBSSW3_SHIFT))&STCU2_LBSSW_LBSSW3_MASK)
/* LBESW Bit Fields */
#define STCU2_LBESW_LBESW0_MASK                  0x1u
#define STCU2_LBESW_LBESW0_SHIFT                 0u
#define STCU2_LBESW_LBESW0_WIDTH                 1u
#define STCU2_LBESW_LBESW0(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBESW_LBESW0_SHIFT))&STCU2_LBESW_LBESW0_MASK)
#define STCU2_LBESW_LBESW1_MASK                  0x2u
#define STCU2_LBESW_LBESW1_SHIFT                 1u
#define STCU2_LBESW_LBESW1_WIDTH                 1u
#define STCU2_LBESW_LBESW1(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBESW_LBESW1_SHIFT))&STCU2_LBESW_LBESW1_MASK)
#define STCU2_LBESW_LBESW2_MASK                  0x4u
#define STCU2_LBESW_LBESW2_SHIFT                 2u
#define STCU2_LBESW_LBESW2_WIDTH                 1u
#define STCU2_LBESW_LBESW2(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBESW_LBESW2_SHIFT))&STCU2_LBESW_LBESW2_MASK)
#define STCU2_LBESW_LBESW3_MASK                  0x8u
#define STCU2_LBESW_LBESW3_SHIFT                 3u
#define STCU2_LBESW_LBESW3_WIDTH                 1u
#define STCU2_LBESW_LBESW3(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBESW_LBESW3_SHIFT))&STCU2_LBESW_LBESW3_MASK)
/* LBRMSW Bit Fields */
#define STCU2_LBRMSW_LBRMSW0_MASK                0x1u
#define STCU2_LBRMSW_LBRMSW0_SHIFT               0u
#define STCU2_LBRMSW_LBRMSW0_WIDTH               1u
#define STCU2_LBRMSW_LBRMSW0(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW0_SHIFT))&STCU2_LBRMSW_LBRMSW0_MASK)
#define STCU2_LBRMSW_LBRMSW1_MASK                0x2u
#define STCU2_LBRMSW_LBRMSW1_SHIFT               1u
#define STCU2_LBRMSW_LBRMSW1_WIDTH               1u
#define STCU2_LBRMSW_LBRMSW1(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW1_SHIFT))&STCU2_LBRMSW_LBRMSW1_MASK)
#define STCU2_LBRMSW_LBRMSW2_MASK                0x4u
#define STCU2_LBRMSW_LBRMSW2_SHIFT               2u
#define STCU2_LBRMSW_LBRMSW2_WIDTH               1u
#define STCU2_LBRMSW_LBRMSW2(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW2_SHIFT))&STCU2_LBRMSW_LBRMSW2_MASK)
#define STCU2_LBRMSW_LBRMSW3_MASK                0x8u
#define STCU2_LBRMSW_LBRMSW3_SHIFT               3u
#define STCU2_LBRMSW_LBRMSW3_WIDTH               1u
#define STCU2_LBRMSW_LBRMSW3(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW3_SHIFT))&STCU2_LBRMSW_LBRMSW3_MASK)
#define STCU2_LBRMSW_LBRMSW4_MASK                0x10u
#define STCU2_LBRMSW_LBRMSW4_SHIFT               4u
#define STCU2_LBRMSW_LBRMSW4_WIDTH               1u
#define STCU2_LBRMSW_LBRMSW4(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW4_SHIFT))&STCU2_LBRMSW_LBRMSW4_MASK)
#define STCU2_LBRMSW_LBRMSW5_MASK                0x20u
#define STCU2_LBRMSW_LBRMSW5_SHIFT               5u
#define STCU2_LBRMSW_LBRMSW5_WIDTH               1u
#define STCU2_LBRMSW_LBRMSW5(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW5_SHIFT))&STCU2_LBRMSW_LBRMSW5_MASK)
#define STCU2_LBRMSW_LBRMSW6_MASK                0x40u
#define STCU2_LBRMSW_LBRMSW6_SHIFT               6u
#define STCU2_LBRMSW_LBRMSW6_WIDTH               1u
#define STCU2_LBRMSW_LBRMSW6(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW6_SHIFT))&STCU2_LBRMSW_LBRMSW6_MASK)
#define STCU2_LBRMSW_LBRMSW7_MASK                0x80u
#define STCU2_LBRMSW_LBRMSW7_SHIFT               7u
#define STCU2_LBRMSW_LBRMSW7_WIDTH               1u
#define STCU2_LBRMSW_LBRMSW7(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW7_SHIFT))&STCU2_LBRMSW_LBRMSW7_MASK)
#define STCU2_LBRMSW_LBRMSW8_MASK                0x100u
#define STCU2_LBRMSW_LBRMSW8_SHIFT               8u
#define STCU2_LBRMSW_LBRMSW8_WIDTH               1u
#define STCU2_LBRMSW_LBRMSW8(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW8_SHIFT))&STCU2_LBRMSW_LBRMSW8_MASK)
#define STCU2_LBRMSW_LBRMSW9_MASK                0x200u
#define STCU2_LBRMSW_LBRMSW9_SHIFT               9u
#define STCU2_LBRMSW_LBRMSW9_WIDTH               1u
#define STCU2_LBRMSW_LBRMSW9(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW9_SHIFT))&STCU2_LBRMSW_LBRMSW9_MASK)
#define STCU2_LBRMSW_LBRMSW10_MASK               0x400u
#define STCU2_LBRMSW_LBRMSW10_SHIFT              10u
#define STCU2_LBRMSW_LBRMSW10_WIDTH              1u
#define STCU2_LBRMSW_LBRMSW10(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW10_SHIFT))&STCU2_LBRMSW_LBRMSW10_MASK)
#define STCU2_LBRMSW_LBRMSW11_MASK               0x800u
#define STCU2_LBRMSW_LBRMSW11_SHIFT              11u
#define STCU2_LBRMSW_LBRMSW11_WIDTH              1u
#define STCU2_LBRMSW_LBRMSW11(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW11_SHIFT))&STCU2_LBRMSW_LBRMSW11_MASK)
#define STCU2_LBRMSW_LBRMSW12_MASK               0x1000u
#define STCU2_LBRMSW_LBRMSW12_SHIFT              12u
#define STCU2_LBRMSW_LBRMSW12_WIDTH              1u
#define STCU2_LBRMSW_LBRMSW12(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW12_SHIFT))&STCU2_LBRMSW_LBRMSW12_MASK)
#define STCU2_LBRMSW_LBRMSW13_MASK               0x2000u
#define STCU2_LBRMSW_LBRMSW13_SHIFT              13u
#define STCU2_LBRMSW_LBRMSW13_WIDTH              1u
#define STCU2_LBRMSW_LBRMSW13(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW13_SHIFT))&STCU2_LBRMSW_LBRMSW13_MASK)
#define STCU2_LBRMSW_LBRMSW14_MASK               0x4000u
#define STCU2_LBRMSW_LBRMSW14_SHIFT              14u
#define STCU2_LBRMSW_LBRMSW14_WIDTH              1u
#define STCU2_LBRMSW_LBRMSW14(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW14_SHIFT))&STCU2_LBRMSW_LBRMSW14_MASK)
#define STCU2_LBRMSW_LBRMSW15_MASK               0x8000u
#define STCU2_LBRMSW_LBRMSW15_SHIFT              15u
#define STCU2_LBRMSW_LBRMSW15_WIDTH              1u
#define STCU2_LBRMSW_LBRMSW15(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_LBRMSW_LBRMSW15_SHIFT))&STCU2_LBRMSW_LBRMSW15_MASK)
/* MBSL Bit Fields */
#define STCU2_MBSL_MBS0_MASK                     0x1u
#define STCU2_MBSL_MBS0_SHIFT                    0u
#define STCU2_MBSL_MBS0_WIDTH                    1u
#define STCU2_MBSL_MBS0(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS0_SHIFT))&STCU2_MBSL_MBS0_MASK)
#define STCU2_MBSL_MBS1_MASK                     0x2u
#define STCU2_MBSL_MBS1_SHIFT                    1u
#define STCU2_MBSL_MBS1_WIDTH                    1u
#define STCU2_MBSL_MBS1(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS1_SHIFT))&STCU2_MBSL_MBS1_MASK)
#define STCU2_MBSL_MBS2_MASK                     0x4u
#define STCU2_MBSL_MBS2_SHIFT                    2u
#define STCU2_MBSL_MBS2_WIDTH                    1u
#define STCU2_MBSL_MBS2(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS2_SHIFT))&STCU2_MBSL_MBS2_MASK)
#define STCU2_MBSL_MBS3_MASK                     0x8u
#define STCU2_MBSL_MBS3_SHIFT                    3u
#define STCU2_MBSL_MBS3_WIDTH                    1u
#define STCU2_MBSL_MBS3(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS3_SHIFT))&STCU2_MBSL_MBS3_MASK)
#define STCU2_MBSL_MBS4_MASK                     0x10u
#define STCU2_MBSL_MBS4_SHIFT                    4u
#define STCU2_MBSL_MBS4_WIDTH                    1u
#define STCU2_MBSL_MBS4(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS4_SHIFT))&STCU2_MBSL_MBS4_MASK)
#define STCU2_MBSL_MBS5_MASK                     0x20u
#define STCU2_MBSL_MBS5_SHIFT                    5u
#define STCU2_MBSL_MBS5_WIDTH                    1u
#define STCU2_MBSL_MBS5(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS5_SHIFT))&STCU2_MBSL_MBS5_MASK)
#define STCU2_MBSL_MBS6_MASK                     0x40u
#define STCU2_MBSL_MBS6_SHIFT                    6u
#define STCU2_MBSL_MBS6_WIDTH                    1u
#define STCU2_MBSL_MBS6(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS6_SHIFT))&STCU2_MBSL_MBS6_MASK)
#define STCU2_MBSL_MBS7_MASK                     0x80u
#define STCU2_MBSL_MBS7_SHIFT                    7u
#define STCU2_MBSL_MBS7_WIDTH                    1u
#define STCU2_MBSL_MBS7(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS7_SHIFT))&STCU2_MBSL_MBS7_MASK)
#define STCU2_MBSL_MBS8_MASK                     0x100u
#define STCU2_MBSL_MBS8_SHIFT                    8u
#define STCU2_MBSL_MBS8_WIDTH                    1u
#define STCU2_MBSL_MBS8(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS8_SHIFT))&STCU2_MBSL_MBS8_MASK)
#define STCU2_MBSL_MBS9_MASK                     0x200u
#define STCU2_MBSL_MBS9_SHIFT                    9u
#define STCU2_MBSL_MBS9_WIDTH                    1u
#define STCU2_MBSL_MBS9(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS9_SHIFT))&STCU2_MBSL_MBS9_MASK)
#define STCU2_MBSL_MBS10_MASK                    0x400u
#define STCU2_MBSL_MBS10_SHIFT                   10u
#define STCU2_MBSL_MBS10_WIDTH                   1u
#define STCU2_MBSL_MBS10(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS10_SHIFT))&STCU2_MBSL_MBS10_MASK)
#define STCU2_MBSL_MBS11_MASK                    0x800u
#define STCU2_MBSL_MBS11_SHIFT                   11u
#define STCU2_MBSL_MBS11_WIDTH                   1u
#define STCU2_MBSL_MBS11(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS11_SHIFT))&STCU2_MBSL_MBS11_MASK)
#define STCU2_MBSL_MBS12_MASK                    0x1000u
#define STCU2_MBSL_MBS12_SHIFT                   12u
#define STCU2_MBSL_MBS12_WIDTH                   1u
#define STCU2_MBSL_MBS12(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS12_SHIFT))&STCU2_MBSL_MBS12_MASK)
#define STCU2_MBSL_MBS13_MASK                    0x2000u
#define STCU2_MBSL_MBS13_SHIFT                   13u
#define STCU2_MBSL_MBS13_WIDTH                   1u
#define STCU2_MBSL_MBS13(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS13_SHIFT))&STCU2_MBSL_MBS13_MASK)
#define STCU2_MBSL_MBS14_MASK                    0x4000u
#define STCU2_MBSL_MBS14_SHIFT                   14u
#define STCU2_MBSL_MBS14_WIDTH                   1u
#define STCU2_MBSL_MBS14(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS14_SHIFT))&STCU2_MBSL_MBS14_MASK)
#define STCU2_MBSL_MBS15_MASK                    0x8000u
#define STCU2_MBSL_MBS15_SHIFT                   15u
#define STCU2_MBSL_MBS15_WIDTH                   1u
#define STCU2_MBSL_MBS15(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS15_SHIFT))&STCU2_MBSL_MBS15_MASK)
#define STCU2_MBSL_MBS16_MASK                    0x10000u
#define STCU2_MBSL_MBS16_SHIFT                   16u
#define STCU2_MBSL_MBS16_WIDTH                   1u
#define STCU2_MBSL_MBS16(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS16_SHIFT))&STCU2_MBSL_MBS16_MASK)
#define STCU2_MBSL_MBS17_MASK                    0x20000u
#define STCU2_MBSL_MBS17_SHIFT                   17u
#define STCU2_MBSL_MBS17_WIDTH                   1u
#define STCU2_MBSL_MBS17(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS17_SHIFT))&STCU2_MBSL_MBS17_MASK)
#define STCU2_MBSL_MBS18_MASK                    0x40000u
#define STCU2_MBSL_MBS18_SHIFT                   18u
#define STCU2_MBSL_MBS18_WIDTH                   1u
#define STCU2_MBSL_MBS18(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS18_SHIFT))&STCU2_MBSL_MBS18_MASK)
#define STCU2_MBSL_MBS19_MASK                    0x80000u
#define STCU2_MBSL_MBS19_SHIFT                   19u
#define STCU2_MBSL_MBS19_WIDTH                   1u
#define STCU2_MBSL_MBS19(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS19_SHIFT))&STCU2_MBSL_MBS19_MASK)
#define STCU2_MBSL_MBS20_MASK                    0x100000u
#define STCU2_MBSL_MBS20_SHIFT                   20u
#define STCU2_MBSL_MBS20_WIDTH                   1u
#define STCU2_MBSL_MBS20(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS20_SHIFT))&STCU2_MBSL_MBS20_MASK)
#define STCU2_MBSL_MBS21_MASK                    0x200000u
#define STCU2_MBSL_MBS21_SHIFT                   21u
#define STCU2_MBSL_MBS21_WIDTH                   1u
#define STCU2_MBSL_MBS21(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS21_SHIFT))&STCU2_MBSL_MBS21_MASK)
#define STCU2_MBSL_MBS22_MASK                    0x400000u
#define STCU2_MBSL_MBS22_SHIFT                   22u
#define STCU2_MBSL_MBS22_WIDTH                   1u
#define STCU2_MBSL_MBS22(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS22_SHIFT))&STCU2_MBSL_MBS22_MASK)
#define STCU2_MBSL_MBS23_MASK                    0x800000u
#define STCU2_MBSL_MBS23_SHIFT                   23u
#define STCU2_MBSL_MBS23_WIDTH                   1u
#define STCU2_MBSL_MBS23(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS23_SHIFT))&STCU2_MBSL_MBS23_MASK)
#define STCU2_MBSL_MBS24_MASK                    0x1000000u
#define STCU2_MBSL_MBS24_SHIFT                   24u
#define STCU2_MBSL_MBS24_WIDTH                   1u
#define STCU2_MBSL_MBS24(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS24_SHIFT))&STCU2_MBSL_MBS24_MASK)
#define STCU2_MBSL_MBS25_MASK                    0x2000000u
#define STCU2_MBSL_MBS25_SHIFT                   25u
#define STCU2_MBSL_MBS25_WIDTH                   1u
#define STCU2_MBSL_MBS25(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS25_SHIFT))&STCU2_MBSL_MBS25_MASK)
#define STCU2_MBSL_MBS26_MASK                    0x4000000u
#define STCU2_MBSL_MBS26_SHIFT                   26u
#define STCU2_MBSL_MBS26_WIDTH                   1u
#define STCU2_MBSL_MBS26(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS26_SHIFT))&STCU2_MBSL_MBS26_MASK)
/* MBEL Bit Fields */
#define STCU2_MBEL_MBE0_MASK                     0x1u
#define STCU2_MBEL_MBE0_SHIFT                    0u
#define STCU2_MBEL_MBE0_WIDTH                    1u
#define STCU2_MBEL_MBE0(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE0_SHIFT))&STCU2_MBEL_MBE0_MASK)
#define STCU2_MBEL_MBE1_MASK                     0x2u
#define STCU2_MBEL_MBE1_SHIFT                    1u
#define STCU2_MBEL_MBE1_WIDTH                    1u
#define STCU2_MBEL_MBE1(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE1_SHIFT))&STCU2_MBEL_MBE1_MASK)
#define STCU2_MBEL_MBE2_MASK                     0x4u
#define STCU2_MBEL_MBE2_SHIFT                    2u
#define STCU2_MBEL_MBE2_WIDTH                    1u
#define STCU2_MBEL_MBE2(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE2_SHIFT))&STCU2_MBEL_MBE2_MASK)
#define STCU2_MBEL_MBE3_MASK                     0x8u
#define STCU2_MBEL_MBE3_SHIFT                    3u
#define STCU2_MBEL_MBE3_WIDTH                    1u
#define STCU2_MBEL_MBE3(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE3_SHIFT))&STCU2_MBEL_MBE3_MASK)
#define STCU2_MBEL_MBE4_MASK                     0x10u
#define STCU2_MBEL_MBE4_SHIFT                    4u
#define STCU2_MBEL_MBE4_WIDTH                    1u
#define STCU2_MBEL_MBE4(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE4_SHIFT))&STCU2_MBEL_MBE4_MASK)
#define STCU2_MBEL_MBE5_MASK                     0x20u
#define STCU2_MBEL_MBE5_SHIFT                    5u
#define STCU2_MBEL_MBE5_WIDTH                    1u
#define STCU2_MBEL_MBE5(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE5_SHIFT))&STCU2_MBEL_MBE5_MASK)
#define STCU2_MBEL_MBE6_MASK                     0x40u
#define STCU2_MBEL_MBE6_SHIFT                    6u
#define STCU2_MBEL_MBE6_WIDTH                    1u
#define STCU2_MBEL_MBE6(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE6_SHIFT))&STCU2_MBEL_MBE6_MASK)
#define STCU2_MBEL_MBE7_MASK                     0x80u
#define STCU2_MBEL_MBE7_SHIFT                    7u
#define STCU2_MBEL_MBE7_WIDTH                    1u
#define STCU2_MBEL_MBE7(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE7_SHIFT))&STCU2_MBEL_MBE7_MASK)
#define STCU2_MBEL_MBE8_MASK                     0x100u
#define STCU2_MBEL_MBE8_SHIFT                    8u
#define STCU2_MBEL_MBE8_WIDTH                    1u
#define STCU2_MBEL_MBE8(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE8_SHIFT))&STCU2_MBEL_MBE8_MASK)
#define STCU2_MBEL_MBE9_MASK                     0x200u
#define STCU2_MBEL_MBE9_SHIFT                    9u
#define STCU2_MBEL_MBE9_WIDTH                    1u
#define STCU2_MBEL_MBE9(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE9_SHIFT))&STCU2_MBEL_MBE9_MASK)
#define STCU2_MBEL_MBE10_MASK                    0x400u
#define STCU2_MBEL_MBE10_SHIFT                   10u
#define STCU2_MBEL_MBE10_WIDTH                   1u
#define STCU2_MBEL_MBE10(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE10_SHIFT))&STCU2_MBEL_MBE10_MASK)
#define STCU2_MBEL_MBE11_MASK                    0x800u
#define STCU2_MBEL_MBE11_SHIFT                   11u
#define STCU2_MBEL_MBE11_WIDTH                   1u
#define STCU2_MBEL_MBE11(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE11_SHIFT))&STCU2_MBEL_MBE11_MASK)
#define STCU2_MBEL_MBE12_MASK                    0x1000u
#define STCU2_MBEL_MBE12_SHIFT                   12u
#define STCU2_MBEL_MBE12_WIDTH                   1u
#define STCU2_MBEL_MBE12(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE12_SHIFT))&STCU2_MBEL_MBE12_MASK)
#define STCU2_MBEL_MBE13_MASK                    0x2000u
#define STCU2_MBEL_MBE13_SHIFT                   13u
#define STCU2_MBEL_MBE13_WIDTH                   1u
#define STCU2_MBEL_MBE13(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE13_SHIFT))&STCU2_MBEL_MBE13_MASK)
#define STCU2_MBEL_MBE14_MASK                    0x4000u
#define STCU2_MBEL_MBE14_SHIFT                   14u
#define STCU2_MBEL_MBE14_WIDTH                   1u
#define STCU2_MBEL_MBE14(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE14_SHIFT))&STCU2_MBEL_MBE14_MASK)
#define STCU2_MBEL_MBE15_MASK                    0x8000u
#define STCU2_MBEL_MBE15_SHIFT                   15u
#define STCU2_MBEL_MBE15_WIDTH                   1u
#define STCU2_MBEL_MBE15(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE15_SHIFT))&STCU2_MBEL_MBE15_MASK)
#define STCU2_MBEL_MBE16_MASK                    0x10000u
#define STCU2_MBEL_MBE16_SHIFT                   16u
#define STCU2_MBEL_MBE16_WIDTH                   1u
#define STCU2_MBEL_MBE16(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE16_SHIFT))&STCU2_MBEL_MBE16_MASK)
#define STCU2_MBEL_MBE17_MASK                    0x20000u
#define STCU2_MBEL_MBE17_SHIFT                   17u
#define STCU2_MBEL_MBE17_WIDTH                   1u
#define STCU2_MBEL_MBE17(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE17_SHIFT))&STCU2_MBEL_MBE17_MASK)
#define STCU2_MBEL_MBE18_MASK                    0x40000u
#define STCU2_MBEL_MBE18_SHIFT                   18u
#define STCU2_MBEL_MBE18_WIDTH                   1u
#define STCU2_MBEL_MBE18(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE18_SHIFT))&STCU2_MBEL_MBE18_MASK)
#define STCU2_MBEL_MBE19_MASK                    0x80000u
#define STCU2_MBEL_MBE19_SHIFT                   19u
#define STCU2_MBEL_MBE19_WIDTH                   1u
#define STCU2_MBEL_MBE19(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE19_SHIFT))&STCU2_MBEL_MBE19_MASK)
#define STCU2_MBEL_MBE20_MASK                    0x100000u
#define STCU2_MBEL_MBE20_SHIFT                   20u
#define STCU2_MBEL_MBE20_WIDTH                   1u
#define STCU2_MBEL_MBE20(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE20_SHIFT))&STCU2_MBEL_MBE20_MASK)
#define STCU2_MBEL_MBE21_MASK                    0x200000u
#define STCU2_MBEL_MBE21_SHIFT                   21u
#define STCU2_MBEL_MBE21_WIDTH                   1u
#define STCU2_MBEL_MBE21(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE21_SHIFT))&STCU2_MBEL_MBE21_MASK)
#define STCU2_MBEL_MBE22_MASK                    0x400000u
#define STCU2_MBEL_MBE22_SHIFT                   22u
#define STCU2_MBEL_MBE22_WIDTH                   1u
#define STCU2_MBEL_MBE22(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE22_SHIFT))&STCU2_MBEL_MBE22_MASK)
#define STCU2_MBEL_MBE23_MASK                    0x800000u
#define STCU2_MBEL_MBE23_SHIFT                   23u
#define STCU2_MBEL_MBE23_WIDTH                   1u
#define STCU2_MBEL_MBE23(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE23_SHIFT))&STCU2_MBEL_MBE23_MASK)
#define STCU2_MBEL_MBE24_MASK                    0x1000000u
#define STCU2_MBEL_MBE24_SHIFT                   24u
#define STCU2_MBEL_MBE24_WIDTH                   1u
#define STCU2_MBEL_MBE24(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE24_SHIFT))&STCU2_MBEL_MBE24_MASK)
#define STCU2_MBEL_MBE25_MASK                    0x2000000u
#define STCU2_MBEL_MBE25_SHIFT                   25u
#define STCU2_MBEL_MBE25_WIDTH                   1u
#define STCU2_MBEL_MBE25(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE25_SHIFT))&STCU2_MBEL_MBE25_MASK)
#define STCU2_MBEL_MBE26_MASK                    0x4000000u
#define STCU2_MBEL_MBE26_SHIFT                   26u
#define STCU2_MBEL_MBE26_WIDTH                   1u
#define STCU2_MBEL_MBE26(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE26_SHIFT))&STCU2_MBEL_MBE26_MASK)
/* MBSLSW Bit Fields */
#define STCU2_MBSLSW_MBSSW0_MASK                 0x1u
#define STCU2_MBSLSW_MBSSW0_SHIFT                0u
#define STCU2_MBSLSW_MBSSW0_WIDTH                1u
#define STCU2_MBSLSW_MBSSW0(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW0_SHIFT))&STCU2_MBSLSW_MBSSW0_MASK)
#define STCU2_MBSLSW_MBSSW1_MASK                 0x2u
#define STCU2_MBSLSW_MBSSW1_SHIFT                1u
#define STCU2_MBSLSW_MBSSW1_WIDTH                1u
#define STCU2_MBSLSW_MBSSW1(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW1_SHIFT))&STCU2_MBSLSW_MBSSW1_MASK)
#define STCU2_MBSLSW_MBSSW2_MASK                 0x4u
#define STCU2_MBSLSW_MBSSW2_SHIFT                2u
#define STCU2_MBSLSW_MBSSW2_WIDTH                1u
#define STCU2_MBSLSW_MBSSW2(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW2_SHIFT))&STCU2_MBSLSW_MBSSW2_MASK)
#define STCU2_MBSLSW_MBSSW3_MASK                 0x8u
#define STCU2_MBSLSW_MBSSW3_SHIFT                3u
#define STCU2_MBSLSW_MBSSW3_WIDTH                1u
#define STCU2_MBSLSW_MBSSW3(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW3_SHIFT))&STCU2_MBSLSW_MBSSW3_MASK)
#define STCU2_MBSLSW_MBSSW4_MASK                 0x10u
#define STCU2_MBSLSW_MBSSW4_SHIFT                4u
#define STCU2_MBSLSW_MBSSW4_WIDTH                1u
#define STCU2_MBSLSW_MBSSW4(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW4_SHIFT))&STCU2_MBSLSW_MBSSW4_MASK)
#define STCU2_MBSLSW_MBSSW5_MASK                 0x20u
#define STCU2_MBSLSW_MBSSW5_SHIFT                5u
#define STCU2_MBSLSW_MBSSW5_WIDTH                1u
#define STCU2_MBSLSW_MBSSW5(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW5_SHIFT))&STCU2_MBSLSW_MBSSW5_MASK)
#define STCU2_MBSLSW_MBSSW6_MASK                 0x40u
#define STCU2_MBSLSW_MBSSW6_SHIFT                6u
#define STCU2_MBSLSW_MBSSW6_WIDTH                1u
#define STCU2_MBSLSW_MBSSW6(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW6_SHIFT))&STCU2_MBSLSW_MBSSW6_MASK)
#define STCU2_MBSLSW_MBSSW7_MASK                 0x80u
#define STCU2_MBSLSW_MBSSW7_SHIFT                7u
#define STCU2_MBSLSW_MBSSW7_WIDTH                1u
#define STCU2_MBSLSW_MBSSW7(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW7_SHIFT))&STCU2_MBSLSW_MBSSW7_MASK)
#define STCU2_MBSLSW_MBSSW8_MASK                 0x100u
#define STCU2_MBSLSW_MBSSW8_SHIFT                8u
#define STCU2_MBSLSW_MBSSW8_WIDTH                1u
#define STCU2_MBSLSW_MBSSW8(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW8_SHIFT))&STCU2_MBSLSW_MBSSW8_MASK)
#define STCU2_MBSLSW_MBSSW9_MASK                 0x200u
#define STCU2_MBSLSW_MBSSW9_SHIFT                9u
#define STCU2_MBSLSW_MBSSW9_WIDTH                1u
#define STCU2_MBSLSW_MBSSW9(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW9_SHIFT))&STCU2_MBSLSW_MBSSW9_MASK)
#define STCU2_MBSLSW_MBSSW10_MASK                0x400u
#define STCU2_MBSLSW_MBSSW10_SHIFT               10u
#define STCU2_MBSLSW_MBSSW10_WIDTH               1u
#define STCU2_MBSLSW_MBSSW10(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW10_SHIFT))&STCU2_MBSLSW_MBSSW10_MASK)
#define STCU2_MBSLSW_MBSSW11_MASK                0x800u
#define STCU2_MBSLSW_MBSSW11_SHIFT               11u
#define STCU2_MBSLSW_MBSSW11_WIDTH               1u
#define STCU2_MBSLSW_MBSSW11(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW11_SHIFT))&STCU2_MBSLSW_MBSSW11_MASK)
#define STCU2_MBSLSW_MBSSW12_MASK                0x1000u
#define STCU2_MBSLSW_MBSSW12_SHIFT               12u
#define STCU2_MBSLSW_MBSSW12_WIDTH               1u
#define STCU2_MBSLSW_MBSSW12(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW12_SHIFT))&STCU2_MBSLSW_MBSSW12_MASK)
#define STCU2_MBSLSW_MBSSW13_MASK                0x2000u
#define STCU2_MBSLSW_MBSSW13_SHIFT               13u
#define STCU2_MBSLSW_MBSSW13_WIDTH               1u
#define STCU2_MBSLSW_MBSSW13(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW13_SHIFT))&STCU2_MBSLSW_MBSSW13_MASK)
#define STCU2_MBSLSW_MBSSW14_MASK                0x4000u
#define STCU2_MBSLSW_MBSSW14_SHIFT               14u
#define STCU2_MBSLSW_MBSSW14_WIDTH               1u
#define STCU2_MBSLSW_MBSSW14(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW14_SHIFT))&STCU2_MBSLSW_MBSSW14_MASK)
#define STCU2_MBSLSW_MBSSW15_MASK                0x8000u
#define STCU2_MBSLSW_MBSSW15_SHIFT               15u
#define STCU2_MBSLSW_MBSSW15_WIDTH               1u
#define STCU2_MBSLSW_MBSSW15(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW15_SHIFT))&STCU2_MBSLSW_MBSSW15_MASK)
#define STCU2_MBSLSW_MBSSW16_MASK                0x10000u
#define STCU2_MBSLSW_MBSSW16_SHIFT               16u
#define STCU2_MBSLSW_MBSSW16_WIDTH               1u
#define STCU2_MBSLSW_MBSSW16(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW16_SHIFT))&STCU2_MBSLSW_MBSSW16_MASK)
#define STCU2_MBSLSW_MBSSW17_MASK                0x20000u
#define STCU2_MBSLSW_MBSSW17_SHIFT               17u
#define STCU2_MBSLSW_MBSSW17_WIDTH               1u
#define STCU2_MBSLSW_MBSSW17(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW17_SHIFT))&STCU2_MBSLSW_MBSSW17_MASK)
#define STCU2_MBSLSW_MBSSW18_MASK                0x40000u
#define STCU2_MBSLSW_MBSSW18_SHIFT               18u
#define STCU2_MBSLSW_MBSSW18_WIDTH               1u
#define STCU2_MBSLSW_MBSSW18(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW18_SHIFT))&STCU2_MBSLSW_MBSSW18_MASK)
#define STCU2_MBSLSW_MBSSW19_MASK                0x80000u
#define STCU2_MBSLSW_MBSSW19_SHIFT               19u
#define STCU2_MBSLSW_MBSSW19_WIDTH               1u
#define STCU2_MBSLSW_MBSSW19(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW19_SHIFT))&STCU2_MBSLSW_MBSSW19_MASK)
#define STCU2_MBSLSW_MBSSW20_MASK                0x100000u
#define STCU2_MBSLSW_MBSSW20_SHIFT               20u
#define STCU2_MBSLSW_MBSSW20_WIDTH               1u
#define STCU2_MBSLSW_MBSSW20(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW20_SHIFT))&STCU2_MBSLSW_MBSSW20_MASK)
#define STCU2_MBSLSW_MBSSW21_MASK                0x200000u
#define STCU2_MBSLSW_MBSSW21_SHIFT               21u
#define STCU2_MBSLSW_MBSSW21_WIDTH               1u
#define STCU2_MBSLSW_MBSSW21(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW21_SHIFT))&STCU2_MBSLSW_MBSSW21_MASK)
#define STCU2_MBSLSW_MBSSW22_MASK                0x400000u
#define STCU2_MBSLSW_MBSSW22_SHIFT               22u
#define STCU2_MBSLSW_MBSSW22_WIDTH               1u
#define STCU2_MBSLSW_MBSSW22(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW22_SHIFT))&STCU2_MBSLSW_MBSSW22_MASK)
#define STCU2_MBSLSW_MBSSW23_MASK                0x800000u
#define STCU2_MBSLSW_MBSSW23_SHIFT               23u
#define STCU2_MBSLSW_MBSSW23_WIDTH               1u
#define STCU2_MBSLSW_MBSSW23(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW23_SHIFT))&STCU2_MBSLSW_MBSSW23_MASK)
#define STCU2_MBSLSW_MBSSW24_MASK                0x1000000u
#define STCU2_MBSLSW_MBSSW24_SHIFT               24u
#define STCU2_MBSLSW_MBSSW24_WIDTH               1u
#define STCU2_MBSLSW_MBSSW24(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW24_SHIFT))&STCU2_MBSLSW_MBSSW24_MASK)
#define STCU2_MBSLSW_MBSSW25_MASK                0x2000000u
#define STCU2_MBSLSW_MBSSW25_SHIFT               25u
#define STCU2_MBSLSW_MBSSW25_WIDTH               1u
#define STCU2_MBSLSW_MBSSW25(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW25_SHIFT))&STCU2_MBSLSW_MBSSW25_MASK)
#define STCU2_MBSLSW_MBSSW26_MASK                0x4000000u
#define STCU2_MBSLSW_MBSSW26_SHIFT               26u
#define STCU2_MBSLSW_MBSSW26_WIDTH               1u
#define STCU2_MBSLSW_MBSSW26(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW26_SHIFT))&STCU2_MBSLSW_MBSSW26_MASK)
/* MBELSW Bit Fields */
#define STCU2_MBELSW_MBESW0_MASK                 0x1u
#define STCU2_MBELSW_MBESW0_SHIFT                0u
#define STCU2_MBELSW_MBESW0_WIDTH                1u
#define STCU2_MBELSW_MBESW0(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW0_SHIFT))&STCU2_MBELSW_MBESW0_MASK)
#define STCU2_MBELSW_MBESW1_MASK                 0x2u
#define STCU2_MBELSW_MBESW1_SHIFT                1u
#define STCU2_MBELSW_MBESW1_WIDTH                1u
#define STCU2_MBELSW_MBESW1(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW1_SHIFT))&STCU2_MBELSW_MBESW1_MASK)
#define STCU2_MBELSW_MBESW2_MASK                 0x4u
#define STCU2_MBELSW_MBESW2_SHIFT                2u
#define STCU2_MBELSW_MBESW2_WIDTH                1u
#define STCU2_MBELSW_MBESW2(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW2_SHIFT))&STCU2_MBELSW_MBESW2_MASK)
#define STCU2_MBELSW_MBESW3_MASK                 0x8u
#define STCU2_MBELSW_MBESW3_SHIFT                3u
#define STCU2_MBELSW_MBESW3_WIDTH                1u
#define STCU2_MBELSW_MBESW3(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW3_SHIFT))&STCU2_MBELSW_MBESW3_MASK)
#define STCU2_MBELSW_MBESW4_MASK                 0x10u
#define STCU2_MBELSW_MBESW4_SHIFT                4u
#define STCU2_MBELSW_MBESW4_WIDTH                1u
#define STCU2_MBELSW_MBESW4(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW4_SHIFT))&STCU2_MBELSW_MBESW4_MASK)
#define STCU2_MBELSW_MBESW5_MASK                 0x20u
#define STCU2_MBELSW_MBESW5_SHIFT                5u
#define STCU2_MBELSW_MBESW5_WIDTH                1u
#define STCU2_MBELSW_MBESW5(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW5_SHIFT))&STCU2_MBELSW_MBESW5_MASK)
#define STCU2_MBELSW_MBESW6_MASK                 0x40u
#define STCU2_MBELSW_MBESW6_SHIFT                6u
#define STCU2_MBELSW_MBESW6_WIDTH                1u
#define STCU2_MBELSW_MBESW6(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW6_SHIFT))&STCU2_MBELSW_MBESW6_MASK)
#define STCU2_MBELSW_MBESW7_MASK                 0x80u
#define STCU2_MBELSW_MBESW7_SHIFT                7u
#define STCU2_MBELSW_MBESW7_WIDTH                1u
#define STCU2_MBELSW_MBESW7(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW7_SHIFT))&STCU2_MBELSW_MBESW7_MASK)
#define STCU2_MBELSW_MBESW8_MASK                 0x100u
#define STCU2_MBELSW_MBESW8_SHIFT                8u
#define STCU2_MBELSW_MBESW8_WIDTH                1u
#define STCU2_MBELSW_MBESW8(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW8_SHIFT))&STCU2_MBELSW_MBESW8_MASK)
#define STCU2_MBELSW_MBESW9_MASK                 0x200u
#define STCU2_MBELSW_MBESW9_SHIFT                9u
#define STCU2_MBELSW_MBESW9_WIDTH                1u
#define STCU2_MBELSW_MBESW9(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW9_SHIFT))&STCU2_MBELSW_MBESW9_MASK)
#define STCU2_MBELSW_MBESW10_MASK                0x400u
#define STCU2_MBELSW_MBESW10_SHIFT               10u
#define STCU2_MBELSW_MBESW10_WIDTH               1u
#define STCU2_MBELSW_MBESW10(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW10_SHIFT))&STCU2_MBELSW_MBESW10_MASK)
#define STCU2_MBELSW_MBESW11_MASK                0x800u
#define STCU2_MBELSW_MBESW11_SHIFT               11u
#define STCU2_MBELSW_MBESW11_WIDTH               1u
#define STCU2_MBELSW_MBESW11(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW11_SHIFT))&STCU2_MBELSW_MBESW11_MASK)
#define STCU2_MBELSW_MBESW12_MASK                0x1000u
#define STCU2_MBELSW_MBESW12_SHIFT               12u
#define STCU2_MBELSW_MBESW12_WIDTH               1u
#define STCU2_MBELSW_MBESW12(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW12_SHIFT))&STCU2_MBELSW_MBESW12_MASK)
#define STCU2_MBELSW_MBESW13_MASK                0x2000u
#define STCU2_MBELSW_MBESW13_SHIFT               13u
#define STCU2_MBELSW_MBESW13_WIDTH               1u
#define STCU2_MBELSW_MBESW13(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW13_SHIFT))&STCU2_MBELSW_MBESW13_MASK)
#define STCU2_MBELSW_MBESW14_MASK                0x4000u
#define STCU2_MBELSW_MBESW14_SHIFT               14u
#define STCU2_MBELSW_MBESW14_WIDTH               1u
#define STCU2_MBELSW_MBESW14(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW14_SHIFT))&STCU2_MBELSW_MBESW14_MASK)
#define STCU2_MBELSW_MBESW15_MASK                0x8000u
#define STCU2_MBELSW_MBESW15_SHIFT               15u
#define STCU2_MBELSW_MBESW15_WIDTH               1u
#define STCU2_MBELSW_MBESW15(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW15_SHIFT))&STCU2_MBELSW_MBESW15_MASK)
#define STCU2_MBELSW_MBESW16_MASK                0x10000u
#define STCU2_MBELSW_MBESW16_SHIFT               16u
#define STCU2_MBELSW_MBESW16_WIDTH               1u
#define STCU2_MBELSW_MBESW16(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW16_SHIFT))&STCU2_MBELSW_MBESW16_MASK)
#define STCU2_MBELSW_MBESW17_MASK                0x20000u
#define STCU2_MBELSW_MBESW17_SHIFT               17u
#define STCU2_MBELSW_MBESW17_WIDTH               1u
#define STCU2_MBELSW_MBESW17(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW17_SHIFT))&STCU2_MBELSW_MBESW17_MASK)
#define STCU2_MBELSW_MBESW18_MASK                0x40000u
#define STCU2_MBELSW_MBESW18_SHIFT               18u
#define STCU2_MBELSW_MBESW18_WIDTH               1u
#define STCU2_MBELSW_MBESW18(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW18_SHIFT))&STCU2_MBELSW_MBESW18_MASK)
#define STCU2_MBELSW_MBESW19_MASK                0x80000u
#define STCU2_MBELSW_MBESW19_SHIFT               19u
#define STCU2_MBELSW_MBESW19_WIDTH               1u
#define STCU2_MBELSW_MBESW19(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW19_SHIFT))&STCU2_MBELSW_MBESW19_MASK)
#define STCU2_MBELSW_MBESW20_MASK                0x100000u
#define STCU2_MBELSW_MBESW20_SHIFT               20u
#define STCU2_MBELSW_MBESW20_WIDTH               1u
#define STCU2_MBELSW_MBESW20(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW20_SHIFT))&STCU2_MBELSW_MBESW20_MASK)
#define STCU2_MBELSW_MBESW21_MASK                0x200000u
#define STCU2_MBELSW_MBESW21_SHIFT               21u
#define STCU2_MBELSW_MBESW21_WIDTH               1u
#define STCU2_MBELSW_MBESW21(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW21_SHIFT))&STCU2_MBELSW_MBESW21_MASK)
#define STCU2_MBELSW_MBESW22_MASK                0x400000u
#define STCU2_MBELSW_MBESW22_SHIFT               22u
#define STCU2_MBELSW_MBESW22_WIDTH               1u
#define STCU2_MBELSW_MBESW22(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW22_SHIFT))&STCU2_MBELSW_MBESW22_MASK)
#define STCU2_MBELSW_MBESW23_MASK                0x800000u
#define STCU2_MBELSW_MBESW23_SHIFT               23u
#define STCU2_MBELSW_MBESW23_WIDTH               1u
#define STCU2_MBELSW_MBESW23(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW23_SHIFT))&STCU2_MBELSW_MBESW23_MASK)
#define STCU2_MBELSW_MBESW24_MASK                0x1000000u
#define STCU2_MBELSW_MBESW24_SHIFT               24u
#define STCU2_MBELSW_MBESW24_WIDTH               1u
#define STCU2_MBELSW_MBESW24(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW24_SHIFT))&STCU2_MBELSW_MBESW24_MASK)
#define STCU2_MBELSW_MBESW25_MASK                0x2000000u
#define STCU2_MBELSW_MBESW25_SHIFT               25u
#define STCU2_MBELSW_MBESW25_WIDTH               1u
#define STCU2_MBELSW_MBESW25(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW25_SHIFT))&STCU2_MBELSW_MBESW25_MASK)
#define STCU2_MBELSW_MBESW26_MASK                0x4000000u
#define STCU2_MBELSW_MBESW26_SHIFT               26u
#define STCU2_MBELSW_MBESW26_WIDTH               1u
#define STCU2_MBELSW_MBESW26(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW26_SHIFT))&STCU2_MBELSW_MBESW26_MASK)
/* CTRL Bit Fields */
#define STCU2_CTRL_CWS_MASK                      0x3Fu
#define STCU2_CTRL_CWS_SHIFT                     0u
#define STCU2_CTRL_CWS_WIDTH                     6u
#define STCU2_CTRL_CWS(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_CTRL_CWS_SHIFT))&STCU2_CTRL_CWS_MASK)
#define STCU2_CTRL_SCEN_ON_MASK                  0xF00u
#define STCU2_CTRL_SCEN_ON_SHIFT                 8u
#define STCU2_CTRL_SCEN_ON_WIDTH                 4u
#define STCU2_CTRL_SCEN_ON(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_CTRL_SCEN_ON_SHIFT))&STCU2_CTRL_SCEN_ON_MASK)
#define STCU2_CTRL_SCEN_OFF_MASK                 0xF000u
#define STCU2_CTRL_SCEN_OFF_SHIFT                12u
#define STCU2_CTRL_SCEN_OFF_WIDTH                4u
#define STCU2_CTRL_SCEN_OFF(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_CTRL_SCEN_OFF_SHIFT))&STCU2_CTRL_SCEN_OFF_MASK)
#define STCU2_CTRL_SHS_MASK                      0x70000u
#define STCU2_CTRL_SHS_SHIFT                     16u
#define STCU2_CTRL_SHS_WIDTH                     3u
#define STCU2_CTRL_SHS(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_CTRL_SHS_SHIFT))&STCU2_CTRL_SHS_MASK)
#define STCU2_CTRL_PRPGEN_MASK                   0x80000u
#define STCU2_CTRL_PRPGEN_SHIFT                  19u
#define STCU2_CTRL_PRPGEN_WIDTH                  1u
#define STCU2_CTRL_PRPGEN(x)                     (((uint32_t)(((uint32_t)(x))<<STCU2_CTRL_PRPGEN_SHIFT))&STCU2_CTRL_PRPGEN_MASK)
#define STCU2_CTRL_PTR_MASK                      0x7F000000u
#define STCU2_CTRL_PTR_SHIFT                     24u
#define STCU2_CTRL_PTR_WIDTH                     7u
#define STCU2_CTRL_PTR(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_CTRL_PTR_SHIFT))&STCU2_CTRL_PTR_MASK)
#define STCU2_CTRL_CSM_MASK                      0x80000000u
#define STCU2_CTRL_CSM_SHIFT                     31u
#define STCU2_CTRL_CSM_WIDTH                     1u
#define STCU2_CTRL_CSM(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_CTRL_CSM_SHIFT))&STCU2_CTRL_CSM_MASK)
/* PCS Bit Fields */
#define STCU2_PCS_PCS_MASK                       0x3FFFFFFu
#define STCU2_PCS_PCS_SHIFT                      0u
#define STCU2_PCS_PCS_WIDTH                      26u
#define STCU2_PCS_PCS(x)                         (((uint32_t)(((uint32_t)(x))<<STCU2_PCS_PCS_SHIFT))&STCU2_PCS_PCS_MASK)
/* MISRELSW Bit Fields */
#define STCU2_MISRELSW_MISRESWx_MASK             0xFFFFFFFFu
#define STCU2_MISRELSW_MISRESWx_SHIFT            0u
#define STCU2_MISRELSW_MISRESWx_WIDTH            32u
#define STCU2_MISRELSW_MISRESWx(x)               (((uint32_t)(((uint32_t)(x))<<STCU2_MISRELSW_MISRESWx_SHIFT))&STCU2_MISRELSW_MISRESWx_MASK)
/* MISREHSW Bit Fields */
#define STCU2_MISREHSW_MISRESWx_MASK             0xFFFFFFFFu
#define STCU2_MISREHSW_MISRESWx_SHIFT            0u
#define STCU2_MISREHSW_MISRESWx_WIDTH            32u
#define STCU2_MISREHSW_MISRESWx(x)               (((uint32_t)(((uint32_t)(x))<<STCU2_MISREHSW_MISRESWx_SHIFT))&STCU2_MISREHSW_MISRESWx_MASK)
/* MB_CTRL Bit Fields */
#define STCU2_MB_CTRL_PTR_MASK                   0x7F000000u
#define STCU2_MB_CTRL_PTR_SHIFT                  24u
#define STCU2_MB_CTRL_PTR_WIDTH                  7u
#define STCU2_MB_CTRL_PTR(x)                     (((uint32_t)(((uint32_t)(x))<<STCU2_MB_CTRL_PTR_SHIFT))&STCU2_MB_CTRL_PTR_MASK)
#define STCU2_MB_CTRL_CSM_MASK                   0x80000000u
#define STCU2_MB_CTRL_CSM_SHIFT                  31u
#define STCU2_MB_CTRL_CSM_WIDTH                  1u
#define STCU2_MB_CTRL_CSM(x)                     (((uint32_t)(((uint32_t)(x))<<STCU2_MB_CTRL_CSM_SHIFT))&STCU2_MB_CTRL_CSM_MASK)

/*!
 * @}
 */ /* end of group STCU2_Register_Masks */


/*!
 * @}
 */ /* end of group STCU2_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- STM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup STM_Peripheral_Access_Layer STM Peripheral Access Layer
 * @{
 */


/** STM - Size of Registers Arrays */
#define STM_CHANNEL_COUNT                        4u

/** STM - Register Layout Typedef */
typedef struct {
  __IO uint32_t CR;                                /**< STM Control Register, offset: 0x0 */
  __IO uint32_t CNT;                               /**< STM Count Register, offset: 0x4 */
       uint8_t RESERVED_0[8];
  struct {                                         /* offset: 0x10, array step: 0x10 */
    __IO uint32_t CCR;                               /**< STM Channel Control Register, array offset: 0x10, array step: 0x10 */
    __IO uint32_t CIR;                               /**< STM Channel Interrupt Register, array offset: 0x14, array step: 0x10 */
    __IO uint32_t CMP;                               /**< STM Channel Compare Register, array offset: 0x18, array step: 0x10 */
         uint8_t RESERVED_0[4];
  } CHANNEL[STM_CHANNEL_COUNT];
} STM_Type, *STM_MemMapPtr;

 /** Number of instances of the STM module. */
#define STM_INSTANCE_COUNT                       (1u)


/* STM - Peripheral instance base addresses */
/** Peripheral STM_0 base address */
#define STM_0_BASE                               (0xFC068000u)
/** Peripheral STM_0 base pointer */
#define STM_0                                    ((STM_Type *)STM_0_BASE)
/** Array initializer of STM peripheral base addresses */
#define STM_BASE_ADDRS                           { STM_0_BASE }
/** Array initializer of STM peripheral base pointers */
#define STM_BASE_PTRS                            { STM_0 }
/** Interrupt vectors for the STM peripheral type */
#define STM_IRQS                                 {{ STM0_Ch0_IRQn, STM0_Ch1_IRQn, STM0_Ch2_IRQn, STM0_Ch3_IRQn }}

/* ----------------------------------------------------------------------------
   -- STM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup STM_Register_Masks STM Register Masks
 * @{
 */

/* CR Bit Fields */
#define STM_CR_TEN_MASK                          0x1u
#define STM_CR_TEN_SHIFT                         0u
#define STM_CR_TEN_WIDTH                         1u
#define STM_CR_TEN(x)                            (((uint32_t)(((uint32_t)(x))<<STM_CR_TEN_SHIFT))&STM_CR_TEN_MASK)
#define STM_CR_FRZ_MASK                          0x2u
#define STM_CR_FRZ_SHIFT                         1u
#define STM_CR_FRZ_WIDTH                         1u
#define STM_CR_FRZ(x)                            (((uint32_t)(((uint32_t)(x))<<STM_CR_FRZ_SHIFT))&STM_CR_FRZ_MASK)
#define STM_CR_CPS_MASK                          0xFF00u
#define STM_CR_CPS_SHIFT                         8u
#define STM_CR_CPS_WIDTH                         8u
#define STM_CR_CPS(x)                            (((uint32_t)(((uint32_t)(x))<<STM_CR_CPS_SHIFT))&STM_CR_CPS_MASK)
/* CNT Bit Fields */
#define STM_CNT_CNT_MASK                         0xFFFFFFFFu
#define STM_CNT_CNT_SHIFT                        0u
#define STM_CNT_CNT_WIDTH                        32u
#define STM_CNT_CNT(x)                           (((uint32_t)(((uint32_t)(x))<<STM_CNT_CNT_SHIFT))&STM_CNT_CNT_MASK)
/* CCR Bit Fields */
#define STM_CCR_CEN_MASK                         0x1u
#define STM_CCR_CEN_SHIFT                        0u
#define STM_CCR_CEN_WIDTH                        1u
#define STM_CCR_CEN(x)                           (((uint32_t)(((uint32_t)(x))<<STM_CCR_CEN_SHIFT))&STM_CCR_CEN_MASK)
/* CIR Bit Fields */
#define STM_CIR_CIF_MASK                         0x1u
#define STM_CIR_CIF_SHIFT                        0u
#define STM_CIR_CIF_WIDTH                        1u
#define STM_CIR_CIF(x)                           (((uint32_t)(((uint32_t)(x))<<STM_CIR_CIF_SHIFT))&STM_CIR_CIF_MASK)
/* CMP Bit Fields */
#define STM_CMP_CMP_MASK                         0xFFFFFFFFu
#define STM_CMP_CMP_SHIFT                        0u
#define STM_CMP_CMP_WIDTH                        32u
#define STM_CMP_CMP(x)                           (((uint32_t)(((uint32_t)(x))<<STM_CMP_CMP_SHIFT))&STM_CMP_CMP_MASK)

/*!
 * @}
 */ /* end of group STM_Register_Masks */


/*!
 * @}
 */ /* end of group STM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SWT Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SWT_Peripheral_Access_Layer SWT Peripheral Access Layer
 * @{
 */


/** SWT - Size of Registers Arrays */

/** SWT - Register Layout Typedef */
typedef struct {
  __IO uint32_t CR;                                /**< SWT Control Register, offset: 0x0 */
  __IO uint32_t IR;                                /**< SWT Interrupt Register, offset: 0x4 */
  __IO uint32_t TO;                                /**< SWT Time-out Register, offset: 0x8 */
  __IO uint32_t WN;                                /**< SWT Window Register, offset: 0xC */
  __IO uint32_t SR;                                /**< SWT Service Register, offset: 0x10 */
  __I  uint32_t CO;                                /**< SWT Counter Output Register, offset: 0x14 */
  __IO uint32_t SK;                                /**< SWT Service Key Register, offset: 0x18 */
} SWT_Type, *SWT_MemMapPtr;

 /** Number of instances of the SWT module. */
#define SWT_INSTANCE_COUNT                       (1u)


/* SWT - Peripheral instance base addresses */
/** Peripheral SWT_0 base address */
#define SWT_0_BASE                               (0xFC050000u)
/** Peripheral SWT_0 base pointer */
#define SWT_0                                    ((SWT_Type *)SWT_0_BASE)
/** Array initializer of SWT peripheral base addresses */
#define SWT_BASE_ADDRS                           { SWT_0_BASE }
/** Array initializer of SWT peripheral base pointers */
#define SWT_BASE_PTRS                            { SWT_0 }
/** Interrupt vectors for the SWT peripheral type */
#define SWT_IRQS                                 { SWT0_IRQn }

/* ----------------------------------------------------------------------------
   -- SWT Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SWT_Register_Masks SWT Register Masks
 * @{
 */

/* CR Bit Fields */
#define SWT_CR_WEN_MASK                          0x1u
#define SWT_CR_WEN_SHIFT                         0u
#define SWT_CR_WEN_WIDTH                         1u
#define SWT_CR_WEN(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_WEN_SHIFT))&SWT_CR_WEN_MASK)
#define SWT_CR_FRZ_MASK                          0x2u
#define SWT_CR_FRZ_SHIFT                         1u
#define SWT_CR_FRZ_WIDTH                         1u
#define SWT_CR_FRZ(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_FRZ_SHIFT))&SWT_CR_FRZ_MASK)
#define SWT_CR_STP_MASK                          0x4u
#define SWT_CR_STP_SHIFT                         2u
#define SWT_CR_STP_WIDTH                         1u
#define SWT_CR_STP(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_STP_SHIFT))&SWT_CR_STP_MASK)
#define SWT_CR_SLK_MASK                          0x10u
#define SWT_CR_SLK_SHIFT                         4u
#define SWT_CR_SLK_WIDTH                         1u
#define SWT_CR_SLK(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_SLK_SHIFT))&SWT_CR_SLK_MASK)
#define SWT_CR_HLK_MASK                          0x20u
#define SWT_CR_HLK_SHIFT                         5u
#define SWT_CR_HLK_WIDTH                         1u
#define SWT_CR_HLK(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_HLK_SHIFT))&SWT_CR_HLK_MASK)
#define SWT_CR_ITR_MASK                          0x40u
#define SWT_CR_ITR_SHIFT                         6u
#define SWT_CR_ITR_WIDTH                         1u
#define SWT_CR_ITR(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_ITR_SHIFT))&SWT_CR_ITR_MASK)
#define SWT_CR_WND_MASK                          0x80u
#define SWT_CR_WND_SHIFT                         7u
#define SWT_CR_WND_WIDTH                         1u
#define SWT_CR_WND(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_WND_SHIFT))&SWT_CR_WND_MASK)
#define SWT_CR_RIA_MASK                          0x100u
#define SWT_CR_RIA_SHIFT                         8u
#define SWT_CR_RIA_WIDTH                         1u
#define SWT_CR_RIA(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_RIA_SHIFT))&SWT_CR_RIA_MASK)
#define SWT_CR_SMD_MASK                          0x600u
#define SWT_CR_SMD_SHIFT                         9u
#define SWT_CR_SMD_WIDTH                         2u
#define SWT_CR_SMD(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_SMD_SHIFT))&SWT_CR_SMD_MASK)
#define SWT_CR_MAP7_MASK                         0x1000000u
#define SWT_CR_MAP7_SHIFT                        24u
#define SWT_CR_MAP7_WIDTH                        1u
#define SWT_CR_MAP7(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP7_SHIFT))&SWT_CR_MAP7_MASK)
#define SWT_CR_MAP6_MASK                         0x2000000u
#define SWT_CR_MAP6_SHIFT                        25u
#define SWT_CR_MAP6_WIDTH                        1u
#define SWT_CR_MAP6(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP6_SHIFT))&SWT_CR_MAP6_MASK)
#define SWT_CR_MAP5_MASK                         0x4000000u
#define SWT_CR_MAP5_SHIFT                        26u
#define SWT_CR_MAP5_WIDTH                        1u
#define SWT_CR_MAP5(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP5_SHIFT))&SWT_CR_MAP5_MASK)
#define SWT_CR_MAP4_MASK                         0x8000000u
#define SWT_CR_MAP4_SHIFT                        27u
#define SWT_CR_MAP4_WIDTH                        1u
#define SWT_CR_MAP4(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP4_SHIFT))&SWT_CR_MAP4_MASK)
#define SWT_CR_MAP3_MASK                         0x10000000u
#define SWT_CR_MAP3_SHIFT                        28u
#define SWT_CR_MAP3_WIDTH                        1u
#define SWT_CR_MAP3(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP3_SHIFT))&SWT_CR_MAP3_MASK)
#define SWT_CR_MAP2_MASK                         0x20000000u
#define SWT_CR_MAP2_SHIFT                        29u
#define SWT_CR_MAP2_WIDTH                        1u
#define SWT_CR_MAP2(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP2_SHIFT))&SWT_CR_MAP2_MASK)
#define SWT_CR_MAP1_MASK                         0x40000000u
#define SWT_CR_MAP1_SHIFT                        30u
#define SWT_CR_MAP1_WIDTH                        1u
#define SWT_CR_MAP1(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP1_SHIFT))&SWT_CR_MAP1_MASK)
#define SWT_CR_MAP0_MASK                         0x80000000u
#define SWT_CR_MAP0_SHIFT                        31u
#define SWT_CR_MAP0_WIDTH                        1u
#define SWT_CR_MAP0(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP0_SHIFT))&SWT_CR_MAP0_MASK)
/* IR Bit Fields */
#define SWT_IR_TIF_MASK                          0x1u
#define SWT_IR_TIF_SHIFT                         0u
#define SWT_IR_TIF_WIDTH                         1u
#define SWT_IR_TIF(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_IR_TIF_SHIFT))&SWT_IR_TIF_MASK)
/* TO Bit Fields */
#define SWT_TO_WTO_MASK                          0xFFFFFFFFu
#define SWT_TO_WTO_SHIFT                         0u
#define SWT_TO_WTO_WIDTH                         32u
#define SWT_TO_WTO(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_TO_WTO_SHIFT))&SWT_TO_WTO_MASK)
/* WN Bit Fields */
#define SWT_WN_WST_MASK                          0xFFFFFFFFu
#define SWT_WN_WST_SHIFT                         0u
#define SWT_WN_WST_WIDTH                         32u
#define SWT_WN_WST(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_WN_WST_SHIFT))&SWT_WN_WST_MASK)
/* SR Bit Fields */
#define SWT_SR_WSC_MASK                          0xFFFFu
#define SWT_SR_WSC_SHIFT                         0u
#define SWT_SR_WSC_WIDTH                         16u
#define SWT_SR_WSC(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_SR_WSC_SHIFT))&SWT_SR_WSC_MASK)
/* CO Bit Fields */
#define SWT_CO_CNT_MASK                          0xFFFFFFFFu
#define SWT_CO_CNT_SHIFT                         0u
#define SWT_CO_CNT_WIDTH                         32u
#define SWT_CO_CNT(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CO_CNT_SHIFT))&SWT_CO_CNT_MASK)
/* SK Bit Fields */
#define SWT_SK_SK_MASK                           0xFFFFu
#define SWT_SK_SK_SHIFT                          0u
#define SWT_SK_SK_WIDTH                          16u
#define SWT_SK_SK(x)                             (((uint32_t)(((uint32_t)(x))<<SWT_SK_SK_SHIFT))&SWT_SK_SK_MASK)

/*!
 * @}
 */ /* end of group SWT_Register_Masks */


/*!
 * @}
 */ /* end of group SWT_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- WKPU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup WKPU_Peripheral_Access_Layer WKPU Peripheral Access Layer
 * @{
 */


/** WKPU - Size of Registers Arrays */

/** WKPU - Register Layout Typedef */
typedef struct {
  __IO uint32_t NSR;                               /**< NMI Status Flag Register, offset: 0x0 */
       uint8_t RESERVED_0[4];
  __IO uint32_t NCR;                               /**< NMI Configuration Register, offset: 0x8 */
} WKPU_Type, *WKPU_MemMapPtr;

 /** Number of instances of the WKPU module. */
#define WKPU_INSTANCE_COUNT                      (1u)


/* WKPU - Peripheral instance base addresses */
/** Peripheral WKPU base address */
#define WKPU_BASE                                (0xFFF98000u)
/** Peripheral WKPU base pointer */
#define WKPU                                     ((WKPU_Type *)WKPU_BASE)
/** Array initializer of WKPU peripheral base addresses */
#define WKPU_BASE_ADDRS                          { WKPU_BASE }
/** Array initializer of WKPU peripheral base pointers */
#define WKPU_BASE_PTRS                           { WKPU }

/* ----------------------------------------------------------------------------
   -- WKPU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup WKPU_Register_Masks WKPU Register Masks
 * @{
 */

/* NSR Bit Fields */
#define WKPU_NSR_NOVF0_MASK                      0x40000000u
#define WKPU_NSR_NOVF0_SHIFT                     30u
#define WKPU_NSR_NOVF0_WIDTH                     1u
#define WKPU_NSR_NOVF0(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NSR_NOVF0_SHIFT))&WKPU_NSR_NOVF0_MASK)
#define WKPU_NSR_NIF0_MASK                       0x80000000u
#define WKPU_NSR_NIF0_SHIFT                      31u
#define WKPU_NSR_NIF0_WIDTH                      1u
#define WKPU_NSR_NIF0(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_NSR_NIF0_SHIFT))&WKPU_NSR_NIF0_MASK)
/* NCR Bit Fields */
#define WKPU_NCR_NFE0_MASK                       0x1000000u
#define WKPU_NCR_NFE0_SHIFT                      24u
#define WKPU_NCR_NFE0_WIDTH                      1u
#define WKPU_NCR_NFE0(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NFE0_SHIFT))&WKPU_NCR_NFE0_MASK)
#define WKPU_NCR_NFEE0_MASK                      0x2000000u
#define WKPU_NCR_NFEE0_SHIFT                     25u
#define WKPU_NCR_NFEE0_WIDTH                     1u
#define WKPU_NCR_NFEE0(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NFEE0_SHIFT))&WKPU_NCR_NFEE0_MASK)
#define WKPU_NCR_NREE0_MASK                      0x4000000u
#define WKPU_NCR_NREE0_SHIFT                     26u
#define WKPU_NCR_NREE0_WIDTH                     1u
#define WKPU_NCR_NREE0(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NREE0_SHIFT))&WKPU_NCR_NREE0_MASK)
#define WKPU_NCR_NWRE0_MASK                      0x10000000u
#define WKPU_NCR_NWRE0_SHIFT                     28u
#define WKPU_NCR_NWRE0_WIDTH                     1u
#define WKPU_NCR_NWRE0(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NWRE0_SHIFT))&WKPU_NCR_NWRE0_MASK)
#define WKPU_NCR_NDSS0_MASK                      0x60000000u
#define WKPU_NCR_NDSS0_SHIFT                     29u
#define WKPU_NCR_NDSS0_WIDTH                     2u
#define WKPU_NCR_NDSS0(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NDSS0_SHIFT))&WKPU_NCR_NDSS0_MASK)
#define WKPU_NCR_NLOCK0_MASK                     0x80000000u
#define WKPU_NCR_NLOCK0_SHIFT                    31u
#define WKPU_NCR_NLOCK0_WIDTH                    1u
#define WKPU_NCR_NLOCK0(x)                       (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NLOCK0_SHIFT))&WKPU_NCR_NLOCK0_MASK)

/*!
 * @}
 */ /* end of group WKPU_Register_Masks */


/*!
 * @}
 */ /* end of group WKPU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- XBAR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup XBAR_Peripheral_Access_Layer XBAR Peripheral Access Layer
 * @{
 */


/** XBAR - Size of Registers Arrays */
#define XBAR_PORT_COUNT                          8u

/** XBAR - Register Layout Typedef */
typedef struct {
  struct {                                         /* offset: 0x0, array step: 0x100 */
    __IO uint32_t PRS;                               /**< Priority Registers Slave, array offset: 0x0, array step: 0x100 */
         uint8_t RESERVED_0[12];
    __IO uint32_t CRS;                               /**< Control Register, array offset: 0x10, array step: 0x100 */
         uint8_t RESERVED_1[236];
  } PORT[XBAR_PORT_COUNT];
} XBAR_Type, *XBAR_MemMapPtr;

 /** Number of instances of the XBAR module. */
#define XBAR_INSTANCE_COUNT                      (1u)


/* XBAR - Peripheral instance base addresses */
/** Peripheral XBAR_0 base address */
#define XBAR_0_BASE                              (0xFC004000u)
/** Peripheral XBAR_0 base pointer */
#define XBAR_0                                   ((XBAR_Type *)XBAR_0_BASE)
/** Array initializer of XBAR peripheral base addresses */
#define XBAR_BASE_ADDRS                          { XBAR_0_BASE }
/** Array initializer of XBAR peripheral base pointers */
#define XBAR_BASE_PTRS                           { XBAR_0 }

/* ----------------------------------------------------------------------------
   -- XBAR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup XBAR_Register_Masks XBAR Register Masks
 * @{
 */

/* PRS Bit Fields */
#define XBAR_PRS_M0_MASK                         0x7u
#define XBAR_PRS_M0_SHIFT                        0u
#define XBAR_PRS_M0_WIDTH                        3u
#define XBAR_PRS_M0(x)                           (((uint32_t)(((uint32_t)(x))<<XBAR_PRS_M0_SHIFT))&XBAR_PRS_M0_MASK)
#define XBAR_PRS_M1_MASK                         0x70u
#define XBAR_PRS_M1_SHIFT                        4u
#define XBAR_PRS_M1_WIDTH                        3u
#define XBAR_PRS_M1(x)                           (((uint32_t)(((uint32_t)(x))<<XBAR_PRS_M1_SHIFT))&XBAR_PRS_M1_MASK)
#define XBAR_PRS_M5_MASK                         0x700000u
#define XBAR_PRS_M5_SHIFT                        20u
#define XBAR_PRS_M5_WIDTH                        3u
#define XBAR_PRS_M5(x)                           (((uint32_t)(((uint32_t)(x))<<XBAR_PRS_M5_SHIFT))&XBAR_PRS_M5_MASK)
#define XBAR_PRS_M6_MASK                         0x7000000u
#define XBAR_PRS_M6_SHIFT                        24u
#define XBAR_PRS_M6_WIDTH                        3u
#define XBAR_PRS_M6(x)                           (((uint32_t)(((uint32_t)(x))<<XBAR_PRS_M6_SHIFT))&XBAR_PRS_M6_MASK)
/* CRS Bit Fields */
#define XBAR_CRS_PARK_MASK                       0x7u
#define XBAR_CRS_PARK_SHIFT                      0u
#define XBAR_CRS_PARK_WIDTH                      3u
#define XBAR_CRS_PARK(x)                         (((uint32_t)(((uint32_t)(x))<<XBAR_CRS_PARK_SHIFT))&XBAR_CRS_PARK_MASK)
#define XBAR_CRS_PCTL_MASK                       0x30u
#define XBAR_CRS_PCTL_SHIFT                      4u
#define XBAR_CRS_PCTL_WIDTH                      2u
#define XBAR_CRS_PCTL(x)                         (((uint32_t)(((uint32_t)(x))<<XBAR_CRS_PCTL_SHIFT))&XBAR_CRS_PCTL_MASK)
#define XBAR_CRS_ARB_MASK                        0x300u
#define XBAR_CRS_ARB_SHIFT                       8u
#define XBAR_CRS_ARB_WIDTH                       2u
#define XBAR_CRS_ARB(x)                          (((uint32_t)(((uint32_t)(x))<<XBAR_CRS_ARB_SHIFT))&XBAR_CRS_ARB_MASK)
#define XBAR_CRS_HPE0_MASK                       0x10000u
#define XBAR_CRS_HPE0_SHIFT                      16u
#define XBAR_CRS_HPE0_WIDTH                      1u
#define XBAR_CRS_HPE0(x)                         (((uint32_t)(((uint32_t)(x))<<XBAR_CRS_HPE0_SHIFT))&XBAR_CRS_HPE0_MASK)
#define XBAR_CRS_HPE1_MASK                       0x20000u
#define XBAR_CRS_HPE1_SHIFT                      17u
#define XBAR_CRS_HPE1_WIDTH                      1u
#define XBAR_CRS_HPE1(x)                         (((uint32_t)(((uint32_t)(x))<<XBAR_CRS_HPE1_SHIFT))&XBAR_CRS_HPE1_MASK)
#define XBAR_CRS_HPE5_MASK                       0x200000u
#define XBAR_CRS_HPE5_SHIFT                      21u
#define XBAR_CRS_HPE5_WIDTH                      1u
#define XBAR_CRS_HPE5(x)                         (((uint32_t)(((uint32_t)(x))<<XBAR_CRS_HPE5_SHIFT))&XBAR_CRS_HPE5_MASK)
#define XBAR_CRS_HPE6_MASK                       0x400000u
#define XBAR_CRS_HPE6_SHIFT                      22u
#define XBAR_CRS_HPE6_WIDTH                      1u
#define XBAR_CRS_HPE6(x)                         (((uint32_t)(((uint32_t)(x))<<XBAR_CRS_HPE6_SHIFT))&XBAR_CRS_HPE6_MASK)
#define XBAR_CRS_HLP_MASK                        0x40000000u
#define XBAR_CRS_HLP_SHIFT                       30u
#define XBAR_CRS_HLP_WIDTH                       1u
#define XBAR_CRS_HLP(x)                          (((uint32_t)(((uint32_t)(x))<<XBAR_CRS_HLP_SHIFT))&XBAR_CRS_HLP_MASK)
#define XBAR_CRS_RO_MASK                         0x80000000u
#define XBAR_CRS_RO_SHIFT                        31u
#define XBAR_CRS_RO_WIDTH                        1u
#define XBAR_CRS_RO(x)                           (((uint32_t)(((uint32_t)(x))<<XBAR_CRS_RO_SHIFT))&XBAR_CRS_RO_MASK)

/*!
 * @}
 */ /* end of group XBAR_Register_Masks */


/*!
 * @}
 */ /* end of group XBAR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- XBIC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup XBIC_Peripheral_Access_Layer XBIC Peripheral Access Layer
 * @{
 */


/** XBIC - Size of Registers Arrays */

/** XBIC - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< XBIC Module Control Register, offset: 0x0 */
  __IO uint32_t EIR;                               /**< XBIC Error Injection Register, offset: 0x4 */
  __I  uint32_t ESR;                               /**< XBIC Error Status Register, offset: 0x8 */
  __I  uint32_t EAR;                               /**< XBIC Error Address Register, offset: 0xC */
} XBIC_Type, *XBIC_MemMapPtr;

 /** Number of instances of the XBIC module. */
#define XBIC_INSTANCE_COUNT                      (1u)


/* XBIC - Peripheral instance base addresses */
/** Peripheral XBIC base address */
#define XBIC_BASE                                (0xFC018000u)
/** Peripheral XBIC base pointer */
#define XBIC                                     ((XBIC_Type *)XBIC_BASE)
/** Array initializer of XBIC peripheral base addresses */
#define XBIC_BASE_ADDRS                          { XBIC_BASE }
/** Array initializer of XBIC peripheral base pointers */
#define XBIC_BASE_PTRS                           { XBIC }

/* ----------------------------------------------------------------------------
   -- XBIC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup XBIC_Register_Masks XBIC Register Masks
 * @{
 */

/* MCR Bit Fields */
#define XBIC_MCR_ME7_MASK                        0x10000u
#define XBIC_MCR_ME7_SHIFT                       16u
#define XBIC_MCR_ME7_WIDTH                       1u
#define XBIC_MCR_ME7(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_ME7_SHIFT))&XBIC_MCR_ME7_MASK)
#define XBIC_MCR_ME6_MASK                        0x20000u
#define XBIC_MCR_ME6_SHIFT                       17u
#define XBIC_MCR_ME6_WIDTH                       1u
#define XBIC_MCR_ME6(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_ME6_SHIFT))&XBIC_MCR_ME6_MASK)
#define XBIC_MCR_ME5_MASK                        0x40000u
#define XBIC_MCR_ME5_SHIFT                       18u
#define XBIC_MCR_ME5_WIDTH                       1u
#define XBIC_MCR_ME5(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_ME5_SHIFT))&XBIC_MCR_ME5_MASK)
#define XBIC_MCR_ME4_MASK                        0x80000u
#define XBIC_MCR_ME4_SHIFT                       19u
#define XBIC_MCR_ME4_WIDTH                       1u
#define XBIC_MCR_ME4(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_ME4_SHIFT))&XBIC_MCR_ME4_MASK)
#define XBIC_MCR_ME3_MASK                        0x100000u
#define XBIC_MCR_ME3_SHIFT                       20u
#define XBIC_MCR_ME3_WIDTH                       1u
#define XBIC_MCR_ME3(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_ME3_SHIFT))&XBIC_MCR_ME3_MASK)
#define XBIC_MCR_ME2_MASK                        0x200000u
#define XBIC_MCR_ME2_SHIFT                       21u
#define XBIC_MCR_ME2_WIDTH                       1u
#define XBIC_MCR_ME2(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_ME2_SHIFT))&XBIC_MCR_ME2_MASK)
#define XBIC_MCR_ME1_MASK                        0x400000u
#define XBIC_MCR_ME1_SHIFT                       22u
#define XBIC_MCR_ME1_WIDTH                       1u
#define XBIC_MCR_ME1(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_ME1_SHIFT))&XBIC_MCR_ME1_MASK)
#define XBIC_MCR_ME0_MASK                        0x800000u
#define XBIC_MCR_ME0_SHIFT                       23u
#define XBIC_MCR_ME0_WIDTH                       1u
#define XBIC_MCR_ME0(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_ME0_SHIFT))&XBIC_MCR_ME0_MASK)
#define XBIC_MCR_SE7_MASK                        0x1000000u
#define XBIC_MCR_SE7_SHIFT                       24u
#define XBIC_MCR_SE7_WIDTH                       1u
#define XBIC_MCR_SE7(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_SE7_SHIFT))&XBIC_MCR_SE7_MASK)
#define XBIC_MCR_SE6_MASK                        0x2000000u
#define XBIC_MCR_SE6_SHIFT                       25u
#define XBIC_MCR_SE6_WIDTH                       1u
#define XBIC_MCR_SE6(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_SE6_SHIFT))&XBIC_MCR_SE6_MASK)
#define XBIC_MCR_SE5_MASK                        0x4000000u
#define XBIC_MCR_SE5_SHIFT                       26u
#define XBIC_MCR_SE5_WIDTH                       1u
#define XBIC_MCR_SE5(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_SE5_SHIFT))&XBIC_MCR_SE5_MASK)
#define XBIC_MCR_SE4_MASK                        0x8000000u
#define XBIC_MCR_SE4_SHIFT                       27u
#define XBIC_MCR_SE4_WIDTH                       1u
#define XBIC_MCR_SE4(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_SE4_SHIFT))&XBIC_MCR_SE4_MASK)
#define XBIC_MCR_SE3_MASK                        0x10000000u
#define XBIC_MCR_SE3_SHIFT                       28u
#define XBIC_MCR_SE3_WIDTH                       1u
#define XBIC_MCR_SE3(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_SE3_SHIFT))&XBIC_MCR_SE3_MASK)
#define XBIC_MCR_SE2_MASK                        0x20000000u
#define XBIC_MCR_SE2_SHIFT                       29u
#define XBIC_MCR_SE2_WIDTH                       1u
#define XBIC_MCR_SE2(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_SE2_SHIFT))&XBIC_MCR_SE2_MASK)
#define XBIC_MCR_SE1_MASK                        0x40000000u
#define XBIC_MCR_SE1_SHIFT                       30u
#define XBIC_MCR_SE1_WIDTH                       1u
#define XBIC_MCR_SE1(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_SE1_SHIFT))&XBIC_MCR_SE1_MASK)
#define XBIC_MCR_SE0_MASK                        0x80000000u
#define XBIC_MCR_SE0_SHIFT                       31u
#define XBIC_MCR_SE0_WIDTH                       1u
#define XBIC_MCR_SE0(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_MCR_SE0_SHIFT))&XBIC_MCR_SE0_MASK)
/* EIR Bit Fields */
#define XBIC_EIR_SYN_MASK                        0xFFu
#define XBIC_EIR_SYN_SHIFT                       0u
#define XBIC_EIR_SYN_WIDTH                       8u
#define XBIC_EIR_SYN(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_EIR_SYN_SHIFT))&XBIC_EIR_SYN_MASK)
#define XBIC_EIR_MST_MASK                        0xF00u
#define XBIC_EIR_MST_SHIFT                       8u
#define XBIC_EIR_MST_WIDTH                       4u
#define XBIC_EIR_MST(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_EIR_MST_SHIFT))&XBIC_EIR_MST_MASK)
#define XBIC_EIR_SLV_MASK                        0x7000u
#define XBIC_EIR_SLV_SHIFT                       12u
#define XBIC_EIR_SLV_WIDTH                       3u
#define XBIC_EIR_SLV(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_EIR_SLV_SHIFT))&XBIC_EIR_SLV_MASK)
#define XBIC_EIR_EIE_MASK                        0x80000000u
#define XBIC_EIR_EIE_SHIFT                       31u
#define XBIC_EIR_EIE_WIDTH                       1u
#define XBIC_EIR_EIE(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_EIR_EIE_SHIFT))&XBIC_EIR_EIE_MASK)
/* ESR Bit Fields */
#define XBIC_ESR_SYN_MASK                        0xFFu
#define XBIC_ESR_SYN_SHIFT                       0u
#define XBIC_ESR_SYN_WIDTH                       8u
#define XBIC_ESR_SYN(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_SYN_SHIFT))&XBIC_ESR_SYN_MASK)
#define XBIC_ESR_MST_MASK                        0xF00u
#define XBIC_ESR_MST_SHIFT                       8u
#define XBIC_ESR_MST_WIDTH                       4u
#define XBIC_ESR_MST(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_MST_SHIFT))&XBIC_ESR_MST_MASK)
#define XBIC_ESR_SLV_MASK                        0x7000u
#define XBIC_ESR_SLV_SHIFT                       12u
#define XBIC_ESR_SLV_WIDTH                       3u
#define XBIC_ESR_SLV(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_SLV_SHIFT))&XBIC_ESR_SLV_MASK)
#define XBIC_ESR_DPME7_MASK                      0x8000u
#define XBIC_ESR_DPME7_SHIFT                     15u
#define XBIC_ESR_DPME7_WIDTH                     1u
#define XBIC_ESR_DPME7(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPME7_SHIFT))&XBIC_ESR_DPME7_MASK)
#define XBIC_ESR_DPME6_MASK                      0x10000u
#define XBIC_ESR_DPME6_SHIFT                     16u
#define XBIC_ESR_DPME6_WIDTH                     1u
#define XBIC_ESR_DPME6(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPME6_SHIFT))&XBIC_ESR_DPME6_MASK)
#define XBIC_ESR_DPME5_MASK                      0x20000u
#define XBIC_ESR_DPME5_SHIFT                     17u
#define XBIC_ESR_DPME5_WIDTH                     1u
#define XBIC_ESR_DPME5(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPME5_SHIFT))&XBIC_ESR_DPME5_MASK)
#define XBIC_ESR_DPME4_MASK                      0x40000u
#define XBIC_ESR_DPME4_SHIFT                     18u
#define XBIC_ESR_DPME4_WIDTH                     1u
#define XBIC_ESR_DPME4(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPME4_SHIFT))&XBIC_ESR_DPME4_MASK)
#define XBIC_ESR_DPME3_MASK                      0x80000u
#define XBIC_ESR_DPME3_SHIFT                     19u
#define XBIC_ESR_DPME3_WIDTH                     1u
#define XBIC_ESR_DPME3(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPME3_SHIFT))&XBIC_ESR_DPME3_MASK)
#define XBIC_ESR_DPME2_MASK                      0x100000u
#define XBIC_ESR_DPME2_SHIFT                     20u
#define XBIC_ESR_DPME2_WIDTH                     1u
#define XBIC_ESR_DPME2(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPME2_SHIFT))&XBIC_ESR_DPME2_MASK)
#define XBIC_ESR_DPME1_MASK                      0x200000u
#define XBIC_ESR_DPME1_SHIFT                     21u
#define XBIC_ESR_DPME1_WIDTH                     1u
#define XBIC_ESR_DPME1(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPME1_SHIFT))&XBIC_ESR_DPME1_MASK)
#define XBIC_ESR_DPME0_MASK                      0x400000u
#define XBIC_ESR_DPME0_SHIFT                     22u
#define XBIC_ESR_DPME0_WIDTH                     1u
#define XBIC_ESR_DPME0(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPME0_SHIFT))&XBIC_ESR_DPME0_MASK)
#define XBIC_ESR_DPSE7_MASK                      0x800000u
#define XBIC_ESR_DPSE7_SHIFT                     23u
#define XBIC_ESR_DPSE7_WIDTH                     1u
#define XBIC_ESR_DPSE7(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPSE7_SHIFT))&XBIC_ESR_DPSE7_MASK)
#define XBIC_ESR_DPSE6_MASK                      0x1000000u
#define XBIC_ESR_DPSE6_SHIFT                     24u
#define XBIC_ESR_DPSE6_WIDTH                     1u
#define XBIC_ESR_DPSE6(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPSE6_SHIFT))&XBIC_ESR_DPSE6_MASK)
#define XBIC_ESR_DPSE5_MASK                      0x2000000u
#define XBIC_ESR_DPSE5_SHIFT                     25u
#define XBIC_ESR_DPSE5_WIDTH                     1u
#define XBIC_ESR_DPSE5(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPSE5_SHIFT))&XBIC_ESR_DPSE5_MASK)
#define XBIC_ESR_DPSE4_MASK                      0x4000000u
#define XBIC_ESR_DPSE4_SHIFT                     26u
#define XBIC_ESR_DPSE4_WIDTH                     1u
#define XBIC_ESR_DPSE4(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPSE4_SHIFT))&XBIC_ESR_DPSE4_MASK)
#define XBIC_ESR_DPSE3_MASK                      0x8000000u
#define XBIC_ESR_DPSE3_SHIFT                     27u
#define XBIC_ESR_DPSE3_WIDTH                     1u
#define XBIC_ESR_DPSE3(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPSE3_SHIFT))&XBIC_ESR_DPSE3_MASK)
#define XBIC_ESR_DPSE2_MASK                      0x10000000u
#define XBIC_ESR_DPSE2_SHIFT                     28u
#define XBIC_ESR_DPSE2_WIDTH                     1u
#define XBIC_ESR_DPSE2(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPSE2_SHIFT))&XBIC_ESR_DPSE2_MASK)
#define XBIC_ESR_DPSE1_MASK                      0x20000000u
#define XBIC_ESR_DPSE1_SHIFT                     29u
#define XBIC_ESR_DPSE1_WIDTH                     1u
#define XBIC_ESR_DPSE1(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPSE1_SHIFT))&XBIC_ESR_DPSE1_MASK)
#define XBIC_ESR_DPSE0_MASK                      0x40000000u
#define XBIC_ESR_DPSE0_SHIFT                     30u
#define XBIC_ESR_DPSE0_WIDTH                     1u
#define XBIC_ESR_DPSE0(x)                        (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_DPSE0_SHIFT))&XBIC_ESR_DPSE0_MASK)
#define XBIC_ESR_VLD_MASK                        0x80000000u
#define XBIC_ESR_VLD_SHIFT                       31u
#define XBIC_ESR_VLD_WIDTH                       1u
#define XBIC_ESR_VLD(x)                          (((uint32_t)(((uint32_t)(x))<<XBIC_ESR_VLD_SHIFT))&XBIC_ESR_VLD_MASK)
/* EAR Bit Fields */
#define XBIC_EAR_ADDR_MASK                       0xFFFFFFFFu
#define XBIC_EAR_ADDR_SHIFT                      0u
#define XBIC_EAR_ADDR_WIDTH                      32u
#define XBIC_EAR_ADDR(x)                         (((uint32_t)(((uint32_t)(x))<<XBIC_EAR_ADDR_SHIFT))&XBIC_EAR_ADDR_MASK)

/*!
 * @}
 */ /* end of group XBIC_Register_Masks */


/*!
 * @}
 */ /* end of group XBIC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- XOSC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup XOSC_Peripheral_Access_Layer XOSC Peripheral Access Layer
 * @{
 */


/** XOSC - Size of Registers Arrays */

/** XOSC - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTL;                               /**< XOSC Control Register, offset: 0x0 */
} XOSC_Type, *XOSC_MemMapPtr;

 /** Number of instances of the XOSC module. */
#define XOSC_INSTANCE_COUNT                      (1u)


/* XOSC - Peripheral instance base addresses */
/** Peripheral XOSC base address */
#define XOSC_BASE                                (0xFFFB0080u)
/** Peripheral XOSC base pointer */
#define XOSC                                     ((XOSC_Type *)XOSC_BASE)
/** Array initializer of XOSC peripheral base addresses */
#define XOSC_BASE_ADDRS                          { XOSC_BASE }
/** Array initializer of XOSC peripheral base pointers */
#define XOSC_BASE_PTRS                           { XOSC }

/* ----------------------------------------------------------------------------
   -- XOSC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup XOSC_Register_Masks XOSC Register Masks
 * @{
 */

/* CTL Bit Fields */
#define XOSC_CTL_I_OSC_MASK                      0x80u
#define XOSC_CTL_I_OSC_SHIFT                     7u
#define XOSC_CTL_I_OSC_WIDTH                     1u
#define XOSC_CTL_I_OSC(x)                        (((uint32_t)(((uint32_t)(x))<<XOSC_CTL_I_OSC_SHIFT))&XOSC_CTL_I_OSC_MASK)
#define XOSC_CTL_M_OSC_MASK                      0x8000u
#define XOSC_CTL_M_OSC_SHIFT                     15u
#define XOSC_CTL_M_OSC_WIDTH                     1u
#define XOSC_CTL_M_OSC(x)                        (((uint32_t)(((uint32_t)(x))<<XOSC_CTL_M_OSC_SHIFT))&XOSC_CTL_M_OSC_MASK)
#define XOSC_CTL_EOCV_MASK                       0xFF0000u
#define XOSC_CTL_EOCV_SHIFT                      16u
#define XOSC_CTL_EOCV_WIDTH                      8u
#define XOSC_CTL_EOCV(x)                         (((uint32_t)(((uint32_t)(x))<<XOSC_CTL_EOCV_SHIFT))&XOSC_CTL_EOCV_MASK)
#define XOSC_CTL_MON_MASK                        0x20000000u
#define XOSC_CTL_MON_SHIFT                       29u
#define XOSC_CTL_MON_WIDTH                       1u
#define XOSC_CTL_MON(x)                          (((uint32_t)(((uint32_t)(x))<<XOSC_CTL_MON_SHIFT))&XOSC_CTL_MON_MASK)
#define XOSC_CTL_OSCM_MASK                       0x40000000u
#define XOSC_CTL_OSCM_SHIFT                      30u
#define XOSC_CTL_OSCM_WIDTH                      1u
#define XOSC_CTL_OSCM(x)                         (((uint32_t)(((uint32_t)(x))<<XOSC_CTL_OSCM_SHIFT))&XOSC_CTL_OSCM_MASK)
#define XOSC_CTL_OSCBYP_MASK                     0x80000000u
#define XOSC_CTL_OSCBYP_SHIFT                    31u
#define XOSC_CTL_OSCBYP_WIDTH                    1u
#define XOSC_CTL_OSCBYP(x)                       (((uint32_t)(((uint32_t)(x))<<XOSC_CTL_OSCBYP_SHIFT))&XOSC_CTL_OSCBYP_MASK)

/*!
 * @}
 */ /* end of group XOSC_Register_Masks */


/*!
 * @}
 */ /* end of group XOSC_Peripheral_Access_Layer */


/*!
 * @}
 */ /* end of group Peripheral_access_layer_MPC5744P */


/* ----------------------------------------------------------------------------
   -- Backward Compatibility for MPC5744P
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Backward_Compatibility_Symbols_MPC5744P Backward Compatibility for MPC5744P
 * @{
 */

/* No backward compatibility issues. */

/*!
 * @}
 */ /* end of group Backward_Compatibility_Symbols_MPC5744P */


#else /* #if !defined(MPC5744P_H_) */
  /* There is already included the same memory map. Check if it is compatible (has the same major version) */
  #if (MCU_MEM_MAP_VERSION != 0x0100u)
    #if (!defined(MCU_MEM_MAP_SUPPRESS_VERSION_WARNING))
      #warning There are included two not compatible versions of memory maps. Please check possible differences.
    #endif /* (!defined(MCU_MEM_MAP_SUPPRESS_VERSION_WARNING)) */
  #endif /* (MCU_MEM_MAP_VERSION != 0x0100u) */
#endif  /* #if !defined(MPC5744P_H_) */

/* MPC5744P.h, eof. */
