=============================================================================
List of generated methods in project: test_gpio

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "pin_mux"   (component PinSettings)
   - pin_mux_PINS_DRV_Init -This function configures the pins with the options provided in the provided structure
   - pin_mux_PINS_DRV_SetPullSel -This function configures the internal resistor
   - pin_mux_PINS_DRV_SetOutputBuffer -This function configures the output buffer
   - pin_mux_PINS_DRV_SetInputBuffer -This function configures the input buffer
   - pin_mux_PINS_DRV_ConfigIntFilterClock -This function configures the interrupt filter clock prescaler
   - pin_mux_PINS_DRV_SetExInt -This function configures the external interrupt
   - pin_mux_PINS_DRV_ClearPinExIntFlag -This function clears the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_GetPinExIntFlag -This function gets the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_ClearExIntFlag -This function clears the entire external interrupt status flag
   - pin_mux_PINS_DRV_GetExIntFlag -This function gets the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_WritePin -This function writes the given pin from a port, with the given value ('0' represents LOW, '1' 
                represents HIGH)
   - pin_mux_PINS_DRV_WritePins -This function writes all pins configured as output with the values given in the parameter pins.
                '0' represents LOW, '1' represents HIGH
   - pin_mux_PINS_DRV_GetPinsOutput -This function returns the current output that is written to a port. Only pins that are 
                configured as output will have meaningful values
   - pin_mux_PINS_DRV_SetPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                value of 'set' (HIGH). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ClearPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                'cleared' value (LOW). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_TogglePins -This function toggles output pins listed in parameter pins (bits that are '1'). Pins 
                corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ReadPins -This function returns the current input values from a port. Only pins configured as input will 
                have meaningful values

Module "clockMan1" (component clock_manager)
   - clockMan1_CLOCK_DRV_Init -Initialize clocking modules
   - clockMan1_CLOCK_DRV_GetFreq -Return frequency.

Module "intMan1"   (component interrupt_manager)
   - intMan1_INT_SYS_InstallHandler -Installs an interrupt handler routine for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQ -Enables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_DisableIRQ -Disables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQGlobal -Enables system interrupt.
   - intMan1_INT_SYS_DisableIRQGlobal -Disable system interrupt.
   - intMan1_INT_SYS_SetPriority -Set Interrupt Priority.
   - intMan1_INT_SYS_GetPriority -Get Interrupt Priority.
   - intMan1_INT_SYS_SetSoftwareIRQRequest -Set software interrupt request.
   - intMan1_INT_SYS_ClearSoftwareIRQRequest -Clear software interrupt request.
   - intMan1_INT_SYS_EnableIRQ_MC -Enables an interrupt for a given IRQ number, on the given cores.
   - intMan1_INT_SYS_GetCoresForIRQ -Gets the cores on which an interrupt for the specified IRQ number is enabled.
   - intMan1_INT_SYS_DisableIRQ_MC -Disables an interrupt for a given IRQ number, on the given cores.
   - intMan1_INT_SYS_DisableIRQ_MC_All -Disables an interrupt for a given IRQ number, on all cores.

Module "flexPWM1"  (component flexpwm)
   - flexPWM1_FLEXPWM_DRV_Deinit -Deinitialize an instance of the FlexPWM module.
   - flexPWM1_FLEXPWM_DRV_GetDefaultConfig -populate the structures needed for initializing the driver with the default values.
   - flexPWM1_FLEXPWM_DRV_SetupPwm -Sets up the PWM signals from the FlewPWM module.
   - flexPWM1_FLEXPWM_DRV_UpdatePwmSignal -Updates the PWM signal settings.
   - flexPWM1_FLEXPWM_DRV_UpdatePwmPeriod -Updates the PWM signal period.
   - flexPWM1_FLEXPWM_DRV_UpdatePulseWidth -Updates the PWM pulse width(duty cycle).
   - flexPWM1_FLEXPWM_DRV_UpdateMidCycleReload -Updates the PWM pulse width(duty cycle).
   - flexPWM1_FLEXPWM_DRV_LoadCommands -Updates the values from the modules registers.
   - flexPWM1_FLEXPWM_DRV_GetCounterValue -Returns the current sub-module counter value.
   - flexPWM1_FLEXPWM_DRV_GetPeriod -Returns the current sub-module period.
   - flexPWM1_FLEXPWM_DRV_GetCmpRegValue -Returns the value in one of the sub-module value registers.
   - flexPWM1_FLEXPWM_DRV_SetTriggerCmd -Enables or disables the PWM output trigger.
   - flexPWM1_FLEXPWM_DRV_SetTriggerVal -Sets the PWM trigger value.
   - flexPWM1_FLEXPWM_DRV_CounterStart -Starts the PWM counter.
   - flexPWM1_FLEXPWM_DRV_CounterStop -Stops the PWM counter.
   - flexPWM1_FLEXPWM_DRV_ForcePwmOutput -Force external output of a sub-module.
   - flexPWM1_FLEXPWM_DRV_EnableModuleInterrupts -Enables the submodule interrupts.
   - flexPWM1_FLEXPWM_DRV_DisableModuleInterrupts -Disables the submodule interrupts.
   - flexPWM1_FLEXPWM_DRV_ConfigureInputCapture -Configures the input capture circuit.
   - flexPWM1_FLEXPWM_DRV_StartInputCapture -Starts the input capturing.
   - flexPWM1_FLEXPWM_DRV_StopInputCapture -Stops the input capturing.
   - flexPWM1_FLEXPWM_DRV_GetEdgeCounter -Returns the number of edges counted to the moment.
   - flexPWM1_FLEXPWM_DRV_SetEdgeCompare -Configures the edge compare value.
   - flexPWM1_FLEXPWM_DRV_EnableEdgeCounting -Enables the edge counter.
   - flexPWM1_FLEXPWM_DRV_DisableEdgeCounting -Disables the edge counter.
   - flexPWM1_FLEXPWM_DRV_GetCaptureValue -Returns the captured value.
   - flexPWM1_FLEXPWM_DRV_GetCaptureCycle -Returns the captured number of cycles.
   - flexPWM1_FLEXPWM_DRV_SetChannelMode -Modifies the input capture channel mode.
   - flexPWM1_FLEXPWM_DRV_DebugEnable -Enables the debug mode.
   - flexPWM1_FLEXPWM_DRV_DebugDisable -Disables the debug mode.
   - flexPWM1_FLEXPWM_DRV_SetDeadtime -Sets the deadtime counter value.
   - flexPWM1_FLEXPWM_DRV_SelectDeadtimeSource -Selects the source for the deadtime logic.
   - flexPWM1_FLEXPWM_DRV_SelectSwCtrlOutput -Selects the software controlled output.
   - flexPWM1_FLEXPWM_DRV_MaskOutput -Masks the PWM signal for a mask of submodules.
   - flexPWM1_FLEXPWM_DRV_ForceApplyMask -Forces the masking of the PWM signals.
   - flexPWM1_FLEXPWM_DRV_GetInterruptFlag -Reads the interrupt flags.
   - flexPWM1_FLEXPWM_DRV_ClearInterruptFlag -Clears the interrupt flags.
   - flexPWM1_FLEXPWM_DRV_SetupFaultProtection -Sets up the PWM fault protection
   - flexPWM1_FLEXPWM_DRV_SetFaultFilterPeriod -Sets the input fault filter period.
   - flexPWM1_FLEXPWM_DRV_SetFaultFilterCounter -Sets the input fault filter counter.
   - flexPWM1_FLEXPWM_DRV_EnableFaultGlitchStretch -Enables the fault glitch stretching for the input capture circuit.
   - flexPWM1_FLEXPWM_DRV_DisableFaultGlitchStretch -Disables the fault glitch stretching for the input capture circuit.
   - flexPWM1_FLEXPWM_DRV_EnableFaultInterrupt -Enable the fault input interrupt
   - flexPWM1_FLEXPWM_DRV_DisableFaultInterrupt -Disable the fault input interrupt
   - flexPWM1_FLEXPWM_DRV_ClearFaultFlags -Clears the fault flags
   - flexPWM1_FLEXPWM_DRV_GetFaultFlags -Gets the interrupt flags
   - flexPWM1_FLEXPWM_DRV_SimulateFault -Simulates fault condition

Module "eTimer0"   (component etimer)
   - eTimer0_ETIMER_DRV_Init -Initializes the ETIMER module.
   - eTimer0_ETIMER_DRV_Deinit -De-Initializes the ETIMER module.
   - eTimer0_ETIMER_DRV_GetDefaultChannelConfig -Gets the default configuration structure.
   - eTimer0_ETIMER_DRV_GetDefaultChannelConfigOneshot -Gets the default configuration structure for ONE SHOT mode.
   - eTimer0_ETIMER_DRV_GetDefaultChannelConfigPulseOutput -Gets the default configuration structure for PULSE-OUTPUT mode.
   - eTimer0_ETIMER_DRV_GetDefaultChannelConfigFixedFreqPwm -Gets the default configuration structure for FIXED-FREQUENCY PWM 
                mode.
   - eTimer0_ETIMER_DRV_GetDefaultChannelConfigVariableFreqPwm -Gets the default configuration structure for VARIABLE-FREQUENCY 
                PWM mode.
   - eTimer0_ETIMER_DRV_GetDefaultChannelConfigModuleCountingDirection -Gets the default configuration structure for MODULO 
                COUNTING with direction mode.
   - eTimer0_ETIMER_DRV_GetDefaultChannelConfigModuleCountingQuadrature -Gets the default configuration structure for MODULO 
                COUNTING quadrature mode.
   - eTimer0_ETIMER_DRV_GetDefaultDmaChannel -Gets the default configuration structure for DMA access.
   - eTimer0_ETIMER_DRV_InitChannel -Initializes the ETIMER channel.
   - eTimer0_ETIMER_DRV_DmaInitRequest -Initializes specified DMA channel for the ETIMER module.
   - eTimer0_ETIMER_DRV_ChannelDebugBehaviour -Controls the way each channel behaves when using a HW debugger.
   - eTimer0_ETIMER_DRV_StartTimerChannels -Starts the timer channel counting.
   - eTimer0_ETIMER_DRV_StopTimerChannels -Stops the timer channel counting.
   - eTimer0_ETIMER_DRV_IsTimerRunning -Checks if the given channel is running.
   - eTimer0_ETIMER_DRV_SetTimerTicks -Sets the timer channel period in count units.
   - eTimer0_ETIMER_DRV_GetTimerTicks -Gets the current timer channel counting value in counts.
   - eTimer0_ETIMER_DRV_SetTimerTicksBuffered -Sets the timer channel period in count units.
   - eTimer0_ETIMER_DRV_EnableInterruptSource -Enables the interrupt source for a timer channel.
   - eTimer0_ETIMER_DRV_DisableInterruptSource -Disables the interrupt source for a timer channel.
   - eTimer0_ETIMER_DRV_EnableDisableInterruptSources -Enables and disables the interrupt sources for a timer channel.
   - eTimer0_ETIMER_DRV_GetInterruptStatus -Gets the current interrupt flag of timer channels.
   - eTimer0_ETIMER_DRV_ClearInterruptStatus -Clears the interrupt flag of timer channels.
   - eTimer0_ETIMER_DRV_GetInterruptNumber -Returns the system interrupt vector number.
   - eTimer0_ETIMER_DRV_SetCompareThreshold -Set both compare registers directly.
   - eTimer0_ETIMER_DRV_SetCompareThresholdBuffered -Set both compare registers directly.
   - eTimer0_ETIMER_DRV_OutputPinEnable -Enable signal output to external pin.
   - eTimer0_ETIMER_DRV_OutputPinDisable -Disable signal output to external pin.
   - eTimer0_ETIMER_DRV_StartCapture -Start input capture.
   - eTimer0_ETIMER_DRV_StopCapture -Stop an input capture.
   - eTimer0_ETIMER_DRV_GetCaptureValue -Read a captured value, this does not account for timer overflows.
   - eTimer0_ETIMER_DRV_GetCaptureConfigWords -Returns the maximum number of captured words that can be stored in the HW FIFO.
   - eTimer0_ETIMER_DRV_GetCaptureWords -Returns how many captured words are stored in the HW FIFO.
   - eTimer0_ETIMER_DRV_SetWatchdog -Sets the watchdog value directly.
   - eTimer0_ETIMER_DRV_DisableWatchdog -Stops the watchdog timer.
   - eTimer0_ETIMER_DRV_ForceOutputLogicLevel -Force output to logic level.
   - eTimer0_ETIMER_DRV_GetCompareThresholdBuffered -Read the values stored in the buffer compare registers.
   - eTimer0_ETIMER_DRV_ReloadOnCompare -Reset the counter to specified value.
   - eTimer0_ETIMER_DRV_SetOutputFunction -Set way the output behaves.

Module "Cpu"       (component MPC5744P_257)
   - Cpu_SystemInit -This method configures the oscillator (PLL) that is part of the microcontroller device. SystemInit is 
                called from startup_device file.
   - Cpu_SystemCoreClockUpdate -SystemCoreClockUpdate evaluates the clock register settings and calculates the current core 
                clock.
   - Cpu_SystemSoftwareReset -This method initiates a software rest of the microcontroller.

===================================================================================
